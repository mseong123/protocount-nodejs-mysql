DELIMITER //
CREATE PROCEDURE SELECT_PURCHASE_ANALYSIS_CREDITOR_STOCK(IN DATE_START_PARAM VARCHAR(255), IN DATE_END_PARAM VARCHAR(255), IN CREDITOR_NUM_PARAM VARCHAR(255), IN STOCK_NUM_PARAM VARCHAR(255)) 
BEGIN
DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
ROLLBACK;
RESIGNAL;
END;
START TRANSACTION;

SET @STRNG='';

SELECT CONCAT("SELECT CREDITOR_NUM,CREDITOR_NAME,PURCHASE_INVOICE_DATE AS DATE,SUM(PURCHASE_INVOICELINE_SUBTOTAL) AS SUBTOTAL FROM creditor JOIN purchase_invoice USING (CREDITOR_NUM) NATURAL JOIN purchase_invoiceline WHERE CREDITOR_NUM IN (",CREDITOR_NUM_PARAM,") AND PURCHASE_INVOICE_DATE>=",DATE_START_PARAM," AND PURCHASE_INVOICE_DATE<=",DATE_END_PARAM," GROUP BY PURCHASE_INVOICE_NUM
UNION ALL (SELECT CREDITOR_NUM,CREDITOR_NAME,PURCHASE_DEBIT_NOTE_DATE,SUM(PURCHASE_DEBIT_NOTELINE_SUBTOTAL) FROM creditor JOIN purchase_debit_note USING (CREDITOR_NUM) NATURAL JOIN purchase_debit_noteline WHERE CREDITOR_NUM IN (",CREDITOR_NUM_PARAM,") AND PURCHASE_DEBIT_NOTE_DATE>=",DATE_START_PARAM," AND PURCHASE_DEBIT_NOTE_DATE<=",DATE_END_PARAM," GROUP BY PURCHASE_DEBIT_NOTE_NUM)
UNION ALL (SELECT CREDITOR_NUM,CREDITOR_NAME,PURCHASE_CREDIT_NOTE_DATE,-SUM(PURCHASE_CREDIT_NOTELINE_SUBTOTAL) FROM creditor JOIN purchase_credit_note USING (CREDITOR_NUM) NATURAL JOIN purchase_credit_noteline WHERE CREDITOR_NUM IN (",CREDITOR_NUM_PARAM,") AND PURCHASE_CREDIT_NOTE_DATE>=",DATE_START_PARAM," AND PURCHASE_CREDIT_NOTE_DATE<=",DATE_END_PARAM," GROUP BY PURCHASE_CREDIT_NOTE_NUM)
ORDER BY CREDITOR_NUM,DATE") INTO @STRNG;

PREPARE stmt FROM @STRNG;
EXECUTE stmt;
DEALLOCATE PREPARE stmt;

SET @STRNG='';

SELECT CONCAT("SELECT CREDITOR_NUM,PURCHASE_INVOICELINE_STOCK_NUM AS 'STOCK NUM',(SELECT STOCK_DESC FROM stock WHERE STOCK_NUM = PURCHASE_INVOICELINE_STOCK_NUM) AS 'STOCK DESC',PURCHASE_INVOICE_DATE AS DATE, SUM(PURCHASE_INVOICELINE_STOCK_QTY) AS QTY,SUM(PURCHASE_INVOICELINE_SUBTOTAL) AS SUBTOTAL FROM creditor JOIN purchase_invoice USING (CREDITOR_NUM) NATURAL JOIN purchase_invoiceline WHERE CREDITOR_NUM IN (",CREDITOR_NUM_PARAM,") AND PURCHASE_INVOICELINE_STOCK_NUM IN (",STOCK_NUM_PARAM,") AND PURCHASE_INVOICE_DATE>=",DATE_START_PARAM," AND PURCHASE_INVOICE_DATE<=",DATE_END_PARAM," GROUP BY PURCHASE_INVOICELINE_STOCK_NUM,PURCHASE_INVOICE_NUM
UNION ALL (SELECT CREDITOR_NUM,PURCHASE_DEBIT_NOTELINE_STOCK_NUM,(SELECT STOCK_DESC FROM stock WHERE STOCK_NUM = PURCHASE_DEBIT_NOTELINE_STOCK_NUM),PURCHASE_DEBIT_NOTE_DATE,SUM(PURCHASE_DEBIT_NOTELINE_STOCK_QTY),SUM(PURCHASE_DEBIT_NOTELINE_SUBTOTAL) FROM creditor JOIN purchase_debit_note USING (CREDITOR_NUM) NATURAL JOIN purchase_debit_noteline WHERE CREDITOR_NUM IN (",CREDITOR_NUM_PARAM,") AND PURCHASE_DEBIT_NOTELINE_STOCK_NUM IN (",STOCK_NUM_PARAM,") AND PURCHASE_DEBIT_NOTE_DATE>=",DATE_START_PARAM," AND PURCHASE_DEBIT_NOTE_DATE<=",DATE_END_PARAM," GROUP BY PURCHASE_DEBIT_NOTELINE_STOCK_NUM,PURCHASE_DEBIT_NOTE_NUM) 
UNION ALL (SELECT CREDITOR_NUM,PURCHASE_CREDIT_NOTELINE_STOCK_NUM,(SELECT STOCK_DESC FROM stock WHERE STOCK_NUM = PURCHASE_CREDIT_NOTELINE_STOCK_NUM),PURCHASE_CREDIT_NOTE_DATE,-SUM(PURCHASE_CREDIT_NOTELINE_STOCK_QTY),-SUM(PURCHASE_CREDIT_NOTELINE_SUBTOTAL) FROM creditor JOIN purchase_credit_note USING (CREDITOR_NUM) NATURAL JOIN purchase_credit_noteline WHERE CREDITOR_NUM IN (",CREDITOR_NUM_PARAM,") AND PURCHASE_CREDIT_NOTELINE_STOCK_NUM IN (",STOCK_NUM_PARAM,") AND PURCHASE_CREDIT_NOTE_DATE>=",DATE_START_PARAM," AND PURCHASE_CREDIT_NOTE_DATE<=",DATE_END_PARAM," GROUP BY PURCHASE_CREDIT_NOTELINE_STOCK_NUM,PURCHASE_CREDIT_NOTE_NUM) 
ORDER BY 'STOCK NUM',DATE") INTO @STRNG;

PREPARE stmt FROM @STRNG;
EXECUTE stmt;
DEALLOCATE PREPARE stmt;

COMMIT;
END//