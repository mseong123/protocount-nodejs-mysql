DELIMITER //
CREATE PROCEDURE SELECT_DEBTOR_STATEMENT(IN DATE_START_PARAM DATE, IN DATE_END_PARAM DATE, IN DEBTOR_NUM_PARAM VARCHAR(20)) 
BEGIN
DECLARE EXIT HANDLER FOR SQLEXCEPTION
BEGIN
ROLLBACK;
RESIGNAL;
END;
START TRANSACTION;

SELECT IFNULL((SELECT SUM(SALES_INVOICELINE_SUBTOTAL) FROM debtor JOIN sales_invoice USING (DEBTOR_NUM) NATURAL JOIN sales_invoiceline WHERE SALES_INVOICE_DATE<DATE_START_PARAM AND DEBTOR_NUM=DEBTOR_NUM_PARAM),0)
+IFNULL((SELECT SUM(DEBIT_NOTELINE_SUBTOTAL) FROM debtor JOIN debit_note USING (DEBTOR_NUM) NATURAL JOIN debit_noteline WHERE DEBIT_NOTE_DATE<DATE_START_PARAM AND DEBTOR_NUM=DEBTOR_NUM_PARAM),0)
-IFNULL((SELECT SUM(CASH_RECEIPT_AMOUNT) FROM cash_receipt JOIN debtor USING(DEBTOR_NUM) WHERE CASH_RECEIPT_DATE<DATE_START_PARAM AND DEBTOR_NUM=DEBTOR_NUM_PARAM),0)
-IFNULL((SELECT SUM(BANK_RECEIPT_AMOUNT) FROM bank_receipt JOIN debtor USING(DEBTOR_NUM) WHERE BANK_RECEIPT_DATE<DATE_START_PARAM AND DEBTOR_NUM=DEBTOR_NUM_PARAM),0)
-IFNULL((SELECT SUM(CREDIT_NOTELINE_SUBTOTAL) FROM debtor join credit_note USING (DEBTOR_NUM) NATURAL JOIN credit_noteline WHERE CREDIT_NOTE_DATE<DATE_START_PARAM AND DEBTOR_NUM=DEBTOR_NUM_PARAM),0)
AS 'B/F';

SELECT SALES_INVOICE_DATE AS DATE, SALES_INVOICE_NUM AS NUM, NULL AS REF, 'SALES INVOICE' AS TYPE, SUM(SALES_INVOICELINE_SUBTOTAL) AS DR, NULL AS CR FROM debtor JOIN sales_invoice USING (DEBTOR_NUM) NATURAL JOIN sales_invoiceline WHERE SALES_INVOICE_DATE>=DATE_START_PARAM AND SALES_INVOICE_DATE<=DATE_END_PARAM AND DEBTOR_NUM=DEBTOR_NUM_PARAM GROUP BY SALES_INVOICE_NUM 
UNION ALL (SELECT DEBIT_NOTE_DATE, DEBIT_NOTE_NUM, NULL,'DEBIT NOTE', SUM(DEBIT_NOTELINE_SUBTOTAL), NULL FROM debtor JOIN debit_note USING (DEBTOR_NUM) NATURAL JOIN debit_noteline WHERE DEBIT_NOTE_DATE>=DATE_START_PARAM AND DEBIT_NOTE_DATE<=DATE_END_PARAM AND DEBTOR_NUM=DEBTOR_NUM_PARAM GROUP BY DEBIT_NOTE_NUM) 
UNION ALL (SELECT CASH_RECEIPT_DATE AS DATE, CASH_RECEIPT_NUM, CASH_RECEIPT_TRANSACTION_ID, 'CASH RECEIPT', NULL, CASH_RECEIPT_AMOUNT from debtor JOIN cash_receipt USING (DEBTOR_NUM) WHERE CASH_RECEIPT_DATE>=DATE_START_PARAM AND CASH_RECEIPT_DATE<=DATE_END_PARAM AND DEBTOR_NUM=DEBTOR_NUM_PARAM) 
UNION ALL (SELECT BANK_RECEIPT_DATE AS DATE, BANK_RECEIPT_NUM, BANK_RECEIPT_TRANSACTION_ID, 'BANK RECEIPT', NULL, BANK_RECEIPT_AMOUNT from debtor JOIN bank_receipt USING (DEBTOR_NUM) WHERE BANK_RECEIPT_DATE>=DATE_START_PARAM AND BANK_RECEIPT_DATE<=DATE_END_PARAM AND DEBTOR_NUM=DEBTOR_NUM_PARAM)
UNION ALL (SELECT CREDIT_NOTE_DATE,CREDIT_NOTE_NUM, NULL, 'CREDIT NOTE', NULL, SUM(CREDIT_NOTELINE_SUBTOTAL) FROM debtor JOIN credit_note USING (DEBTOR_NUM) NATURAL JOIN credit_noteline WHERE CREDIT_NOTE_DATE>=DATE_START_PARAM AND CREDIT_NOTE_DATE<=DATE_END_PARAM AND DEBTOR_NUM=DEBTOR_NUM_PARAM GROUP BY CREDIT_NOTE_NUM)
ORDER BY DATE;

COMMIT;
END//