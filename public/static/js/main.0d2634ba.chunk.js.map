{"version":3,"sources":["Protocount/Shared/accounting.svg","Protocount/Shared/svg/030-presentation.svg","Protocount/Shared/svg/006-call.svg","Protocount/Shared/svg/009-conversation.svg","Protocount/Shared/svg/020-folders.svg","Protocount/Shared/svg/027-money.svg","Protocount/Shared/svg/011-calendar.svg","Protocount/Shared/svg/017-send.svg","Protocount/Shared/svg/015-contact.svg","Protocount/Shared/Media.js","Protocount/Shared/authContext.js","Protocount/Shared/Navbar.js","Protocount/Shared/SubPanel.js","Protocount/Shared/isLoadingContext.js","Protocount/Shared/AppLayout.js","Protocount/Dashboard/Dashboard.js","Protocount/Shared/useFetch.js","Protocount/Shared/sort.js","Protocount/Shared/numberFormatParser.js","Protocount/Shared/dateFormatParser.js","Protocount/Shared/Process.js","Protocount/Shared/ProcessLayout.js","Protocount/Sales/DeliveryOrder.js","Protocount/Sales/DeliveryReturn.js","Protocount/Sales/SalesInvoice.js","Protocount/Sales/DebitNote.js","Protocount/Sales/CreditNote.js","Protocount/Shared/setPageSize.js","Protocount/Shared/preview/SalesReportOne.js","Protocount/Sales/SalesReport.js","Protocount/Shared/Item.js","Protocount/Shared/ItemButton.js","Protocount/Shared/preview/DocumentOne.js","Protocount/Shared/LineRenderQtyOnly.js","Protocount/Sales/DeliveryOrderItem.js","Protocount/Sales/DeliveryReturnItem.js","Protocount/Shared/LineRender.js","Protocount/Shared/ReceiptPaymentHistoryRender.js","Protocount/Sales/SalesInvoiceItem.js","Protocount/Sales/DebitNoteItem.js","Protocount/Shared/OffsetRender.js","Protocount/Sales/CreditNoteItem.js","Protocount/Purchase/GoodsReceivedNote.js","Protocount/Purchase/PurchaseReturn.js","Protocount/Purchase/PurchaseInvoice.js","Protocount/Purchase/PurchaseDebitNote.js","Protocount/Purchase/PurchaseCreditNote.js","Protocount/Shared/preview/PurchaseReportOne.js","Protocount/Purchase/PurchaseReport.js","Protocount/Purchase/GoodsReceivedNoteItem.js","Protocount/Purchase/PurchaseReturnItem.js","Protocount/Purchase/PurchaseInvoiceItem.js","Protocount/Purchase/PurchaseDebitNoteItem.js","Protocount/Purchase/PurchaseCreditNoteItem.js","Protocount/Inventory/StockItemMaintenance.js","Protocount/Inventory/StockAdjustment.js","Protocount/Shared/preview/StockCardOne.js","Protocount/Inventory/StockCardReport.js","Protocount/Inventory/StockItem.js","Protocount/Inventory/StockAdjustmentItem.js","Protocount/BankAndCash/BankMaintenance.js","Protocount/BankAndCash/BankReceipt.js","Protocount/BankAndCash/BankPayment.js","Protocount/BankAndCash/CashReceipt.js","Protocount/BankAndCash/CashPayment.js","Protocount/BankAndCash/BankItem.js","Protocount/BankAndCash/BankReceiptItem.js","Protocount/BankAndCash/BankPaymentItem.js","Protocount/BankAndCash/CashReceiptItem.js","Protocount/BankAndCash/CashPaymentItem.js","Protocount/AccountsReceivable/DebtorMaintenance.js","Protocount/Shared/preview/DebtorCreditorAgingOne.js","Protocount/AccountsReceivable/DebtorAgingReport.js","Protocount/Shared/preview/DebtorCreditorStatementOne.js","Protocount/AccountsReceivable/DebtorStatementReport.js","Protocount/Shared/preview/DebtorCollectionOne.js","Protocount/AccountsReceivable/DebtorCollectionReport.js","Protocount/AccountsReceivable/DebtorItem.js","Protocount/AccountsPayable/CreditorMaintenance.js","Protocount/AccountsPayable/CreditorAgingReport.js","Protocount/AccountsPayable/CreditorStatementReport.js","Protocount/AccountsPayable/CreditorItem.js","Protocount/GeneralLedger/AccountMaintenance.js","Protocount/GeneralLedger/JournalEntry.js","Protocount/GeneralLedger/ProfitAndLoss.js","Protocount/GeneralLedger/BalanceSheet.js","Protocount/GeneralLedger/JournalItem.js","Protocount/GeneralLedger/ProfitAndLossItem.js","Protocount/GeneralLedger/BalanceSheetItem.js","Protocount/Shared/ComponentSummary.js","Protocount/Shared/SidePanel.js","Protocount/Main/Main.js","Protocount/Login/Login.js","Protocount/App.js","index.js"],"names":["module","exports","Media","props","useState","window","innerWidth","screenIsSmall","changeMedia","useEffect","x","matchMedia","handler","e","matches","addListener","removeListener","render","authContext","React","createContext","Navbar","changeAuth","useContext","modify","theme","className","to","src","logo","style","width","height","alt","data-toggle","data-target","id","href","type","onClick","SubPanel","items","reportItems","map","item","key","replace","backgroundColor","name","img","data-parent","parent","length","isLoadingContext","AppLayout","isLoading","top","left","zIndex","children","largeScreenStyle","Dashboard","maxWidth","description","path","useFetch","fetchParam","param","changeParam","data","changeData","error","changeError","changeIsLoading","url","fetch","init","then","response","ok","json","Error","status","statusText","catch","sortData","property","order","sort_order","sort","a","b","localeCompare","numeric","numberFormatParser","num","m","s1","s2","dateFormatParser","date","Date","month","Number","getMonth","getDate","getFullYear","Process","searchCriteriaList","fieldList","dataList","result","method","headers","body","JSON","stringify","credentials","dataSelect","errorSelect","changeParamSelect","dataDelete","errorDelete","changeParamDelete","filteredData","changeFilteredData","search","changeSearch","searchCriteria","changeSearchCriteria","itemsToBeDeleted","changeItemsToBeDeleted","errorDeleteDisplay","changeErrorDeleteDisplay","history","useHistory","docNum","onItemClick","push","createItemPath","auth","alert","Object","assign","selected","field","errno","code","sqlMessage","forEach","document","getElementById","checked","value","cursor","data-order","target","setAttribute","getAttribute","classList","remove","add","i","onChange","targetPosition","indexOf","slice","Math","random","message","maxHeight","array","refresh","searchChange","newData","RegExp","test","searchCriteriaChange","deleteList","confirm","ProcessLayout","htmlFor","placeholder","listname","DeliveryOrder","list","DeliveryReturn","SalesInvoice","DebitNote","CreditNote","setPageSize","cssPageSize","innerHTML","createElement","head","appendChild","SalesReportOne","querySelector","backPath","resultInput","monthNames","parsedDateStart","dateStart","parsedDateEnd","dateEnd","withDetails","setMonth","populateMonthsHeader","qty","total","dataDetail","subField","subNum","subName","subQty","subTotal","itemAlreadyParsed","subItemAlreadyParsed","itemDate","reduce","innerParsedDate","populateMonthsAmount","item2","subDate","populateDetailMonthsAmount","populateResult","SalesReport","dataSelectDebtor","errorSelectDebtor","dataSelectStock","errorSelectStock","dataSelectSalesAnalysis","errorSelectSalesAnalysis","changeParamSalesAnalysis","groupOne","changeGroupOne","groupTwo","changeGroupTwo","debtorList","changeDebtorList","stockList","changeStockList","groupOneID","changeGroupOneID","groupTwoID","changeGroupTwoID","changeDateStart","getFormattedDate","changeDateEnd","changeResultInput","collapsibleElementID","changeCollapsibleElementID","changeWithDetails","sortCriteriaList","changeSortCriteriaList","detailSortCriteriaList","changeDetailSortCriteriaList","sortCriteria","changeSortCriteria","detailSortCriteria","changeDetailSortCriteria","generateReportWarning","changeGenerateReportWarning","useRouteMatch","currDate","stockNum","stockDesc","subData","newObject","filter","dataPreview","ID","$","on","currentTarget","removeClass","addClass","setScale","addEventListener","removeEventListener","setPage","errorDisplay","exact","paddingLeft","paddingRight","onSubmit","preventDefault","required","size","multiple","Array","from","options","option","disabled","collapse","header","flex","calculatedWidth","transform","marginLeft","marginRight","overflowY","overflowX","sortedData","populateTableHeader","populateTableMonthsAmount","populateItem","Item","usage","changeDisabled","dataIDList","errorIDList","dataInsert","errorInsert","changeParamInsert","dataUpdate","errorUpdate","changeParamUpdate","IDPrefix","IDPrefixLatestNumber","currentIDPrefix","minIDNumber","IDInfo","changeIDInfo","inputStateToBePrePopulated","state","toUpperCase","substring","changeInputState","changeParamOutstanding","paramOutstanding","debtorCreditorNumPosition","oldNumPosition","prefixList","prefixLatestNumberList","parsedPrefix","match","parsedPrefixNumber","parseInt","successPath","onInsert","inputState","onUpdate","onDelete","inputNumberRender","inputNumberProps","layout","maxLength","pattern","title","matchedIndex","position","labelID","max","min","ItemButton","DocumentOne","topLeftInput","input","topRightArea","topRightField","topRightInput","bottomField","bottomInput","itemline","calculateSubtotal","padding","margin","marginBottom","calculateTotal","footer","LineRenderQtyOnly","stockBalQty","onChangeLineInput","lineNumber","innerOrder","concat","addStockControlItem","itemCode","Qty","stockControlPosition","findIndex","removeStockControlItem","calculateFinalQty","stockDirection","find","console","log","linePosition","lineDescription","lineSet","some","stockDescription","paddingTop","border","every","step","minWidth","lineAlreadyFiltered","stockNum1","populateNegativeStockBalanceTable","DeliveryOrderItem","URLSearchParams","location","get","deliveryorderlineSet","stockPrice","errorDisplayExtension","debtorName","debtorAddress","DeliveryReturnItem","deliveryreturnlineSet","LineRender","price","ReceiptPaymentHistoryRender","dataSelectReceiptPaymentHistory","amount","historyDescription","string","WIPstring","split","toLowerCase","substr","join","encodeURIComponent","createLink","paddingBottom","SalesInvoiceItem","dataSelectGLCode","errorSelectGLCode","dataSelectReceiptHistory","errorSelectReceiptHistory","GLCodeList","changeGLCodeList","parseFloat","debtorDefaultCreditTerm","creditTermPosition","calculateOutstanding","DebitNoteItem","OffsetRender","dataSelectOutstanding","original","outstanding","offsetDocNumPosition","offsetAmountPosition","onChangeOffsetInput","onAddOffsetInput","onRemoveOffsetInput","innerIndexOfArrayToBeRemoved","onChangeCheck","offsetPosition","calculateUnappliedAmount","checkPayAmountDisabled","getOffsetInputStateArrayPosition","offsetDescription","offsetDescriptionOne","offsetPositionOne","offsetPositionTwo","changeErrorUnappliedAmount","CreditNoteItem","dataSelectDebtorOutstanding","errorSelectDebtorOutstanding","changeParamDebtorOutstanding","offsetPositionSalesInvoice","offsetPositionDebitNote","errorUnappliedAmount","paramDebtorOutstanding","debtorNum","oldNum","exclude","offsetDescriptionTwo","GoodsReceivedNote","PurchaseReturn","PurchaseInvoice","PurchaseDebitNote","PurchaseCreditNote","PurchaseReportOne","PurchaseReport","dataSelectCreditor","errorSelectCreditor","dataSelectPurchaseAnalysis","errorSelectPurchaseAnalysis","changeParamPurchaseAnalysis","creditorList","changeCreditorList","GoodsReceivedNoteItem","goodsreceivednotelineSet","creditorName","creditorAddress","PurchaseReturnItem","purchasereturnlineSet","PurchaseInvoiceItem","dataSelectPaymentHistory","errorSelectPaymentHistory","creditorDefaultCreditTerm","PurchaseDebitNoteItem","PurchaseCreditNoteItem","dataSelectCreditorOutstanding","errorSelectCreditorOutstanding","changeParamCreditorOutstanding","offsetPositionPurchaseInvoice","offsetPositionPurchaseDebitNote","paramCreditorOutstanding","creditorNum","lineset","StockItemMaintenance","StockAdjustment","StockCardOne","colSpan","broughtForwardData","broughtForwardField","docDate","IN","OUT","bfQty","stockAlreadyParsed","balQty","StockCardReport","dataSelectStockCard","errorSelectStockCard","changeParamStockCard","stockID","changeStockID","populateStock","StockItem","StockAdjustmentItem","stockAdjustmentlineListRender","stockAdjustmentlineSet","onChangeStockAdjustmentlineInput","stockadjustmentlineSet","BankMaintenance","BankReceipt","BankPayment","CashReceipt","CashPayment","BankItem","BankReceiptItem","dataSelectBank","errorSelectBank","amountPosition","bankList","changeBankList","isDebtorPayment","changeIsDebtorPayment","debtorNumPosition","glPosition","BankPaymentItem","isCreditorPayment","changeIsCreditorPayment","creditorNumPosition","CashReceiptItem","CashPaymentItem","DebtorMaintenance","DebtorCreditorAgingOne","agingMonths","populateTableMonthsHeader","creditTerm","debtorAlreadyParsed","calculateAgingCurrentAmount","setDate","calculateAgingRemainderAmount","populateDebtor","DebtorAgingReport","dataSelectDebtorAging","errorSelectDebtorAging","changeParamDebtorAging","changeCurrDate","debtorID","changeDebtorID","changeAgingMonths","months","monthAmount","calculateAgingMonthsAmount","dueDate","DebtorCreditorStatementOne","monthsAlreadyPopulated","calculateAgingMonthAmount","dr","cr","calculateAgingMonthRemainderAmount","dateFrom","dateTo","dateStartForAging","dbBroughtForwardAmount","populateDebtorCreditor","DebtorStatementReport","dataSelectDebtorStatement","errorSelectDebtorStatement","changeParamDebtorStatement","agingMonthsMax","debtorOtherInfo","changeDebtorOtherInfo","getDateStartForAging","preview","ref","balance","DebtorCollectionOne","withReceiptDetails","transactionID","receiptData","receiptField","receiptDocNum","receiptDataDocNum","receiptDataType","receiptDataDate","receiptDataCreditTerm","receiptDataAmount","receiptAmount","Fragment","item3","DebtorCollectionReport","dataSelectDebtorCollection","errorSelectDebtorCollection","changeParamDebtorCollection","changeWithReceiptDetails","receiptAlreadyParsed","DebtorItem","CreditorMaintenance","CreditorAgingReport","dataSelectCreditorAging","errorSelectCreditorAging","changeParamCreditorAging","creditorID","changeCreditorID","creditorAlreadyParsed","populateCreditor","CreditorStatementReport","dataSelectCreditorStatement","errorSelectCreditorStatement","changeParamCreditorStatement","creditorOtherInfo","changeCreditorOtherInfo","CreditorItem","AccountMaintenance","dataSelectAccount","errorSelectAccount","changeParamSelectAccount","GLCategoryList","changeGLCategoryList","GLAccountList","changeGLAccountList","GLAccountArray","changeGLAccountArray","inputStateCreate","changeInputStateCreate","inputStateUpdate","changeInputStateUpdate","accounts","changeAccounts","onChangeCreate","onChangeUpdate","glCategory","glAccount","glDesc","glStatus","glCategoryAlreadyParsed","category","populateAccount","GLCategory","GLDesc","JournalEntry","ProfitAndLoss","getCurrentDate","changeDate","companyTitle","changeCompanyTitle","BalanceSheet","JournalItem","notBalanced","changeNotBalanced","onChangeJournallineInput","calculateDebitTotal","journallineSet","calculateCreditTotal","glDescription","journallineListRender","ProfitAndLossItem","dataSelectProfitAndLoss","errorSelectProfitAndLoss","changeSortedData","grossProfit","changeGrossProfit","grossProfitTotal","changeGrossProfitTotal","expenses","changeExpenses","expensesTotal","changeExpensesTotal","netProfit","changeNetProfit","printFormat","changePrintFormat","calculateCategoryTotal","itemDebit","itemCredit","populateCategory","sortedData1","itemType","itemNumber","glAccountAlreadyParsed","glDescAlreadyParsed","BalanceSheetItem","dataSelectBalanceSheet","errorSelectBalanceSheet","netAssets","changeNetAssets","netAssetsTotal","changeNetAssetsTotal","netEquity","changeNetEquity","netEquityTotal","changeNetEquityTotal","currentProfitAndLoss","changeCurrentProfitAndLoss","retainedEarnings","changeRetainedEarnings","debitCreditOpposite","itemName","getBroughtForwardAmount","targetItem","itemNameAlreadyParsed","populateItemName","calculateCurrentProfitAndLoss","calculateRetainedEarnings","ComponentSummary","svg","DashboardSVG","process","report","SalesSVG","PurchaseSVG","InventorySVG","BankAndCashSVG","AccountsReceivableSVG","AccountsPayableSVG","GeneralLedgerSVG","SidePanel","SubPanelList","SubPanelListItems","SubPanelListReportItems","component","fontSize","Main","Login","username","changeUsername","password","changePassword","App","appRoutes","Provider","ReactDOM"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,wC,mBCA3CD,EAAOC,QAAU,IAA0B,8C,mBCA3CD,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,8C,mBCA3CD,EAAOC,QAAU,IAA0B,yC,mBCA3CD,EAAOC,QAAU,IAA0B,uC,mBCA3CD,EAAOC,QAAU,IAA0B,0C,mBCA3CD,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,yC,sICuB5BC,MAlBf,SAAgBC,GAAQ,IAAD,EACeC,mBAASC,OAAOC,WAAW,KAD1C,mBACZC,EADY,KACEC,EADF,KAgBnB,OAbAC,qBAAU,WAEN,IAAMC,EAAEL,OAAOM,WAAW,sBACpBC,EAAQ,SAACC,GACPA,EAAEC,QAASN,GAAY,GACtBA,GAAY,IAKrB,OAHAE,EAAEK,aAAY,SAACF,GAAD,OAAKD,EAAQC,MAGpBH,EAAEM,gBAAe,SAACH,GAAD,OAAKD,EAAQC,QACvC,IAEKV,EAAMc,OAAOV,I,iBCjBTW,EAFGC,IAAMC,gBC2DTC,MAxDf,SAAgBlB,GAAQ,IACbmB,EAAcC,qBAAWL,GAAzBI,WACHE,EAAO,yBAIX,MAHkB,SAAdrB,EAAMsB,QACRD,EAAO,wBAGT,yBAAKE,UAAW,0BAA0BF,GACxC,kBAAC,IAAD,CAAME,UAAU,eAAeC,GAAG,KAChC,yBAAKC,IAAKC,IAAMC,MAAO,CAACC,MAAM,OAAOC,OAAO,QAASC,IAAI,OAAOP,UAAU,mBAD5E,cAIA,4BAAQA,UAAU,iBAAiBQ,cAAY,WAAWC,cAAY,eACpE,0BAAMT,UAAU,yBAElB,yBAAKA,UAAU,2BAA2BU,GAAG,cAC3C,wBAAIV,UAAU,sBACZ,wBAAIA,UAAU,qBACZ,uBAAGW,KAAK,IAAIX,UAAU,2BAA2BQ,cAAY,YAA7D,QACA,yBAAKR,UAAU,iBACb,uBAAGW,KAAK,IAAIX,UAAU,iBAAtB,qBAGJ,wBAAIA,UAAU,qBACZ,uBAAGW,KAAK,IAAIX,UAAU,2BAA2BQ,cAAY,YAA7D,uBACA,yBAAKR,UAAU,iBACb,uBAAGW,KAAK,IAAIX,UAAU,iBAAtB,mBACA,uBAAGW,KAAK,IAAIX,UAAU,iBAAtB,oBACA,yBAAKA,UAAU,qBACf,uBAAGW,KAAK,IAAIX,UAAU,iBAAtB,2BACA,uBAAGW,KAAK,IAAIX,UAAU,iBAAtB,0BAGJ,wBAAIA,UAAU,qBACZ,uBAAGW,KAAK,IAAIX,UAAU,2BAA2BQ,cAAY,YAA7D,SACA,yBAAKR,UAAU,iBACb,uBAAGW,KAAK,IAAIX,UAAU,iBAAtB,UACA,uBAAGW,KAAK,IAAIX,UAAU,iBAAtB,aAGJ,wBAAIA,UAAU,qBACZ,uBAAGW,KAAK,IAAIX,UAAU,2BAA2BQ,cAAY,YAA7D,QACA,yBAAKR,UAAU,iBACb,uBAAGW,KAAK,IAAIX,UAAU,iBAAtB,kCAMN,4BAAQY,KAAK,SAASZ,UAAU,eAAea,QAAS,kBAAIjB,GAAW,KAAvE,cCZOkB,MAvCf,SAAmBrC,GACf,IAAIsC,EACAC,EASJ,OAPAD,EAAQtC,EAAMsC,MAAME,KAAI,SAAAC,GAAI,OACxB,kBAAC,IAAD,CAAMlB,UAAU,8DAA8DmB,IAAKD,EAAMjB,GAAIiB,EAAKE,QAAQ,QAAQ,KAAMF,MAE5HF,EAAcvC,EAAMuC,YAAYC,KAAI,SAAAC,GAAI,OACpC,kBAAC,IAAD,CAAMlB,UAAU,8DAA8DmB,IAAKD,EAAMjB,GAAIiB,EAAKE,QAAQ,QAAQ,KAAMF,MAI5H,yBAAKlB,UAAU,8CACX,yBAAKA,UAAU,cAAcI,MAAO,CAACiB,gBAAgB,kBACjD,uBAAGV,KAAM,IAAIlC,EAAM6C,KAAKF,QAAQ,OAAO,KAA2DZ,cAAY,WAAWR,UAAU,mCAC/H,4BACKvB,EAAM6C,KAAK,yBAAKpB,IAAKzB,EAAM8C,IAAKvB,UAAU,OAAOI,MAAO,CAACC,MAAM,QAASE,IAAK9B,EAAM6C,UAKhG,yBAAKtB,UAAU,uCAAuCU,GAAIjC,EAAM6C,KAAKF,QAAQ,OAAO,KAA4DI,cAAa,IAAI/C,EAAMgD,QAClKV,EACAC,EAAYU,OAAO,EACf,uBAAGf,KAAM,IAAIlC,EAAM6C,KAAKF,QAAQ,OAAO,KAAK,UAAWZ,cAAY,WAAWR,UAAU,gEACrF,uCACI,KAEZ,yBAAKA,UAAU,sBAAsBU,GAAIjC,EAAM6C,KAAKF,QAAQ,OAAO,KAAK,WACnEJ,MC5BFW,EAFQlC,IAAMC,gBC4BdkC,MAzBf,SAAmBnD,GAAQ,IAChBoD,EAAahC,qBAAW8B,GAAxBE,UAEP,OACQ,yBAAK7B,UAAU,mBACX,yBAAKA,UAAU,OACV6B,EACD,yBAAK7B,UAAU,gFACfI,MAAO,CAAC0B,IAAI,EAAEC,KAAK,EAAEC,OAAO,SAASX,gBAAgB,yBACjD,yBAAKrB,UAAU,eAAeI,MAAO,CAACC,MAAM,OAAOC,OAAO,SAAS,0BAAMN,UAAU,cAChF,KACP,yBAAKA,UAAU,+BACX,kBAAC,EAAD,MAEA,6BAAMvB,EAAMwD,WAGhB,yBAAKjC,UAAU,6CACX,kBAAC,GAAD,CAAWkC,kBAAkB,QCnBrD,SAASC,EAAU1D,GACf,OACQ,kBAAC,EAAD,KACI,yBAAKuB,UAAU,aAEX,yBAAKA,UAAU,4DAA4DI,MAAO,CAACE,OAAO,SACtF,6BACI,yBAAKJ,IAAKC,IAAMI,IAAI,OAAOH,MAAO,CAACgC,SAAS,OAAQpC,UAAU,qBAGlE,wBAAIA,UAAU,iCAAd,kCACA,wBAAIA,UAAU,yBAAd,kCACA,uBAAGA,UAAU,kCAAb,oCACA,uBAAGA,UAAU,kCAAb,0CACA,uBAAGA,UAAU,kCAAb,kCACA,uBAAGA,UAAU,kCAAb,2CAUxBmC,EAAUE,YAAY,YACtBF,EAAUG,KAAK,aAEAH,Q,+BCqBAI,MAhDf,SAAkBC,GAAa,IAAD,EACA9D,mBAAS8D,GADT,mBACnBC,EADmB,KACbC,EADa,OAEAhE,mBAAS,MAFT,mBAEnBiE,EAFmB,KAEdC,EAFc,OAGAlE,mBAAS,MAHT,mBAGnBmE,EAHmB,KAGbC,EAHa,OAIUjD,qBAAW8B,GAA9BoB,GAJS,EAInBlB,UAJmB,EAITkB,iBAyCrB,OArCIhE,qBAAU,WACH0D,GAASA,EAAMO,MACdD,GAAgB,GAChBE,MAAMR,EAAMO,IAAIP,EAAMS,MAAMC,MACxB,SAACC,GACG,GAAKA,EAASC,GAKV,OAAOD,EAASE,OAHhB,MAAM,IAAIC,MAAM,6BAA6BH,EAASI,OAAS,aAAaJ,EAASK,eAM/FN,MACE,SAAAC,GACIR,EAAWQ,GAEXN,EAAY,MAEZC,GAAgB,MAEtBW,OAOE,SAAAb,GACIC,EAAYD,GACZD,EAAW,MACXG,GAAgB,SAI9B,CAACN,IAEA,CAAC,CAACE,OAAKE,SAAOH,IClBNiB,MAhCf,SAAkBhB,EAAKiB,EAASC,GAC5B,IAAIC,EAAa,EAIjB,MAHa,SAAVD,IACCC,GAAc,GAEX,YAAInB,GAAMoB,MAAK,SAACC,EAAEC,GAAH,OAClBH,GAAYE,EAAEJ,GAAU,IAAIM,cAAeD,EAAEL,GAAU,GAAI,KAAK,CAACO,SAAQ,QCKhEC,MAXjB,SAA4BC,GAC1B,OAAGA,GACO,GAAKA,GAAKjD,QAChB,6CACA,SAASkD,EAAGC,EAAIC,GACd,OAAOA,GAAOD,EAAK,OAGX,ICMGE,MAdnB,SAA0BC,GACtB,GAAIA,EAAM,CACNA,EAAK,IAAIC,KAAKD,GACd,IAAME,EAAQC,OAAOH,EAAKI,YAAc,EAAG,GAC3C,KAAMD,OAAOH,EAAKI,YAAc,GAAKD,OAAOH,EAAKI,YAAc,EAK/D,OAHYJ,EAAKK,UAAY,GAC7B,IAAML,EAAKK,UAAYL,EAAKK,WAEjB,IAAIH,EAAM,IADRF,EAAKM,cAGjB,MAAO,ICyQDC,MA1Qf,SAAiBxG,GAAO,IA4IZyG,EACAC,EACAC,EACAC,EA/IY,EAG8C9C,EAAS,CACnES,IAAI,eACJE,KAAK,CACDoC,OAAO,OACPC,QAAQ,CAAC,eAAe,oBACxBC,KAAKC,KAAKC,UAAU,CAACxE,KAAKzC,EAAMyC,OAChCyE,YAAY,aATJ,0BAGHC,EAHG,EAGRjD,KAAsBkD,EAHd,EAGQhD,MAAmBiD,EAH3B,OAY8CvD,EAAS,MAZvD,0BAYHwD,EAZG,EAYRpD,KAAsBqD,EAZd,EAYQnD,MAAmBoD,EAZ3B,OAa0BvH,mBAAS,MAbnC,mBAaTwH,EAbS,KAaIC,EAbJ,KAcTvG,EAAcC,qBAAWL,GAAzBI,WAdS,EAeclB,mBAAS,IAfvB,mBAeT0H,EAfS,KAeFC,EAfE,OAgB8B3H,mBAAS,IAhBvC,mBAgBT4H,EAhBS,KAgBMC,EAhBN,OAiBkC7H,mBAAS,IAjB3C,mBAiBT8H,EAjBS,KAiBQC,EAjBR,OAkBsC/H,mBAAS,MAlB/C,mBAkBTgI,EAlBS,KAkBUC,EAlBV,KAoBVC,EAAQC,cAERC,EAAO,MA+GjB,SAASC,EAAYpE,GACdA,EACCiE,EAAQI,KAAK,KAAKvI,EAAMwI,eAAe,SAASxI,EAAMyC,KAAK,OAAOyB,EAAKmE,IAEvEF,EAAQI,KAAK,KAAKvI,EAAMwI,gBA6H5B,OA7OJlI,qBAAU,WACF6G,IAAgC,IAAlBA,EAAWsB,MACrBC,MAAM,iEACNvH,GAAW,IAEVgG,GACLO,EAAmB,CACfxD,KAAKiD,EAAWjD,KAAMiD,EAAWjD,KAAK1B,KAAI,SAAA0B,GAAI,OAAEyE,OAAOC,OAAO,GAAG1E,EAAK,CAAC2E,UAAS,OAAQ,KACxFC,MAAO3B,EAAW2B,MAAO3B,EAAW2B,MAAMtG,KAAI,SAAAsG,GAAK,OAAEA,EAAMjG,QAAM,KACjEuB,MAAM+C,EAAW/C,UAGvB,CAAC+C,EAAWC,IAElB9G,qBAAU,WACFgH,IAAgC,IAAlBA,EAAWmB,MACzBC,MAAM,iEACNvH,GAAW,KAENmG,GAAeA,EAAWlD,OAAUmD,GAkBnCD,GAAcA,EAAWlD,OAAUmD,IACzCW,EACK,yBAAK3G,UAAU,uBACX+F,GAAcA,EAAWlD,MAAO,wBAAwBkD,EAAWlD,MAAM2E,MAAM,UAC9EzB,EAAWlD,MAAM4E,KAAK,aAAa1B,EAAWlD,MAAM6E,WAAW,KAChE1B,EAAa,kBAAkBA,EAAc,QAtBtDmB,MAAM,sBACNR,EAAyB,MACzBF,EAAuB,IACvBP,EAAavD,KAAKgF,SAAQ,SAAAhF,GACtBiF,SAASC,eAAelF,EAAKmE,IAASgB,SAAQ,KAElDF,SAASC,eAAe,gBAAgBC,SAAQ,EAChDhC,EAAkB,CACd9C,IAAI,eACJE,KAAK,CACDoC,OAAO,OACPC,QAAQ,CAAC,eAAe,oBACxBC,KAAKC,KAAKC,UAAU,CAACxE,KAAKzC,EAAMyC,OAChCyE,YAAY,gBAc1B,CAACI,EAAWC,IAwENE,GAAgBA,EAAaqB,QAC7BrC,EAAmBgB,EAAaqB,MAAMtG,KAAI,SAAAsG,GAAK,OAC3C,4BAAQpG,IAAKoG,EAAOQ,MAAOR,GAAQA,EAAMnG,QAAQ,KAAK,SAG1D+D,EAAUe,EAAaqB,MAAMtG,KAAI,SAAAsG,GAAK,OAClC,wBAAIpG,IAAKoG,EAAOnH,MAAO,CAAC4H,OAAO,WAAYhI,UAAU,cAAciI,aAAW,MAC9EpH,QAAS,SAAC1B,GACNA,EAAE+I,OAAOC,aAAa,aAAmD,QAAtChJ,EAAE+I,OAAOE,aAAa,cAAsB,OAAO,OACtFjC,EAAmB,eAAID,EAAL,CACdvD,KAAKgB,EAASuC,EAAavD,KAAK4E,EAAMpI,EAAE+I,OAAOE,aAAa,kBAGtB,QAAtCjJ,EAAE+I,OAAOE,aAAa,eACtBR,SAASC,eAAeN,EAAMnG,QAAQ,KAAK,MAAMiH,UAAUC,OAAO,eAClEV,SAASC,eAAeN,EAAMnG,QAAQ,KAAK,MAAMiH,UAAUE,IAAI,mBAG/DX,SAASC,eAAeN,EAAMnG,QAAQ,KAAK,MAAMiH,UAAUC,OAAO,iBAClEV,SAASC,eAAeN,EAAMnG,QAAQ,KAAK,MAAMiH,UAAUE,IAAI,kBAIlEhB,EAAMnG,QAAQ,KAAK,KAAK,uBAAGV,GAAI6G,EAAMnG,QAAQ,KAAK,KAAMpB,UAAU,+BAM3EkG,GAAgBA,EAAavD,OACjCyC,EAASc,EAAavD,KAAK1B,KAAI,SAAC0B,EAAK6F,GACjC,OAAG7F,EAAK2E,SAEA,wBAAInG,IAAKwB,EAAKmE,IACV,wBAAI9G,UAAU,uBACV,2BAAOY,KAAK,WAAWF,GAAIiC,EAAKmE,GAAS2B,SAAU,SAACtJ,GAChD,IAAMuJ,EAAiBlC,EAAiBmC,QAAQhG,EAAKmE,IACjD3H,EAAE+I,OAAOJ,QACTrB,EAAuB,GAAD,mBACdD,GADc,CACG7D,EAAKmE,OAGT,IAAlB4B,GACCjC,EAAuB,GAAD,mBACdD,EAAiBoC,MAAM,EAAEF,IADX,YAEXlC,EAAiBoC,MAAMF,EAAe,UAKjE,wBAAI1I,UAAU,uBACV,4BAAQA,UAAU,sBACda,QAAS,kBAA8BkG,EAAYpE,KADvD,SAKHuD,GAAgBA,EAAaqB,MAAOrB,EAAaqB,MAAMtG,KAAI,SAAAsG,GAGxD,OAAQ,wBAAIvH,UAAU,kCAAkCmB,IAAK0H,KAAKC,WACpC,IAAzBvB,EAAMoB,QAAQ,QACXlE,EAAiB9B,EAAK4E,IACG,kBAAd5E,EAAK4E,GAAmBnD,EAAmBzB,EAAK4E,IAAQ5E,EAAK4E,OAGjF,MAIJ,SAwCPlC,GAnCJa,GAAiBA,EAAarD,OAAUgD,EAkClCK,GAAgBA,EAAarD,OAAUgD,EAChC,yBAAK7F,UAAU,uBACXkG,GAAgBA,EAAarD,MAAO,2BAA2BqD,EAAarD,MAAM2E,MAAM,UACxFtB,EAAarD,MAAM4E,KAAK,aAAavB,EAAarD,MAAM6E,WAAW,KACnE7B,EAAa,eAAeA,EAAYvE,KAAK,IAAIuE,EAAYkD,QAAQ,MAG9E,KAtCR,yBAAK/I,UAAU,gBAAeI,MAAO,CAAC4I,UAAU,SAC5C,2BAAOtI,GAAG,QAAQV,UAAU,oCACpB,+BACI,4BACI,wBAAIA,UAAU,eAAc,2BAAOY,KAAK,WAAWF,GAAG,eAAe+H,SAAU,SAACtJ,GAC5E,GAAIA,EAAE+I,OAAOJ,QAAS,CAClB,IAAImB,EAAM,GACV/C,EAAavD,KAAKgF,SAAQ,SAAAhF,GACtBiF,SAASC,eAAelF,EAAKmE,IAASgB,SAAQ,EAC9CmB,EAAMjC,KAAKrE,EAAKmE,OAEpBL,EAAuBwC,QAGvB/C,EAAavD,KAAKgF,SAAQ,SAAAhF,GACtBiF,SAASC,eAAelF,EAAKmE,IAASgB,SAAQ,KAElDrB,EAAuB,QAI/B,6BACCtB,IAGT,+BACKC,KAed3G,EAAMc,OAAO,CAAC2F,qBAAmBG,SAAO0B,cAAYmC,QApK/D,WACIvC,EAAyB,MACzBF,EAAuB,IACnBP,EAAavD,KAAKgF,SAAQ,SAAAhF,GACtBiF,SAASC,eAAelF,EAAKmE,IAASgB,SAAQ,KAEtDF,SAASC,eAAe,gBAAgBC,SAAQ,EAChDhC,EAAkB,CACd9C,IAAI,eACJE,KAAK,CACDoC,OAAO,OACPC,QAAQ,CAAC,eAAe,oBACxBC,KAAKC,KAAKC,UAAU,CAACxE,KAAKzC,EAAMyC,OAChCyE,YAAY,cAuJ+CS,SAAO+C,aAzL9E,SAAsBhK,GAClB,GAAI+G,GAAgBA,EAAavD,KAAM,CACvC,IAAMyG,EAAQlD,EAAavD,KAAK1B,KAAI,SAAA0B,GAChC,MAAqB,KAAjBxD,EAAE+I,OAAOH,MACL,IAAIsB,OAAOlK,EAAE+I,OAAOH,MAAM,KAAKuB,KAAK3G,EAAK2D,IAClCc,OAAOC,OAAO,GAAG1E,EAAK,CAAC2E,UAAS,IAGhCF,OAAOC,OAAO,GAAG1E,EAAK,CAAC2E,UAAS,IAEjCF,OAAOC,OAAO,GAAG1E,EAAK,CAAC2E,UAAS,OAElDnB,EAAmB,CACfxD,KAAKyG,EACL7B,MAAMrB,EAAaqB,MACnB1E,MAAMqD,EAAarD,QAGvBwD,EAAalH,EAAE+I,OAAOH,QAwKlBzB,iBAAeiD,qBA7LvB,SAA8BpK,GAC1BoH,EAAqBpH,EAAE+I,OAAOH,QA4LUyB,WAnJ5C,WACO7K,OAAO8K,QAAQ,oBAClBxD,EAAkB,CACdjD,IAAI,eACJE,KAAK,CACDoC,OAAO,OACPC,QAAQ,CAAC,eAAe,oBACxBC,KAAKC,KAAKC,UAAU,CAChBxE,KAAKzC,EAAMyC,KACXR,GAAG8F,IAEPb,YAAY,cAwI+Be,qBAAmBF,sBC7O/DkD,MAlCf,SAAuBjL,GACnB,OACY,yBAAKuB,UAAU,kBACX,4BAAKvB,EAAM4D,aACX,4BAAQrC,UAAU,uBAAuBa,QAAS,kBAAIpC,EAAMsI,gBAA5D,mBACA,0BAAM/G,UAAU,oBACR,2BAAO2J,QAAQ,UAAf,aACA,2BAAO/I,KAAK,OAAO6H,SAAU,SAACtJ,GAAD,OAAKV,EAAM0K,aAAahK,IAAIuB,GAAG,SAASkJ,YAAY,YAAY5J,UAAU,uBAAuB+H,MAAOtJ,EAAM2H,SAC3I,2BAAOuD,QAAQ,kBAAkB3J,UAAU,gBAA3C,mBACA,4BAAQA,UAAU,uBAAuB+H,MAAOtJ,EAAM6H,eAAgBmC,SAAUhK,EAAM8K,sBAClF,4BAAQxB,MAAM,IAAd,wBACCtJ,EAAMyG,oBAEX,2BAAOlF,UAAU,qCAAjB,6BAER,4BAAK,WAAWvB,EAAMoL,UAEtB,yBAAK7J,UAAU,QACX,4BAAQA,UAAU,4BAA4Ba,QAASpC,EAAMyK,SAA7D,WACA,4BAAQlJ,UAAU,iBAAiBa,QAAS,SAAC1B,GACzCV,EAAM+H,iBAAiB9E,OAGvBjD,EAAM+K,aAFNrC,MAAM,wBAFV,WASH1I,EAAMiI,mBACNjI,EAAM4G,SC1B3B,SAASyE,EAAcrL,GACnB,OACQ,kBAAC,EAAD,KACI,kBAAC,EAAD,CAASwI,eAAe,sBAAsB/F,KAAK,iBACnD3B,OAAQ,SAACwK,GACL,OACA,kBAAC,EAAD,eAAe1H,YAAayH,EAAczH,YAAawH,SAAUC,EAAczH,aAAiB0H,QASpHD,EAAczH,YAAY,iBAC1ByH,EAAcxH,KAAK,iBAEJwH,QClBf,SAASE,EAAevL,GACpB,OACQ,kBAAC,EAAD,KACI,kBAAC,EAAD,CAASwI,eAAe,uBAAuB/F,KAAK,kBACpD3B,OAAQ,SAACwK,GACL,OACA,kBAAC,EAAD,eAAe1H,YAAa2H,EAAe3H,YAAawH,SAAUG,EAAe3H,aAAiB0H,QAStHC,EAAe3H,YAAY,kBAC3B2H,EAAe1H,KAAK,kBAEL0H,QClBf,SAASC,EAAaxL,GAClB,OACQ,kBAAC,EAAD,KACI,kBAAC,EAAD,CAASwI,eAAe,qBAAqB/F,KAAK,gBAClD3B,OAAQ,SAACwK,GACL,OACA,kBAAC,EAAD,eAAe1H,YAAa4H,EAAa5H,YAAawH,SAAUI,EAAa5H,aAAiB0H,QASlHE,EAAa5H,YAAY,gBACzB4H,EAAa3H,KAAK,gBAEH2H,QClBf,SAASC,EAAUzL,GACf,OACQ,kBAAC,EAAD,KACI,kBAAC,EAAD,CAASwI,eAAe,kBAAkB/F,KAAK,aAC/C3B,OAAQ,SAACwK,GACL,OACA,kBAAC,EAAD,eAAe1H,YAAa6H,EAAU7H,YAAawH,SAAUK,EAAU7H,aAAiB0H,QAS5GG,EAAU7H,YAAY,aACtB6H,EAAU5H,KAAK,aAEA4H,QClBf,SAASC,EAAW1L,GAChB,OACQ,kBAAC,EAAD,KACI,kBAAC,EAAD,CAASwI,eAAe,mBAAmB/F,KAAK,cAChD3B,OAAQ,SAACwK,GACL,OACA,kBAAC,EAAD,eAAe1H,YAAa8H,EAAW9H,YAAawH,SAAUM,EAAW9H,aAAiB0H,QAS9GI,EAAW9H,YAAY,cACvB8H,EAAW7H,KAAK,cAED6H,Q,uBCVAC,MAbf,SAAqBC,GACjB,GAAIzC,SAASC,eAAe,aACxBD,SAASC,eAAe,aAAayC,UAArC,qCAA+ED,EAA/E,UAEC,CACD,IAAMjK,EAAQwH,SAAS2C,cAAc,SACrCnK,EAAM+H,aAAa,KAAK,aACxBP,SAAS4C,KAAKC,YAAYrK,GAC1BwH,SAASC,eAAe,aAAayC,UAArC,qCAA+ED,EAA/E,QCkeOK,MAlef,SAAwBjM,GACpB,IAAMmI,EAAQC,cAsbd,OACI,yBAAK7G,UAAU,wBACX,4BAAQY,KAAK,QAAQZ,UAAU,sCAC3Ba,QAAS,WACL+G,SAAS+C,cAAc,uBAAuBxC,aAC9C,UAAU,yCACViC,EAAY,eACZxD,EAAQI,KAAKvI,EAAMmM,YAL3B,QAOA,wBAAI5K,UAAU,oBACTvB,EAAM4D,YAAY,SAAUoC,EAAiBhG,EAAMoM,YAAN,WAC7C,OAAQpG,EAAiBhG,EAAMoM,YAAN,UAG9B,2BAAO7K,UAAU,0BACb,2BAAOA,UAAU,6CACb,4BACI,wBAAIA,UAAU,aACuB,eAAhCvB,EAAMoM,YAAN,SAA8C,aAAa,aAEhE,wBAAI7K,UAAU,aAAd,QAxcpB,WACI,IAAM8K,EAAa,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAChE,OAAQ,SAAU,YAAa,UAAW,WAAY,YAEpDzF,EAAO,GAEP0F,EAAgB,IAAIpG,KAAK,IAAIA,KAAKlG,EAAMoM,YAAYG,WAAWhG,cAAc,IAAIL,KAAKlG,EAAMoM,YAAYG,WAAWlG,WAAW,IAAIH,KAAKlG,EAAMoM,YAAYG,WAAWjG,UAAU,GAC9KkG,EAAc,IAAItG,KAAK,IAAIA,KAAKlG,EAAMoM,YAAYK,SAASlG,cAAc,IAAIL,KAAKlG,EAAMoM,YAAYK,SAASpG,WAAW,IAAIH,KAAKlG,EAAMoM,YAAYK,SAASnG,UAAU,GAE5K,GAAIkG,GAAe,IAAItG,KAAK,IAAIA,KAAKoG,GAAiB/F,cAAe,IAAIL,KAAKoG,GAAiBjG,WAAY,EAAE,IACrE,aAAhCrG,EAAMoM,YAAN,UAA+E,eAAhCpM,EAAMoM,YAAN,UAAgF,aAAhCpM,EAAMoM,YAAN,UAA8CpM,EAAM0M,cACvJ9F,EAAO2B,KAAK,wBAAI7F,IAAK2J,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cAAc,OAC1FhF,UAAU,aACL8K,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cAAc,SAG1EK,EAAO2B,KAAK,wBAAI7F,IAAqC,aAAhC1C,EAAMoM,YAAN,UAA+E,eAAhCpM,EAAMoM,YAAN,UAAgF,aAAhCpM,EAAMoM,YAAN,UAA8CpM,EAAM0M,YACxKL,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cAAc,SACpE8F,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cACxDhF,UAAU,aAC2B,aAAhCvB,EAAMoM,YAAN,UAA+E,eAAhCpM,EAAMoM,YAAN,UAAgF,aAAhCpM,EAAMoM,YAAN,UAA8CpM,EAAM0M,YACpJL,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cAAc,SACpE8F,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,oBAG3D,CACD,IAAIN,EAAK,IAAIC,KAAKoG,GAgBlB,KAfoC,aAAhCtM,EAAMoM,YAAN,UAA+E,eAAhCpM,EAAMoM,YAAN,UAAgF,aAAhCpM,EAAMoM,YAAN,UAA8CpM,EAAM0M,cACvJ9F,EAAO2B,KAAK,wBAAI7F,IAAK2J,EAAWC,EAAgBjG,YAAY,IAAIiG,EAAgB/F,cAAc,OAC9FhF,UAAU,aACL8K,EAAWC,EAAgBjG,YAAY,IAAIiG,EAAgB/F,cAAc,SAG9EK,EAAO2B,KAAK,wBAAI7F,IAAqC,aAAhC1C,EAAMoM,YAAN,UAA+E,eAAhCpM,EAAMoM,YAAN,UAAgF,aAAhCpM,EAAMoM,YAAN,UAA8CpM,EAAM0M,YACxKL,EAAWC,EAAgBjG,YAAY,IAAIiG,EAAgB/F,cAAc,SACxE8F,EAAWC,EAAgBjG,YAAY,IAAIiG,EAAgB/F,cAC5DhF,UAAU,aAC2B,aAAhCvB,EAAMoM,YAAN,UAA+E,eAAhCpM,EAAMoM,YAAN,UAAgF,aAAhCpM,EAAMoM,YAAN,UAA8CpM,EAAM0M,YACpJL,EAAWC,EAAgBjG,YAAY,IAAIiG,EAAgB/F,cAAc,SACxE8F,EAAWC,EAAgBjG,YAAY,IAAIiG,EAAgB/F,gBAG1DiG,EAAc,IAAItG,KAAK,IAAIA,KAAKD,GAAMM,cAAe,IAAIL,KAAKD,GAAMI,WAAY,EAAE,EAAE,IACtFJ,EAAK0G,SAAS1G,EAAKI,WAAW,EAAE,IACI,aAAhCrG,EAAMoM,YAAN,UAA+E,eAAhCpM,EAAMoM,YAAN,UAAgF,aAAhCpM,EAAMoM,YAAN,UAA8CpM,EAAM0M,cACvJ9F,EAAO2B,KAAK,wBAAI7F,IAAK2J,EAAWpG,EAAKI,YAAY,IAAIJ,EAAKM,cAAc,OACxEhF,UAAU,aACL8K,EAAWpG,EAAKI,YAAY,IAAIJ,EAAKM,cAAc,SAGxDK,EAAO2B,KAAK,wBAAI7F,IAAqC,aAAhC1C,EAAMoM,YAAN,UAA+E,eAAhCpM,EAAMoM,YAAN,UAAgF,aAAhCpM,EAAMoM,YAAN,UAA8CpM,EAAM0M,YACxKL,EAAWpG,EAAKI,YAAY,IAAIJ,EAAKM,cAAc,SAClD8F,EAAWpG,EAAKI,YAAY,IAAIJ,EAAKM,cACtChF,UAAU,aAC2B,aAAhCvB,EAAMoM,YAAN,UAA+E,eAAhCpM,EAAMoM,YAAN,UAAgF,aAAhCpM,EAAMoM,YAAN,UAA8CpM,EAAM0M,YACpJL,EAAWpG,EAAKI,YAAY,IAAIJ,EAAKM,cAAc,SAClD8F,EAAWpG,EAAKI,YAAY,IAAIJ,EAAKM,iBAGV,aAAhCvG,EAAMoM,YAAN,UAA+E,eAAhCpM,EAAMoM,YAAN,UAAgF,aAAhCpM,EAAMoM,YAAN,UAA8CpM,EAAM0M,cACvJ9F,EAAO2B,KAAK,wBAAI7F,IAAK2J,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cAAc,OAC1FhF,UAAU,aACL8K,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cAAe,SAG3EK,EAAO2B,KAAK,wBAAI7F,IAAqC,aAAhC1C,EAAMoM,YAAN,UAA+E,eAAhCpM,EAAMoM,YAAN,UAAgF,aAAhCpM,EAAMoM,YAAN,UAA8CpM,EAAM0M,YACxKL,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cAAc,SACpE8F,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cACxDhF,UAAU,aAC2B,aAAhCvB,EAAMoM,YAAN,UAA+E,eAAhCpM,EAAMoM,YAAN,UAAgF,aAAhCpM,EAAMoM,YAAN,UAA8CpM,EAAM0M,YACpJL,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cAAc,SACpE8F,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,gBAGhE,OAAOK,EA+XUgG,GACgC,aAAhC5M,EAAMoM,YAAN,UAA+E,eAAhCpM,EAAMoM,YAAN,UAAgF,aAAhCpM,EAAMoM,YAAN,UAA8CpM,EAAM0M,YAC/I,wBAAInL,UAAU,aAAd,OAAoC,KACzC,wBAAIA,UAAU,aAAd,UAEHvB,EAAM0M,aAAe1M,EAAMoM,YAAN,SACrB,4BACG,wBAAI7K,UAAU,aACuB,eAAhCvB,EAAMoM,YAAN,SAA8C,aAAa,aAEhE,wBAAI7K,UAAU,aAAd,SACG,MA7GvB,WACI,IAAM2C,EAAKlE,EAAMkE,KACX4E,EAAM9I,EAAM8I,MAAM,GAClBlD,EAAIkD,EAAM,GAAGjG,KACbA,EAAKiG,EAAM,GAAGjG,KACdgK,EAAoC,eAAhC7M,EAAMoM,YAAN,SAA6C,KAAKtD,EAAM,GAAGjG,KAC/DiK,EAAsC,eAAhC9M,EAAMoM,YAAN,SAA6CtD,EAAM,GAAGjG,KAAKiG,EAAM,GAAGjG,KAE1EkK,EAAW/M,EAAM+M,WACjBC,EAAShN,EAAM8I,MAAM,GACrBmE,EAAOD,EAAS,GAAGnK,KACnBqK,EAAQF,EAAS,GAAGnK,KACpBsK,EAAOH,EAAS,GAAGnK,KACnBuK,EAASJ,EAAS,GAAGnK,KAErBwK,EAAkB,GAClBzG,EAAO,GAyDb,OAvDA1C,EAAKgF,SAAQ,SAAAzG,GACT,IAAM6K,EAAqB,IACgB,IAAxCD,EAAkBnD,QAAQzH,EAAKmD,MAC9ByH,EAAkB9E,KAAK9F,EAAKmD,IAC5BgB,EAAO2B,KACP,2BAAO7F,IAAKD,EAAKmD,GAAMrE,UAAU,kCAC7B,wBAAIA,UAAU,+BACV,wBAAIA,UAAU,aAAakB,EAAKmD,IAChC,wBAAIrE,UAAU,aAAakB,EAAKI,IAnTpD,SAA8BJ,EAAKyB,EAAK4E,GACpC,IAAMuD,EAAa,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAChE,OAAQ,SAAU,YAAa,UAAW,WAAY,YAEpDzF,EAAO,GAEPhB,EAAIkD,EAAM,GAAGjG,KACb0K,EAASzE,EAAM,GAAGjG,KAClBgK,EAAoC,eAAhC7M,EAAMoM,YAAN,SAA6C,KAAKtD,EAAM,GAAGjG,KAC/DiK,EAAsC,eAAhC9M,EAAMoM,YAAN,SAA6CtD,EAAM,GAAGjG,KAAKiG,EAAM,GAAGjG,KAE1EyJ,EAAgB,IAAIpG,KAAK,IAAIA,KAAKlG,EAAMoM,YAAYG,WAAWhG,cAAc,IAAIL,KAAKlG,EAAMoM,YAAYG,WAAWlG,WAAW,IAAIH,KAAKlG,EAAMoM,YAAYG,WAAWjG,UAAU,GAC9KkG,EAAc,IAAItG,KAAK,IAAIA,KAAKlG,EAAMoM,YAAYK,SAASlG,cAAc,IAAIL,KAAKlG,EAAMoM,YAAYK,SAASpG,WAAW,IAAIH,KAAKlG,EAAMoM,YAAYK,SAASnG,UAAU,GAkI5K,OAjIIkG,GAAe,IAAItG,KAAK,IAAIA,KAAKoG,GAAiB/F,cAAe,IAAIL,KAAKoG,GAAiBjG,WAAY,EAAE,KACrE,aAAhCrG,EAAMoM,YAAN,UAA+E,eAAhCpM,EAAMoM,YAAN,UAAgF,aAAhCpM,EAAMoM,YAAN,UAA8CpM,EAAM0M,cACvJ9F,EAAO2B,KACH,wBAAI7F,IAAK2J,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cAAc,OAC9EhF,UAAU,aACLoE,EAAmBzB,EAAKsJ,QAAO,SAACjI,EAAEC,GAC/B,OAAIA,EAAEI,KAAOnD,EAAKmD,GACPL,EAAEC,EAAEqH,GACHtH,IACd,MAIVqB,EAAO2B,KACH,wBAAI7F,IAAqC,aAAhC1C,EAAMoM,YAAN,SACTC,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cAAc,SACpE8F,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cACxDhF,UAAU,aACLoE,EAAmBzB,EAAKsJ,QAAO,SAACjI,EAAEC,GAC/B,OAAIA,EAAEI,KAAOnD,EAAKmD,GACPL,EAAEC,EAAEsH,GACHvH,IACd,OAKR,WACF,IAAIU,EAAK,IAAIC,KAAKoG,GAiClB,KA/BoC,aAAhCtM,EAAMoM,YAAN,UAA+E,eAAhCpM,EAAMoM,YAAN,UAAgF,aAAhCpM,EAAMoM,YAAN,UAA8CpM,EAAM0M,cACvJ9F,EAAO2B,KACH,wBAAI7F,IAAK2J,EAAWC,EAAgBjG,YAAY,IAAIiG,EAAgB/F,cAAc,OAClFhF,UAAU,aACLoE,EAAmBzB,EAAKsJ,QAAO,SAACjI,EAAEC,GAC/B,IAAMiI,EAAgB,IAAIvH,KAAK,IAAIA,KAAKV,EAAE+H,IAAWhH,cAAc,IAAIL,KAAKV,EAAE+H,IAAWlH,WAAW,IAAIH,KAAKV,EAAE+H,IAAWjH,UAAU,GAExI,OAAId,EAAEI,KAAOnD,EAAKmD,IACX6H,GAAiB,IAAIvH,KAAK,IAAIA,KAAKoG,GAAiB/F,cAAe,IAAIL,KAAKoG,GAAiBjG,WAAY,EAAE,GACnGd,EAAEC,EAAEqH,GACPtH,IACV,MAIVqB,EAAO2B,KACH,wBAAI7F,IAAqC,aAAhC1C,EAAMoM,YAAN,SACTC,EAAWC,EAAgBjG,YAAY,IAAIiG,EAAgB/F,cAAc,SACxE8F,EAAWC,EAAgBjG,YAAY,IAAIiG,EAAgB/F,cAC5DhF,UAAU,aACLoE,EAAmBzB,EAAKsJ,QAAO,SAACjI,EAAEC,GAC/B,IAAMiI,EAAgB,IAAIvH,KAAK,IAAIA,KAAKV,EAAE+H,IAAWhH,cAAc,IAAIL,KAAKV,EAAE+H,IAAWlH,WAAW,IAAIH,KAAKV,EAAE+H,IAAWjH,UAAU,GAExI,OAAId,EAAEI,KAAOnD,EAAKmD,IACX6H,GAAiB,IAAIvH,KAAK,IAAIA,KAAKoG,GAAiB/F,cAAe,IAAIL,KAAKoG,GAAiBjG,WAAY,EAAE,GACnGd,EAAEC,EAAEsH,GACPvH,IACV,MAIJiH,EAAc,IAAItG,KAAK,IAAIA,KAAKD,GAAMM,cAAe,IAAIL,KAAKD,GAAMI,WAAY,EAAE,EAAE,IACtFJ,EAAK0G,SAAS1G,EAAKI,WAAW,EAAE,IACI,aAAhCrG,EAAMoM,YAAN,UAA+E,eAAhCpM,EAAMoM,YAAN,UAAgF,aAAhCpM,EAAMoM,YAAN,UAA8CpM,EAAM0M,cACvJ9F,EAAO2B,KACH,wBAAI7F,IAAK2J,EAAWpG,EAAKI,YAAY,IAAIJ,EAAKM,cAAc,OAC5DhF,UAAU,aACLoE,EAAmBzB,EAAKsJ,QAAO,SAACjI,EAAEC,GACnC,IAAMiI,EAAgB,IAAIvH,KAAK,IAAIA,KAAKV,EAAE+H,IAAWhH,cAAc,IAAIL,KAAKV,EAAE+H,IAAWlH,WAAW,IAAIH,KAAKV,EAAE+H,IAAWjH,UAAU,GACpI,OAAId,EAAEI,KAAOnD,EAAKmD,IACX6H,EAAgB,IAAIvH,KAAK,IAAIA,KAAKD,GAAMM,cAAe,IAAIL,KAAKD,GAAMI,WAAY,IAClFoH,GAAiB,IAAIvH,KAAK,IAAIA,KAAKD,GAAMM,cAAe,IAAIL,KAAKD,GAAMI,WAAY,EAAE,GAC7Ed,EAAEC,EAAEqH,GACPtH,IACV,MAKVqB,EAAO2B,KACH,wBAAI7F,IAAqC,aAAhC1C,EAAMoM,YAAN,SACTC,EAAWpG,EAAKI,YAAY,IAAIJ,EAAKM,cAAc,SAClD8F,EAAWpG,EAAKI,YAAY,IAAIJ,EAAKM,cACtChF,UAAU,aACLoE,EAAmBzB,EAAKsJ,QAAO,SAACjI,EAAEC,GACnC,IAAMiI,EAAgB,IAAIvH,KAAK,IAAIA,KAAKV,EAAE+H,IAAWhH,cAAc,IAAIL,KAAKV,EAAE+H,IAAWlH,WAAW,IAAIH,KAAKV,EAAE+H,IAAWjH,UAAU,GACpI,OAAId,EAAEI,KAAOnD,EAAKmD,IACX6H,EAAgB,IAAIvH,KAAK,IAAIA,KAAKD,GAAMM,cAAe,IAAIL,KAAKD,GAAMI,WAAY,IAClFoH,GAAiB,IAAIvH,KAAK,IAAIA,KAAKD,GAAMM,cAAe,IAAIL,KAAKD,GAAMI,WAAY,EAAE,GAC7Ed,EAAEC,EAAEsH,GACPvH,IACV,OAKsB,aAAhCvF,EAAMoM,YAAN,UAA+E,eAAhCpM,EAAMoM,YAAN,UAAgF,aAAhCpM,EAAMoM,YAAN,UAA8CpM,EAAM0M,cACvJ9F,EAAO2B,KACH,wBAAI7F,IAAK2J,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cAAc,OAC9EhF,UAAU,aACLoE,EAAmBzB,EAAKsJ,QAAO,SAACjI,EAAEC,GAC/B,IAAMiI,EAAgB,IAAIvH,KAAK,IAAIA,KAAKV,EAAE+H,IAAWhH,cAAc,IAAIL,KAAKV,EAAE+H,IAAWlH,WAAW,IAAIH,KAAKV,EAAE+H,IAAWjH,UAAU,GACpI,OAAId,EAAEI,KAAOnD,EAAKmD,IACX6H,EAAgB,IAAIvH,KAAK,IAAIA,KAAKsG,GAAejG,cAAe,IAAIL,KAAKsG,GAAenG,WAAY,IACpGoH,GAAiBjB,EACbjH,EAAEC,EAAEqH,GACHtH,IACd,MAKVqB,EAAO2B,KACH,wBAAI7F,IAAqC,aAAhC1C,EAAMoM,YAAN,SACTC,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cAAc,SACpE8F,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cACxDhF,UAAU,aACLoE,EAAmBzB,EAAKsJ,QAAO,SAACjI,EAAEC,GAC/B,IAAMiI,EAAgB,IAAIvH,KAAK,IAAIA,KAAKV,EAAE+H,IAAWhH,cAAc,IAAIL,KAAKV,EAAE+H,IAAWlH,WAAW,IAAIH,KAAKV,EAAE+H,IAAWjH,UAAU,GACpI,OAAId,EAAEI,KAAOnD,EAAKmD,IACX6H,EAAgB,IAAIvH,KAAK,IAAIA,KAAKsG,GAAejG,cAAe,IAAIL,KAAKsG,GAAenG,WAAY,IACpGoH,GAAiBjB,EACbjH,EAAEC,EAAEsH,GACHvH,IACd,MAjGR,GAsGCqB,EAsKU8G,CAAqBjL,EAAKyB,EAAK4E,GACC,aAAhC9I,EAAMoM,YAAN,UAA+E,eAAhCpM,EAAMoM,YAAN,UAAgF,aAAhCpM,EAAMoM,YAAN,UAA8CpM,EAAM0M,YACnJ,wBAAInL,UAAU,aACVoE,EAAmBzB,EAAKsJ,QAAO,SAACjI,EAAEC,GAC/B,OAAGA,EAAEI,KAAOnD,EAAKmD,GACNL,EAAEC,EAAEqH,GACHtH,IACd,KACC,KACP,wBAAIhE,UAAU,aACToE,EAAmBzB,EAAKsJ,QAAO,SAACjI,EAAEC,GAC/B,OAAGA,EAAEI,KAAOnD,EAAKmD,GACNL,EAAEC,EAAEsH,GACHvH,IACd,MAGTvF,EAAMoM,YAAN,UAAiCpM,EAAM0M,YAAaK,EAAWvK,KAAI,SAAAmL,GAChE,IAAmD,IAA/CL,EAAqBpD,QAAQyD,EAAMV,IAEnC,OADAK,EAAqB/E,KAAKoF,EAAMV,IAE5B,wBAAIvK,IAAKiL,EAAMV,IACX,wBAAI1L,UAAU,aAAaoM,EAAMV,IACjC,wBAAI1L,UAAU,aAAaoM,EAAMT,IA1LjE,SAAoCzK,EAAKkL,EAAMzJ,EAAK4E,GAChD,IAAMuD,EAAa,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAChE,OAAQ,SAAU,YAAa,UAAW,WAAY,YAEpDzF,EAAO,GACPhB,EAAIkD,EAAM,GAAGjG,KACboK,EAAOnE,EAAM,GAAGjG,KAChB+K,EAAQ9E,EAAM,GAAGjG,KACjBsK,EAAOrE,EAAM,GAAGjG,KAChBuK,EAAStE,EAAM,GAAGjG,KAElByJ,EAAgB,IAAIpG,KAAK,IAAIA,KAAKlG,EAAMoM,YAAYG,WAAWhG,cAAc,IAAIL,KAAKlG,EAAMoM,YAAYG,WAAWlG,WAAW,IAAIH,KAAKlG,EAAMoM,YAAYG,WAAWjG,UAAU,GAC9KkG,EAAc,IAAItG,KAAK,IAAIA,KAAKlG,EAAMoM,YAAYK,SAASlG,cAAc,IAAIL,KAAKlG,EAAMoM,YAAYK,SAASpG,WAAW,IAAIH,KAAKlG,EAAMoM,YAAYK,SAASnG,UAAU,GAuH5K,OAtHIkG,GAAe,IAAItG,KAAK,IAAIA,KAAKoG,GAAiB/F,cAAe,IAAIL,KAAKoG,GAAiBjG,WAAY,EAAE,IACzGO,EAAO2B,KACH,wBAAI7F,IAAK2J,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cAAc,OAC9EhF,UAAU,aACLoE,EAAmBzB,EAAKsJ,QAAO,SAACjI,EAAEC,GAC/B,OAAIA,EAAEI,KAAOnD,EAAKmD,IAAQJ,EAAEyH,KAAUU,EAAMV,GACjC1H,EAAEC,EAAE2H,GACH5H,IACd,MAIVqB,EAAO2B,KACH,wBAAI7F,IAAK2J,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cAAe,SAC/EhF,UAAU,aACLoE,EAAmBzB,EAAKsJ,QAAO,SAACjI,EAAEC,GAC/B,OAAIA,EAAEI,KAAOnD,EAAKmD,IAAQJ,EAAEyH,KAAUU,EAAMV,GACjC1H,EAAEC,EAAE4H,GACH7H,IACd,OAIR,WACF,IAAIU,EAAK,IAAIC,KAAKoG,GA8BlB,IA5BA1F,EAAO2B,KACH,wBAAI7F,IAAK2J,EAAWC,EAAgBjG,YAAY,IAAIiG,EAAgB/F,cAAc,OAClFhF,UAAU,aACLoE,EAAmBzB,EAAKsJ,QAAO,SAACjI,EAAEC,GAC/B,IAAMiI,EAAgB,IAAIvH,KAAK,IAAIA,KAAKV,EAAEoI,IAAUrH,cAAc,IAAIL,KAAKV,EAAEoI,IAAUvH,WAAW,IAAIH,KAAKV,EAAEoI,IAAUtH,UAAU,GAErI,OAAId,EAAEI,KAAOnD,EAAKmD,IAAQJ,EAAEyH,KAAUU,EAAMV,IACrCQ,GAAiB,IAAIvH,KAAK,IAAIA,KAAKoG,GAAiB/F,cAAe,IAAIL,KAAKoG,GAAiBjG,WAAY,EAAE,GACnGd,EAAEC,EAAE2H,GACP5H,IACV,MAINqB,EAAO2B,KACP,wBAAI7F,IAAK2J,EAAWC,EAAgBjG,YAAY,IAAIiG,EAAgB/F,cAAc,SAClFhF,UAAU,aACLoE,EAAmBzB,EAAKsJ,QAAO,SAACjI,EAAEC,GAC/B,IAAMiI,EAAgB,IAAIvH,KAAK,IAAIA,KAAKV,EAAEoI,IAAUrH,cAAc,IAAIL,KAAKV,EAAEoI,IAAUvH,WAAW,IAAIH,KAAKV,EAAEoI,IAAUtH,UAAU,GAErI,OAAId,EAAEI,KAAOnD,EAAKmD,IAAQJ,EAAEyH,KAAUU,EAAMV,IACrCQ,GAAiB,IAAIvH,KAAK,IAAIA,KAAKoG,GAAiB/F,cAAe,IAAIL,KAAKoG,GAAiBjG,WAAY,EAAE,GACnGd,EAAEC,EAAE4H,GACP7H,IACV,MAIJiH,EAAc,IAAItG,KAAK,IAAIA,KAAKD,GAAMM,cAAe,IAAIL,KAAKD,GAAMI,WAAY,EAAE,EAAE,IACtFJ,EAAK0G,SAAS1G,EAAKI,WAAW,EAAE,GAEhCO,EAAO2B,KACH,wBAAI7F,IAAK2J,EAAWpG,EAAKI,YAAY,IAAIJ,EAAKM,cAAc,OAC5DhF,UAAU,aACLoE,EAAmBzB,EAAKsJ,QAAO,SAACjI,EAAEC,GACnC,IAAMiI,EAAgB,IAAIvH,KAAK,IAAIA,KAAKV,EAAEoI,IAAUrH,cAAc,IAAIL,KAAKV,EAAEoI,IAAUvH,WAAW,IAAIH,KAAKV,EAAEoI,IAAUtH,UAAU,GACjI,OAAId,EAAEI,KAAOnD,EAAKmD,IAAQJ,EAAEyH,KAAUU,EAAMV,IACrCQ,EAAgB,IAAIvH,KAAK,IAAIA,KAAKD,GAAMM,cAAe,IAAIL,KAAKD,GAAMI,WAAY,IAClFoH,GAAiB,IAAIvH,KAAK,IAAIA,KAAKD,GAAMM,cAAe,IAAIL,KAAKD,GAAMI,WAAY,EAAE,GAC7Ed,EAAEC,EAAE2H,GACP5H,IACV,MAKVqB,EAAO2B,KACH,wBAAI7F,IAAK2J,EAAWpG,EAAKI,YAAY,IAAIJ,EAAKM,cAAc,SAC5DhF,UAAU,aACLoE,EAAmBzB,EAAKsJ,QAAO,SAACjI,EAAEC,GACnC,IAAMiI,EAAgB,IAAIvH,KAAK,IAAIA,KAAKV,EAAEoI,IAAUrH,cAAc,IAAIL,KAAKV,EAAEoI,IAAUvH,WAAW,IAAIH,KAAKV,EAAEoI,IAAUtH,UAAU,GACjI,OAAId,EAAEI,KAAOnD,EAAKmD,IAAQJ,EAAEyH,KAAUU,EAAMV,IACrCQ,EAAgB,IAAIvH,KAAK,IAAIA,KAAKD,GAAMM,cAAe,IAAIL,KAAKD,GAAMI,WAAY,IAClFoH,GAAiB,IAAIvH,KAAK,IAAIA,KAAKD,GAAMM,cAAe,IAAIL,KAAKD,GAAMI,WAAY,EAAE,GAC7Ed,EAAEC,EAAE4H,GACP7H,IACV,MAMdqB,EAAO2B,KACH,wBAAI7F,IAAK2J,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cAAc,OAC9EhF,UAAU,aACLoE,EAAmBzB,EAAKsJ,QAAO,SAACjI,EAAEC,GAC/B,IAAMiI,EAAgB,IAAIvH,KAAK,IAAIA,KAAKV,EAAEoI,IAAUrH,cAAc,IAAIL,KAAKV,EAAEoI,IAAUvH,WAAW,IAAIH,KAAKV,EAAEoI,IAAUtH,UAAU,GACjI,OAAId,EAAEI,KAAOnD,EAAKmD,IAAQJ,EAAEyH,KAAUU,EAAMV,IACrCQ,EAAgB,IAAIvH,KAAK,IAAIA,KAAKsG,GAAejG,cAAe,IAAIL,KAAKsG,GAAenG,WAAY,IACpGoH,GAAiBjB,EACbjH,EAAEC,EAAE2H,GACH5H,IACd,MAKVqB,EAAO2B,KACH,wBAAI7F,IAAK2J,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cAAc,SAC9EhF,UAAU,aACLoE,EAAmBzB,EAAKsJ,QAAO,SAACjI,EAAEC,GAC/B,IAAMiI,EAAgB,IAAIvH,KAAK,IAAIA,KAAKV,EAAEoI,IAAUrH,cAAc,IAAIL,KAAKV,EAAEoI,IAAUvH,WAAW,IAAIH,KAAKV,EAAEoI,IAAUtH,UAAU,GACjI,OAAId,EAAEI,KAAOnD,EAAKmD,IAAQJ,EAAEyH,KAAUU,EAAMV,IACrCQ,EAAgB,IAAIvH,KAAK,IAAIA,KAAKsG,GAAejG,cAAe,IAAIL,KAAKsG,GAAenG,WAAY,IACpGoH,GAAiBjB,EACbjH,EAAEC,EAAE4H,GACH7H,IACd,MA1FR,GA+FCqB,EAwDsBiH,CAA2BpL,EAAKkL,EAAMZ,EAAWC,GAClD,wBAAIzL,UAAU,aACTwL,EAAWS,QAAO,SAACjI,EAAEC,GAClB,OAAIA,EAAEyH,KAAUU,EAAMV,IAAWzH,EAAEI,KAAOnD,EAAKmD,GACpCL,EAAEC,EAAE2H,GACH5H,IACd,IAEN,wBAAIhE,UAAU,aACToE,EAAmBoH,EAAWS,QAAO,SAACjI,EAAEC,GACrC,OAAIA,EAAEyH,KAAUU,EAAMV,IAAWzH,EAAEI,KAAOnD,EAAKmD,GACpCL,EAAEC,EAAE4H,GACH7H,IACd,SAKlB,WAITqB,EAuCEkH,IAGL,2BAAOvM,UAAU,uBAAjB,mBCpdZ,SAASwM,EAAY/N,GAAQ,IAAD,MACgC8D,EAAS,CAC7DS,IAAI,eACJE,KAAK,CACDoC,OAAO,OACPC,QAAQ,CAAC,eAAe,oBACxBC,KAAKC,KAAKC,UAAU,CAACxE,KAAK,WAC1ByE,YAAY,aAPI,sBACX8G,EADW,EAChB9J,KAA4B+J,EADZ,EACM7J,MADN,EAW8BN,EAAS,CAC3DS,IAAI,eACJE,KAAK,CACDoC,OAAO,OACPC,QAAQ,CAAC,eAAe,oBACxBC,KAAKC,KAAKC,UAAU,CAACxE,KAAK,UAC1ByE,YAAY,aAjBI,sBAWXgH,EAXW,EAWhBhK,KAA2BiK,EAXX,EAWK/J,MAXL,EAoBuEN,EAAS,MApBhF,0BAoBXsK,EApBW,EAoBhBlK,KAAmCmK,EApBnB,EAoBajK,MAAgCkK,EApB7C,OAqBUrO,mBAAS,cArBnB,mBAqBjBsO,EArBiB,KAqBRC,EArBQ,OAsBUvO,mBAAS,IAtBnB,mBAsBjBwO,EAtBiB,KAsBRC,EAtBQ,OAuBczO,mBAAS,MAvBvB,mBAuBjB0O,EAvBiB,KAuBNC,EAvBM,OAwBY3O,mBAAS,MAxBrB,mBAwBjB4O,EAxBiB,KAwBPC,EAxBO,OAyBc7O,mBAAS,IAzBvB,mBAyBjB8O,EAzBiB,KAyBNC,EAzBM,OA0Bc/O,mBAAS,IA1BvB,oBA0BjBgP,GA1BiB,MA0BNC,GA1BM,SA2BYjP,oBAAS,IAAIiG,MAAOK,cAAc,UA3B9C,qBA2BjBgG,GA3BiB,MA2BP4C,GA3BO,SA4BQlP,mBAASmP,GAAiB,IAAIlJ,OA5BtC,qBA4BjBuG,GA5BiB,MA4BT4C,GA5BS,SA6BcpP,mBAAS,MA7BvB,qBA6BjBmM,GA7BiB,MA6BLkD,GA7BK,SA8BgCrP,mBAAS,IA9BzC,qBA8BjBsP,GA9BiB,MA8BIC,GA9BJ,SAiCcvP,oBAAS,GAjCvB,qBAiCjByM,GAjCiB,MAiCL+C,GAjCK,SAkCwBxP,mBAAS,MAlCjC,qBAkCjByP,GAlCiB,MAkCAC,GAlCA,SAmCoC1P,mBAAS,MAnC7C,qBAmCjB2P,GAnCiB,MAmCMC,GAnCN,SAoCgB5P,mBAAS,IApCzB,qBAoCjB6P,GApCiB,MAoCJC,GApCI,SAqC4B9P,mBAAS,IArCrC,qBAqCjB+P,GArCiB,MAqCEC,GArCF,SAsCkChQ,oBAAS,GAtC3C,qBAsCjBiQ,GAtCiB,MAsCKC,GAtCL,MAwCjBtM,GAAQuM,cAARvM,KACA1C,GAAcC,qBAAWL,GAAzBI,WACDgH,GAAQC,cAoId,SAASgH,GAAiBnJ,GACtB,IAAIoK,EAAS,IAAInK,KAAKD,GAEtB,OAAQoK,EAAS9J,eAAkB8J,EAAShK,WAAa,EAAG,GAAI,MAAOgK,EAAShK,WAAW,GAAG,KAAMgK,EAAShK,WAAW,KAAOgK,EAAS/J,UAAU,GAClJ,KAAK+J,EAAS/J,UAAY,IAAI+J,EAAS/J,WAtI3ChG,qBAAU,WAcN,GAZI0N,IAA4C,IAAxBA,EAAiBvF,MAC7BC,MAAM,iEACNvH,IAAW,IAEd6M,GAAoBA,EAAiB9J,MAAQ8J,EAAiBlF,OACnE8F,EAAiBZ,EAAiB9J,KAAK1B,KAAI,SAAA0B,GAAI,OAC/C,4BAAQxB,IAAKwB,EAAK8J,EAAiBlF,MAAM,GAAGjG,MAAOyG,MAAOpF,EAAK8J,EAAiBlF,MAAM,GAAGjG,OACpFqB,EAAK8J,EAAiBlF,MAAM,GAAGjG,MAAM,OAAOqB,EAAK8J,EAAiBlF,MAAM,GAAGjG,MAAMqB,EAAK8J,EAAiBlF,MAAM,GAAGjG,MAAM,SAK3HqL,IAA0C,IAAvBA,EAAgBzF,KAC3BC,MAAM,iEACNvH,IAAW,QAElB,GAAI+M,GAAmBA,EAAgBhK,MAAQgK,EAAgBpF,MAAO,CACvE,IAAMwH,EAASpC,EAAgBpF,MAAM,GAAGjG,KAClC0N,EAAUrC,EAAgBpF,MAAM,GAAGjG,KAEzCiM,EAAgBZ,EAAgBhK,KAAK1B,KAAI,SAAA0B,GAAI,OACzC,4BAAQxB,IAAKwB,EAAKoM,GAAWhH,MAAOpF,EAAKoM,IACpCpM,EAAKoM,GAAU,OACbpM,EAAKqM,GAAWrM,EAAKqM,GAAW,YAMjD,CAACvC,EAAiBC,EAAkBC,EAAgBC,IAEtD7N,qBAAU,WACN,GAAI8N,IAA0D,IAA/BA,EAAwB3F,KAC/CC,MAAM,iEACNvH,IAAW,QAEd,GAAIiN,GAA2BA,EAAwBlK,MAAQkK,EAAwBtF,MAAO,CAC/F,IAAM5E,EAAKkK,EAAwBlK,KAAK,GAClC4E,EAAMsF,EAAwBtF,MAAM,GACpClD,EAAIkD,EAAM,GAAGjG,KACbA,EAAKiG,EAAM,GAAGjG,KAEdwK,EAAkB,GAClBmD,EAAQpC,EAAwBlK,KAAK,GACrC8I,EAASoB,EAAwBtF,MAAM,GACvCmE,EAAOD,EAAS,GAAGnK,KACnBqK,EAAQF,EAAS,GAAGnK,KAE1ByM,IAAkB,SAAAlD,OAElBlI,EAAKgF,SAAQ,SAAAzG,GACT,IAAIgO,EAAU,IAC4B,IAAxCpD,EAAkBnD,QAAQzH,EAAKmD,MAC7ByH,EAAkB9E,KAAK9F,EAAKmD,IAC5B6K,EAAUhO,EAAKmD,IAAM4K,EAAQE,QAAO,SAAA/C,GAAK,OAAEA,EAAM/H,KAAOnD,EAAKmD,MAC7D0J,IAAkB,SAAAlD,GAAW,OAAGzD,OAAOC,OAAO,GAAGwD,EAAYqE,UAIrEnB,IAAkB,SAAAlD,GAAW,sBAAOA,EAAP,CACzBlI,KAAKkK,EAAwBlK,KAC7ByM,YAAY,YAAIvC,EAAwBlK,MACxC4E,MAAMsF,EAAwBtF,MAC9ByD,aACAE,WACA8B,WACAE,gBAEJkB,GACK,oCACG,4BAAQrG,MAAO1D,GAAiB,eAAX2I,EAAwB,aAAa,aAC1D,4BAAQjF,MAAOzG,GAAf,UAIRgN,GADIpB,EAEC,oCACG,4BAAQnF,MAAO2D,GAAoB,eAAXwB,EAAwB,aAAa,aAC7D,4BAAQnF,MAAO4D,GAAf,SAI0B,MAElCsC,GAA2BnC,EAAkB7K,KAAI,SAAAC,GAAI,OAAEA,EAAKE,QAAQ,aAAa,WAGvF,CAACyL,EAAwBC,IAG3B/N,qBAAU,WACFiP,IACAA,GAAqBrG,SAAQ,SAAA0H,GACzBC,IAAE,IAAID,GAAIE,GAAG,oBAAmB,SAAApQ,GACzBA,EAAE+I,SAAS/I,EAAEqQ,eAChBF,IAAE,aAAaD,GAAII,YAAY,kBAAkBC,SAAS,sBAE9DJ,IAAE,IAAID,GAAIE,GAAG,oBAAmB,SAAApQ,GACzBA,EAAE+I,SAAS/I,EAAEqQ,eAChBF,IAAE,aAAaD,GAAII,YAAY,mBAAmBC,SAAS,0BAIzE,CAAC7E,KAEH9L,qBAAU,WACN,SAAS4Q,IACL/H,SAAS+C,cAAc,uBAAuBxC,aAC1C,UAAU,yCAIlB,OAFAxJ,OAAOiR,iBAAiB,WAAWD,GAE5B,WACChR,OAAOkR,oBAAoB,WAAWF,MAEhD,IAEF5Q,qBAAU,WACN,SAAS+Q,IACL1F,EAAY,eAIhB,OAFAzL,OAAOiR,iBAAiB,WAAWE,GAE5B,WACCnR,OAAOkR,oBAAoB,WAAWC,MAEhD,IAiqBF,IAAIC,GAAa,KAuBjB,OArBKtD,GAAoBA,EAAiB5J,OAAU6J,GAAsBC,GAAmBA,EAAgB9J,OAAU+J,GACnHC,GAA2BA,EAAwBhK,OAAUiK,KACjEiD,GACI,yBAAK/P,UAAU,uBACVyM,GAAoBA,EAAiB5J,MAAO,gDAAgD4J,EAAiB5J,MAAM2E,MACnH,UAAUiF,EAAiB5J,MAAM4E,KAAK,aAAagF,EAAiB5J,MAAM6E,WAAW,KACrFgF,EAAmB,yCAAyCA,EAAoB,KACjF,6BACA,6BACCC,GAAmBA,EAAgB9J,MAAO,+CAA+C8J,EAAgB9J,MAAM2E,MAC/G,UAAUmF,EAAgB9J,MAAM4E,KAAK,aAAakF,EAAgB9J,MAAM6E,WAAW,KACnFkF,EAAkB,wCAAwCA,EAAmB,KAC9E,6BACA,6BACCC,GAA2BA,EAAwBhK,MAAO,iDAAiDgK,EAAwBhK,MAAM2E,MACzI,UAAUqF,EAAwBhK,MAAM4E,KAAK,aAAaoF,EAAwBhK,MAAM6E,WAAW,KACnGoF,EAA0B,0CAA0CA,EAA2B,OAMpG,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOkD,OAAK,EAAC1N,KAAI,UAAKA,GAAL,aACZuI,GACA,kBAAC,EAAD,CACGD,SAAU4B,EAAYlK,KACtBD,YAAamK,EAAYnK,YACzBwI,YAAaA,GACbM,YAAaA,GACbxI,KAAMgB,EAASkH,GAAW,YAAgB,GAAG0D,GAAa,OAC1D/C,WAAY7H,EAASkH,GAAW,YAAgB,GAAG4D,GAAmB,OACtElH,MAAOsD,GAAW,MAClBgD,iBAAkBA,KAGlB,kBAAC,IAAD,CAAU5N,GAAIuM,EAAYlK,QAGlC,kBAAC,IAAD,CAAO0N,OAAK,EAAC1N,KAAMA,IACf,kBAAC,EAAD,KACI,yBAAKtC,UAAU,iBAAiBI,MAAO,CAAC6P,YAAY,GAAGC,aAAa,KAChE,4BAAK1D,EAAYnK,aACjB,0BAAMrC,UAAU,OAAOmQ,SAAU,SAAAhR,GACjCA,EAAEiR,iBACFxB,IAA4B,GAE5B7B,EADe,eAAXC,EACqB,CACrBhK,IAAI,eACJE,KAAK,CACDoC,OAAO,OACPC,QAAQ,CAAC,eAAe,oBACxBC,KAAKC,KAAKC,UAAU,CAChBxE,KAAK,8BACLuB,MAAM,CAACuI,GAAUE,GAAQsC,EAAWE,MAExC/H,YAAY,YAIK,CACrB3C,IAAI,eACJE,KAAK,CACDoC,OAAO,OACPC,QAAQ,CAAC,eAAe,oBACxBC,KAAKC,KAAKC,UAAU,CAChBxE,KAAK,8BACLuB,MAAM,CAACuI,GAAUE,GAAQsC,EAAWE,MAExC/H,YAAY,eAMpB,yBAAK3F,UAAU,YACX,yBAAKA,UAAU,mCACX,2BAAOA,UAAU,0BAA0BI,MAAO,CAAC6P,YAAY,GAAItG,QAAQ,aAA3E,cACA,8BAAO/I,KAAK,OAAOF,GAAG,YAAY2P,UAAQ,EAAC5H,SAAU,SAACtJ,GAC9C,IAAIwF,KAAKxF,EAAE+I,OAAOH,OAAO,IAAIpD,KAAKuG,KAClC/D,MAAM,4BACNyG,IAAgB,IAAIjJ,MAAOK,cAAc,WAExC4I,GAAgBzO,EAAE+I,OAAOH,QAE9BA,MAAOiD,IAPX,uDAOyC,sCAPzC,IAQA,2BAAOhL,UAAU,sCAAsCI,MAAO,CAAC6P,YAAY,GAAItG,QAAQ,WAAvF,YACA,8BAAO/I,KAAK,OAAOF,GAAG,UAAU2P,UAAQ,EAAC5H,SAAU,SAACtJ,GAC5C,IAAIwF,KAAKxF,EAAE+I,OAAOH,OAAO,IAAIpD,KAAKqG,KAClC7D,MAAM,0BACN2G,GAAcD,GAAiB,IAAIlJ,QAElCmJ,GAAc3O,EAAE+I,OAAOH,QAC7BA,MAAOmD,IANV,uDAMsC,sCANtC,KASJ,8BAAUlL,UAAU,iEAChB,4BAAQA,UAAU,6CACd,wCAGJ,yBAAKA,UAAU,uBACX,2BAAOA,UAAU,0BAA0B2J,QAAQ,YAAnD,aACA,4BAAQ3J,UAAU,wBAAwBqQ,UAAQ,EAAC3P,GAAG,WACtDqH,MAAOiF,EAAUvE,SAAU,SAAAtJ,GACvB8N,EAAe9N,EAAE+I,OAAOH,OACxBoF,EAAe,IACfM,EAAiB,IACjBE,GAAiB,MAEjB,4BAAQ5F,MAAM,cAAd,eACA,4BAAQA,MAAM,YAAd,cAEJ,2BAAO/H,UAAU,+BAA+B2J,QAAQ,cACxC,eAAXqD,EAAwB,YAAY,YAEzC,4BAAQhN,UAAU,wBAAwBqQ,UAAQ,EAACC,KAAK,IAAI5P,GAAG,aAC/DqH,MAAOyF,EAAY+C,UAAU,EAAM9H,SAAU,SAAAtJ,GACzC,IAAIkG,EAAO,GACXmL,MAAMC,KAAKtR,EAAE+I,OAAOwI,SAASzP,KAAI,SAAA0P,IACP,IAAlBA,EAAOrJ,UACPjC,EAAO2B,KAAK2J,EAAO5I,UAE3B0F,EAAiBpI,KAEL,eAAX2H,EAAwBI,EAAWE,IAI5C,yBAAKtN,UAAU,uBACX,yBAAKA,UAAU,0BACX,2BAAOY,KAAK,WAAWZ,UAAU,oBAAoBU,GAAG,gBACxDoH,QAAoB,eAAXkF,KAA0BP,GAAoBA,EAAiB9J,KAAKjB,SAAS8L,EAAW9L,WAChFiL,GAAmBA,EAAgBhK,KAAKjB,SAAS8L,EAAW9L,QAE7E+G,SAAU,SAAAtJ,GACFA,EAAE+I,OAAOJ,QACT2F,EAA4B,eAAXT,EACjBP,EAAiB9J,KAAK1B,KAAI,SAAA0B,GAAI,OAC1BA,EAAK8J,EAAiBlF,MAAM,GAAGjG,SAClCqL,EAAgBhK,KAAK1B,KAAI,SAAA0B,GAAI,OAC1BA,EAAKgK,EAAgBpF,MAAM,GAAGjG,UAEjCmM,EAAiB,OAE1B,2BAAO9D,QAAQ,gBAAgBvJ,MAAO,CAAC6P,YAAY,GAAIjQ,UAAU,oBACjD,eAAXgN,EAAwB,gBAAgB,kBAKrD,yBAAKhN,UAAU,uBACX,2BAAOA,UAAU,0BAA0B2J,QAAQ,YAAnD,aACA,4BAAQ3J,UAAU,wBAAwBU,GAAG,WAC7CqH,MAAOmF,EAAUzE,SAAU,SAAAtJ,GACvBgO,EAAehO,EAAE+I,OAAOH,OACxB4F,GAAiB,MAEjB,4BAAQ5F,MAAM,IAAd,wBACA,4BAAQA,MAAkB,eAAXiF,EAAwB,WAAW,cAA0B,eAAXA,EAAwB,YAAY,gBAExGE,EAAW,2BAAOlN,UAAU,+BAA+B2J,QAAQ,cACpD,eAAXuD,EAAwB,YAAY,YAC/B,KACTA,EAAW,4BAAQlN,UAAU,wBAAwBqQ,UAAQ,EAACC,KAAK,IAAI5P,GAAG,aAC3EkQ,UAAU1D,EACVnF,MAAO2F,GAAY6C,UAAU,EAAM9H,SAAU,SAAAtJ,GACzC,IAAIkG,EAAO,GACXmL,MAAMC,KAAKtR,EAAE+I,OAAOwI,SAASzP,KAAI,SAAA0P,IACP,IAAlBA,EAAOrJ,UACPjC,EAAO2B,KAAK2J,EAAO5I,UAE3B4F,GAAiBtI,KAEL,eAAX6H,EAAwBE,EAAWE,GAC7B,MAGdJ,EAAW,yBAAKlN,UAAU,uBACvB,yBAAKA,UAAU,0BACX,2BAAOY,KAAK,WAAWZ,UAAU,oBAAoBU,GAAG,gBACxDoH,QAAoB,eAAXoF,KAA0BT,GAAoBA,EAAiB9J,KAAKjB,SAASgM,GAAWhM,WACpFiL,GAAmBA,EAAgBhK,KAAKjB,SAASgM,GAAWhM,QAEzE+G,SAAU,SAAAtJ,GACFA,EAAE+I,OAAOJ,QACT6F,GAA4B,eAAXT,EACjBT,EAAiB9J,KAAK1B,KAAI,SAAA0B,GAAI,OAC1BA,EAAK8J,EAAiBlF,MAAM,GAAGjG,SAClCqL,EAAgBhK,KAAK1B,KAAI,SAAA0B,GAAI,OAC1BA,EAAKgK,EAAgBpF,MAAM,GAAGjG,UAEjCqM,GAAiB,OAE1B,2BAAOhE,QAAQ,gBAAgBvJ,MAAO,CAAC6P,YAAY,GAAIjQ,UAAU,oBACjD,eAAXkN,EAAwB,gBAAgB,kBAG7C,MAIZ,8BAAUlN,UAAU,6EAChB,4BAAQA,UAAU,kEACd,gDAEJ,yBAAKA,UAAU,YACf,yBAAKA,UAAU,iDAAiDI,MAAO,CAAC6P,YAAY,KAChF,2BAAOrP,KAAK,WAAWZ,UAAU,mBAAmBU,GAAG,cAAc+H,SAAU,SAAAtJ,GACvEA,EAAE+I,OAAOJ,QACToG,IAAkB,GACjBA,IAAkB,IACpBpG,QAASqD,KAChB,2BAAOxB,QAAQ,cAAc3J,UAAU,oBAAvC,iBAGJ,yBAAKA,UAAU,iCACX,2BAAOA,UAAU,0BAA0BI,MAAO,CAAC6P,YAAY,GAAItG,QAAQ,QAA3E,QAGA,4BAAQjJ,GAAG,OAAOV,UAAU,wBAAwB+H,MAAOwG,GAAc9F,SAAU,SAAAtJ,GAAC,OAChFqP,GAAmBrP,EAAE+I,OAAOH,SAE5B,4BAAQA,MAAM,IAAd,wBACCoG,KAIT,yBAAKnO,UAAU,iCACX,2BAAOA,UAAU,2BAA2BI,MAAO,CAAC6P,YAAY,GAAItG,QAAQ,QAA5E,eAGA,4BAAQjJ,GAAG,OAAOV,UAAU,wBAAwB+H,MAAO0G,GAAoBhG,SAAU,SAAAtJ,GAAC,OACtFuP,GAAyBvP,EAAE+I,OAAOH,SAElC,4BAAQA,MAAM,IAAd,wBACCsG,OAKb,yBAAKrO,UAAU,aACX,4BAAQY,KAAK,SAASZ,UAAU,wBAAhC,YACA,4BAAQY,KAAK,SAASZ,UAAU,kBAAkBa,QAAS,SAAA1B,GAAC,OACxD4O,GAAkB,QADtB,SAEA,4BAAQnN,KAAK,SAASC,QAAS,SAAC1B,GACvB0L,IAIDjD,SAAS+C,cAAc,uBAAuBxC,aAC9C,UAAU,yCACViC,EAAY,gBACZxD,GAAQI,KAAK,0BANb4H,IAA4B,IASpC5O,UAAU,0BAXV,WAYC2O,GACA,yBAAK3O,UAAU,uBAAf,iCAEO,QAIhB,6BACC+P,GAEAlF,GACA,yBAAK7K,UAAU,QACZ,wBAAIA,UAAU,QAAd,SAEI,4BAAQA,UAAU,oBACda,QAAS,SAAC1B,GAAD,OAAK6O,GAAqBrG,SAAQ,SAAA0H,GAAE,OACzCC,IAAE,IAAID,GAAIwB,SAAS,aACxB,uBAAG7Q,UAAU,sBAHhB,WAIA,4BAAQA,UAAU,gBACda,QAAS,SAAC1B,GAAD,OAAK6O,GAAqBrG,SAAQ,SAAA0H,GAAE,OACzCC,IAAE,IAAID,GAAIwB,SAAS,aAF3B,IAGI,uBAAG7Q,UAAU,uBAHjB,cAje5B,WACI,IAAM2C,EAAKkI,GAAW,KAAS,GACzBtD,EAAMsD,GAAW,MAAU,GAC3BxG,EAAIkD,EAAM,GAAGjG,KACbA,EAAKiG,EAAM,GAAGjG,KACdgK,EAA8B,eAA1BT,GAAW,SAA4B,KAAKtD,EAAM,GAAGjG,KACzDiK,EAAgC,eAA1BV,GAAW,SAA4BtD,EAAM,GAAGjG,KAAKiG,EAAM,GAAGjG,KAGpEmK,GADQZ,GAAW,KAAS,GACnBA,GAAW,MAAU,IAC9Ba,EAAOD,EAAS,GAAGnK,KACnBqK,EAAQF,EAAS,GAAGnK,KACpBsK,EAAOH,EAAS,GAAGnK,KACnBuK,EAASJ,EAAS,GAAGnK,KAErBwP,EA3dV,WACI,IAAMhG,EAAa,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAChE,OAAQ,SAAU,YAAa,UAAW,WAAY,YAEpDzF,EAAO,GAKP0F,EAAgB,IAAIpG,KAAK,IAAIA,KAAKkG,GAAYG,WAAWhG,cAAc,IAAIL,KAAKkG,GAAYG,WAAWlG,WAAW,IAAIH,KAAKkG,GAAYG,WAAWjG,UAAU,GAC5JkG,EAAc,IAAItG,KAAK,IAAIA,KAAKkG,GAAYK,SAASlG,cAAc,IAAIL,KAAKkG,GAAYK,SAASpG,WAAW,IAAIH,KAAKkG,GAAYK,SAASnG,UAAU,GAE1J,GAAIkG,GAAe,IAAItG,KAAK,IAAIA,KAAKoG,GAAiB/F,cAAe,IAAIL,KAAKoG,GAAiBjG,WAAY,EAAE,GAC3E,aAA1B+F,GAAW,UACfxF,EAAO2B,KAAK,wBAAI7F,IAAK2J,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cAAc,OAC1F5E,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,KAChDpF,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cAAc,SAG1EK,EAAO2B,KAAK,wBAAI7F,IAA+B,aAA1B0J,GAAW,SAChCC,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cAAc,SACpE8F,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cACxD5E,MAAiC,aAA1ByK,GAAW,SAClB,CAACkG,KAAK,YAAYd,YAAY,GAAGC,aAAa,IAC7C,CAACa,KAAK,YAAYd,YAAY,GAAGC,aAAa,KAChB,aAA1BrF,GAAW,SACZC,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cAAc,SACpE8F,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,oBAG3D,CACD,IAAIN,EAAK,IAAIC,KAAKoG,GAkBlB,IAjB8B,aAA1BF,GAAW,UACfxF,EAAO2B,KAAK,wBAAI7F,IAAK2J,EAAWC,EAAgBjG,YAAY,IAAIiG,EAAgB/F,cAAc,OAC9F5E,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,KAChDpF,EAAWC,EAAgBjG,YAAY,IAAIiG,EAAgB/F,cAAc,SAG9EK,EAAO2B,KAAK,wBAAI7F,IAA+B,aAA1B0J,GAAW,SAChCC,EAAWC,EAAgBjG,YAAY,IAAIiG,EAAgB/F,cAAc,SACxE8F,EAAWC,EAAgBjG,YAAY,IAAIiG,EAAgB/F,cAC5D5E,MAAiC,aAA1ByK,GAAW,SAClB,CAACkG,KAAK,YAAYd,YAAY,GAAGC,aAAa,IAC7C,CAACa,KAAK,YAAYd,YAAY,GAAGC,aAAa,KAChB,aAA1BrF,GAAW,SACZC,EAAWC,EAAgBjG,YAAY,IAAIiG,EAAgB/F,cAAc,SACxE8F,EAAWC,EAAgBjG,YAAY,IAAIiG,EAAgB/F,gBAG1DiG,EAAc,IAAItG,KAAK,IAAIA,KAAKD,GAAMM,cAAe,IAAIL,KAAKD,GAAMI,WAAY,EAAE,EAAE,IACtFJ,EAAK0G,SAAS1G,EAAKI,WAAW,EAAE,GACF,aAA1B+F,GAAW,UACfxF,EAAO2B,KAAK,wBAAI7F,IAAK2J,EAAWpG,EAAKI,YAAY,IAAIJ,EAAKM,cAAc,OACxE5E,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,KAChDpF,EAAWpG,EAAKI,YAAY,IAAIJ,EAAKM,cAAc,SAGxDK,EAAO2B,KAAK,wBAAI7F,IAA+B,aAA1B0J,GAAW,SAChCC,EAAWpG,EAAKI,YAAY,IAAIJ,EAAKM,cAAc,SAClD8F,EAAWpG,EAAKI,YAAY,IAAIJ,EAAKM,cACtC5E,MAAiC,aAA1ByK,GAAW,SAClB,CAACkG,KAAK,YAAYd,YAAY,GAAGC,aAAa,IAC7C,CAACa,KAAK,YAAYd,YAAY,GAAGC,aAAa,KAChB,aAA1BrF,GAAW,SACZC,EAAWpG,EAAKI,YAAY,IAAIJ,EAAKM,cAAc,SAClD8F,EAAWpG,EAAKI,YAAY,IAAIJ,EAAKM,gBAGhB,aAA1B6F,GAAW,UACfxF,EAAO2B,KAAK,wBAAI7F,IAAK2J,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cAAc,OAC1F5E,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,KAChDpF,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cAAe,SAG3EK,EAAO2B,KAAK,wBAAI7F,IAA+B,aAA1B0J,GAAW,SAChCC,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cAAc,SACpE8F,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cACxD5E,MAAiC,aAA1ByK,GAAW,SAClB,CAACkG,KAAK,YAAYd,YAAY,GAAGC,aAAa,IAC7C,CAACa,KAAK,YAAYd,YAAY,GAAGC,aAAa,KAChB,aAA1BrF,GAAW,SACZC,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cAAc,SACpE8F,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,gBAIhE,OAAOK,EAqYMgG,GACP2F,EAA0C,eAA1BnG,GAAW,SAA6B,IAA0B,IAAdiG,EAAOpP,OAAY,IAAI,IAA0B,IAAdoP,EAAOpP,OAAY,IAAI,IAmIpI,OACI,yBAAK1B,UAAU,0BAA0BI,MAAO,CAAC6Q,UAAU,oBACvD,yBAAK7Q,MAAO,CAACC,MAAM2Q,EAAgBC,UAAU,oBACzC,yBAAKjR,UAAU,oDACfI,MAAO,CAAC8Q,WAAW,EAAEC,YAAY,IAC7B,wBAAI/Q,MAAO,CAAC2Q,KAAK,WAAWd,YAAY,GAAGC,aAAa,MACxD,wBAAI9P,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,GAAGlI,OAAO,WAC/DC,aAAW,MAAMpH,QAAS,SAAC1B,GAC3BA,EAAE+I,OAAOC,aAAa,aACgB,QAAtChJ,EAAE+I,OAAOE,aAAa,cAAsB,OAAO,OACnDyC,GAAW,KAAS,GAAGlH,EAASkH,GAAW,KAAS,GAAGxG,EAAIlF,EAAE+I,OAAOE,aAAa,eACjF2F,GAAkB,eAAIlD,KACwB,QAAtC1L,EAAE+I,OAAOE,aAAa,eACtBR,SAASC,eAAe,OAAOQ,UAAUC,OAAO,eAChDV,SAASC,eAAe,OAAOQ,UAAUE,IAAI,mBAG7CX,SAASC,eAAe,OAAOQ,UAAUC,OAAO,iBAChDV,SAASC,eAAe,OAAOQ,UAAUE,IAAI,kBAK1B,eAA1BsC,GAAW,SAA4B,aAAa,YACrD,uBAAGnK,GAAG,MAAMV,UAAU,2BAE1B,wBAAII,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,GAAGlI,OAAO,WACnEC,aAAW,MAAMpH,QAAS,SAAC1B,GACvBA,EAAE+I,OAAOC,aAAa,aACgB,QAAtChJ,EAAE+I,OAAOE,aAAa,cAAsB,OAAO,OACnDyC,GAAW,KAAS,GAAGlH,EAASkH,GAAW,KAAS,GAAGvJ,EAAKnC,EAAE+I,OAAOE,aAAa,eAClF2F,GAAkB,eAAIlD,KACwB,QAAtC1L,EAAE+I,OAAOE,aAAa,eACtBR,SAASC,eAAe,QAAQQ,UAAUC,OAAO,eACjDV,SAASC,eAAe,QAAQQ,UAAUE,IAAI,mBAG9CX,SAASC,eAAe,QAAQQ,UAAUC,OAAO,iBACjDV,SAASC,eAAe,QAAQQ,UAAUE,IAAI,kBAZ1D,OAiBI,uBAAG7H,GAAG,OAAOV,UAAU,2BAE1B8Q,EAC0B,eAA1BjG,GAAW,SAA4B,KACxC,wBAAIzK,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,KAAzD,OACA,wBAAI9P,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,KAAzD,UAEJ,yBAAK9P,MAAO,CAACgR,UAAU,OAAOC,UAAU,SAASrI,UAAU,SAnLvE,WACI,IAAM8C,EAAkB,GAClBzG,EAAO,GA4Hb,OA1HA1C,EAAKgF,SAAQ,SAAAzG,GACT,IAAM6K,EAAqB,IACgB,IAAxCD,EAAkBnD,QAAQzH,EAAKmD,MAC9ByH,EAAkB9E,KAAK9F,EAAKmD,IAC5BgB,EAAO2B,KACH,yBAAK7F,IAAKD,EAAKmD,IACX,yBAAKrE,UAAU,SAASI,MAAOyK,GAAW,SAAa,CAAC7C,OAAO,WAAW,KAAMxH,cAAY,WAAWC,cAAa,IAAIS,EAAKmD,GAAKjD,QAAQ,aAAa,KACnJ,uBAAGpB,UAAW6K,GAAW,SAAa,yBAAyB,GAC/DzK,MAAOyK,GAAW,SAAc,CAACkG,KAAK,WAAWd,YAAY,GAAGC,aAAa,IAAI,CAACa,KAAK,YACvFrQ,GAAI,YAAYQ,EAAKmD,GAAKjD,QAAQ,aAAa,MAC/C,uBAAGpB,UAAU,OAAOI,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,KAAMhP,EAAKmD,IACpF,uBAAGrE,UAAU,OAAOI,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,KAAMhP,EAAKI,IAnZhH,SAA8BJ,EAAKyB,EAAK4E,GACpC,IAAMuD,EAAa,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAChE,OAAQ,SAAU,YAAa,UAAW,WAAY,YAEpDzF,EAAO,GAEPhB,EAAIkD,EAAM,GAAGjG,KACb0K,EAASzE,EAAM,GAAGjG,KAClBgK,EAA8B,eAA1BT,GAAW,SAA4B,KAAKtD,EAAM,GAAGjG,KACzDiK,EAAgC,eAA1BV,GAAW,SAA4BtD,EAAM,GAAGjG,KAAKiG,EAAM,GAAGjG,KAKpEyJ,EAAgB,IAAIpG,KAAK,IAAIA,KAAKkG,GAAYG,WAAWhG,cAAc,IAAIL,KAAKkG,GAAYG,WAAWlG,WAAW,IAAIH,KAAKkG,GAAYG,WAAWjG,UAAU,GAC5JkG,EAAc,IAAItG,KAAK,IAAIA,KAAKkG,GAAYK,SAASlG,cAAc,IAAIL,KAAKkG,GAAYK,SAASpG,WAAW,IAAIH,KAAKkG,GAAYK,SAASnG,UAAU,GA+I1J,OA9IIkG,GAAe,IAAItG,KAAK,IAAIA,KAAKoG,GAAiB/F,cAAe,IAAIL,KAAKoG,GAAiBjG,WAAY,EAAE,IAC3E,aAA1B+F,GAAW,UACfxF,EAAO2B,KACH,uBAAG7F,IAAK2J,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cAAc,OAC7EhF,UAAU,OACVI,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,KAChD9L,EAAmBzB,EAAKsJ,QAAO,SAACjI,EAAEC,GAC/B,OAAIA,EAAEI,KAAOnD,EAAKmD,GACPL,EAAEC,EAAEqH,GACHtH,IACd,MAIVqB,EAAO2B,KACH,uBAAG7F,IAA+B,aAA1B0J,GAAW,SACnBC,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cAAc,SACpE8F,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cACxDhF,UAAU,OACVI,MAAiC,aAA1ByK,GAAW,SAClB,CAACkG,KAAK,YAAYd,YAAY,GAAGC,aAAa,IAC7C,CAACa,KAAK,YAAYd,YAAY,GAAGC,aAAa,KAC1C9L,EAAmBzB,EAAKsJ,QAAO,SAACjI,EAAEC,GAC/B,OAAIA,EAAEI,KAAOnD,EAAKmD,GACPL,EAAEC,EAAEsH,GACHvH,IACd,OAKR,WACF,IAAIU,EAAK,IAAIC,KAAKoG,GAoClB,IAlC8B,aAA1BF,GAAW,UACfxF,EAAO2B,KACH,uBAAG7F,IAAK2J,EAAWC,EAAgBjG,YAAY,IAAIiG,EAAgB/F,cAAc,OACjFhF,UAAU,OAAOI,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,KACjE9L,EAAmBzB,EAAKsJ,QAAO,SAACjI,EAAEC,GAC/B,IAAMiI,EAAgB,IAAIvH,KAAK,IAAIA,KAAKV,EAAE+H,IAAWhH,cAAc,IAAIL,KAAKV,EAAE+H,IAAWlH,WAAW,IAAIH,KAAKV,EAAE+H,IAAWjH,UAAU,GAExI,OAAId,EAAEI,KAAOnD,EAAKmD,IACX6H,GAAiB,IAAIvH,KAAK,IAAIA,KAAKoG,GAAiB/F,cAAe,IAAIL,KAAKoG,GAAiBjG,WAAY,EAAE,GACnGd,EAAEC,EAAEqH,GACPtH,IACV,MAIVqB,EAAO2B,KACH,uBAAG7F,IAA+B,aAA1B0J,GAAW,SACnBC,EAAWC,EAAgBjG,YAAY,IAAIiG,EAAgB/F,cAAc,SACxE8F,EAAWC,EAAgBjG,YAAY,IAAIiG,EAAgB/F,cAC5DhF,UAAU,OACVI,MAAiC,aAA1ByK,GAAW,SACd,CAACkG,KAAK,YAAYd,YAAY,GAAGC,aAAa,IAC7C,CAACa,KAAK,YAAYd,YAAY,GAAGC,aAAa,KAC9C9L,EAAmBzB,EAAKsJ,QAAO,SAACjI,EAAEC,GAC/B,IAAMiI,EAAgB,IAAIvH,KAAK,IAAIA,KAAKV,EAAE+H,IAAWhH,cAAc,IAAIL,KAAKV,EAAE+H,IAAWlH,WAAW,IAAIH,KAAKV,EAAE+H,IAAWjH,UAAU,GAExI,OAAId,EAAEI,KAAOnD,EAAKmD,IACX6H,GAAiB,IAAIvH,KAAK,IAAIA,KAAKoG,GAAiB/F,cAAe,IAAIL,KAAKoG,GAAiBjG,WAAY,EAAE,GACnGd,EAAEC,EAAEsH,GACPvH,IACV,MAIJiH,EAAc,IAAItG,KAAK,IAAIA,KAAKD,GAAMM,cAAe,IAAIL,KAAKD,GAAMI,WAAY,EAAE,EAAE,IACtFJ,EAAK0G,SAAS1G,EAAKI,WAAW,EAAE,GACF,aAA1B+F,GAAW,UACfxF,EAAO2B,KACH,uBAAG7F,IAAK2J,EAAWpG,EAAKI,YAAY,IAAIJ,EAAKM,cAAc,OAC3DhF,UAAU,OAAOI,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,KACjE9L,EAAmBzB,EAAKsJ,QAAO,SAACjI,EAAEC,GACnC,IAAMiI,EAAgB,IAAIvH,KAAK,IAAIA,KAAKV,EAAE+H,IAAWhH,cAAc,IAAIL,KAAKV,EAAE+H,IAAWlH,WAAW,IAAIH,KAAKV,EAAE+H,IAAWjH,UAAU,GACpI,OAAId,EAAEI,KAAOnD,EAAKmD,IACX6H,EAAgB,IAAIvH,KAAK,IAAIA,KAAKD,GAAMM,cAAe,IAAIL,KAAKD,GAAMI,WAAY,IAClFoH,GAAiB,IAAIvH,KAAK,IAAIA,KAAKD,GAAMM,cAAe,IAAIL,KAAKD,GAAMI,WAAY,EAAE,GAC7Ed,EAAEC,EAAEqH,GACPtH,IACV,MAKVqB,EAAO2B,KACH,uBAAG7F,IAA+B,aAA1B0J,GAAW,SACnBC,EAAWpG,EAAKI,YAAY,IAAIJ,EAAKM,cAAc,SAClD8F,EAAWpG,EAAKI,YAAY,IAAIJ,EAAKM,cACtChF,UAAU,OACVI,MAAiC,aAA1ByK,GAAW,SAClB,CAACkG,KAAK,YAAYd,YAAY,GAAGC,aAAa,IAC7C,CAACa,KAAK,YAAYd,YAAY,GAAGC,aAAa,KAC1C9L,EAAmBzB,EAAKsJ,QAAO,SAACjI,EAAEC,GACnC,IAAMiI,EAAgB,IAAIvH,KAAK,IAAIA,KAAKV,EAAE+H,IAAWhH,cAAc,IAAIL,KAAKV,EAAE+H,IAAWlH,WAAW,IAAIH,KAAKV,EAAE+H,IAAWjH,UAAU,GACpI,OAAId,EAAEI,KAAOnD,EAAKmD,IACX6H,EAAgB,IAAIvH,KAAK,IAAIA,KAAKD,GAAMM,cAAe,IAAIL,KAAKD,GAAMI,WAAY,IAClFoH,GAAiB,IAAIvH,KAAK,IAAIA,KAAKD,GAAMM,cAAe,IAAIL,KAAKD,GAAMI,WAAY,EAAE,GAC7Ed,EAAEC,EAAEsH,GACPvH,IACV,MAKgB,aAA1B6G,GAAW,UACfxF,EAAO2B,KACH,uBAAG7F,IAAK2J,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cAAc,OAC7EhF,UAAU,OAAOI,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,KACjE9L,EAAmBzB,EAAKsJ,QAAO,SAACjI,EAAEC,GAC/B,IAAMiI,EAAgB,IAAIvH,KAAK,IAAIA,KAAKV,EAAE+H,IAAWhH,cAAc,IAAIL,KAAKV,EAAE+H,IAAWlH,WAAW,IAAIH,KAAKV,EAAE+H,IAAWjH,UAAU,GACpI,OAAId,EAAEI,KAAOnD,EAAKmD,IACX6H,EAAgB,IAAIvH,KAAK,IAAIA,KAAKsG,GAAejG,cAAe,IAAIL,KAAKsG,GAAenG,WAAY,IACpGoH,GAAiBjB,EACbjH,EAAEC,EAAEqH,GACHtH,IACd,MAKVqB,EAAO2B,KACH,uBAAG7F,IAA+B,aAA1B0J,GAAW,SACnBC,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cAAc,SACpE8F,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cACxDhF,UAAU,OACVI,MAAiC,aAA1ByK,GAAW,SAClB,CAACkG,KAAK,YAAYd,YAAY,GAAGC,aAAa,IAC7C,CAACa,KAAK,YAAYd,YAAY,GAAGC,aAAa,KAC1C9L,EAAmBzB,EAAKsJ,QAAO,SAACjI,EAAEC,GAC/B,IAAMiI,EAAgB,IAAIvH,KAAK,IAAIA,KAAKV,EAAE+H,IAAWhH,cAAc,IAAIL,KAAKV,EAAE+H,IAAWlH,WAAW,IAAIH,KAAKV,EAAE+H,IAAWjH,UAAU,GACpI,OAAId,EAAEI,KAAOnD,EAAKmD,IACX6H,EAAgB,IAAIvH,KAAK,IAAIA,KAAKsG,GAAejG,cAAe,IAAIL,KAAKsG,GAAenG,WAAY,IACpGoH,GAAiBjB,EACbjH,EAAEC,EAAEsH,GACHvH,IACd,MA1GR,GA+GCqB,EAsPkB8G,CAAqBjL,EAAKyB,EAAK4E,GACL,aAA1BsD,GAAW,SACZ,uBAAG7K,UAAU,OAAOI,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,KACpE9L,EAAmBzB,EAAKsJ,QAAO,SAACjI,EAAEC,GAC/B,OAAGA,EAAEI,KAAOnD,EAAKmD,GACNL,EAAEC,EAAEqH,GACHtH,IACd,KACD,KACL,uBAAGhE,UAAU,OAAOI,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,KACpE9L,EAAmBzB,EAAKsJ,QAAO,SAACjI,EAAEC,GAC/B,OAAGA,EAAEI,KAAOnD,EAAKmD,GACNL,EAAEC,EAAEsH,GACHvH,IACd,MAGT6G,GAAW,SACX,yBAAK7K,UAAU,6CAChBU,GAAIQ,EAAKmD,GAAKjD,QAAQ,aAAa,KAC/B,2BAAOpB,UAAU,qBACb,+BACI,4BACI,wBAAIA,UAAU,YAAYI,MAAO,CAAC4H,OAAO,WAAYC,aAAW,MAChEpH,QAAS,SAAC1B,GACV,GAAI0L,GAAY3J,EAAKmD,IAAO,CACxB,IAAM3D,EAAG,SAASQ,EAAKmD,GAAKjD,QAAQ,aAAa,IACjDjC,EAAE+I,OAAOC,aAAa,aACgB,QAAtChJ,EAAE+I,OAAOE,aAAa,cAAsB,OAAO,OACnD,IAAIkJ,EAAW,GACfA,EAAWpQ,EAAKmD,IAAMV,EAASkH,GAAY3J,EAAKmD,IAAMqH,EAAOvM,EAAE+I,OAAOE,aAAa,eACnF2F,GAAkB3G,OAAOC,OAAO,GAAGwD,GAAYyG,IAEL,QAAtCnS,EAAE+I,OAAOE,aAAa,eACtBR,SAASC,eAAenH,GAAI2H,UAAUC,OAAO,eAC7CV,SAASC,eAAenH,GAAI2H,UAAUE,IAAI,mBAG1CX,SAASC,eAAenH,GAAI2H,UAAUC,OAAO,iBAC7CV,SAASC,eAAenH,GAAI2H,UAAUE,IAAI,mBAInB,aAA1BsC,GAAW,SAA0B,YAAY,aAClD,uBAAGnK,GAAI,SAASQ,EAAKmD,GAAKjD,QAAQ,aAAa,IAAKpB,UAAU,2BAElE,wBAAIA,UAAU,YAAYI,MAAO,CAAC4H,OAAO,WAAYC,aAAW,MAChEpH,QAAS,SAAC1B,GACV,GAAI0L,GAAY3J,EAAKmD,IAAO,CACxB,IAAM3D,EAAG,UAAUQ,EAAKmD,GAAKjD,QAAQ,aAAa,IAClDjC,EAAE+I,OAAOC,aAAa,aACgB,QAAtChJ,EAAE+I,OAAOE,aAAa,cAAsB,OAAO,OACnD,IAAIkJ,EAAW,GACfA,EAAWpQ,EAAKmD,IAAMV,EAASkH,GAAY3J,EAAKmD,IAAMsH,EAAQxM,EAAE+I,OAAOE,aAAa,eACpF2F,GAAkB3G,OAAOC,OAAO,GAAGwD,GAAYyG,IAEL,QAAtCnS,EAAE+I,OAAOE,aAAa,eACtBR,SAASC,eAAenH,GAAI2H,UAAUC,OAAO,eAC7CV,SAASC,eAAenH,GAAI2H,UAAUE,IAAI,mBAG1CX,SAASC,eAAenH,GAAI2H,UAAUC,OAAO,iBAC7CV,SAASC,eAAenH,GAAI2H,UAAUE,IAAI,mBAhBlD,OAqBQ,uBAAG7H,GAAI,UAAUQ,EAAKmD,GAAKjD,QAAQ,aAAa,IAAKpB,UAAU,2BAtT/G,WACI,IAAM8K,EAAa,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAChE,OAAQ,SAAU,YAAa,UAAW,WAAY,YAEpDzF,EAAO,GAKP0F,EAAgB,IAAIpG,KAAK,IAAIA,KAAKkG,GAAYG,WAAWhG,cAAc,IAAIL,KAAKkG,GAAYG,WAAWlG,WAAW,IAAIH,KAAKkG,GAAYG,WAAWjG,UAAU,GAC5JkG,EAAc,IAAItG,KAAK,IAAIA,KAAKkG,GAAYK,SAASlG,cAAc,IAAIL,KAAKkG,GAAYK,SAASpG,WAAW,IAAIH,KAAKkG,GAAYK,SAASnG,UAAU,GAE1J,GAAIkG,GAAe,IAAItG,KAAK,IAAIA,KAAKoG,GAAiB/F,cAAe,IAAIL,KAAKoG,GAAiBjG,WAAY,EAAE,GACzGO,EAAO2B,KACP,wBAAI7F,IAAK2J,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cAAc,OAC9EhF,UAAU,aACL8K,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cAAc,SAG1EK,EAAO2B,KACP,wBAAI7F,IAAK2J,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cAAc,SAC9EhF,UAAU,aACL8K,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cAAc,eAGzE,CACD,IAAIN,EAAK,IAAIC,KAAKoG,GAYlB,IAXA1F,EAAO2B,KACP,wBAAI7F,IAAK2J,EAAWC,EAAgBjG,YAAY,IAAIiG,EAAgB/F,cAAc,OAClFhF,UAAU,aACL8K,EAAWC,EAAgBjG,YAAY,IAAIiG,EAAgB/F,cAAc,SAE9EK,EAAO2B,KACH,wBAAI7F,IAAK2J,EAAWC,EAAgBjG,YAAY,IAAIiG,EAAgB/F,cAAc,SAClFhF,UAAU,aACL8K,EAAWC,EAAgBjG,YAAY,IAAIiG,EAAgB/F,cAAc,WAG5EiG,EAAc,IAAItG,KAAK,IAAIA,KAAKD,GAAMM,cAAe,IAAIL,KAAKD,GAAMI,WAAY,EAAE,EAAE,IACtFJ,EAAK0G,SAAS1G,EAAKI,WAAW,EAAE,GAEhCO,EAAO2B,KACP,wBAAI7F,IAAK2J,EAAWpG,EAAKI,YAAY,IAAIJ,EAAKM,cAAc,OAC5DhF,UAAU,aACL8K,EAAWpG,EAAKI,YAAY,IAAIJ,EAAKM,cAAc,SAGxDK,EAAO2B,KACP,wBAAI7F,IAAK2J,EAAWpG,EAAKI,YAAY,IAAIJ,EAAKM,cAAc,SAC5DhF,UAAU,aACL8K,EAAWpG,EAAKI,YAAY,IAAIJ,EAAKM,cAAc,WAI5DK,EAAO2B,KACP,wBAAI7F,IAAK2J,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cAAc,OAC9EhF,UAAU,aACL8K,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cAAc,SAG1EK,EAAO2B,KACP,wBAAI7F,IAAK2J,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cAAc,SAC9EhF,UAAU,aACL8K,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cAAc,WAI9E,OAAOK,EAqP8BkM,GACD,wBAAIvR,UAAU,aAAd,aACA,wBAAIA,UAAU,aAAd,WAGR,+BACK6K,GAAY3J,EAAKmD,IAAOwG,GAAY3J,EAAKmD,IAAMpD,KAAI,SAAAmL,GAChD,IAAmD,IAA/CL,EAAqBpD,QAAQyD,EAAMV,IAEnC,OADAK,EAAqB/E,KAAKoF,EAAMV,IAE5B,wBAAIvK,IAAKiL,EAAMV,IACX,wBAAI1L,UAAU,aAAaoM,EAAMV,IACjC,wBAAI1L,UAAU,aAAaoM,EAAMT,IA7PrF,SAAmCzK,EAAKyB,EAAK4E,GACzC,IAAMuD,EAAa,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAChE,OAAQ,SAAU,YAAa,UAAW,WAAY,YAEpDzF,EAAO,GAEPqG,EAAOnE,EAAM,GAAGjG,KAChB+K,EAAQ9E,EAAM,GAAGjG,KACjBsK,EAAOrE,EAAM,GAAGjG,KAChBuK,EAAStE,EAAM,GAAGjG,KAKlByJ,EAAgB,IAAIpG,KAAK,IAAIA,KAAKkG,GAAYG,WAAWhG,cAAc,IAAIL,KAAKkG,GAAYG,WAAWlG,WAAW,IAAIH,KAAKkG,GAAYG,WAAWjG,UAAU,GAC5JkG,EAAc,IAAItG,KAAK,IAAIA,KAAKkG,GAAYK,SAASlG,cAAc,IAAIL,KAAKkG,GAAYK,SAASpG,WAAW,IAAIH,KAAKkG,GAAYK,SAASnG,UAAU,GAuH1J,OAtHIkG,GAAe,IAAItG,KAAK,IAAIA,KAAKoG,GAAiB/F,cAAe,IAAIL,KAAKoG,GAAiBjG,WAAY,EAAE,IACzGO,EAAO2B,KACH,wBAAI7F,IAAK2J,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cAAc,OAC9EhF,UAAU,aACLoE,EAAmBzB,EAAKsJ,QAAO,SAACjI,EAAEC,GAC/B,OAAIA,EAAEyH,KAAUxK,EAAKwK,GACV1H,EAAEC,EAAE2H,GACH5H,IACd,MAIVqB,EAAO2B,KACH,wBAAI7F,IAAK2J,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cAAe,SAC/EhF,UAAU,aACLoE,EAAmBzB,EAAKsJ,QAAO,SAACjI,EAAEC,GAC/B,OAAIA,EAAEyH,KAAUxK,EAAKwK,GACV1H,EAAEC,EAAE4H,GACH7H,IACd,OAIR,WACF,IAAIU,EAAK,IAAIC,KAAKoG,GA8BlB,IA5BA1F,EAAO2B,KACH,wBAAI7F,IAAK2J,EAAWC,EAAgBjG,YAAY,IAAIiG,EAAgB/F,cAAc,OAClFhF,UAAU,aACLoE,EAAmBzB,EAAKsJ,QAAO,SAACjI,EAAEC,GAC/B,IAAMiI,EAAgB,IAAIvH,KAAK,IAAIA,KAAKV,EAAEoI,IAAUrH,cAAc,IAAIL,KAAKV,EAAEoI,IAAUvH,WAAW,IAAIH,KAAKV,EAAEoI,IAAUtH,UAAU,GAErI,OAAId,EAAEyH,KAAUxK,EAAKwK,IACdQ,GAAiB,IAAIvH,KAAK,IAAIA,KAAKoG,GAAiB/F,cAAe,IAAIL,KAAKoG,GAAiBjG,WAAY,EAAE,GACnGd,EAAEC,EAAE2H,GACP5H,IACV,MAINqB,EAAO2B,KACP,wBAAI7F,IAAK2J,EAAWC,EAAgBjG,YAAY,IAAIiG,EAAgB/F,cAAc,SAClFhF,UAAU,aACLoE,EAAmBzB,EAAKsJ,QAAO,SAACjI,EAAEC,GAC/B,IAAMiI,EAAgB,IAAIvH,KAAK,IAAIA,KAAKV,EAAEoI,IAAUrH,cAAc,IAAIL,KAAKV,EAAEoI,IAAUvH,WAAW,IAAIH,KAAKV,EAAEoI,IAAUtH,UAAU,GAErI,OAAId,EAAEyH,KAAUxK,EAAKwK,IACdQ,GAAiB,IAAIvH,KAAK,IAAIA,KAAKoG,GAAiB/F,cAAe,IAAIL,KAAKoG,GAAiBjG,WAAY,EAAE,GACnGd,EAAEC,EAAE4H,GACP7H,IACV,MAIJiH,EAAc,IAAItG,KAAK,IAAIA,KAAKD,GAAMM,cAAe,IAAIL,KAAKD,GAAMI,WAAY,EAAE,EAAE,IACtFJ,EAAK0G,SAAS1G,EAAKI,WAAW,EAAE,GAEhCO,EAAO2B,KACH,wBAAI7F,IAAK2J,EAAWpG,EAAKI,YAAY,IAAIJ,EAAKM,cAAc,OAC5DhF,UAAU,aACLoE,EAAmBzB,EAAKsJ,QAAO,SAACjI,EAAEC,GACnC,IAAMiI,EAAgB,IAAIvH,KAAK,IAAIA,KAAKV,EAAEoI,IAAUrH,cAAc,IAAIL,KAAKV,EAAEoI,IAAUvH,WAAW,IAAIH,KAAKV,EAAEoI,IAAUtH,UAAU,GACjI,OAAId,EAAEyH,KAAUxK,EAAKwK,IACdQ,EAAgB,IAAIvH,KAAK,IAAIA,KAAKD,GAAMM,cAAe,IAAIL,KAAKD,GAAMI,WAAY,IAClFoH,GAAiB,IAAIvH,KAAK,IAAIA,KAAKD,GAAMM,cAAe,IAAIL,KAAKD,GAAMI,WAAY,EAAE,GAC7Ed,EAAEC,EAAE2H,GACP5H,IACV,MAKVqB,EAAO2B,KACH,wBAAI7F,IAAK2J,EAAWpG,EAAKI,YAAY,IAAIJ,EAAKM,cAAc,SAC5DhF,UAAU,aACLoE,EAAmBzB,EAAKsJ,QAAO,SAACjI,EAAEC,GACnC,IAAMiI,EAAgB,IAAIvH,KAAK,IAAIA,KAAKV,EAAEoI,IAAUrH,cAAc,IAAIL,KAAKV,EAAEoI,IAAUvH,WAAW,IAAIH,KAAKV,EAAEoI,IAAUtH,UAAU,GACjI,OAAId,EAAEyH,KAAUxK,EAAKwK,IACdQ,EAAgB,IAAIvH,KAAK,IAAIA,KAAKD,GAAMM,cAAe,IAAIL,KAAKD,GAAMI,WAAY,IAClFoH,GAAiB,IAAIvH,KAAK,IAAIA,KAAKD,GAAMM,cAAe,IAAIL,KAAKD,GAAMI,WAAY,EAAE,GAC7Ed,EAAEC,EAAE4H,GACP7H,IACV,MAMdqB,EAAO2B,KACH,wBAAI7F,IAAK2J,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cAAc,OAC9EhF,UAAU,aACLoE,EAAmBzB,EAAKsJ,QAAO,SAACjI,EAAEC,GAC/B,IAAMiI,EAAgB,IAAIvH,KAAK,IAAIA,KAAKV,EAAEoI,IAAUrH,cAAc,IAAIL,KAAKV,EAAEoI,IAAUvH,WAAW,IAAIH,KAAKV,EAAEoI,IAAUtH,UAAU,GACjI,OAAId,EAAEyH,KAAUxK,EAAKwK,IACdQ,EAAgB,IAAIvH,KAAK,IAAIA,KAAKsG,GAAejG,cAAe,IAAIL,KAAKsG,GAAenG,WAAY,IACpGoH,GAAiBjB,EACbjH,EAAEC,EAAE2H,GACH5H,IACd,MAKVqB,EAAO2B,KACH,wBAAI7F,IAAK2J,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cAAc,SAC9EhF,UAAU,aACLoE,EAAmBzB,EAAKsJ,QAAO,SAACjI,EAAEC,GAC/B,IAAMiI,EAAgB,IAAIvH,KAAK,IAAIA,KAAKV,EAAEoI,IAAUrH,cAAc,IAAIL,KAAKV,EAAEoI,IAAUvH,WAAW,IAAIH,KAAKV,EAAEoI,IAAUtH,UAAU,GACjI,OAAId,EAAEyH,KAAUxK,EAAKwK,IACdQ,EAAgB,IAAIvH,KAAK,IAAIA,KAAKsG,GAAejG,cAAe,IAAIL,KAAKsG,GAAenG,WAAY,IACpGoH,GAAiBjB,EACbjH,EAAEC,EAAE4H,GACH7H,IACd,MA1FR,GA+FCqB,EAwH0CmM,CAA0BpF,EAAMvB,GAAY3J,EAAKmD,IAAMoH,GACxD,wBAAIzL,UAAU,aACT6K,GAAY3J,EAAKmD,IAAM4H,QAAO,SAACjI,EAAEC,GAC9B,OAAIA,EAAEyH,KAAUU,EAAMV,GACX1H,EAAEC,EAAE2H,GACH5H,IACd,IAEN,wBAAIhE,UAAU,aACToE,EAAmByG,GAAY3J,EAAKmD,IAAM4H,QAAO,SAACjI,EAAEC,GACjD,OAAIA,EAAEyH,KAAUU,EAAMV,GACX1H,EAAEC,EAAE4H,GACH7H,IACd,SAQrB,QAGL,WAIjBqB,EAsDMoM,MAgSIlF,IAEG,KAER,wBAAIvM,UAAU,YAI1B,kBAAC,IAAD,CAAUC,GAAIuM,EAAYlK,QAItCkK,EAAYnK,YAAY,eACxBmK,EAAYlK,KAAK,eAEFkK,QCr1BAkF,MA5Sf,SAAcjT,GAAO,MAUDC,mBAASD,EAAMuE,IAAI9B,MAAQzC,EAAMuE,IAAItC,GAAG,gBAAgB,UAAjEiR,EAVU,sBAYiBjT,mBAAiB,kBAARiT,GAZ1B,mBAYVf,EAZU,KAYDgB,EAZC,OAqB2BrP,EAAiB,kBAARoP,EAAwB,CACzE3O,IAAI,eACJE,KAAK,CACDoC,OAAO,OACPC,QAAQ,CAAC,eAAe,oBACxBC,KAAKC,KAAKC,UAAU,CAACxE,KAAKzC,EAAMuE,IAAI9B,KAAKR,GAAGjC,EAAMuE,IAAItC,KACtDiF,YAAY,YAElB,MA7Be,sBAqBJC,EArBI,EAqBTjD,KAAsBkD,EArBb,EAqBOhD,MArBP,EA8B2BN,EAAS,CACjDS,IAAI,cACJE,KAAK,CACDoC,OAAO,OACPC,QAAQ,CAAC,eAAe,oBACxBC,KAAKC,KAAKC,UAAU,CAACxE,KAAKzC,EAAMyC,OAChCyE,YAAY,aApCH,sBA8BJkM,EA9BI,EA8BTlP,KAAsBmP,EA9Bb,EA8BOjP,MA9BP,EAuC6CN,EAAS,MAvCtD,0BAuCJwP,EAvCI,EAuCTpP,KAAsBqP,EAvCb,EAuCOnP,MAAmBoP,EAvC1B,OAwC6C1P,EAAS,MAxCtD,0BAwCJwD,EAxCI,EAwCTpD,KAAsBqD,EAxCb,EAwCOnD,MAAmBoD,EAxC1B,OAyC6C1D,EAAS,MAzCtD,0BAyCJ2P,EAzCI,EAyCTvP,KAAsBwP,EAzCb,EAyCOtP,MAAmBuP,EAzC1B,OA2CW1T,mBAAS,CACjC2T,SAAS,GACTC,qBAAqB,GACrBC,gBAAgB,GAChBC,YAAY,IA/CC,mBA2CVC,EA3CU,KA2CHC,EA3CG,KAkDV9S,EAAcC,qBAAWL,GAAzBI,WACDgH,EAAQC,cAId9H,qBAAU,WAMN,GAAI6G,IAAgC,IAAlBA,EAAWsB,KAGrBC,MAAM,iEACNvH,GAAW,QAGd,GAAIgG,GAAcA,EAAW2B,OAAS3B,EAAWjD,KAAK,GAAI,CAIvD,IAAIgQ,EAA2B,GAC/B/M,EAAW2B,MAAMI,SAAQ,SAACJ,EAAMiB,GAC5BmK,EAA2B,GAAD,mBACtBA,EAA2B/J,MAAM,EAAEJ,IADb,CACiB5C,EAAWjD,KAAK,GAAG4E,EAAMjG,MAAMsE,EAAWjD,KAAK,GAAG4E,EAAMjG,MAAM,IAD/E,YAEvBqR,EAA2B/J,MAAMJ,EAAE,EAAEmK,EAA2BjR,aAIvEgR,GAAa,SAAAE,GAAK,sBACXA,EADW,CAEdL,gBAAgB3M,EAAWjD,KAAK,GAAGlE,EAAMyC,KAAK2R,cAAc,QAAQC,UAAU,EAAElN,EAAWjD,KAAK,GAAGlE,EAAMyC,KAAK2R,cAAc,QAAQlK,QAAQ,WAEhJlK,EAAMsU,iBAAiBJ,GAEpBlU,EAAMuU,wBACLvU,EAAMuU,uBACFvU,EAAMwU,iBACFN,EAA2BlU,EAAMyU,2BACjCP,EAA2BlU,EAAM0U,qBAKnD,CAACvN,EAAWC,IAElB9G,qBAAU,WAEF,GAAI8S,IAAgC,IAAlBA,EAAW3K,KACrBC,MAAM,iEACNvH,GAAW,QAEd,GAAIiS,GAAcA,EAAWlP,MAAQkP,EAAWtK,MAAO,CACxD,IAAI6L,EAAW,GACXC,EAAuB,GAE3BxB,EAAWlP,KAAKgF,SAAQ,SAAA0H,GACpB,IAAIiE,EAAajE,EAAGwC,EAAWtK,MAAM,GAAGjG,MAAMiS,MAAM,SAAS,GACzDC,EAAmBC,SAASpE,EAAGwC,EAAWtK,MAAM,GAAGjG,MAAMwR,UAAUzD,EAAGwC,EAAWtK,MAAM,GAAGjG,MAAMqH,QAAQ,KAAK,KAC1E,IAApCyK,EAAWzK,QAAQ2K,IAClBF,EAAWpM,KAAKsM,GAChBD,EAAuBrM,KAAKwM,IAEvBA,GAAsBA,EAAmBH,EAAuBD,EAAWzK,QAAQ2K,MACxFD,EAAuBD,EAAWzK,QAAQ2K,IAAeE,MAGjEd,GAAa,SAAAE,GAAK,sBACXA,EADW,CAEdP,SAASe,EACTd,qBAAqBe,OAOzBtB,IAAgC,IAAlBA,EAAW7K,MACzBC,MAAM,iEACNvH,GAAW,IAENmS,IAAeA,EAAWlP,QAC/BsE,MAAM,sBACNP,EAAQI,KAAKvI,EAAMiV,cAInBxB,IAAgC,IAAlBA,EAAWhL,MACzBC,MAAM,iEACNvH,GAAW,IAENsS,IAAeA,EAAWrP,QAC/BsE,MAAM,sBACNP,EAAQI,KAAKvI,EAAMiV,cAInB3N,IAAgC,IAAlBA,EAAWmB,MACzBC,MAAM,iEACNvH,GAAW,IAENmG,IAAeA,EAAWlD,QAC/BsE,MAAM,sBACNP,EAAQI,KAAKvI,EAAMiV,gBAI7B,CAAC7B,EAAWC,EAAYC,EAAWC,EAAYE,EAAWC,EAAYpM,EAAWC,IAiHnF,IAAI+J,EAAa,KAyBjB,OAxBKnK,GAAcA,EAAW/C,OAAUgD,GAAgBgM,GAAcA,EAAWhP,OAAUiP,GAAgBC,GAAcA,EAAWlP,OAAUmP,GACtIjM,GAAcA,EAAWlD,OAAUmD,GAAgBkM,GAAcA,EAAWrP,OAAUsP,KAC1FpC,EACA,yBAAK/P,UAAU,uBACV4F,GAAcA,EAAW/C,MAAO,yCAAyC+C,EAAW/C,MAAM2E,MAAM,UAAU5B,EAAW/C,MAAM4E,KAAK,aAAa7B,EAAW/C,MAAM6E,WAAW,KACzK7B,EAAa,kCAAkCA,EAAc,KAE7DkM,GAAcA,EAAWlP,MAAO,sCAAsCkP,EAAWlP,MAAM2E,MAAM,UAAUuK,EAAWlP,MAAM4E,KAAK,aAAasK,EAAWlP,MAAM6E,WAAW,KACtKsK,EAAa,+BAA+BA,EAAc,KAE1DE,GAAcA,EAAWrP,MAAO,sCAAsCqP,EAAWrP,MAAM2E,MAAM,UAAU0K,EAAWrP,MAAM4E,KAAK,aAAayK,EAAWrP,MAAM6E,WAAW,KACtKyK,EAAa,+BAA+BA,EAAc,KAE1DpM,GAAcA,EAAWlD,MAAO,sCAAsCkD,EAAWlD,MAAM2E,MAAM,UAAUzB,EAAWlD,MAAM4E,KAAK,aAAa1B,EAAWlD,MAAM6E,WAAW,KACtK1B,EAAa,+BAA+BA,EAAc,KAC3D,6BACA,6BACC6L,GAAcA,EAAWhP,MAAO,uCAAuCgP,EAAWhP,MAAM2E,MAAM,UAAUqK,EAAWhP,MAAM4E,KAAK,aAAaoK,EAAWhP,MAAM6E,WAAW,KACvKoK,EAAa,gCAAgCA,EAAY,OAM3DrT,EAAMwD,SAAS,CAAC0P,QAAMf,WAASgB,iBAAe+B,SAtIrD,WACI1B,EAAkB,CACdjP,IAAI,eACJE,KAAK,CACDoC,OAAO,OACPC,QAAQ,CAAC,eAAe,oBACxBC,KAAKC,KAAKC,UAAU,CAChBxE,KAAKzC,EAAMyC,KACXuB,MAAMhE,EAAMmV,aAEhBjO,YAAY,cA4HsCkO,SAvH9D,WACIzB,EAAkB,CACdpP,IAAI,eACJE,KAAK,CACDoC,OAAO,OACPC,QAAQ,CAAC,eAAe,oBACxBC,KAAKC,KAAKC,UAAU,CAChBxE,KAAKzC,EAAMyC,KACXuB,MAAMhE,EAAMmV,aAEhBjO,YAAY,cA6G+CmO,SAxGvE,WACOnV,OAAO8K,QAAQ,oBAClBxD,EAAkB,CACdjD,IAAI,eACJE,KAAK,CACDoC,OAAO,OACPC,QAAQ,CAAC,eAAe,oBACxBC,KAAKC,KAAKC,UAAU,CAChBxE,KAAKzC,EAAMyC,KACXR,GAAG,CAACjC,EAAMuE,IAAItC,MAElBiF,YAAY,cA6FwDoK,eAAagE,kBAxF7F,SAA2BC,GACvB,OACI,yBAAKhU,UAAWgU,EAAiBC,OAAQ,gBACrC,2BAAOrT,KAAK,OAAOsT,UAAW,GAAInM,MAAO0K,EAAOF,gBAAiBlC,UAAQ,EAACrQ,UAAU,iCACpEmU,QAAQ,YAAYC,MAAM,6BAA6BxD,SAAUA,EACjFnI,SAAU,SAACtJ,GACP,IAAIkV,EAAa5B,EAAOJ,SAAS1J,QAAQxJ,EAAE+I,OAAOH,QAC9B,IAAhBsM,GACA3B,EAAa,eACND,EADK,CAERF,gBAAgBpT,EAAE+I,OAAOH,MACzByK,YAAYC,EAAOH,qBAAqB+B,GAAc,KAE1DL,EAAiBvL,SAAS,GAAGuL,EAAiBM,YAG9C5B,EAAY,eACLD,EADK,CAERF,gBAAgBpT,EAAE+I,OAAOH,MACzByK,YAAY,KAEhBwB,EAAiBvL,SAAS,GAAGuL,EAAiBM,cAItD,4BAAQtU,UAAU,eAAeI,MAAO,CAAC2Q,KAAK,SAAUH,SAAUA,EAAUnI,SAAU,SAACtJ,GACnF,IAAIkV,EAAa5B,EAAOJ,SAAS1J,QAAQxJ,EAAE+I,OAAOH,QAC9B,IAAhBsM,GACA3B,EAAa,eACND,EADK,CAERF,gBAAgBpT,EAAE+I,OAAOH,MACzByK,YAAYC,EAAOH,qBAAqB+B,GAAc,KAE1DL,EAAiBvL,SAAS,GAAGuL,EAAiBM,YAG9C5B,EAAY,eACLD,EADK,CAERF,gBAAgBpT,EAAE+I,OAAOH,MACzByK,YAAY,KAEhBwB,EAAiBvL,SAAS,GAAGuL,EAAiBM,aAIlD,4BAAQvM,MAAM,IAAd,uBACC0K,EAAOJ,SAASpR,KAAI,SAACoO,EAAG7G,GAAJ,OACjB,4BAAQrH,IAAKkO,EAAItH,MAAOsH,GACnBA,EAAI,qBAAsBoD,EAAOH,qBAAqB9J,QAInE,2BAAO5H,KAAK,SAASF,GAAIsT,EAAiBO,QAASC,IAAI,YACvDzM,MAAOtJ,EAAMmV,WAAWI,EAAiBM,UAAUxB,UAAUrU,EAAMmV,WAAWI,EAAiBM,UAAU3L,QAAQ,KAAK,GACtHF,SAAU,SAACtJ,GAAD,OAAK6U,EAAiBvL,SAASgK,EAAOF,gBAAgB,IAAIpT,EAAE+I,OAAOH,MAAMiM,EAAiBM,WACpG1D,SAAUA,EAAUP,UAAQ,EAACrQ,UAAU,eAAe4J,YAAa,iBAAkB6I,EAAOD,YAC5FiC,IAAKhC,EAAOD,mBCnPbkC,MAxBf,SAAoBjW,GAChB,IAAMmI,EAAQC,cAEd,OACI,6BACI,4BAAQjG,KAAK,SAASZ,UAAU,6BAAhC,UAEe,kBAAdvB,EAAMkT,MACH,4BAAQ/Q,KAAK,SAASC,QAAS,SAAC1B,GAAKV,EAAMmT,gBAAe,IAAS5R,UAAU,qCAA7E,QACF,KACa,kBAAdvB,EAAMkT,MACH,4BAAQ/Q,KAAK,SAASC,QAAS,SAAC1B,GAAKV,EAAMqV,YAAa9T,UAAU,4BAAlE,UACF,KACDvB,EAAM6D,KACH,4BAAQ1B,KAAK,SAASC,QAAS,SAAC1B,GAC5ByI,SAAS+C,cAAc,uBAAuBxC,aAC1C,UAAU,yCACdvB,EAAQI,KAAKvI,EAAM6D,OACpBtC,UAAU,0BAJb,WAKF,OCgEC2U,MA/Ef,SAAqBlW,GACjB,IAAMmI,EAAQC,cAER+N,EAAanW,EAAMmW,aAAcnW,EAAMmW,aAAa3T,KAAI,SAAC4T,EAAMrM,GAAP,OAC1D,uBAAGxI,UAAU,OAAOmB,IAAKqH,GAAIqM,MAC3B,KAEAC,EAAarW,EAAMsW,eAAiBtW,EAAMuW,cAAevW,EAAMsW,cAAc9T,KAAI,SAACsG,EAAMiB,GAAP,OAClF,yBAAKxI,UAAU,MAAMmB,IAAKqH,GACvB,yBAAKxI,UAAU,YACVuH,GAEL,yBAAKvH,UAAU,SAAf,KAGA,yBAAKA,UAAU,YACVvB,EAAMuW,cAAcxM,QAEpB,KAEPyM,EAAYxW,EAAMwW,YAAaxW,EAAMwW,YAAYhU,KAAI,SAAAsG,GAAK,OAC5D,wBAAIvH,UAAU,cAAcmB,IAAKoG,GAAQA,MACvC,KAEA2N,EAAYzW,EAAMyW,YAAazW,EAAMyW,YAAYjU,KAAI,SAACkU,EAAS3M,GAAV,OAEtD,wBAAIrH,IAAKqH,GACL2M,EAASlU,KAAI,SAAC4T,EAAMrM,GAAP,OACV,wBAAIrH,IAAKqH,GAAIqM,MAGhBpW,EAAM2W,kBAAmB,4BAAKhR,EAAmB3F,EAAM2W,kBAAkB5M,KAAU,SAGtF,KAEN,OACI,yBAAKxI,UAAU,iBAAiBI,MAAO,CAACgC,SAAS,UAC7C,4BAAQxB,KAAK,QAAQZ,UAAU,sCAC/Ba,QAAS,WACL+G,SAAS+C,cAAc,uBAAuBxC,aAC1C,UAAU,yCACdvB,EAAQI,KAAKvI,EAAMmM,YAJvB,QAMA,yBAAK5K,UAAU,YAAYI,MAAO,CAACiV,QAAQ,IACvC,wBAAIrV,UAAU,eAAevB,EAAM4D,cAEvC,yBAAKrC,UAAU,MAAMI,MAAO,CAACkV,OAAO,IAChC,yBAAKtV,UAAU,qBAAqBI,MAAO,CAACmV,aAAa,IACpDX,GAEL,yBAAK5U,UAAU,cACV8U,IAGT,wBAAI9U,UAAU,iCACd,2BAAOA,UAAU,wBACb,+BACI,4BACKiV,IAIT,+BACKC,IAIT,wBAAIlV,UAAU,mBACT,UAAUoE,EAAmB3F,EAAM+W,mBAExC,wBAAIxV,UAAU,4BACd,uBAAGA,UAAU,eAAevB,EAAMgX,UCuM/BC,MAnRf,SAA2BjX,GACvB,IACMsQ,EAAStQ,EAAMkO,gBAAgBlO,EAAMkO,gBAAgBpF,MAAM,GAAGjG,KAAK,KACnE0N,EAAUvQ,EAAMkO,gBAAgBlO,EAAMkO,gBAAgBpF,MAAM,GAAGjG,KAAK,KACpEqU,EAAYlX,EAAMkO,gBAAgBlO,EAAMkO,gBAAgBpF,MAAM,GAAGjG,KAAK,KAE5E,SAASsU,EAAkBzW,EAAE0E,EAAMgS,EAAWC,GAC1CrX,EAAMsU,kBAAiB,SAAAa,GAAU,OAAEA,EAAWhL,MAAM,EAAE/E,GACrDkS,OAAO,CAACnC,EAAW/P,GAAO+E,MAAM,EAAEiN,GAClCE,OAAO,CAACnC,EAAW/P,GAAOgS,GAAYjN,MAAM,EAAEkN,GAC9CC,OAAO5W,GACP4W,OAAOnC,EAAW/P,GAAOgS,GAAYjN,MAAMkN,EAAW,MACtDC,OAAOnC,EAAW/P,GAAO+E,MAAMiN,EAAW,MAC1CE,OAAOnC,EAAWhL,MAAM/E,EAAM,OAGnC,SAASmS,EAAoBxN,EAAEyN,EAASC,GACpC,IAAIxN,EAAejK,EAAMmV,WAAWnV,EAAM0X,sBAAsBC,WAAU,SAAAlV,GAAI,OAAEA,EAAK,GAAG,IAAIsH,KAExFE,GAAgB,EACZjK,EAAMsU,kBAAiB,SAAAa,GAAU,4BAC7BA,EAAWhL,MAAM,EAAEnK,EAAM0X,uBADI,uBAE7BvC,EAAWnV,EAAM0X,sBAAsBvN,MAAM,EAAEF,IAFlB,CAG7B,CAACF,EAAE,EAAEyN,EAASC,IAHe,YAI9BtC,EAAWnV,EAAM0X,sBAAsBvN,MAAMF,EAAe,MAJ9B,YAK9BkL,EAAWhL,MAAMnK,EAAM0X,qBAAqB,QAG/C1X,EAAMsU,kBAAiB,SAAAa,GAAU,4BAC7BA,EAAWhL,MAAM,EAAEnK,EAAM0X,uBADI,uBAE7BvC,EAAWnV,EAAM0X,uBAFY,CAG7B,CAAC3N,EAAE,EAAEyN,EAASC,MAHe,YAK9BtC,EAAWhL,MAAMnK,EAAM0X,qBAAqB,QAI3D,SAASE,EAAuB7N,GAC5B,IAAIE,EAAejK,EAAMmV,WAAWnV,EAAM0X,sBAAsBC,WAAU,SAAAlV,GAAI,OAAEA,EAAK,GAAG,IAAIsH,KAExFE,GAAgB,GAChBjK,EAAMsU,kBAAiB,SAAAa,GAAU,4BACzBA,EAAWhL,MAAM,EAAEnK,EAAM0X,uBADA,uBAEzBvC,EAAWnV,EAAM0X,sBAAsBvN,MAAM,EAAEF,IAFtB,YAG1BkL,EAAWnV,EAAM0X,sBAAsBvN,MAAMF,EAAe,MAHlC,YAI1BkL,EAAWhL,MAAMnK,EAAM0X,qBAAqB,QAY3D,SAASG,EAAkBpV,GACvB,MAA2B,QAAvBzC,EAAM8X,eACC9X,EAAMkO,gBAAgBhK,KAAK6T,MAAK,SAAApK,GAAK,OAAEA,EAAM2C,KAAY7N,EAAK,MAAIyU,GACrElX,EAAMmV,WAAWnV,EAAM0X,sBAAsBlK,QAAO,SAACjI,EAAEC,GACnD,OAAGA,EAAE,KAAK/C,EAAK,GACJ8C,EAAEa,OAAOZ,EAAE,IACVD,IACd,GACsB,OAAvBvF,EAAM8X,eACJ9X,EAAMkO,gBAAgBhK,KAAK6T,MAAK,SAAApK,GAAK,OAAEA,EAAM2C,KAAY7N,EAAK,MAAIyU,GACrElX,EAAMmV,WAAWnV,EAAM0X,sBAAsBlK,QAAO,SAACjI,EAAEC,GACnD,OAAGA,EAAE,KAAK/C,EAAK,GACJ8C,EAAEa,OAAOZ,EAAE,IACVD,IACd,QANL,EAiDT,OADJyS,QAAQC,IAAIjY,EAAMmV,YAEV,8BAAU5T,UAAU,kEAChB,4BAAQA,UAAU,0DACd,4BAAQY,KAAK,SAASZ,UAAU,kBAAkB4Q,SAAUnS,EAAMmS,SAClE/P,QAAS,kBACLpC,EAAMsU,iBACFtU,EAAMmV,WAAWhL,MAAM,EAAEnK,EAAMkY,cAC9BZ,OAAO,CAACtX,EAAMmV,WAAWnV,EAAMkY,cAAc/N,MAAM,GAC/CmN,OACG,CAAC,CAACtX,EAAMmV,WAAWnV,EAAMkY,cAAcjV,OAAO,EAAE,GAAG,GAAG,QAC7DqU,OAAOtX,EAAMmV,WAAWhL,MAAMnK,EAAMkY,aAAa,OAP1D,KAWA,wBAAI3W,UAAU,+BAA+BvB,EAAMmY,iBAEnD,4BAAQhW,KAAK,SAASZ,UAAU,oBAAoB4Q,SAAUnS,EAAMmS,SACpE/P,QAAS,WACLwV,EAAuB5X,EAAMmV,WAAWnV,EAAMkY,cAAcjV,OAAO,GAEnEjD,EAAMsU,kBAAiB,SAAAa,GAAU,OAC7BA,EAAWhL,MAAM,EAAEnK,EAAMkY,cACxBZ,OAAO,CAACnC,EAAWnV,EAAMkY,cAAc/N,MAAM,EAAEgL,EAAWnV,EAAMkY,cAAcjV,OAAO,KACrFqU,OAAOnC,EAAWhL,MAAMnK,EAAMkY,aAAa,SAPpD,MAWJ,yBAAK3W,UAAU,iBAEX,yBAAKA,UAAU,kBAAkBI,MAAO,CAAC8Q,WAAW,EAAEC,YAAY,IAC9D,wBAAInR,UAAU,kBAAkBI,MAAO,CAAC2Q,KAAK,WAAWd,YAAY,GAAGC,aAAa,KAApF,YACA,wBAAIlQ,UAAU,kBAAkBI,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,KAArF,aACA,wBAAIlQ,UAAU,MAAMI,MAAO,CAAC2Q,KAAK,WAAWd,YAAY,GAAGC,aAAa,KAAxE,iBACA,wBAAIlQ,UAAU,kBAAkBI,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,KAArF,eACA,wBAAIlQ,UAAU,kBAAkBI,MAAO,CAAC2Q,KAAK,WAAWd,YAAY,GAAGC,aAAa,KAApF,QAGHzR,EAAMmV,WAAWnV,EAAMkY,cAAc1V,KAAI,SAAC4V,EAAQrO,GAAT,OAC1C,yBAAKxI,UAAU,kBAAkBI,MAAO,CAAC8Q,WAAW,EAAEC,YAAY,GAAIhQ,IAAKqH,GAEvE,2BAAOmB,QAAQ,SAAS3J,UAAU,YAClC,2BAAOY,KAAK,SAASF,GAAG,SAASV,UAAU,6BAC3C+H,MAAOtJ,EAAMmV,WAAWnV,EAAMkY,cAAcnO,GAAG,GAC/CC,SAAU,SAACtJ,GAAD,OAAKA,GAAGiB,MAAO,CAAC2Q,KAAK,WAAWd,YAAY,GAAGC,aAAa,GAAIU,SAAUnS,EAAMmS,WAE1F,yBAAK5Q,UAAU,kBAAkBI,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,EAAEC,aAAa,IACjF,2BAAOvG,QAAQ,WAAW3J,UAAU,YACpC,2BAAOY,KAAK,OAAOF,GAAI,WAAWV,UAAU,yBAAyB4Q,SAAUnS,EAAMmS,SACrFxQ,MAAO,CAAC6P,YAAY,IACpBlI,MAAOtJ,EAAMmV,WAAWnV,EAAMkY,cAAcnO,GAAG,GAAG/J,EAAMmV,WAAWnV,EAAMkY,cAAcnO,GAAG,GAAG,GAC7FC,SAAU,SAACtJ,GACPyW,EAAkBzW,EAAE+I,OAAOH,MAAMtJ,EAAMkY,aAAanO,EAAE,GACnD/J,EAAMkO,gBAAgBhK,KAAKmU,MAAK,SAAA5V,GAE/B,OAAOA,EADQzC,EAAMkO,gBAAgBpF,MAAM,GAAGjG,QACtBnC,EAAE+I,OAAOH,SAEjCiO,EAAoBxN,EAAErJ,EAAE+I,OAAOH,MAAMtJ,EAAMmV,WAAWnV,EAAMkY,cAAcnO,GAAG,IAE7E6N,EAAuB7N,MAE/B,4BAAQxI,UAAU,yBAAyBI,MAAO,CAAC2Q,KAAK,SAAUH,SAAUnS,EAAMmS,SAClFnI,SAAU,SAACtJ,GACP,IAAI4X,EAAiB,GACjBd,EAAS9W,EAAE+I,OAAOH,MAEtBtJ,EAAMkO,gBAAgBhK,KAAKgF,SAAQ,SAAAhF,GAC5BA,EAAKlE,EAAMkO,gBAAgBpF,MAAM,GAAGjG,QAAQnC,EAAE+I,OAAOH,QACpDgP,EAAiBpU,EAAKlE,EAAMkO,gBAAgBpF,MAAM,GAAGjG,MACjDqB,EAAKlE,EAAMkO,gBAAgBpF,MAAM,GAAGjG,MAAM,OAItD7C,EAAMsU,kBAAiB,SAAAa,GAAU,OAAEA,EAAWhL,MAAM,EAAEnK,EAAMkY,cAC3DZ,OAAO,CAACnC,EAAWnV,EAAMkY,cAAc/N,MAAM,EAAEJ,GAC/CuN,OAAO,CAACnC,EAAWnV,EAAMkY,cAAcnO,GAAGI,MAAM,EAAE,GAClDmN,OAAOE,GAAUF,OAAOgB,GACxBhB,OAAOnC,EAAWnV,EAAMkY,cAAcnO,GAAGI,MAAM,MAC/CmN,OAAOnC,EAAWnV,EAAMkY,cAAc/N,MAAMJ,EAAE,MAC9CuN,OAAOnC,EAAWhL,MAAMnK,EAAMkY,aAAa,OAEvB,KAAjBxX,EAAE+I,OAAOH,MACTiO,EAAoBxN,EAAErJ,EAAE+I,OAAOH,MAAMtJ,EAAMmV,WAAWnV,EAAMkY,cAAcnO,GAAG,IAE7E6N,EAAuB7N,KAG3B,4BAAQT,MAAM,IAAd,uBACCtJ,EAAM6O,YAIf,yBAAKtN,UAAU,cAAcI,MAAO,CAAC2Q,KAAK,WAAWd,YAAY,GAAGC,aAAa,GAAG8G,WAAW,EAC3FC,OAAO,oBACP5V,gBAAgB5C,EAAMmS,SAAU,UAC/BnS,EAAMkO,iBAAmBlO,EAAMkO,gBAAgBhK,KAAKuU,OAAM,SAAAhW,GAEvD,OAAOA,EADQzC,EAAMkO,gBAAgBpF,MAAM,GAAGjG,QACtB7C,EAAMmV,WAAWnV,EAAMkY,cAAcnO,GAAG,MAChE,UAAW,gBAEf,2BAAOmB,QAAQ,eAAe3J,UAAU,YACxC,2BAAOU,GAAG,eAAeE,KAAK,WAC9BgQ,WAAUnS,EAAMmS,aACXnS,EAAMkO,kBAAmBlO,EAAMkO,gBAAgBhK,KAAKuU,OAAM,SAAAhW,GAE3D,OAAOA,EADQzC,EAAMkO,gBAAgBpF,MAAM,GAAGjG,QACtB7C,EAAMmV,WAAWnV,EAAMkY,cAAcnO,GAAG,OAClDV,QAASrJ,EAAMmV,WAAWnV,EAAM0X,sBAAsBW,MAAK,SAAA5V,GAAI,OAAEA,EAAK,GAAG,IAAIsH,KAE/FC,SAAU,SAAAtJ,GACNA,EAAE+I,OAAOJ,QACTkO,EAAoBxN,EAAE/J,EAAMmV,WAAWnV,EAAMkY,cAAcnO,GAAG,GAAG/J,EAAMmV,WAAWnV,EAAMkY,cAAcnO,GAAG,IAEzG6N,EAAuB7N,OAI/B,2BAAOmB,QAAQ,cAAc3J,UAAU,YACvC,2BAAOY,KAAK,OAAOF,GAAG,cAAc2P,UAAQ,EAACrQ,UAAU,6BACvD+H,MAAOtJ,EAAMmV,WAAWnV,EAAMkY,cAAcnO,GAAG,GAC/CC,SAAU,SAACtJ,GAAD,OAAKyW,EAAkBzW,EAAE+I,OAAOH,MAAMtJ,EAAMkY,aAAanO,EAAE,IAAIoI,SAAUnS,EAAMmS,SACzFxQ,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,KAErD,2BAAOvG,QAAQ,MAAM3J,UAAU,YAC/B,2BAAOY,KAAK,SAASyP,UAAQ,EAACoE,IAAI,IAAI0C,KAAK,IAAIzW,GAAG,MAAMV,UAAU,6BAClE+H,MAAOtJ,EAAMmV,WAAWnV,EAAMkY,cAAcnO,GAAG,GAAIoI,SAAUnS,EAAMmS,SACnExQ,MAAO,CAAC2Q,KAAK,WAAWd,YAAY,GAAGC,aAAa,GACpDzH,SAAU,SAACtJ,GACPyW,EAAkBzW,EAAE+I,OAAOH,MAAMtJ,EAAMkY,aAAanO,EAAE,GACnD/J,EAAMmV,WAAWnV,EAAM0X,sBAAsBW,MAAK,SAAA5V,GAAI,OAAEA,EAAK,GAAG,IAAIsH,MACnEwN,EAAoBxN,EAAE/J,EAAMmV,WAAWnV,EAAMkY,cAAcnO,GAAG,GAAGrJ,EAAE+I,OAAOH,cAhM1FtJ,EAAMkO,iBACClO,EAAMmV,WAAWnV,EAAM0X,sBAAsBW,MAAK,SAAA5V,GAAI,OACzDoV,EAAkBpV,GAAQ,OAiMIzC,EAAMmS,SACnC,yBAAKxQ,MAAO,CAACgX,SArPX,MAsPC,yBAAKpX,UAAU,2BAA2BI,MAAO,CAAC4H,OAAO,WAAYxH,cAAY,WACjFC,cAAY,qBADZ,0BAIA,yBAAKT,UAAU,wCAAwCU,GAAG,oBACtD,2BAAOV,UAAU,6BACb,+BACI,4BACI,wBAAIA,UAAU,eAAd,aACA,wBAAIA,UAAU,eAAd,eACA,wBAAIA,UAAU,eAAd,WACA,wBAAIA,UAAU,eAAsC,QAAvBvB,EAAM8X,eAAuB,MAAM,MAChE,wBAAIvW,UAAU,eAAd,eAGR,+BA3LxB,WACI,IAAMqX,EAAoB,GAE1B,OAAI5Y,EAAMkO,iBACNlO,EAAMmV,WAAWnV,EAAM0X,sBAAsBxO,SAAQ,SAAAzG,GAC9CoV,EAAkBpV,GAAM,IAA6C,IAAxCmW,EAAoB1O,QAAQzH,EAAK,KAC7DmW,EAAoBrQ,KAAK9F,EAAK,OAG/BmW,EAAoBpW,KAAI,SAAAqW,GAAS,OACnC,wBAAInW,IAAKmW,GACN,4BAAKA,GACL,4BACK7Y,EAAMkO,gBAAgBhK,KAAK6T,MAAK,SAAApK,GAAK,OACtCA,EAAM2C,KAAYuI,KAAWtI,IAEjC,4BACKvQ,EAAMkO,gBAAgBhK,KAAK6T,MAAK,SAAApK,GAAK,OACtCA,EAAM2C,KAAYuI,KAAW3B,IAEjC,4BACKlX,EAAMmV,WAAWnV,EAAM0X,sBAAsBlK,QAAO,SAACjI,EAAEC,GACpD,OAAGA,EAAE,KAAKqT,EACCtT,EAAEa,OAAOZ,EAAE,IACVD,IACd,IAEN,4BACKsS,EAAkB7X,EAAMmV,WAAWnV,EAAM0X,sBAAsBK,MAAK,SAAAtV,GAAI,OACrEA,EAAK,KAAKoW,YAKlB,KA0JaC,OAKT,QC5PxB,SAASC,EAAmB/Y,GACxB,IAAMuE,EAAI,CACN9B,KAAK,IAAIuW,gBAAgBhZ,EAAMiZ,SAAStR,QAAQuR,IAAI,QACpDjX,GAAG,IAAI+W,gBAAgBhZ,EAAMiZ,SAAStR,QAAQuR,IAAI,OAHvB,EAKyBpV,EAAS,CAC7DS,IAAI,eACJE,KAAK,CACDoC,OAAO,OACPC,QAAQ,CAAC,eAAe,oBACxBC,KAAKC,KAAKC,UAAU,CAACxE,KAAK,WAC1ByE,YAAY,aAXW,sBAKlB8G,EALkB,EAKvB9J,KAA4B+J,EALL,EAKD7J,MALC,EAeuBN,EAAS,CAC3DS,IAAI,eACJE,KAAK,CACDoC,OAAO,OACPC,QAAQ,CAAC,eAAe,oBACxBC,KAAKC,KAAKC,UAAU,CAChBxE,KAAK,QACLuB,MAAMO,EAAItC,GAAG,CAACsC,EAAItC,IAAI,OAE1BiF,YAAY,aAxBW,sBAelBgH,EAfkB,EAevBhK,KAA2BiK,EAfJ,EAeF/J,MAcvB8T,EAAa,EA7BY,EAgCOjY,mBAAS,MAhChB,mBAgCxB0O,EAhCwB,KAgCbC,EAhCa,OAiCK3O,mBAAS,MAjCd,mBAiCxB4O,EAjCwB,KAiCdC,EAjCc,OAkCK7O,mBAAS,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,KAlCvC,mBAkCxBkV,EAlCwB,KAkCbb,EAlCa,KAoCxBzQ,EAAQuM,cAARvM,KACA1C,EAAcC,qBAAWL,GAAzBI,WAkDP,SAAS6I,EAASV,EAAMlE,GACpBkP,EAAiB,GAAD,mBAAKa,EAAWhL,MAAM,EAAE/E,IAAxB,CAA+BkE,GAA/B,YAAwC6L,EAAWhL,MAAM/E,EAAM,MAGnF,SAAS2R,IACL,IAAIjK,EAAM,EAMV,OALAqI,EAAW+C,GAAchP,SAAQ,SAACiQ,EAAqBpP,GAEf,KAAjCoL,EAAW+C,GAAcnO,GAAG,KAC9B+C,GAAakI,SAASG,EAAW+C,GAAcnO,GAAG,QAEhD+C,EA3DXxM,qBAAU,WAcN,GAZI0N,IAA4C,IAAxBA,EAAiBvF,MAC7BC,MAAM,iEACNvH,GAAW,IAEd6M,GAAoBA,EAAiB9J,MAAQ8J,EAAiBlF,OACnE8F,EAAiBZ,EAAiB9J,KAAK1B,KAAI,SAAA0B,GAAI,OAC/C,4BAAQxB,IAAKwB,EAAK8J,EAAiBlF,MAAM,GAAGjG,MAAOyG,MAAOpF,EAAK8J,EAAiBlF,MAAM,GAAGjG,OACpFqB,EAAK8J,EAAiBlF,MAAM,GAAGjG,MAAM,OAAOqB,EAAK8J,EAAiBlF,MAAM,GAAGjG,MAAMqB,EAAK8J,EAAiBlF,MAAM,GAAGjG,MAAM,SAK3HqL,IAA0C,IAAvBA,EAAgBzF,KAC3BC,MAAM,iEACNvH,GAAW,QAElB,GAAI+M,GAAmBA,EAAgBhK,MAAQgK,EAAgBpF,MAAO,CACvE,IAAMwH,EAASpC,EAAgBpF,MAAM,GAAGjG,KAClC0N,EAAUrC,EAAgBpF,MAAM,GAAGjG,KACnCuW,EAAWlL,EAAgBpF,MAAM,GAAGjG,KACpCqU,EAAYhJ,EAAgBpF,MAAM,GAAGjG,KAE3CiM,EAAgBZ,EAAgBhK,KAAK1B,KAAI,SAAA0B,GAAI,OACzC,4BAAQxB,IAAKwB,EAAKoM,GAAWhH,MAAOpF,EAAKoM,IACpCpM,EAAKoM,GAAU,OACbpM,EAAKqM,GAAWrM,EAAKqM,GAAW,IAAI,eACpCrM,EAAKkV,GAAYlV,EAAKkV,GAAY,IAAI,iBACtClV,EAAKgT,GAAahT,EAAKgT,GAAa,aAKrD,CAAClJ,EAAiBC,EAAkBC,EAAgBC,IAEtD7N,qBAAU,WACN,SAAS4Q,IACL/H,SAAS+C,cAAc,uBAAuBxC,aAC1C,UAAU,yCAIlB,OAFAxJ,OAAOiR,iBAAiB,WAAWD,GAE5B,WACChR,OAAOkR,oBAAoB,WAAWF,MAE5C,IAiBN,IAAImI,EAAsB,KAkB1B,OAfKrL,GAAoBA,EAAiB5J,OAAU6J,GAAqBC,GAAmBA,EAAgB9J,OAAU+J,KACtHkL,EACI,yBAAK9X,UAAU,uBACVyM,GAAoBA,EAAiB5J,MAAO,gDAAgD4J,EAAiB5J,MAAM2E,MACnH,UAAUiF,EAAiB5J,MAAM4E,KAAK,aAAagF,EAAiB5J,MAAM6E,WAAW,KACrFgF,EAAmB,yCAAyCA,EAAoB,KACjF,6BACA,6BACCC,GAAmBA,EAAgB9J,MAAO,+CAA+C8J,EAAgB9J,MAAM2E,MAC/G,UAAUmF,EAAgB9J,MAAM4E,KAAK,aAAakF,EAAgB9J,MAAM6E,WAAW,KACnFkF,EAAkB,wCAAwCA,EAAmB,OAMlF,kBAAC,EAAD,CAAMgH,WAAYA,EAAYb,iBAAkBA,EAAkB/P,IAAKA,EAAK9B,KAAK,iBAAiBwS,YAAY,mBAE1G,gBAAE/B,EAAF,EAAEA,MAAMf,EAAR,EAAQA,SAASgB,EAAjB,EAAiBA,eAAe+B,EAAhC,EAAgCA,SAASE,EAAzC,EAAyCA,SAASC,EAAlD,EAAkDA,SAAS/D,EAA3D,EAA2DA,aAAagE,EAAxE,EAAwEA,kBAAxE,OACC,kBAAC,IAAD,KACG,kBAAC,IAAD,CAAO/D,OAAK,EAAC1N,KAAI,UAAKA,EAAL,aACb,kBAAC,EAAD,CAAaD,YAAamV,EAAkBnV,YACxCuI,SAAU4M,EAAkBlV,KAC5BsS,aAAc,CAAChB,EAAW,GAAGA,EAAW,IACxCmB,cAAe,CAACyC,EAAkBnV,YAAY,MAAM,OAAO,qBAC3D2S,cAAe,CAACpB,EAAW,GAAGnP,EAAiBmP,EAAW,KAC1DqB,YAAa,CAAC,GAAG,YAAY,cAAc,OAC3CC,YAAatB,EAAW+C,GACxBnB,eAAgBA,EAChBC,OAAO,6HAGf,kBAAC,IAAD,CAAOzF,OAAK,EAAC1N,KAAMA,GACnB,kBAAC,EAAD,KACA,yBAAKtC,UAAU,0BAIX,wBAAIA,UAAU,SAAiB,WAAR2R,EAAkB,SAAS,UAAY,IAAK6F,EAAkBnV,aACrF,2BAAOrC,UAAU,gBAAjB,cACC+P,EACA+H,EAID,0BAAM3H,SAAU,SAAChR,GAAKA,EAAEiR,iBAA6B,WAARuB,EAAkBgC,IAAiBE,MAC5E,yBAAK7T,UAAU,OACX,8BAAUA,UAAU,yEAAyE4Q,SAAUA,GACnG,4BAAQ5Q,UAAU,6CAA6C,sCAAW,0BAAMA,UAAU,gBAAhB,OAC1E,2BAAOA,UAAU,OAAO2J,QAAQ,YAAhC,aACA,yBAAK3J,UAAU,eAIX,2BAAOY,KAAK,OAAOF,GAAG,WAAWqH,MAAO6L,EAAW,GAAInL,SAAU,SAACtJ,GAAD,OAAKA,GAAGkR,UAAQ,EAACrQ,UAAU,iBAC5F,4BAAQA,UAAU,eAAeI,MAAO,CAAC2Q,KAAK,SAAUtI,SAAU,SAACtJ,GAC/D,IAAI4Y,EAAW,GACXC,EAAc,GAElBvL,EAAiB9J,KAAKgF,SAAQ,SAAAhF,GAEvBA,EAAK8J,EAAiBlF,MAAM,GAAGjG,QAAQnC,EAAE+I,OAAOH,QAC/CgQ,EAAWpV,EAAK8J,EAAiBlF,MAAM,GAAGjG,MAAMqB,EAAK8J,EAAiBlF,MAAM,GAAGjG,MAAM,GACrF0W,EAAcrV,EAAK8J,EAAiBlF,MAAM,GAAGjG,MAAMqB,EAAK8J,EAAiBlF,MAAM,GAAGjG,MAAM,OAKpGyR,EAAiB,CAAC5T,EAAE+I,OAAOH,MAAMgQ,EAAWC,GAA5B,mBAA6CpE,EAAWhL,MAAM,EAAEgL,EAAWlS,aAEvF,4BAAQqG,MAAM,IAAd,wBACCqF,IAGT,2BAAOpN,UAAU,OAAO2J,QAAQ,cAAhC,eACA,2BAAOjJ,GAAG,aAAaqH,MAAO6L,EAAW,GAAInL,SAAU,SAACtJ,GAAD,OAAKA,GAAGkR,UAAQ,EAACrQ,UAAU,iBAClF,2BAAOA,UAAU,OAAO2J,QAAQ,iBAAhC,kBACA,8BAAUjJ,GAAG,gBAAgBqH,MAAO6L,EAAW,GAAInL,SAAU,SAACtJ,GAAD,OAAKA,GAAGkR,UAAQ,EAACrQ,UAAU,kBAI5F,yBAAKA,UAAU,4BACX,2BAAO2J,QAAQ,sBAAsB3J,UAAU,QAA/C,yBAA4E,0BAAMA,UAAU,gBAAhB,MAC3E+T,EAAkB,CACftL,SAASA,EACTwL,OAAO,GACPK,SAAS,EACTC,QAAQ,wBAIZ,2BAAO5K,QAAQ,OAAO3J,UAAU,QAAhC,QAA4C,0BAAMA,UAAU,gBAAhB,MAC5C,2BAAOY,KAAK,OAAOgQ,SAAUA,EAAUP,UAAQ,EAACtI,MAAO6L,EAAW,GAAInL,SAAU,SAACtJ,GAAD,OAAKsJ,EAAStJ,EAAE+I,OAAOH,MAAM,IAC7G/H,UAAU,iBAEV,2BAAO2J,QAAQ,cAAc3J,UAAU,QAAvC,eACA,8BAAUU,GAAG,cAAc+H,SAAU,SAACtJ,GAAD,OAAKsJ,EAAStJ,EAAE+I,OAAOH,MAAM,IAAIA,MAAO6L,EAAW,GACxFhD,SAAUA,EAAU5Q,UAAU,kBAIlC,kBAAC,EAAD,CAAmB2W,aAAcA,EAAcR,qBAhL5C,EAiLHvF,SAAUA,EAAUgD,WAAYA,EAAYb,iBAAkBA,EAC9DpG,gBAAiBA,EAAiBW,UAAWA,EAAWiJ,eAAe,MACvEK,gBAAiB,wBAGjB,wBAAI5W,UAAU,0BACT,UAAUoE,EAAmBoR,OAItC,kBAAC,EAAD,CAAY7D,MAAOA,EAAOgC,SAAUA,EAAUE,SAAUA,EAAUC,SAAUA,EAC5ElC,eAAgBA,EAAgBtP,KAAI,UAAKA,EAAL,kBAKhD,kBAAC,IAAD,CAAUrC,GAAIuX,EAAkBlV,WAM5CkV,EAAkBnV,YAAY,iBAC9BmV,EAAkBlV,KAAK,qBAERkV,QCzOf,SAASS,EAAoBxZ,GACzB,IAAMuE,EAAI,CACN9B,KAAK,IAAIuW,gBAAgBhZ,EAAMiZ,SAAStR,QAAQuR,IAAI,QACpDjX,GAAG,IAAI+W,gBAAgBhZ,EAAMiZ,SAAStR,QAAQuR,IAAI,OAHtB,EAKwBpV,EAAS,CAC7DS,IAAI,eACJE,KAAK,CACDoC,OAAO,OACPC,QAAQ,CAAC,eAAe,oBACxBC,KAAKC,KAAKC,UAAU,CAACxE,KAAK,WAC1ByE,YAAY,aAXY,sBAKnB8G,EALmB,EAKxB9J,KAA4B+J,EALJ,EAKF7J,MALE,EAesBN,EAAS,CAC3DS,IAAI,eACJE,KAAK,CACDoC,OAAO,OACPC,QAAQ,CAAC,eAAe,oBACxBC,KAAKC,KAAKC,UAAU,CAChBxE,KAAK,QACLuB,MAAMO,EAAItC,GAAG,CAACsC,EAAItC,IAAI,OAE1BiF,YAAY,aAxBY,sBAenBgH,EAfmB,EAexBhK,KAA2BiK,EAfH,EAeH/J,MAcvB8T,EAAa,EA7Ba,EAgCMjY,mBAAS,MAhCf,mBAgCzB0O,EAhCyB,KAgCdC,EAhCc,OAiCI3O,mBAAS,MAjCb,mBAiCzB4O,EAjCyB,KAiCfC,EAjCe,OAkCI7O,mBAAS,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,KAlCtC,mBAkCzBkV,EAlCyB,KAkCdb,EAlCc,KAoCzBzQ,EAAQuM,cAARvM,KACA1C,EAAcC,qBAAWL,GAAzBI,WAmDP,SAAS6I,EAASV,EAAMlE,GACpBkP,EAAiB,GAAD,mBAAKa,EAAWhL,MAAM,EAAE/E,IAAxB,CAA+BkE,GAA/B,YAAwC6L,EAAWhL,MAAM/E,EAAM,MAGnF,SAAS2R,IACL,IAAIjK,EAAM,EAMV,OALAqI,EAAW+C,GAAchP,SAAQ,SAACuQ,EAAsB1P,GAEhB,KAAjCoL,EAAW+C,GAAcnO,GAAG,KAC9B+C,GAAakI,SAASG,EAAW+C,GAAcnO,GAAG,QAEhD+C,EA5DXxM,qBAAU,WAcN,GAZI0N,IAA4C,IAAxBA,EAAiBvF,MAC7BC,MAAM,iEACNvH,GAAW,IAEd6M,GAAoBA,EAAiB9J,MAAQ8J,EAAiBlF,OACnE8F,EAAiBZ,EAAiB9J,KAAK1B,KAAI,SAAA0B,GAAI,OAC/C,4BAAQxB,IAAKwB,EAAK8J,EAAiBlF,MAAM,GAAGjG,MAAOyG,MAAOpF,EAAK8J,EAAiBlF,MAAM,GAAGjG,OACpFqB,EAAK8J,EAAiBlF,MAAM,GAAGjG,MAAM,OAAOqB,EAAK8J,EAAiBlF,MAAM,GAAGjG,MAAMqB,EAAK8J,EAAiBlF,MAAM,GAAGjG,MAAM,SAK3HqL,IAA0C,IAAvBA,EAAgBzF,KAC3BC,MAAM,iEACNvH,GAAW,QAElB,GAAI+M,GAAmBA,EAAgBhK,MAAQgK,EAAgBpF,MAAO,CACvE,IAAMwH,EAASpC,EAAgBpF,MAAM,GAAGjG,KAClC0N,EAAUrC,EAAgBpF,MAAM,GAAGjG,KACnCuW,EAAWlL,EAAgBpF,MAAM,GAAGjG,KACpCqU,EAAYhJ,EAAgBpF,MAAM,GAAGjG,KAE3CiM,EAAgBZ,EAAgBhK,KAAK1B,KAAI,SAAA0B,GAAI,OACzC,4BAAQxB,IAAKwB,EAAKoM,GAAWhH,MAAOpF,EAAKoM,IACpCpM,EAAKoM,GAAU,OACbpM,EAAKqM,GAAWrM,EAAKqM,GAAW,IAAI,eACpCrM,EAAKkV,GAAYlV,EAAKkV,GAAY,IAAI,iBACtClV,EAAKgT,GAAahT,EAAKgT,GAAa,aAMrD,CAAClJ,EAAiBC,EAAkBC,EAAgBC,IAEtD7N,qBAAU,WACN,SAAS4Q,IACL/H,SAAS+C,cAAc,uBAAuBxC,aAC1C,UAAU,yCAIlB,OAFAxJ,OAAOiR,iBAAiB,WAAWD,GAE5B,WACChR,OAAOkR,oBAAoB,WAAWF,MAE5C,IAkBN,IAAImI,EAAsB,KAkB1B,OAfKrL,GAAoBA,EAAiB5J,OAAU6J,GAAqBC,GAAmBA,EAAgB9J,OAAU+J,KACtHkL,EACI,yBAAK9X,UAAU,uBACVyM,GAAoBA,EAAiB5J,MAAO,gDAAgD4J,EAAiB5J,MAAM2E,MACnH,UAAUiF,EAAiB5J,MAAM4E,KAAK,aAAagF,EAAiB5J,MAAM6E,WAAW,KACrFgF,EAAmB,yCAAyCA,EAAoB,KACjF,6BACA,6BACCC,GAAmBA,EAAgB9J,MAAO,+CAA+C8J,EAAgB9J,MAAM2E,MAC/G,UAAUmF,EAAgB9J,MAAM4E,KAAK,aAAakF,EAAgB9J,MAAM6E,WAAW,KACnFkF,EAAkB,wCAAwCA,EAAmB,OAMlF,kBAAC,EAAD,CAAMgH,WAAYA,EAAYb,iBAAkBA,EAAkB/P,IAAKA,EAAK9B,KAAK,kBAAkBwS,YAAY,oBAE3G,gBAAE/B,EAAF,EAAEA,MAAMf,EAAR,EAAQA,SAASgB,EAAjB,EAAiBA,eAAe+B,EAAhC,EAAgCA,SAASE,EAAzC,EAAyCA,SAASC,EAAlD,EAAkDA,SAAS/D,EAA3D,EAA2DA,aAAagE,EAAxE,EAAwEA,kBAAxE,OACC,kBAAC,IAAD,KACG,kBAAC,IAAD,CAAO/D,OAAK,EAAC1N,KAAI,UAAKA,EAAL,aACb,kBAAC,EAAD,CAAaD,YAAa4V,EAAmB5V,YACzCuI,SAAUqN,EAAmB3V,KAC7BsS,aAAc,CAAChB,EAAW,GAAGA,EAAW,IACxCmB,cAAe,CAACkD,EAAmB5V,YAAY,MAAM,OAAO,qBAC5D2S,cAAe,CAACpB,EAAW,GAAGnP,EAAiBmP,EAAW,KAC1DqB,YAAa,CAAC,GAAG,YAAY,cAAc,OAC3CC,YAAatB,EAAW+C,GACxBnB,eAAgBA,EAChBC,OAAO,6HAGf,kBAAC,IAAD,CAAOzF,OAAK,EAAC1N,KAAMA,GACnB,kBAAC,EAAD,KACA,yBAAKtC,UAAU,0BAIX,wBAAIA,UAAU,SAAiB,WAAR2R,EAAkB,SAAS,UAAY,IAAKsG,EAAmB5V,aACtF,2BAAOrC,UAAU,gBAAjB,cACC+P,EACA+H,EAID,0BAAM3H,SAAU,SAAChR,GAAKA,EAAEiR,iBAA6B,WAARuB,EAAkBgC,IAAiBE,MAC5E,yBAAK7T,UAAU,OACX,8BAAUA,UAAU,yEAAyE4Q,SAAUA,GACnG,4BAAQ5Q,UAAU,6CAA6C,sCAAW,0BAAMA,UAAU,gBAAhB,OAC1E,2BAAOA,UAAU,OAAO2J,QAAQ,YAAhC,aACA,yBAAK3J,UAAU,eAIX,2BAAOY,KAAK,OAAOF,GAAG,WAAWqH,MAAO6L,EAAW,GAAInL,SAAU,SAACtJ,GAAD,OAAKA,GAAGkR,UAAQ,EAACrQ,UAAU,iBAC5F,4BAAQA,UAAU,eAAeI,MAAO,CAAC2Q,KAAK,SAAUtI,SAAU,SAACtJ,GAC/D,IAAI4Y,EAAW,GACXC,EAAc,GAElBvL,EAAiB9J,KAAKgF,SAAQ,SAAAhF,GAEvBA,EAAK8J,EAAiBlF,MAAM,GAAGjG,QAAQnC,EAAE+I,OAAOH,QAC/CgQ,EAAWpV,EAAK8J,EAAiBlF,MAAM,GAAGjG,MAAMqB,EAAK8J,EAAiBlF,MAAM,GAAGjG,MAAM,GACrF0W,EAAcrV,EAAK8J,EAAiBlF,MAAM,GAAGjG,MAAMqB,EAAK8J,EAAiBlF,MAAM,GAAGjG,MAAM,OAKpGyR,EAAiB,CAAC5T,EAAE+I,OAAOH,MAAMgQ,EAAWC,GAA5B,mBAA6CpE,EAAWhL,MAAM,EAAEgL,EAAWlS,aAEvF,4BAAQqG,MAAM,IAAd,wBACCqF,IAGT,2BAAOpN,UAAU,OAAO2J,QAAQ,cAAhC,eACA,2BAAOjJ,GAAG,aAAaqH,MAAO6L,EAAW,GAAInL,SAAU,SAACtJ,GAAD,OAAKA,GAAGkR,UAAQ,EAACrQ,UAAU,iBAClF,2BAAOA,UAAU,OAAO2J,QAAQ,iBAAhC,kBACA,8BAAUjJ,GAAG,gBAAgBqH,MAAO6L,EAAW,GAAInL,SAAU,SAACtJ,GAAD,OAAKA,GAAGkR,UAAQ,EAACrQ,UAAU,kBAI5F,yBAAKA,UAAU,4BACX,2BAAO2J,QAAQ,uBAAuB3J,UAAU,QAAhD,0BAA8E,0BAAMA,UAAU,gBAAhB,MAC7E+T,EAAkB,CACftL,SAASA,EACTwL,OAAO,GACPK,SAAS,EACTC,QAAQ,yBAIZ,2BAAO5K,QAAQ,OAAO3J,UAAU,QAAhC,QAA4C,0BAAMA,UAAU,gBAAhB,MAC5C,2BAAOY,KAAK,OAAOgQ,SAAUA,EAAUP,UAAQ,EAACtI,MAAO6L,EAAW,GAAInL,SAAU,SAACtJ,GAAD,OAAKsJ,EAAStJ,EAAE+I,OAAOH,MAAM,IAC7G/H,UAAU,iBAEV,2BAAO2J,QAAQ,cAAc3J,UAAU,QAAvC,eACA,8BAAUU,GAAG,cAAc+H,SAAU,SAACtJ,GAAD,OAAKsJ,EAAStJ,EAAE+I,OAAOH,MAAM,IAAIA,MAAO6L,EAAW,GACxFhD,SAAUA,EAAU5Q,UAAU,kBAIlC,kBAAC,EAAD,CAAmB2W,aAAcA,EAAcR,qBAlL5C,EAmLHvF,SAAUA,EAAUgD,WAAYA,EAAYb,iBAAkBA,EAC9DpG,gBAAiBA,EAAiBW,UAAWA,EAAWiJ,eAAe,KACvEK,gBAAiB,yBAGjB,wBAAI5W,UAAU,0BACT,UAAUoE,EAAmBoR,OAItC,kBAAC,EAAD,CAAY7D,MAAOA,EAAOgC,SAAUA,EAAUE,SAAUA,EAAUC,SAAUA,EAC5ElC,eAAgBA,EAAgBtP,KAAI,UAAKA,EAAL,kBAQhD,kBAAC,IAAD,CAAUrC,GAAIgY,EAAmB3V,WAM7C2V,EAAmB5V,YAAY,kBAC/B4V,EAAmB3V,KAAK,sBAET2V,SC2CAE,OAvSf,SAAoB1Z,GAChB,IACMsQ,EAAStQ,EAAMkO,gBAAgBlO,EAAMkO,gBAAgBpF,MAAM,GAAGjG,KAAK,KACnE0N,EAAUvQ,EAAMkO,gBAAgBlO,EAAMkO,gBAAgBpF,MAAM,GAAGjG,KAAK,KACpEqU,EAAYlX,EAAMkO,gBAAgBlO,EAAMkO,gBAAgBpF,MAAM,GAAGjG,KAAK,KAE5E,SAASsU,EAAkBzW,EAAE0E,EAAMgS,EAAWC,GAC1CrX,EAAMsU,kBAAiB,SAAAa,GAAU,OAAEA,EAAWhL,MAAM,EAAE/E,GACrDkS,OAAO,CAACnC,EAAW/P,GAAO+E,MAAM,EAAEiN,GAClCE,OAAO,CAACnC,EAAW/P,GAAOgS,GAAYjN,MAAM,EAAEkN,GAC9CC,OAAO5W,GACP4W,OAAOnC,EAAW/P,GAAOgS,GAAYjN,MAAMkN,EAAW,MACtDC,OAAOnC,EAAW/P,GAAO+E,MAAMiN,EAAW,MAC1CE,OAAOnC,EAAWhL,MAAM/E,EAAM,OAGnC,SAASmS,EAAoBxN,EAAEyN,EAASC,GACpC,IAAIxN,EAAejK,EAAMmV,WAAWnV,EAAM0X,sBAAsBC,WAAU,SAAAlV,GAAI,OAAEA,EAAK,GAAG,IAAIsH,KAExFE,GAAgB,EACZjK,EAAMsU,kBAAiB,SAAAa,GAAU,4BAC7BA,EAAWhL,MAAM,EAAEnK,EAAM0X,uBADI,uBAE7BvC,EAAWnV,EAAM0X,sBAAsBvN,MAAM,EAAEF,IAFlB,CAG7B,CAACF,EAAE,EAAEyN,EAASC,IAHe,YAI9BtC,EAAWnV,EAAM0X,sBAAsBvN,MAAMF,EAAe,MAJ9B,YAK9BkL,EAAWhL,MAAMnK,EAAM0X,qBAAqB,QAG/C1X,EAAMsU,kBAAiB,SAAAa,GAAU,4BAC7BA,EAAWhL,MAAM,EAAEnK,EAAM0X,uBADI,uBAE7BvC,EAAWnV,EAAM0X,uBAFY,CAG7B,CAAC3N,EAAE,EAAEyN,EAASC,MAHe,YAK9BtC,EAAWhL,MAAMnK,EAAM0X,qBAAqB,QAI3D,SAASE,EAAuB7N,GAC5B,IAAIE,EAAejK,EAAMmV,WAAWnV,EAAM0X,sBAAsBC,WAAU,SAAAlV,GAAI,OAAEA,EAAK,GAAG,IAAIsH,KAExFE,GAAgB,GAChBjK,EAAMsU,kBAAiB,SAAAa,GAAU,4BACzBA,EAAWhL,MAAM,EAAEnK,EAAM0X,uBADA,uBAEzBvC,EAAWnV,EAAM0X,sBAAsBvN,MAAM,EAAEF,IAFtB,YAG1BkL,EAAWnV,EAAM0X,sBAAsBvN,MAAMF,EAAe,MAHlC,YAI1BkL,EAAWhL,MAAMnK,EAAM0X,qBAAqB,QAY3D,SAASG,EAAkBpV,GACvB,MAA2B,QAAvBzC,EAAM8X,eACC9X,EAAMkO,gBAAgBhK,KAAK6T,MAAK,SAAApK,GAAK,OAAEA,EAAM2C,KAAY7N,EAAK,MAAIyU,GACrElX,EAAMmV,WAAWnV,EAAM0X,sBAAsBlK,QAAO,SAACjI,EAAEC,GACnD,OAAGA,EAAE,KAAK/C,EAAK,GACJ8C,EAAEa,OAAOZ,EAAE,IACVD,IACd,GACsB,OAAvBvF,EAAM8X,eACJ9X,EAAMkO,gBAAgBhK,KAAK6T,MAAK,SAAApK,GAAK,OAAEA,EAAM2C,KAAY7N,EAAK,MAAIyU,GACrElX,EAAMmV,WAAWnV,EAAM0X,sBAAsBlK,QAAO,SAACjI,EAAEC,GACnD,OAAGA,EAAE,KAAK/C,EAAK,GACJ8C,EAAEa,OAAOZ,EAAE,IACVD,IACd,QANL,EA8CT,OACI,8BAAUhE,UAAU,kEAChB,4BAAQA,UAAU,0DACd,4BAAQY,KAAK,SAASZ,UAAU,kBAAkB4Q,SAAUnS,EAAMmS,SAClE/P,QAAS,kBACLpC,EAAMsU,iBACFtU,EAAMmV,WAAWhL,MAAM,EAAEnK,EAAMkY,cAC9BZ,OAAO,CAACtX,EAAMmV,WAAWnV,EAAMkY,cAAc/N,MAAM,GAC/CmN,OACG,CAAC,CAACtX,EAAMmV,WAAWnV,EAAMkY,cAAcjV,OAAO,EAAE,GAAG,GAAG,GAAG,EAAE,OAClEqU,OAAOtX,EAAMmV,WAAWhL,MAAMnK,EAAMkY,aAAa,OAP1D,KAUA,wBAAI3W,UAAU,+BAA+BvB,EAAMmY,iBACnD,4BAAQhW,KAAK,SAASZ,UAAU,oBAAoB4Q,SAAUnS,EAAMmS,SACpE/P,QAAS,WACLwV,EAAuB5X,EAAMmV,WAAWnV,EAAMkY,cAAcjV,OAAO,GAEnEjD,EAAMsU,kBAAiB,SAAAa,GAAU,OAC7BA,EAAWhL,MAAM,EAAEnK,EAAMkY,cACxBZ,OAAO,CAACnC,EAAWnV,EAAMkY,cAAc/N,MAAM,EAAEgL,EAAWnV,EAAMkY,cAAcjV,OAAO,KACrFqU,OAAOnC,EAAWhL,MAAMnK,EAAMkY,aAAa,SAPpD,MAaJ,yBAAK3W,UAAU,iBAEX,yBAAKA,UAAU,kBAAkBI,MAAO,CAAC8Q,WAAW,EAAEC,YAAY,IAC9D,wBAAInR,UAAU,MAAMI,MAAO,CAAC2Q,KAAK,WAAWd,YAAY,GAAGC,aAAa,KAAxE,YACA,wBAAIlQ,UAAU,MAAMI,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,KAAzE,aACA,wBAAIlQ,UAAU,MAAMI,MAAO,CAAC2Q,KAAK,WAAWd,YAAY,GAAGC,aAAa,KAAxE,iBACA,wBAAIlQ,UAAU,MAAMI,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,KAAzE,eACA,wBAAIlQ,UAAU,MAAMI,MAAO,CAAC2Q,KAAK,WAAWd,YAAY,GAAGC,aAAa,KAAxE,SACA,wBAAIlQ,UAAU,MAAMI,MAAO,CAAC2Q,KAAK,WAAWd,YAAY,GAAGC,aAAa,KAAxE,OACA,wBAAIlQ,UAAU,MAAMI,MAAO,CAAC2Q,KAAK,WAAWd,YAAY,GAAGC,aAAa,KAAxE,YACA,wBAAIlQ,UAAU,MAAMI,MAAO,CAAC2Q,KAAK,WAAWd,YAAY,GAAGC,aAAa,KAAxE,aAGHzR,EAAMmV,WAAWnV,EAAMkY,cAAc1V,KAAI,SAAC4V,EAAQrO,GAAT,OAC1C,yBAAKxI,UAAU,kBAAkBI,MAAO,CAAC8Q,WAAW,EAAEC,YAAY,GAAIhQ,IAAKqH,GAEvE,2BAAOmB,QAAQ,SAAS3J,UAAU,YAClC,2BAAOY,KAAK,SAASF,GAAG,SAASV,UAAU,6BAC3C+H,MAAOtJ,EAAMmV,WAAWnV,EAAMkY,cAAcnO,GAAG,GAC/CC,SAAU,SAACtJ,GAAD,OAAKA,GAAGiB,MAAO,CAAC2Q,KAAK,WAAWd,YAAY,GAAGC,aAAa,GAAIU,SAAUnS,EAAMmS,WAE1F,yBAAK5Q,UAAU,kBAAkBI,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,EAAEC,aAAa,IACjF,2BAAOvG,QAAQ,WAAW3J,UAAU,YACpC,2BAAOY,KAAK,OAAOF,GAAI,WAAWV,UAAU,yBAAyB4Q,SAAUnS,EAAMmS,SACrFxQ,MAAO,CAAC6P,YAAY,IACpBlI,MAAOtJ,EAAMmV,WAAWnV,EAAMkY,cAAcnO,GAAG,GAAG/J,EAAMmV,WAAWnV,EAAMkY,cAAcnO,GAAG,GAAG,GAC7FC,SAAU,SAACtJ,GACPyW,EAAkBzW,EAAE+I,OAAOH,MAAMtJ,EAAMkY,aAAanO,EAAE,GACnD/J,EAAMkO,gBAAgBhK,KAAKmU,MAAK,SAAA5V,GAE/B,OAAOA,EADQzC,EAAMkO,gBAAgBpF,MAAM,GAAGjG,QACtBnC,EAAE+I,OAAOH,SAEjCiO,EAAoBxN,EAAErJ,EAAE+I,OAAOH,MAAMtJ,EAAMmV,WAAWnV,EAAMkY,cAAcnO,GAAG,IAE7E6N,EAAuB7N,MAE/B,4BAAQxI,UAAU,yBAAyBI,MAAO,CAAC2Q,KAAK,SAAUH,SAAUnS,EAAMmS,SAAUnI,SAAU,SAACtJ,GACnG,IAAIkD,EAAY,GACZ+V,EAAM,GACNnC,EAAS9W,EAAE+I,OAAOH,MAEtBtJ,EAAMkO,gBAAgBhK,KAAKgF,SAAQ,SAAAhF,GAE5BA,EAAKlE,EAAMkO,gBAAgBpF,MAAM,GAAGjG,QAAQnC,EAAE+I,OAAOH,QACpD1F,EAAYM,EAAKlE,EAAMkO,gBAAgBpF,MAAM,GAAGjG,MAAMqB,EAAKlE,EAAMkO,gBAAgBpF,MAAM,GAAGjG,MAAM,GAChG8W,EAAMzV,EAAKlE,EAAMkO,gBAAgBpF,MAAM,GAAGjG,MAAMqB,EAAKlE,EAAMkO,gBAAgBpF,MAAM,GAAGjG,MAAM,OAIlG7C,EAAMsU,kBAAiB,SAAAa,GAAU,OAAEA,EAAWhL,MAAM,EAAEnK,EAAMkY,cACvDZ,OAAO,CAACnC,EAAWnV,EAAMkY,cAAc/N,MAAM,EAAEJ,GAC/CuN,OAAO,CAACnC,EAAWnV,EAAMkY,cAAcnO,GAAGI,MAAM,EAAE,GAClDmN,OAAOE,GAAUF,OAAO1T,GAAa0T,OAAOqC,GAC5CrC,OAAOnC,EAAWnV,EAAMkY,cAAcnO,GAAGI,MAAM,MAC/CmN,OAAOnC,EAAWnV,EAAMkY,cAAc/N,MAAMJ,EAAE,MAC9CuN,OAAOnC,EAAWhL,MAAMnK,EAAMkY,aAAa,OAE3B,KAAjBxX,EAAE+I,OAAOH,MACTiO,EAAoBxN,EAAErJ,EAAE+I,OAAOH,MAAMtJ,EAAMmV,WAAWnV,EAAMkY,cAAcnO,GAAG,IAE7E6N,EAAuB7N,KAE3B,4BAAQT,MAAM,IAAd,uBACCtJ,EAAM6O,YAIf,yBAAKtN,UAAU,cAAcI,MAAO,CAAC2Q,KAAK,WAAWd,YAAY,GAAGC,aAAa,GAAG8G,WAAW,EAC3FC,OAAO,oBACP5V,gBAAgB5C,EAAMmS,SAAU,UAC/BnS,EAAMkO,iBAAmBlO,EAAMkO,gBAAgBhK,KAAKuU,OAAM,SAAAhW,GAEvD,OAAOA,EADQzC,EAAMkO,gBAAgBpF,MAAM,GAAGjG,QACtB7C,EAAMmV,WAAWnV,EAAMkY,cAAcnO,GAAG,MAChE,UAAW,gBAEf,2BAAOmB,QAAQ,eAAe3J,UAAU,YACxC,2BAAOU,GAAG,eAAeE,KAAK,WAC9BgQ,WAAUnS,EAAMmS,aACXnS,EAAMkO,kBAAmBlO,EAAMkO,gBAAgBhK,KAAKuU,OAAM,SAAAhW,GAE3D,OAAOA,EADQzC,EAAMkO,gBAAgBpF,MAAM,GAAGjG,QACtB7C,EAAMmV,WAAWnV,EAAMkY,cAAcnO,GAAG,OAClDV,QAASrJ,EAAMmV,WAAWnV,EAAM0X,sBAAsBW,MAAK,SAAA5V,GAAI,OAAEA,EAAK,GAAG,IAAIsH,KAE/FC,SAAU,SAAAtJ,GACNA,EAAE+I,OAAOJ,QACTkO,EAAoBxN,EAAE/J,EAAMmV,WAAWnV,EAAMkY,cAAcnO,GAAG,GAAG/J,EAAMmV,WAAWnV,EAAMkY,cAAcnO,GAAG,IAEzG6N,EAAuB7N,OAM/B,2BAAOmB,QAAQ,cAAc3J,UAAU,YACvC,2BAAOY,KAAK,OAAOF,GAAG,cAAc2P,UAAQ,EAACrQ,UAAU,6BACvD+H,MAAOtJ,EAAMmV,WAAWnV,EAAMkY,cAAcnO,GAAG,GAC/CC,SAAU,SAACtJ,GAAD,OAAKyW,EAAkBzW,EAAE+I,OAAOH,MAAMtJ,EAAMkY,aAAanO,EAAE,IAAIoI,SAAUnS,EAAMmS,SACzFxQ,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,KAErD,2BAAOvG,QAAQ,QAAQ3J,UAAU,YACjC,2BAAOY,KAAK,SAASyP,UAAQ,EAACoE,IAAI,IAAI0C,KAAK,MAAMzW,GAAG,QAAQV,UAAU,6BACtE+H,MAAOtJ,EAAMmV,WAAWnV,EAAMkY,cAAcnO,GAAG,GAC/CC,SAAU,SAACtJ,GAAD,OAAKyW,EAAkBzW,EAAE+I,OAAOH,MAAMtJ,EAAMkY,aAAanO,EAAE,IAAIoI,SAAUnS,EAAMmS,SACzFxQ,MAAO,CAAC2Q,KAAK,WAAWd,YAAY,GAAGC,aAAa,KAEpD,2BAAOvG,QAAQ,MAAM3J,UAAU,YAC/B,2BAAOY,KAAK,SAASyP,UAAQ,EAACoE,IAAI,IAAI0C,KAAK,IAAIzW,GAAG,MAAMV,UAAU,6BAClE+H,MAAOtJ,EAAMmV,WAAWnV,EAAMkY,cAAcnO,GAAG,GAAIoI,SAAUnS,EAAMmS,SACnExQ,MAAO,CAAC2Q,KAAK,WAAWd,YAAY,GAAGC,aAAa,GACpDzH,SAAU,SAACtJ,GACPyW,EAAkBzW,EAAE+I,OAAOH,MAAMtJ,EAAMkY,aAAanO,EAAE,GACnD/J,EAAMmV,WAAWnV,EAAM0X,sBAAsBW,MAAK,SAAA5V,GAAI,OAAEA,EAAK,GAAG,IAAIsH,MACnEwN,EAAoBxN,EAAE/J,EAAMmV,WAAWnV,EAAMkY,cAAcnO,GAAG,GAAGrJ,EAAE+I,OAAOH,UAGlF,2BAAO4B,QAAQ,WAAW3J,UAAU,YACpC,2BAAOY,KAAK,SAASyP,UAAQ,EAACoE,IAAI,IAAI0C,KAAK,MAAMzW,GAAG,WAAWV,UAAU,6BACzE+H,MAAOtJ,EAAMmV,WAAWnV,EAAMkY,cAAcnO,GAAG,GAC/CC,SAAU,SAACtJ,GAAD,OAAKyW,EAAkBzW,EAAE+I,OAAOH,MAAMtJ,EAAMkY,aAAanO,EAAE,IAAIoI,SAAUnS,EAAMmS,SACzFxQ,MAAO,CAAC2Q,KAAK,WAAWd,YAAY,GAAGC,aAAa,KAEpD,2BAAOvG,QAAQ,WAAW3J,UAAU,YACpC,2BAAOY,KAAK,OAAOuW,KAAK,MAAMvG,UAAQ,EAAClQ,GAAG,WAAWV,UAAU,6BAC/D+H,MAAO3D,EAAmB3F,EAAM2W,kBAAkB5M,IAClDpI,MAAO,CAAC2Q,KAAK,WAAWd,YAAY,GAAGC,aAAa,SApN5DzR,EAAMkO,iBACClO,EAAMmV,WAAWnV,EAAM0X,sBAAsBW,MAAK,SAAA5V,GAAI,OACzDoV,EAAkBpV,GAAQ,OAoNIzC,EAAMmS,SACnC,yBAAKxQ,MAAO,CAACgX,SAxQX,MAyQC,yBAAKpX,UAAU,2BAA2BI,MAAO,CAAC4H,OAAO,WAAYxH,cAAY,WACjFC,cAAY,qBADZ,0BAIA,yBAAKT,UAAU,wCAAwCU,GAAG,oBACtD,2BAAOV,UAAU,6BACb,+BACI,4BACI,wBAAIA,UAAU,eAAd,aACA,wBAAIA,UAAU,eAAd,eACA,wBAAIA,UAAU,eAAd,WACA,wBAAIA,UAAU,eAAsC,QAAvBvB,EAAM8X,eAAuB,MAAM,MAChE,wBAAIvW,UAAU,eAAd,eAGR,+BA/MxB,WACI,IAAMqX,EAAoB,GAE1B,OAAI5Y,EAAMkO,iBACNlO,EAAMmV,WAAWnV,EAAM0X,sBAAsBxO,SAAQ,SAAAzG,GAC9CoV,EAAkBpV,GAAM,IAA6C,IAAxCmW,EAAoB1O,QAAQzH,EAAK,KAC7DmW,EAAoBrQ,KAAK9F,EAAK,OAG/BmW,EAAoBpW,KAAI,SAAAqW,GAAS,OACnC,wBAAInW,IAAKmW,GACN,4BAAKA,GACL,4BACK7Y,EAAMkO,gBAAgBhK,KAAK6T,MAAK,SAAApK,GAAK,OACtCA,EAAM2C,KAAYuI,KAAWtI,IAEjC,4BACKvQ,EAAMkO,gBAAgBhK,KAAK6T,MAAK,SAAApK,GAAK,OACtCA,EAAM2C,KAAYuI,KAAW3B,IAEjC,4BACKlX,EAAMmV,WAAWnV,EAAM0X,sBAAsBlK,QAAO,SAACjI,EAAEC,GACpD,OAAGA,EAAE,KAAKqT,EACCtT,EAAEa,OAAOZ,EAAE,IACVD,IACd,IAEN,4BACKsS,EAAkB7X,EAAMmV,WAAWnV,EAAM0X,sBAAsBK,MAAK,SAAAtV,GAAI,OACrEA,EAAK,KAAKoW,YAKlB,KA8KaC,OAKT,QClNTc,OA3Ef,SAAqC5Z,GACjC,IAAMqI,EAAOrI,EAAM6Z,gCAAgC7Z,EAAM6Z,gCAAgC/Q,MAAM,GAAGjG,KAAK,KACjGoD,EAAKjG,EAAM6Z,gCAAgC7Z,EAAM6Z,gCAAgC/Q,MAAM,GAAGjG,KAAK,KAC/FV,EAAKnC,EAAM6Z,gCAAiC7Z,EAAM6Z,gCAAgC/Q,MAAM,GAAGjG,KAAK,KAChGe,EAAY5D,EAAM6Z,gCAAgC7Z,EAAM6Z,gCAAgC/Q,MAAM,GAAGjG,KAAK,KACtGiX,EAAO9Z,EAAM6Z,gCAAiC7Z,EAAM6Z,gCAAgC/Q,MAAM,GAAGjG,KAAK,KAElGsF,EAAQC,cAed,OACA,8BAAU7G,UAAU,kEAChB,4BAAQA,UAAU,6CACd,wBAAIA,UAAU,+BAA+BvB,EAAM+Z,qBAEvD,yBAAKxY,UAAU,iBAEX,yBAAKA,UAAU,mBAAmBI,MAAO,CAAC8Q,WAAW,EAAEC,YAAY,IAC/D,wBAAInR,UAAU,MAAMI,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,KAAzE,WACA,wBAAIlQ,UAAU,MAAMI,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,KAAzE,QACA,wBAAIlQ,UAAU,MAAMI,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,KAAzE,QACA,wBAAIlQ,UAAU,MAAMI,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,KAAzE,eACA,wBAAIlQ,UAAU,MAAMI,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,KAAzE,WAEHzR,EAAM6Z,gCAAiC7Z,EAAM6Z,gCAAgC3V,KAAK1B,KAAI,SAAAC,GAAI,OAC1F,yBAAKlB,UAAU,kBAAkBI,MAAO3B,EAAMmS,SAAU,CAACM,WAAW,EAAEC,YAAY,GACnF,CAACnJ,OAAO,UAAUkJ,WAAW,EAAEC,YAAY,GAAIhQ,IAAKD,EAAK4F,GACzDjG,QAAS,SAAC1B,GACDV,EAAMmS,UACPhK,EAAQI,KAAK,KAhC7B,SAAoByR,EAAO/X,GACvB,IAAIgY,EAAUD,EAAOE,MAAM,KAS3B,OAJAD,GAHAA,EAAUA,EAAUzX,KAAI,SAAAwX,GACpB,OAAOA,EAAOG,kBAEE3X,KAAI,SAAAwX,GACpB,OAAOA,EAAO,GAAG5F,cAAckD,OAAO0C,EAAOI,OAAO,QAGvCC,KAAK,IAAI,aAAaL,EAAOrX,QAAQ,KAAK,KAAK,OAAO2X,mBAAmBrY,GAsB5DsY,CAAW9X,EAAKN,GAAMgY,cAAc1X,EAAK4F,OAG/D,uBAAG9G,UAAU,kBAAkBI,MAAO3B,EAAMmS,SAC5C,CAACG,KAAK,YAAYd,YAAY,GAAGC,aAAa,GAAG8G,WAAW,WAAWiC,cAAc,WAAW5X,gBAAgB,WAChH,CAAC0P,KAAK,YAAYd,YAAY,GAAGC,aAAa,GAAG8G,WAAW,WAAWiC,cAAc,aAChF/X,EAAK4F,IAEV,uBAAG9G,UAAU,kBAAkBI,MAAO3B,EAAMmS,SAC5C,CAACG,KAAK,YAAYd,YAAY,GAAGC,aAAa,GAAG8G,WAAW,WAAWiC,cAAc,WAAW5X,gBAAgB,WAChH,CAAC0P,KAAK,YAAYd,YAAY,GAAGC,aAAa,GAAG8G,WAAW,WAAWiC,cAAc,aAChFxU,EAAiBvD,EAAKwD,KAE3B,uBAAG1E,UAAU,kBAAkBI,MAAO3B,EAAMmS,SAC5C,CAACG,KAAK,YAAYd,YAAY,GAAGC,aAAa,GAAG8G,WAAW,WAAWiC,cAAc,WAAW5X,gBAAgB,WAChH,CAAC0P,KAAK,YAAYd,YAAY,GAAGC,aAAa,GAAG8G,WAAW,WAAWiC,cAAc,aAChF/X,EAAKN,IAEV,uBAAGZ,UAAU,gCAAgCI,MAAO3B,EAAMmS,SAC1D,CAACG,KAAK,YAAYd,YAAY,GAAGC,aAAa,GAAG8G,WAAW,WAAWiC,cAAc,WAAW5X,gBAAgB,WAChH,CAAC0P,KAAK,YAAYd,YAAY,GAAGC,aAAa,GAAG8G,WAAW,WAAWiC,cAAc,aAChF/X,EAAKmB,IAEV,uBAAGrC,UAAU,kBAAkBI,MAAO3B,EAAMmS,SAC5C,CAACG,KAAK,YAAYd,YAAY,GAAGC,aAAa,GAAG8G,WAAW,WAAWiC,cAAc,WAAW5X,gBAAgB,WAChH,CAAC0P,KAAK,YAAYd,YAAY,GAAGC,aAAa,GAAG8G,WAAW,WAAWiC,cAAc,aAChF7U,EAAmBlD,EAAKqX,SAG/B,QCvDd,SAASW,GAAkBza,GACvB,IAAMuE,EAAI,CACN9B,KAAK,IAAIuW,gBAAgBhZ,EAAMiZ,SAAStR,QAAQuR,IAAI,QACpDjX,GAAG,IAAI+W,gBAAgBhZ,EAAMiZ,SAAStR,QAAQuR,IAAI,OAHxB,EAK0BpV,EAAS,CAC7DS,IAAI,eACJE,KAAK,CACDoC,OAAO,OACPC,QAAQ,CAAC,eAAe,oBACxBC,KAAKC,KAAKC,UAAU,CAACxE,KAAK,WAC1ByE,YAAY,aAXU,sBAKjB8G,EALiB,EAKtB9J,KAA4B+J,EALN,EAKA7J,MALA,EAewBN,EAAS,CAC3DS,IAAI,eACJE,KAAK,CACDoC,OAAO,OACPC,QAAQ,CAAC,eAAe,oBACxBC,KAAKC,KAAKC,UAAU,CAChBxE,KAAK,QACLuB,MAAMO,EAAItC,GAAG,CAACsC,EAAItC,IAAI,OAE1BiF,YAAY,aAxBU,sBAejBgH,EAfiB,EAetBhK,KAA2BiK,EAfL,EAeD/J,MAfC,EA4B0BN,EAAS,CAC7DS,IAAI,yBACJE,KAAK,CACDoC,OAAO,OACPC,QAAQ,CAAC,eAAe,oBACxBC,KAAKC,KAAKC,UAAU,CAACxE,KAAK,kBAC1ByE,YAAY,aAlCU,sBA4BjBwT,EA5BiB,EA4BtBxW,KAA4ByW,EA5BN,EA4BAvW,MA5BA,EAsC0CN,EAASS,EAAI9B,MAAQ8B,EAAItC,GAAG,CAChGsC,IAAI,sBACJE,KAAK,CACDoC,OAAO,OACPC,QAAQ,CAAC,eAAe,oBACxBC,KAAKC,KAAKC,UAAU,CAChBxE,KAAK,gBACLuB,MAAM,CAACO,EAAItC,MAEfiF,YAAY,YAElB,MAjD4B,sBAsCjB0T,EAtCiB,EAsCtB1W,KAAoC2W,EAtCd,EAsCQzW,MAehC8T,EAAa,EArDW,EAwDQjY,mBAAS,MAxDjB,mBAwDvB0O,EAxDuB,KAwDZC,EAxDY,OAyDM3O,mBAAS,MAzDf,mBAyDvB4O,EAzDuB,KAyDbC,EAzDa,OA0DQ7O,mBAAS,MA1DjB,mBA0DvB6a,EA1DuB,KA0DZC,EA1DY,OA2DM9a,mBAAS,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,MAAM,GAAG,GAAG,GAAG,KA3DjD,mBA2DvBkV,EA3DuB,KA2DZb,EA3DY,KA6DvBzQ,EAAQuM,cAARvM,KACA1C,EAAcC,qBAAWL,GAAzBI,WAuEP,SAAS6I,EAASV,EAAMlE,GACpBkP,EAAiB,GAAD,mBAAKa,EAAWhL,MAAM,EAAE/E,IAAxB,CAA+BkE,GAA/B,YAAwC6L,EAAWhL,MAAM/E,EAAM,MAGnF,SAASuR,EAAkB5M,GACvB,MAAqC,KAAjCoL,EAAW+C,GAAcnO,GAAG,IAA4C,KAAjCoL,EAAW+C,GAAcnO,GAAG,IAA4C,KAAjCoL,EAAW+C,GAAcnO,GAAG,GACjGiR,WAAW7F,EAAW+C,GAAcnO,GAAG,IAAIiR,WAAW7F,EAAW+C,GAAcnO,GAAG,IAC1FiR,WAAW7F,EAAW+C,GAAcnO,GAAG,IAChC,GAGhB,SAASgN,IACL,IAAIjK,EAAM,EAQV,OAPAqI,EAAW+C,GAAchP,SAAQ,SAACkP,EAAQrO,GAEF,KAAjCoL,EAAW+C,GAAcnO,GAAG,IAA4C,KAAjCoL,EAAW+C,GAAcnO,GAAG,IACrC,KAAjCoL,EAAW+C,GAAcnO,GAAG,KAC3B+C,GAAckO,WAAW7F,EAAW+C,GAAcnO,GAAG,IAAIiR,WAAW7F,EAAW+C,GAAcnO,GAAG,IAC/FiR,WAAW7F,EAAW+C,GAAcnO,GAAG,QAEtC+C,EAxFXxM,qBAAU,WAcN,GAZI0N,IAA4C,IAAxBA,EAAiBvF,MAC7BC,MAAM,iEACNvH,GAAW,IAEd6M,GAAoBA,EAAiB9J,MAAQ8J,EAAiBlF,OACnE8F,EAAiBZ,EAAiB9J,KAAK1B,KAAI,SAAA0B,GAAI,OAC/C,4BAAQxB,IAAKwB,EAAK8J,EAAiBlF,MAAM,GAAGjG,MAAOyG,MAAOpF,EAAK8J,EAAiBlF,MAAM,GAAGjG,OACpFqB,EAAK8J,EAAiBlF,MAAM,GAAGjG,MAAM,OAAOqB,EAAK8J,EAAiBlF,MAAM,GAAGjG,MAAMqB,EAAK8J,EAAiBlF,MAAM,GAAGjG,MAAM,SAK3HqL,IAA0C,IAAvBA,EAAgBzF,KAC3BC,MAAM,iEACNvH,GAAW,QAElB,GAAI+M,GAAmBA,EAAgBhK,MAAQgK,EAAgBpF,MAAO,CACvE,IAAMwH,EAASpC,EAAgBpF,MAAM,GAAGjG,KAClC0N,EAAUrC,EAAgBpF,MAAM,GAAGjG,KACnCuW,EAAWlL,EAAgBpF,MAAM,GAAGjG,KACpCqU,EAAYhJ,EAAgBpF,MAAM,GAAGjG,KAE3CiM,EAAgBZ,EAAgBhK,KAAK1B,KAAI,SAAA0B,GAAI,OACzC,4BAAQxB,IAAKwB,EAAKoM,GAAWhH,MAAOpF,EAAKoM,IACpCpM,EAAKoM,GAAU,OACbpM,EAAKqM,GAAWrM,EAAKqM,GAAW,IAAI,eACpCrM,EAAKkV,GAAYlV,EAAKkV,GAAY,IAAI,iBACtClV,EAAKgT,GAAahT,EAAKgT,GAAa,UAM/CwD,IAA4C,IAAxBA,EAAiBjS,MACjCC,MAAM,iEACNvH,GAAW,IAEVuZ,GAAoBA,EAAiBxW,MAAQwW,EAAiB5R,OACnEiS,EAAiBL,EAAiBxW,KAAK1B,KAAI,SAAA0B,GAAI,OAC/C,4BAAQxB,IAAKwB,EAAKwW,EAAiB5R,MAAM,GAAGjG,MAAOyG,MAAOpF,EAAKwW,EAAiB5R,MAAM,GAAGjG,QACnFqB,EAAKwW,EAAiB5R,MAAM,GAAGjG,MAAMqB,EAAKwW,EAAiB5R,MAAM,GAAGjG,MAAM,IAC3E,OAAOqB,EAAKwW,EAAiB5R,MAAM,GAAGjG,MAAMqB,EAAKwW,EAAiB5R,MAAM,GAAGjG,MAAM,SAKtF+X,IAA4D,IAAhCA,EAAyBnS,OACrDC,MAAM,iEACNvH,GAAW,MAGjB,CAAC6M,EAAiBC,EAAkBC,EAAgBC,EAAiBuM,EAAiBC,EACxFC,EAAyBC,IAEzBva,qBAAU,WACN,SAAS4Q,IACL/H,SAAS+C,cAAc,uBAAuBxC,aAC1C,UAAU,yCAIlB,OAFAxJ,OAAOiR,iBAAiB,WAAWD,GAE5B,WACChR,OAAOkR,oBAAoB,WAAWF,MAE5C,IAiCN,IAAImI,EAAsB,KA4B1B,OAzBKrL,GAAoBA,EAAiB5J,OAAU6J,GAAqBC,GAAmBA,EAAgB9J,OAAU+J,GACrHuM,GAAoBA,EAAiBtW,OAAUuW,GAAsBC,GAA4BA,EAAyBxW,OACxHyW,KACHxB,EACI,yBAAK9X,UAAU,uBACVyM,GAAoBA,EAAiB5J,MAAO,gDAAgD4J,EAAiB5J,MAAM2E,MACnH,UAAUiF,EAAiB5J,MAAM4E,KAAK,aAAagF,EAAiB5J,MAAM6E,WAAW,KACrFgF,EAAmB,yCAAyCA,EAAoB,KACjF,6BACA,6BACCC,GAAmBA,EAAgB9J,MAAO,+CAA+C8J,EAAgB9J,MAAM2E,MAC/G,UAAUmF,EAAgB9J,MAAM4E,KAAK,aAAakF,EAAgB9J,MAAM6E,WAAW,KACnFkF,EAAkB,wCAAwCA,EAAmB,KAC9E,6BACA,6BACCuM,GAAoBA,EAAiBtW,MAAO,iDAAiDsW,EAAiBtW,MAAM2E,MACpH,UAAU2R,EAAiBtW,MAAM4E,KAAK,aAAa0R,EAAiBtW,MAAM6E,WAAW,KACrF0R,EAAmB,0CAA0CA,EAAoB,KAClF,6BACA,6BACCC,GAA4BA,EAAyBxW,MAAO,oDAAoDwW,EAAyBxW,MAAM2E,MAC/I,UAAU6R,EAAyBxW,MAAM4E,KAAK,aAAa4R,EAAyBxW,MAAM6E,WAAW,KACrG4R,EAA2B,6CAA6CA,EAA4B,OAI7G,kBAAC,EAAD,CAAM1F,WAAYA,EAAYb,iBAAkBA,EAAkB/P,IAAKA,EAAK9B,KAAK,gBAAgBwS,YAAY,kBAEzG,gBAAE/B,EAAF,EAAEA,MAAMf,EAAR,EAAQA,SAASgB,EAAjB,EAAiBA,eAAe+B,EAAhC,EAAgCA,SAASE,EAAzC,EAAyCA,SAASC,EAAlD,EAAkDA,SAAS/D,EAA3D,EAA2DA,aAAagE,EAAxE,EAAwEA,kBAAxE,OACC,kBAAC,IAAD,KACG,kBAAC,IAAD,CAAO/D,OAAK,EAAC1N,KAAI,UAAKA,EAAL,aACb,kBAAC,EAAD,CAAaD,YAAa6W,GAAiB7W,YACvCuI,SAAUsO,GAAiB5W,KAC3BsS,aAAc,CAAChB,EAAW,GAAGA,EAAW,IACxCmB,cAAe,CAACmE,GAAiB7W,YAAY,MAAM,OAAO,cAAc,qBACxE2S,cAAe,CAACpB,EAAW,GAAGnP,EAAiBmP,EAAW,IAAoB,QAAhBA,EAAW,GAAW,SAASA,EAAW,GAAG,QAAQA,EAAW,IAC9HqB,YAAa,CAAC,GAAG,YAAY,cAAc,QAAQ,MAAM,WAAW,YACpEC,YAAatB,EAAW+C,GACxBvB,kBAAmBA,EACnBI,eAAgBA,EAChBC,OAAO,wFAGf,kBAAC,IAAD,CAAOzF,OAAK,EAAC1N,KAAMA,GACf,kBAAC,EAAD,KACA,yBAAKtC,UAAU,0BAIX,wBAAIA,UAAU,SAAiB,WAAR2R,EAAkB,SAAS,UAAY,IAAKuH,GAAiB7W,aACpF,2BAAOrC,UAAU,gBAAjB,cACC+P,EACA+H,EAID,0BAAM3H,SAAU,SAAChR,GAAKA,EAAEiR,iBAA6B,WAARuB,EAAkBgC,IAAiBE,MAC5E,yBAAK7T,UAAU,OACX,8BAAUA,UAAU,yEAAyE4Q,SAAUA,GACnG,4BAAQ5Q,UAAU,6CAA6C,sCAAW,0BAAMA,UAAU,gBAAhB,OAC1E,2BAAOA,UAAU,OAAO2J,QAAQ,YAAhC,aACA,yBAAK3J,UAAU,eAIX,2BAAOY,KAAK,OAAOF,GAAG,WAAWqH,MAAO6L,EAAW,GAAInL,SAAU,SAACtJ,GAAD,OAAKA,GAAGkR,UAAQ,EAACrQ,UAAU,iBAC5F,4BAAQA,UAAU,eAAeI,MAAO,CAAC2Q,KAAK,SAAUtI,SAAU,SAACtJ,GAC/D,IAAI4Y,EAAW,GACXC,EAAc,GACd0B,EAAwB,GAE5BjN,EAAiB9J,KAAKgF,SAAQ,SAAAhF,GAEvBA,EAAK8J,EAAiBlF,MAAM,GAAGjG,QAAQnC,EAAE+I,OAAOH,QAC/CgQ,EAAWpV,EAAK8J,EAAiBlF,MAAM,GAAGjG,MAAMqB,EAAK8J,EAAiBlF,MAAM,GAAGjG,MAAM,GACrF0W,EAAcrV,EAAK8J,EAAiBlF,MAAM,GAAGjG,MAAMqB,EAAK8J,EAAiBlF,MAAM,GAAGjG,MAAM,GACxFoY,EAAwB/W,EAAK8J,EAAiBlF,MAAM,GAAGjG,MAAMqB,EAAK8J,EAAiBlF,MAAM,GAAGjG,MAAM,OAM9GyR,EAAiB,CAAC5T,EAAE+I,OAAOH,MAAMgQ,EAAWC,GAA5B,mBACTpE,EAAWhL,MAAM,EAtM/B,IAqMuB,CAC8B8Q,GAD9B,YAET9F,EAAWhL,MAAM+Q,QAEpB,4BAAQ5R,MAAM,IAAd,wBACCqF,IAGT,2BAAOpN,UAAU,OAAO2J,QAAQ,cAAhC,eACA,2BAAOjJ,GAAG,aAAaqH,MAAO6L,EAAW,GAAInL,SAAU,SAACtJ,GAAD,OAAKA,GAAGkR,UAAQ,EAACrQ,UAAU,iBAClF,2BAAOA,UAAU,OAAO2J,QAAQ,iBAAhC,kBACA,8BAAUjJ,GAAG,gBAAgBqH,MAAO6L,EAAW,GAAInL,SAAU,SAACtJ,GAAD,OAAKA,GAAGkR,UAAQ,EAACrQ,UAAU,kBAI5F,yBAAKA,UAAU,4BACX,2BAAO2J,QAAQ,gBAAgB3J,UAAU,QAAzC,kBAA+D,0BAAMA,UAAU,gBAAhB,MAC9D+T,EAAkB,CACftL,SAASA,EACTwL,OAAO,GACPK,SAAS,EACTC,QAAQ,kBAIZ,2BAAO5K,QAAQ,OAAO3J,UAAU,QAAhC,QAA4C,0BAAMA,UAAU,gBAAhB,MAC5C,2BAAOY,KAAK,OAAOgQ,SAAUA,EAAUP,UAAQ,EAACtI,MAAO6L,EAAW,GAAInL,SAAU,SAACtJ,GAAD,OAAKsJ,EAAStJ,EAAE+I,OAAOH,MAAM,IAC7G/H,UAAU,iBAEV,2BAAOA,UAAU,OAAO2J,QAAQ,UAAhC,WAAkD,0BAAM3J,UAAU,gBAAhB,MAClD,yBAAKA,UAAU,eACX,2BAAOY,KAAK,OAAOF,GAAG,SAASqH,MAAO6L,EAAW,GAAInL,SAAU,SAACtJ,GAAD,OAAKA,GAAGkR,UAAQ,EAACrQ,UAAU,eAC1F4Q,SAAUA,IACV,4BAAQ5Q,UAAU,eAAeI,MAAO,CAAC2Q,KAAK,SAAUH,SAAUA,EAAUnI,SAAU,SAACtJ,GACvFsJ,EAAStJ,EAAE+I,OAAOH,MAAM,KAEpB,4BAAQA,MAAM,IAAd,wBACCwR,IAIT,2BAAO5P,QAAQ,aAAa3J,UAAU,QAAtC,eACA,4BAAQU,GAAG,aAAa+H,SAAU,SAACtJ,GAAD,OAAMsJ,EAAStJ,EAAE+I,OAAOH,MAAM,IAAIA,MAAO6L,EAAW,GAAIhD,SAAUA,EACpG5Q,UAAU,gBACN,4BAAQ+H,MAAM,OAAd,UACA,4BAAQA,MAAM,MAAd,WACA,4BAAQA,MAAM,MAAd,WACA,4BAAQA,MAAM,MAAd,WACA,4BAAQA,MAAM,MAAd,YAGJ,2BAAO4B,QAAQ,cAAc3J,UAAU,QAAvC,eACA,8BAAUU,GAAG,cAAc+H,SAAU,SAACtJ,GAAD,OAAKsJ,EAAStJ,EAAE+I,OAAOH,MAAM,IAAIA,MAAO6L,EAAW,GACxFhD,SAAUA,EAAU5Q,UAAU,kBAMlC,kBAAC,GAAD,CAAY2W,aAAcA,EAAcR,qBA9PrC,GA+PHvF,SAAUA,EAAUgD,WAAYA,EAAYb,iBAAkBA,EAC9DpG,gBAAiBA,EAAiBW,UAAWA,EAAWiJ,eAAe,MACvEnB,kBAAmBA,EAAmBwB,gBAAiB,uBAIvD,wBAAI5W,UAAU,+BACT,UAAUoE,EAAmBoR,MAEzB,WAAR7D,EAAiB,KAAM,wBAAI3R,UAAU,0BAClC,0BAAMA,UAAU,yBACX,uBAAuBoE,EArKxD,WACI,IAAMmU,EAAOc,EAA0BA,EAAyB9R,MAAM,GAAGjG,KAAK,KAE9E,OAAOkU,KAAkB6D,EAA0BA,EAAyB1W,KAAKsJ,QAAO,SAACjI,EAAEC,GAAH,OACpFD,EAAEC,EAAEsU,KAAQ,GAAG,GAiKoDqB,MAI1C,WAARjI,EAAiB,KAElB,kBAAC,GAAD,CAA6B2G,gCAAiCe,EAC9DzI,SAAUA,EAAU4H,mBAAoB,qBAI5C,kBAAC,EAAD,CAAY7G,MAAOA,EAAOgC,SAAUA,EAAUE,SAAUA,EAAUC,SAAUA,EAC5ElC,eAAgBA,EAAgBtP,KAAI,UAAKA,EAAL,kBAQhD,kBAAC,IAAD,CAAUrC,GAAIiZ,GAAiB5W,WAM3C4W,GAAiB7W,YAAY,gBAC7B6W,GAAiB5W,KAAK,oBAEP4W,UC9Vf,SAASW,GAAepb,GACpB,IAAMuE,EAAI,CACN9B,KAAK,IAAIuW,gBAAgBhZ,EAAMiZ,SAAStR,QAAQuR,IAAI,QACpDjX,GAAG,IAAI+W,gBAAgBhZ,EAAMiZ,SAAStR,QAAQuR,IAAI,OAH3B,EAK6BpV,EAAS,CAC7DS,IAAI,eACJE,KAAK,CACDoC,OAAO,OACPC,QAAQ,CAAC,eAAe,oBACxBC,KAAKC,KAAKC,UAAU,CAACxE,KAAK,WAC1ByE,YAAY,aAXO,sBAKd8G,EALc,EAKnB9J,KAA4B+J,EALT,EAKG7J,MALH,EAe2BN,EAAS,CAC3DS,IAAI,eACJE,KAAK,CACDoC,OAAO,OACPC,QAAQ,CAAC,eAAe,oBACxBC,KAAKC,KAAKC,UAAU,CAChBxE,KAAK,QACLuB,MAAMO,EAAItC,GAAG,CAACsC,EAAItC,IAAI,OAE1BiF,YAAY,aAxBO,sBAedgH,EAfc,EAenBhK,KAA2BiK,EAfR,EAeE/J,MAfF,EA4B6BN,EAAS,CAC7DS,IAAI,yBACJE,KAAK,CACDoC,OAAO,OACPC,QAAQ,CAAC,eAAe,oBACxBC,KAAKC,KAAKC,UAAU,CAACxE,KAAK,eAC1ByE,YAAY,aAlCO,sBA4BdwT,EA5Bc,EA4BnBxW,KAA4ByW,EA5BT,EA4BGvW,MA5BH,EAsC6CN,EAASS,EAAI9B,MAAQ8B,EAAItC,GAAG,CAChGsC,IAAI,sBACJE,KAAK,CACDoC,OAAO,OACPC,QAAQ,CAAC,eAAe,oBACxBC,KAAKC,KAAKC,UAAU,CAChBxE,KAAK,aACLuB,MAAM,CAACO,EAAItC,MAEfiF,YAAY,YAElB,MAjDyB,sBAsCd0T,EAtCc,EAsCnB1W,KAAoC2W,EAtCjB,EAsCWzW,MAehC8T,EAAa,EArDQ,EAwDWjY,mBAAS,MAxDpB,mBAwDpB0O,EAxDoB,KAwDTC,EAxDS,OAyDS3O,mBAAS,MAzDlB,mBAyDpB4O,EAzDoB,KAyDVC,EAzDU,OA0DW7O,mBAAS,MA1DpB,mBA0DpB6a,EA1DoB,KA0DTC,EA1DS,OA2DS9a,mBAAS,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,MAAM,GAAG,GAAG,GAAG,KA3DpD,mBA2DpBkV,EA3DoB,KA2DTb,EA3DS,KA6DpBzQ,EAAQuM,cAARvM,KACA1C,EAAcC,qBAAWL,GAAzBI,WAsEP,SAAS6I,EAASV,EAAMlE,GACpBkP,EAAiB,GAAD,mBAAKa,EAAWhL,MAAM,EAAE/E,IAAxB,CAA+BkE,GAA/B,YAAwC6L,EAAWhL,MAAM/E,EAAM,MAGnF,SAASuR,EAAkB5M,GACvB,MAAqC,KAAjCoL,EAAW+C,GAAcnO,GAAG,IAA4C,KAAjCoL,EAAW+C,GAAcnO,GAAG,IAA4C,KAAjCoL,EAAW+C,GAAcnO,GAAG,GACjGiR,WAAW7F,EAAW+C,GAAcnO,GAAG,IAAIiR,WAAW7F,EAAW+C,GAAcnO,GAAG,IAC1FiR,WAAW7F,EAAW+C,GAAcnO,GAAG,IAChC,GAGhB,SAASgN,IACL,IAAIjK,EAAM,EAQV,OAPAqI,EAAW+C,GAAchP,SAAQ,SAACkP,EAAQrO,GAEF,KAAjCoL,EAAW+C,GAAcnO,GAAG,IAA4C,KAAjCoL,EAAW+C,GAAcnO,GAAG,IACrC,KAAjCoL,EAAW+C,GAAcnO,GAAG,KAC3B+C,GAAckO,WAAW7F,EAAW+C,GAAcnO,GAAG,IAAIiR,WAAW7F,EAAW+C,GAAcnO,GAAG,IAC/FiR,WAAW7F,EAAW+C,GAAcnO,GAAG,QAEtC+C,EAxFXxM,qBAAU,WAcN,GAZI0N,IAA4C,IAAxBA,EAAiBvF,MAC7BC,MAAM,iEACNvH,GAAW,IAEd6M,GAAoBA,EAAiB9J,MAAQ8J,EAAiBlF,OACnE8F,EAAiBZ,EAAiB9J,KAAK1B,KAAI,SAAA0B,GAAI,OAC/C,4BAAQxB,IAAKwB,EAAK8J,EAAiBlF,MAAM,GAAGjG,MAAOyG,MAAOpF,EAAK8J,EAAiBlF,MAAM,GAAGjG,OACpFqB,EAAK8J,EAAiBlF,MAAM,GAAGjG,MAAM,OAAOqB,EAAK8J,EAAiBlF,MAAM,GAAGjG,MAAMqB,EAAK8J,EAAiBlF,MAAM,GAAGjG,MAAM,SAK3HqL,IAA0C,IAAvBA,EAAgBzF,KAC3BC,MAAM,iEACNvH,GAAW,QAElB,GAAI+M,GAAmBA,EAAgBhK,MAAQgK,EAAgBpF,MAAO,CACvE,IAAMwH,EAASpC,EAAgBpF,MAAM,GAAGjG,KAClC0N,EAAUrC,EAAgBpF,MAAM,GAAGjG,KACnCuW,EAAWlL,EAAgBpF,MAAM,GAAGjG,KACpCqU,EAAYhJ,EAAgBpF,MAAM,GAAGjG,KAE3CiM,EAAgBZ,EAAgBhK,KAAK1B,KAAI,SAAA0B,GAAI,OACzC,4BAAQxB,IAAKwB,EAAKoM,GAAWhH,MAAOpF,EAAKoM,IACpCpM,EAAKoM,GAAU,OACbpM,EAAKqM,GAAWrM,EAAKqM,GAAW,IAAI,eACpCrM,EAAKkV,GAAYlV,EAAKkV,GAAY,IAAI,iBACtClV,EAAKgT,GAAahT,EAAKgT,GAAa,UAM/CwD,IAA4C,IAAxBA,EAAiBjS,MACjCC,MAAM,iEACNvH,GAAW,IAEVuZ,GAAoBA,EAAiBxW,MAAQwW,EAAiB5R,OACnEiS,EAAiBL,EAAiBxW,KAAK1B,KAAI,SAAA0B,GAAI,OAC/C,4BAAQxB,IAAKwB,EAAKwW,EAAiB5R,MAAM,GAAGjG,MAAOyG,MAAOpF,EAAKwW,EAAiB5R,MAAM,GAAGjG,QACnFqB,EAAKwW,EAAiB5R,MAAM,GAAGjG,MAAMqB,EAAKwW,EAAiB5R,MAAM,GAAGjG,MAAM,IAC3E,OAAOqB,EAAKwW,EAAiB5R,MAAM,GAAGjG,MAAMqB,EAAKwW,EAAiB5R,MAAM,GAAGjG,MAAM,SAKtF+X,IAA4D,IAAhCA,EAAyBnS,OACrDC,MAAM,iEACNvH,GAAW,MAGjB,CAAC6M,EAAiBC,EAAkBC,EAAgBC,EAAiBuM,EAAiBC,EACpFC,EAAyBC,IAE7Bva,qBAAU,WACN,SAAS4Q,IACL/H,SAAS+C,cAAc,uBAAuBxC,aAC1C,UAAU,yCAIlB,OAFAxJ,OAAOiR,iBAAiB,WAAWD,GAE5B,WACChR,OAAOkR,oBAAoB,WAAWF,MAE5C,IAiCN,IAAImI,EAAsB,KA6B1B,OA1BKrL,GAAoBA,EAAiB5J,OAAU6J,GAAqBC,GAAmBA,EAAgB9J,OAAU+J,GACrHuM,GAAoBA,EAAiBtW,OAAUuW,GAAsBC,GAA4BA,EAAyBxW,OACxHyW,KACHxB,EACI,yBAAK9X,UAAU,uBACVyM,GAAoBA,EAAiB5J,MAAO,gDAAgD4J,EAAiB5J,MAAM2E,MACnH,UAAUiF,EAAiB5J,MAAM4E,KAAK,aAAagF,EAAiB5J,MAAM6E,WAAW,KACrFgF,EAAmB,yCAAyCA,EAAoB,KACjF,6BACA,6BACCC,GAAmBA,EAAgB9J,MAAO,+CAA+C8J,EAAgB9J,MAAM2E,MAC/G,UAAUmF,EAAgB9J,MAAM4E,KAAK,aAAakF,EAAgB9J,MAAM6E,WAAW,KACnFkF,EAAkB,wCAAwCA,EAAmB,KAC9E,6BACA,6BACCuM,GAAoBA,EAAiBtW,MAAO,iDAAiDsW,EAAiBtW,MAAM2E,MACpH,UAAU2R,EAAiBtW,MAAM4E,KAAK,aAAa0R,EAAiBtW,MAAM6E,WAAW,KACrF0R,EAAmB,0CAA0CA,EAAoB,KAClF,6BACA,6BACCC,GAA4BA,EAAyBxW,MAAO,oDAAoDwW,EAAyBxW,MAAM2E,MAC/I,UAAU6R,EAAyBxW,MAAM4E,KAAK,aAAa4R,EAAyBxW,MAAM6E,WAAW,KACrG4R,EAA2B,6CAA6CA,EAA4B,OAK7G,kBAAC,EAAD,CAAM1F,WAAYA,EAAYb,iBAAkBA,EAAkB/P,IAAKA,EAAK9B,KAAK,aAAawS,YAAY,eAEtG,gBAAE/B,EAAF,EAAEA,MAAMf,EAAR,EAAQA,SAASgB,EAAjB,EAAiBA,eAAe+B,EAAhC,EAAgCA,SAASE,EAAzC,EAAyCA,SAASC,EAAlD,EAAkDA,SAAS/D,EAA3D,EAA2DA,aAAagE,EAAxE,EAAwEA,kBAAxE,OACC,kBAAC,IAAD,KACG,kBAAC,IAAD,CAAO/D,OAAK,EAAC1N,KAAI,UAAKA,EAAL,aACb,kBAAC,EAAD,CAAaD,YAAawX,GAAcxX,YACpCuI,SAAUiP,GAAcvX,KACxBsS,aAAc,CAAChB,EAAW,GAAGA,EAAW,IACxCmB,cAAe,CAAC8E,GAAcxX,YAAY,MAAM,OAAO,cAAc,qBACrE2S,cAAe,CAACpB,EAAW,GAAGnP,EAAiBmP,EAAW,IAAoB,QAAhBA,EAAW,GAAW,SAASA,EAAW,GAAG,QAAQA,EAAW,IAC9HqB,YAAa,CAAC,GAAG,YAAY,cAAc,QAAQ,MAAM,WAAW,YACpEC,YAAatB,EAAW+C,GACxBvB,kBAAmBA,EACnBI,eAAgBA,EAChBC,OAAO,wFAGf,kBAAC,IAAD,CAAOzF,OAAK,EAAC1N,KAAMA,GACf,kBAAC,EAAD,KACA,yBAAKtC,UAAU,0BAIX,wBAAIA,UAAU,SAAiB,WAAR2R,EAAkB,SAAS,UAAY,IAAKkI,GAAcxX,aACjF,2BAAOrC,UAAU,gBAAjB,cACC+P,EACA+H,EAID,0BAAM3H,SAAU,SAAChR,GAAKA,EAAEiR,iBAA6B,WAARuB,EAAkBgC,IAAiBE,MAC5E,yBAAK7T,UAAU,OACX,8BAAUA,UAAU,yEAAyE4Q,SAAUA,GACnG,4BAAQ5Q,UAAU,6CAA6C,sCAAW,0BAAMA,UAAU,gBAAhB,OAC1E,2BAAOA,UAAU,OAAO2J,QAAQ,YAAhC,aACA,yBAAK3J,UAAU,eAIX,2BAAOY,KAAK,OAAOF,GAAG,WAAWqH,MAAO6L,EAAW,GAAInL,SAAU,SAACtJ,GAAD,OAAKA,GAAGkR,UAAQ,EAACrQ,UAAU,iBAC5F,4BAAQA,UAAU,eAAeI,MAAO,CAAC2Q,KAAK,SAAUtI,SAAU,SAACtJ,GAC/D,IAAI4Y,EAAW,GACXC,EAAc,GACd0B,EAAwB,GAE5BjN,EAAiB9J,KAAKgF,SAAQ,SAAAhF,GAEvBA,EAAK8J,EAAiBlF,MAAM,GAAGjG,QAAQnC,EAAE+I,OAAOH,QAC/CgQ,EAAWpV,EAAK8J,EAAiBlF,MAAM,GAAGjG,MAAMqB,EAAK8J,EAAiBlF,MAAM,GAAGjG,MAAM,GACrF0W,EAAcrV,EAAK8J,EAAiBlF,MAAM,GAAGjG,MAAMqB,EAAK8J,EAAiBlF,MAAM,GAAGjG,MAAM,GACxFoY,EAAwB/W,EAAK8J,EAAiBlF,MAAM,GAAGjG,MAAMqB,EAAK8J,EAAiBlF,MAAM,GAAGjG,MAAM,OAK9GyR,EAAiB,CAAC5T,EAAE+I,OAAOH,MAAMgQ,EAAWC,GAA5B,mBACTpE,EAAWhL,MAAM,EArM/B,IAoMuB,CAC8B8Q,GAD9B,YAET9F,EAAWhL,MAAM+Q,QAEpB,4BAAQ5R,MAAM,IAAd,wBACCqF,IAGT,2BAAOpN,UAAU,OAAO2J,QAAQ,cAAhC,eACA,2BAAOjJ,GAAG,aAAaqH,MAAO6L,EAAW,GAAInL,SAAU,SAACtJ,GAAD,OAAKA,GAAGkR,UAAQ,EAACrQ,UAAU,iBAClF,2BAAOA,UAAU,OAAO2J,QAAQ,iBAAhC,kBACA,8BAAUjJ,GAAG,gBAAgBqH,MAAO6L,EAAW,GAAInL,SAAU,SAACtJ,GAAD,OAAKA,GAAGkR,UAAQ,EAACrQ,UAAU,kBAI5F,yBAAKA,UAAU,4BACX,2BAAO2J,QAAQ,kBAAkB3J,UAAU,QAA3C,qBAAoE,0BAAMA,UAAU,gBAAhB,MACnE+T,EAAkB,CACftL,SAASA,EACTwL,OAAO,GACPK,SAAS,EACTC,QAAQ,oBAIZ,2BAAO5K,QAAQ,OAAO3J,UAAU,QAAhC,QAA4C,0BAAMA,UAAU,gBAAhB,MAC5C,2BAAOY,KAAK,OAAOgQ,SAAUA,EAAUP,UAAQ,EAACtI,MAAO6L,EAAW,GAAInL,SAAU,SAACtJ,GAAD,OAAKsJ,EAAStJ,EAAE+I,OAAOH,MAAM,IAC7G/H,UAAU,iBAEV,2BAAOA,UAAU,OAAO2J,QAAQ,UAAhC,WAAkD,0BAAM3J,UAAU,gBAAhB,MAClD,yBAAKA,UAAU,eACX,2BAAOY,KAAK,OAAOF,GAAG,SAASqH,MAAO6L,EAAW,GAAInL,SAAU,SAACtJ,GAAD,OAAKA,GAAGkR,UAAQ,EAACrQ,UAAU,eAC1F4Q,SAAUA,IACV,4BAAQ5Q,UAAU,eAAeI,MAAO,CAAC2Q,KAAK,SAAUH,SAAUA,EAAUnI,SAAU,SAACtJ,GACvFsJ,EAAStJ,EAAE+I,OAAOH,MAAM,KAEpB,4BAAQA,MAAM,IAAd,wBACCwR,IAIT,2BAAO5P,QAAQ,aAAa3J,UAAU,QAAtC,eACA,4BAAQU,GAAG,aAAa+H,SAAU,SAACtJ,GAAD,OAAMsJ,EAAStJ,EAAE+I,OAAOH,MAAM,IAAIA,MAAO6L,EAAW,GAAIhD,SAAUA,EACpG5Q,UAAU,gBACN,4BAAQ+H,MAAM,OAAd,UACA,4BAAQA,MAAM,MAAd,WACA,4BAAQA,MAAM,MAAd,WACA,4BAAQA,MAAM,MAAd,WACA,4BAAQA,MAAM,MAAd,YAGJ,2BAAO4B,QAAQ,cAAc3J,UAAU,QAAvC,eACA,8BAAUU,GAAG,cAAc+H,SAAU,SAACtJ,GAAD,OAAKsJ,EAAStJ,EAAE+I,OAAOH,MAAM,IAAIA,MAAO6L,EAAW,GACxFhD,SAAUA,EAAU5Q,UAAU,kBAMlC,kBAAC,GAAD,CAAY2W,aAAcA,EAAcR,qBA7PrC,GA8PHvF,SAAUA,EAAUgD,WAAYA,EAAYb,iBAAkBA,EAC9DpG,gBAAiBA,EAAiBW,UAAWA,EAAWiJ,eAAe,MACvEnB,kBAAmBA,EAAmBwB,gBAAiB,oBAIvD,wBAAI5W,UAAU,0BACT,UAAUoE,EAAmBoR,MAEzB,WAAR7D,EAAiB,KAAM,wBAAI3R,UAAU,0BAClC,0BAAMA,UAAU,yBACX,uBAAuBoE,EApKxD,WACI,IAAMmU,EAAOc,EAA0BA,EAAyB9R,MAAM,GAAGjG,KAAK,KAE9E,OAAOkU,KAAkB6D,EAA0BA,EAAyB1W,KAAKsJ,QAAO,SAACjI,EAAEC,GAAH,OACpFD,EAAEC,EAAEsU,KAAQ,GAAG,GAgKoDqB,MAI1C,WAARjI,EAAiB,KAElB,kBAAC,GAAD,CAA6B2G,gCAAiCe,EAC9DzI,SAAUA,EAAU4H,mBAAoB,qBAI5C,kBAAC,EAAD,CAAY7G,MAAOA,EAAOgC,SAAUA,EAAUE,SAAUA,EAAUC,SAAUA,EAC5ElC,eAAgBA,EAAgBtP,KAAI,UAAKA,EAAL,kBAQpD,kBAAC,IAAD,CAAUrC,GAAI4Z,GAAcvX,WAKpCuX,GAAcxX,YAAY,aAC1BwX,GAAcvX,KAAK,iBAEJuX,UChKAC,OA1Mf,SAAsBrb,GAClB,IAAMqI,EAAOrI,EAAMsb,sBAAsBtb,EAAMsb,sBAAsBxS,MAAM,GAAGjG,KAAK,KAC7EA,EAAK7C,EAAMsb,sBAAsBtb,EAAMsb,sBAAsBxS,MAAM,GAAGjG,KAAK,KAC3EV,EAAKnC,EAAMsb,sBAAuBtb,EAAMsb,sBAAsBxS,MAAM,GAAGjG,KAAK,KAC5EoD,EAAKjG,EAAMsb,sBAAsBtb,EAAMsb,sBAAsBxS,MAAM,GAAGjG,KAAK,KAC3E0Y,EAASvb,EAAMsb,sBAAuBtb,EAAMsb,sBAAsBxS,MAAM,GAAGjG,KAAK,KAChF2Y,EAAYxb,EAAMsb,sBAAsBtb,EAAMsb,sBAAsBxS,MAAM,GAAGjG,KAAK,KAGlF4Y,EAAqB,EACrBC,EAAqB,EAG3B,SAASC,EAAoBjb,EAAE0E,EAAMgS,EAAWC,GAC5CrX,EAAMsU,iBAAiBtU,EAAMmV,WAAWhL,MAAM,EAAE/E,GAC/CkS,OAAO,CAACtX,EAAMmV,WAAW/P,GAAO+E,MAAM,EAAEiN,GACxCE,OAAO,CAACtX,EAAMmV,WAAW/P,GAAOgS,GAAYjN,MAAM,EAAEkN,GACpDC,OAAO5W,GACP4W,OAAOtX,EAAMmV,WAAW/P,GAAOgS,GAAYjN,MAAMkN,EAAW,MAC5DC,OAAOtX,EAAMmV,WAAW/P,GAAO+E,MAAMiN,EAAW,MAChDE,OAAOtX,EAAMmV,WAAWhL,MAAM/E,EAAM,KAGzC,SAASwW,EAAiBlb,EAAE0E,GACxBpF,EAAMsU,iBAAiBtU,EAAMmV,WAAWhL,MAAM,EAAE/E,GAC/CkS,OAAO,CAACtX,EAAMmV,WAAW/P,GAAO+E,MAAM,EAAEnK,EAAMmV,WAAW/P,GAAOnC,QAChEqU,OAAO,CAAC5W,MACR4W,OAAOtX,EAAMmV,WAAWhL,MAAM/E,EAAM,KAGzC,SAASyW,EAAoBzW,EAAM0W,GAE/B9b,EAAMsU,iBAAiBtU,EAAMmV,WAAWhL,MAAM,EAAE/E,GAC/CkS,OAAO,CAACtX,EAAMmV,WAAW/P,GAAO+E,MAAM,EAAE2R,GACxCxE,OAAOtX,EAAMmV,WAAW/P,GAAO+E,MAAM2R,EAA6B,MAClExE,OAAOtX,EAAMmV,WAAWhL,MAAM/E,EAAM,KAIzC,SAAS2W,EAActZ,EAAKuZ,GAGpBhc,EAAMmV,WAAW6G,GAAgB/Y,OAAO,EAGxCjD,EAAMmV,WAAW6G,GAAgB9S,SAAQ,SAACyE,EAAM5D,GACzC4D,EAAM8N,KAAwBhZ,EAAK4F,GAG/B5F,EAAK+Y,GAAaxb,EAAMic,2BACvBN,EACI3b,EAAMic,2BAA2BD,EAAejS,EAAE2R,GAGtDC,EAAoBlZ,EAAK+Y,GAAaQ,EAAejS,EAAE2R,GAGtDjZ,EAAK+Y,GAAaxb,EAAMic,2BACzBL,EAAiB,CAACnZ,EAAK4F,GAAQrI,EAAMic,4BAA4BD,GAChEJ,EAAiB,CAACnZ,EAAK4F,GAAQ5F,EAAK+Y,IAAcQ,MAKvDvZ,EAAK+Y,GAAaxb,EAAMic,2BACxBL,EAAiB,CAACnZ,EAAK4F,GAAQrI,EAAMic,4BAA4BD,GAChEJ,EAAiB,CAACnZ,EAAK4F,GAAQ5F,EAAK+Y,IAAcQ,GAInE,SAASE,EAAuBzZ,EAAKuZ,GACjC,IAAIpV,GAAO,EAOX,OANA5G,EAAMmV,WAAW6G,GAAgB9S,SAAQ,SAAAyE,GAClCA,EAAM8N,KAAwBhZ,EAAK4F,IAAYrI,EAAMmS,WACxDvL,GAAO,MAIJA,EAEX,SAASuV,EAAiC1Z,EAAKuZ,GAC3C,IAAIpV,EAAO,KAKX,OAJA5G,EAAMmV,WAAW6G,GAAgB9S,SAAQ,SAACyE,EAAM5D,GACzC4D,EAAM8N,KAAwBhZ,EAAK4F,KACtCzB,EAAOmD,MAEJnD,EAGX,SAASyC,EAAQ5G,EAAKuZ,GAClB,IAAIpV,GAAO,EAUX,OARI5G,EAAMmV,WAAW6G,IAEjBhc,EAAMmV,WAAW6G,GAAgB9S,SAAQ,SAAAyE,GAClCA,EAAM8N,KAAwBhZ,EAAK4F,KAClCzB,GAAO,MAIZA,EAGX,OACA,8BAAUrF,UAAU,kEAChB,4BAAQA,UAAU,0DACd,wBAAIA,UAAU,+BAAd,UAAmD,6BAAnD,IAA0DvB,EAAMoc,oBAEpE,yBAAK7a,UAAU,iBAEX,yBAAKA,UAAU,mBAAmBI,MAAO,CAAC8Q,WAAW,EAAEC,YAAY,IAC/D,wBAAInR,UAAU,MAAMI,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,KAAzE,WACA,wBAAIlQ,UAAU,MAAMI,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,KAAzE,QACA,wBAAIlQ,UAAU,MAAMI,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,KAAzE,QACA,wBAAIlQ,UAAU,MAAMI,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,KAAzE,QACA,wBAAIlQ,UAAU,MAAMI,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,KAAzE,YACA,wBAAIlQ,UAAU,MAAMI,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,KAAzE,eACA,wBAAIlQ,UAAU,WAAWI,MAAO,CAAC2Q,KAAK,WAAWd,YAAY,EAAEC,aAAa,KAC5E,wBAAIlQ,UAAU,MAAMI,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,KAAzE,QAEHzR,EAAMsb,sBAAuBtb,EAAMsb,sBAAsBpX,KAAK1B,KAAI,SAACC,EAAKsH,GAAN,OAClE,yBAAKxI,UAAU,kBAAkBI,MAAO,CAAC8Q,WAAW,EAAEC,YAAY,GAAIhQ,IAAKD,EAAK4F,IAC7E,uBAAG9G,UAAU,kBAAkBI,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,GAAG8G,WAAW,WAAWiC,cAAc,aAAc/X,EAAK4F,IAC9I,uBAAG9G,UAAU,gCAAgCI,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,GAAG8G,WAAW,WAAWiC,cAAc,aAAc/X,EAAKI,IAC5J,uBAAGtB,UAAU,kBAAkBI,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,GAAG8G,WAAW,WAAWiC,cAAc,aAAc/X,EAAKN,IAC9I,uBAAGZ,UAAU,kBAAkBI,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,GAAG8G,WAAW,WAAWiC,cAAc,aAAcxU,EAAiBvD,EAAKwD,KAC/J,uBAAG1E,UAAU,kBAAkBI,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,GAAG8G,WAAW,WAAWiC,cAAc,aAAc7U,EAAmBlD,EAAK8Y,KACjK,uBAAGha,UAAU,kBAAkBI,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,GAAG8G,WAAW,WAAWiC,cAAc,aAAc7U,EAAmBlD,EAAK+Y,KACjK,2BAAOtQ,QAAQ,MAAM3J,UAAU,YAC/B,2BAAOY,KAAK,WAAWF,GAAG,MAAMN,MAAO,CAAC2Q,KAAK,YAC7CjJ,QAAS5G,EAAKN,KAAQnC,EAAMqc,qBAAqBhT,EAAQ5G,EAAKzC,EAAMsc,mBAAmBjT,EAAQ5G,EAAKzC,EAAMuc,mBAC1GpK,SAAUnS,EAAMmS,SAChB5Q,UAAU,wBAAwByI,SAC9B,SAACtJ,GACGV,EAAMwc,2BAA2B,MAE9B9b,EAAE+I,OAAOJ,QAGJrJ,EAAMic,2BAA2B,IAE7BxZ,EAAKN,KAAQnC,EAAMqc,qBACnBN,EAActZ,EAAKzC,EAAMsc,mBACxBP,EAActZ,EAAKzC,EAAMuc,oBAI/B9Z,EAAKN,KAAQnC,EAAMqc,qBAClBrc,EAAMmV,WAAWnV,EAAMsc,mBAAmBpT,SAAQ,SAACyE,EAAM5D,GAClD4D,EAAM8N,KAAwBhZ,EAAK4F,IAClCwT,EAAoB7b,EAAMsc,kBAAkBvS,MAEjD/J,EAAMmV,WAAWnV,EAAMuc,mBAAmBrT,SAAQ,SAACyE,EAAM5D,GACzD4D,EAAM8N,KAAwBhZ,EAAK4F,IAClCwT,EAAoB7b,EAAMuc,kBAAkBxS,SAMhE,2BAAOmB,QAAQ,YAAY3J,UAAU,YACrC,2BAAOY,KAAK,SAASF,GAAG,YAAYN,MAAO,CAAC2Q,KAAK,WAAWzQ,OAAO,OAAO2P,YAAY,GAAGC,aAAa,IACtGlQ,UAAU,mBAAmByU,IAAI,IAAI0C,KAAK,MAC1CpP,MAAO7G,EAAKN,KAAQnC,EAAMqc,qBACrBrc,EAAMmV,WAAWnV,EAAMsc,mBAAmBH,EAAiC1Z,EAAKzC,EAAMsc,oBACvF,GAAGtc,EAAMmV,WAAWnV,EAAMsc,mBAAmBH,EAAiC1Z,EAAKzC,EAAMsc,oBAAoBZ,GAAsB,GAElI1b,EAAMmV,WAAWnV,EAAMuc,mBAAmBJ,EAAiC1Z,EAAKzC,EAAMuc,oBACvF,GAAGvc,EAAMmV,WAAWnV,EAAMuc,mBAAmBJ,EAAiC1Z,EAAKzC,EAAMuc,oBAAoBb,GAAsB,GAEvIvJ,SAAU1P,EAAKN,KAAQnC,EAAMqc,qBACzBH,EAAuBzZ,EAAKzC,EAAMsc,mBAAmBJ,EAAuBzZ,EAAKzC,EAAMuc,mBAE3FvS,SAAU,SAACtJ,GACPV,EAAMwc,2BAA2B,MAE9BxB,WAAWta,EAAE+I,OAAOH,OAAStJ,EAAMic,yBAAyBxZ,EAAK4F,IAC5D5F,EAAKN,KAAQnC,EAAMqc,qBACnBV,EAAoB3b,EAAMic,yBAAyBxZ,EAAK4F,IACxDrI,EAAMsc,kBAAkBH,EAAiC1Z,EAAKzC,EAAMsc,mBAAmBZ,GACtFC,EAAoB3b,EAAMic,yBAAyBxZ,EAAK4F,IAC7DrI,EAAMuc,kBAAkBJ,EAAiC1Z,EAAKzC,EAAMuc,mBAAmBb,GAGnFjZ,EAAKN,KAAQnC,EAAMqc,qBACvBV,EAAoBX,WAAWta,EAAE+I,OAAOH,OAAOtJ,EAAMsc,kBACrDH,EAAiC1Z,EAAKzC,EAAMsc,mBAAmBZ,GAE1DC,EAAoBX,WAAWta,EAAE+I,OAAOH,OAAOtJ,EAAMuc,kBAC1DJ,EAAiC1Z,EAAKzC,EAAMuc,mBAAmBb,UAMzE,QCnLd,SAASe,GAAgBzc,GACrB,IAAMuE,EAAI,CACN9B,KAAK,IAAIuW,gBAAgBhZ,EAAMiZ,SAAStR,QAAQuR,IAAI,QACpDjX,GAAG,IAAI+W,gBAAgBhZ,EAAMiZ,SAAStR,QAAQuR,IAAI,OAH1B,EAK4BpV,EAAS,CAC7DS,IAAI,eACJE,KAAK,CACDoC,OAAO,OACPC,QAAQ,CAAC,eAAe,oBACxBC,KAAKC,KAAKC,UAAU,CAACxE,KAAK,WAC1ByE,YAAY,aAXQ,sBAKf8G,EALe,EAKpB9J,KAA4B+J,EALR,EAKE7J,MALF,EAe0BN,EAAS,CAC3DS,IAAI,eACJE,KAAK,CACDoC,OAAO,OACPC,QAAQ,CAAC,eAAe,oBACxBC,KAAKC,KAAKC,UAAU,CAChBxE,KAAK,QACLuB,MAAMO,EAAItC,GAAG,CAACsC,EAAItC,IAAI,OAE1BiF,YAAY,aAxBQ,sBAefgH,EAfe,EAepBhK,KAA2BiK,EAfP,EAeC/J,MAfD,EA4B4BN,EAAS,CAC7DS,IAAI,yBACJE,KAAK,CACDoC,OAAO,OACPC,QAAQ,CAAC,eAAe,oBACxBC,KAAKC,KAAKC,UAAU,CAACxE,KAAK,gBAC1ByE,YAAY,aAlCQ,sBA4BfwT,EA5Be,EA4BpBxW,KAA4ByW,EA5BR,EA4BEvW,MA5BF,EAsC+EN,EAAS,MAtCxF,0BAsCf4Y,EAtCe,EAsCpBxY,KAAuCyY,EAtCnB,EAsCavY,MAAoCwY,EAtCjD,KA4CtB1E,EAAa,EACb2E,EAA2B,GAC3BC,EAAwB,GAIxBrB,EAAqB,EACrBC,EAAqB,EAnDC,EAwDUzb,mBAAS,MAxDnB,mBAwDrB0O,EAxDqB,KAwDVC,EAxDU,OAyDQ3O,mBAAS,MAzDjB,mBAyDrB4O,EAzDqB,KAyDXC,EAzDW,OA0DU7O,mBAAS,MA1DnB,mBA0DrB6a,EA1DqB,KA0DVC,EA1DU,OA2D8B9a,mBAAS,MA3DvC,mBA2DrB8c,EA3DqB,KA2DAP,EA3DA,QA4DQvc,mBAAS,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,MAAM,GAAG,GAAG,GAAG,GAAG,GAAG,KA5DzD,qBA4DrBkV,GA5DqB,MA4DVb,GA5DU,MA+DrBzQ,GAAQuM,cAARvM,KACA1C,GAAcC,qBAAWL,GAAzBI,WA2EP,SAAS6b,GAAuBC,EAAUC,GACtC,MAAO,CACH3Y,IAAI,yBACJE,KAAK,CACDoC,OAAO,OACPC,QAAQ,CAAC,eAAe,oBACxBC,KAAKC,KAAKC,UAAU,CAChBgW,UAAUA,EACVC,OAAOA,IAEXhW,YAAY,YAIxB,SAAS8C,GAASV,EAAMlE,GACpBkP,GAAiB,GAAD,mBAAKa,GAAWhL,MAAM,EAAE/E,IAAxB,CAA+BkE,GAA/B,YAAwC6L,GAAWhL,MAAM/E,EAAM,MAGnF,SAASuR,GAAkB5M,GACvB,MAAqC,KAAjCoL,GAAW+C,GAAcnO,GAAG,IAA4C,KAAjCoL,GAAW+C,GAAcnO,GAAG,IACtC,KAAjCoL,GAAW+C,GAAcnO,GAAG,GACfiR,WAAW7F,GAAW+C,GAAcnO,GAAG,IAAIiR,WAAW7F,GAAW+C,GAAcnO,GAAG,IAC1FiR,WAAW7F,GAAW+C,GAAcnO,GAAG,IAChC,GAGhB,SAASgN,KACL,IAAIjK,EAAM,EAQV,OAPAqI,GAAW+C,GAAchP,SAAQ,SAACkP,EAAQrO,GAEF,KAAjCoL,GAAW+C,GAAcnO,GAAG,IAA4C,KAAjCoL,GAAW+C,GAAcnO,GAAG,IACrC,KAAjCoL,GAAW+C,GAAcnO,GAAG,KAC3B+C,GAAckO,WAAW7F,GAAW+C,GAAcnO,GAAG,IAAIiR,WAAW7F,GAAW+C,GAAcnO,GAAG,IAC/FiR,WAAW7F,GAAW+C,GAAcnO,GAAG,QAEtC+C,EAGX,SAASmP,GAAyBkB,GAC9B,OAAOhI,GAAW2H,GAAyBtP,QAAO,SAACjI,EAAEC,GAEjD,OAAG2X,IAAU3X,EAAEiW,GACJlW,EAECA,EAAEC,EAAEkW,KAClBvG,GAAW0H,GAA4BrP,QAAO,SAACjI,EAAEC,GAE/C,OAAG2X,IAAU3X,EAAEiW,GACJlW,EAECA,EAAEC,EAAEkW,KAClB3E,OA5HNzW,qBAAU,WAcN,GAZI0N,IAA4C,IAAxBA,EAAiBvF,MAC7BC,MAAM,iEACNvH,IAAW,IAEd6M,GAAoBA,EAAiB9J,MAAQ8J,EAAiBlF,OACnE8F,EAAiBZ,EAAiB9J,KAAK1B,KAAI,SAAA0B,GAAI,OAC/C,4BAAQxB,IAAKwB,EAAK8J,EAAiBlF,MAAM,GAAGjG,MAAOyG,MAAOpF,EAAK8J,EAAiBlF,MAAM,GAAGjG,OACpFqB,EAAK8J,EAAiBlF,MAAM,GAAGjG,MAAM,OAAOqB,EAAK8J,EAAiBlF,MAAM,GAAGjG,MAAMqB,EAAK8J,EAAiBlF,MAAM,GAAGjG,MAAM,SAK3HqL,IAA0C,IAAvBA,EAAgBzF,KAC3BC,MAAM,iEACNvH,IAAW,QAElB,GAAI+M,GAAmBA,EAAgBhK,MAAQgK,EAAgBpF,MAAO,CACvE,IAAMwH,EAASpC,EAAgBpF,MAAM,GAAGjG,KAClC0N,EAAUrC,EAAgBpF,MAAM,GAAGjG,KACnCuW,EAAWlL,EAAgBpF,MAAM,GAAGjG,KACpCqU,EAAYhJ,EAAgBpF,MAAM,GAAGjG,KAE3CiM,EAAgBZ,EAAgBhK,KAAK1B,KAAI,SAAA0B,GAAI,OACzC,4BAAQxB,IAAKwB,EAAKoM,GAAWhH,MAAOpF,EAAKoM,IACpCpM,EAAKoM,GAAU,OACbpM,EAAKqM,GAAWrM,EAAKqM,GAAW,IAAI,eACpCrM,EAAKkV,GAAYlV,EAAKkV,GAAY,IAAI,iBACtClV,EAAKgT,GAAahT,EAAKgT,GAAa,UAO/CwD,IAA4C,IAAxBA,EAAiBjS,MACjCC,MAAM,iEACNvH,IAAW,IAEVuZ,GAAoBA,EAAiBxW,MAAQwW,EAAiB5R,OACnEiS,EAAiBL,EAAiBxW,KAAK1B,KAAI,SAAA0B,GAAI,OAC/C,4BAAQxB,IAAKwB,EAAKwW,EAAiB5R,MAAM,GAAGjG,MAAOyG,MAAOpF,EAAKwW,EAAiB5R,MAAM,GAAGjG,QACnFqB,EAAKwW,EAAiB5R,MAAM,GAAGjG,MAAMqB,EAAKwW,EAAiB5R,MAAM,GAAGjG,MAAM,IAC3E,OAAOqB,EAAKwW,EAAiB5R,MAAM,GAAGjG,MAAMqB,EAAKwW,EAAiB5R,MAAM,GAAGjG,MAAM,WAK5F,CAACmL,EAAiBC,EAAkBC,EAAgBC,EAAiBuM,EAAiBC,IAIxFra,qBAAU,WACFoc,IAAkE,IAAnCA,EAA4BjU,OAC3DC,MAAM,iEACNvH,IAAW,MAEjB,CAACub,EAA4BC,IAE/Brc,qBAAU,WACN,SAAS4Q,IACL/H,SAAS+C,cAAc,uBAAuBxC,aAC1C,UAAU,yCAIlB,OAFAxJ,OAAOiR,iBAAiB,WAAWD,GAE5B,WACChR,OAAOkR,oBAAoB,WAAWF,MAE5C,IA2DN,IAAImI,GAAsB,KA8B1B,OA3BKrL,GAAoBA,EAAiB5J,OAAU6J,GAAqBC,GAAmBA,EAAgB9J,OAAU+J,GACrHuM,GAAoBA,EAAiBtW,OAAUuW,GAAsB+B,GAA+BA,EAA4BtY,OACjIuY,KACAtD,GACI,yBAAK9X,UAAU,uBACVyM,GAAoBA,EAAiB5J,MAAO,gDAAgD4J,EAAiB5J,MAAM2E,MACnH,UAAUiF,EAAiB5J,MAAM4E,KAAK,aAAagF,EAAiB5J,MAAM6E,WAAW,KACrFgF,EAAmB,yCAAyCA,EAAoB,KACjF,6BACA,6BACCC,GAAmBA,EAAgB9J,MAAO,+CAA+C8J,EAAgB9J,MAAM2E,MAC/G,UAAUmF,EAAgB9J,MAAM4E,KAAK,aAAakF,EAAgB9J,MAAM6E,WAAW,KACnFkF,EAAkB,wCAAwCA,EAAmB,KAC9E,6BACA,6BACCuM,GAAoBA,EAAiBtW,MAAO,iDAAiDsW,EAAiBtW,MAAM2E,MACpH,UAAU2R,EAAiBtW,MAAM4E,KAAK,aAAa0R,EAAiBtW,MAAM6E,WAAW,KACrF0R,EAAmB,0CAA0CA,EAAoB,KAClF,6BACA,6BACC+B,GAA+BA,EAA4BtY,MAAO,4DACjEsY,EAA4BtY,MAAM2E,MAAO,UAAU2T,EAA4BtY,MAAM4E,KAAK,aAC5F0T,EAA4BtY,MAAM6E,WAAW,KAC5C0T,EAA8B,qDAAqDA,EAA+B,OAKvH,kBAAC,EAAD,CAAMxH,WAAYA,GAAYb,iBAAkBA,GAAkB/P,IAAKA,EAAK9B,KAAK,cAAcwS,YAAY,cAC3GT,iBAAkBwI,GAAwBzI,uBAAwBqI,EAClEnI,0BA3LoB,EA2L0BC,eAzL7B,IA2Lb,gBAAExB,EAAF,EAAEA,MAAMf,EAAR,EAAQA,SAASgB,EAAjB,EAAiBA,eAAe+B,EAAhC,EAAgCA,SAASE,EAAzC,EAAyCA,SAASC,EAAlD,EAAkDA,SAAS/D,EAA3D,EAA2DA,aAAagE,EAAxE,EAAwEA,kBAAxE,OACC,kBAAC,IAAD,KACG,kBAAC,IAAD,CAAO/D,OAAK,EAAC1N,KAAI,UAAKA,GAAL,aACb,kBAAC,EAAD,CAAaD,YAAa6Y,GAAe7Y,YACrCuI,SAAUsQ,GAAe5Y,KACzBsS,aAAc,CAAChB,GAAW,GAAGA,GAAW,IACxCmB,cAAe,CAACmG,GAAe7Y,YAAY,MAAM,OAAO,cAAc,qBACtE2S,cAAe,CAACpB,GAAW,GAAGnP,EAAiBmP,GAAW,IAAoB,QAAhBA,GAAW,GAAW,SAASA,GAAW,GAAG,QAAQA,GAAW,IAC9HqB,YAAa,CAAC,GAAG,YAAY,cAAc,QAAQ,MAAM,WAAW,YACpEC,YAAatB,GAAW+C,GACxBvB,kBAAmBA,GACnBI,eAAgBA,MAGxB,kBAAC,IAAD,CAAOxF,OAAK,EAAC1N,KAAMA,IACnB,kBAAC,EAAD,KACA,yBAAKtC,UAAU,0BAIX,wBAAIA,UAAU,SAAiB,WAAR2R,EAAkB,SAAS,UAAY,IAAKuJ,GAAe7Y,aAClF,2BAAOrC,UAAU,gBAAjB,cACC+P,EACA+H,GAID,0BAAM3H,SAAU,SAAChR,GACbA,EAAEiR,iBACa,WAARuB,EAAkBgC,IAChBE,MAGT,yBAAK7T,UAAU,OACX,8BAAUA,UAAU,yEAAyE4Q,SAAUA,GACnG,4BAAQ5Q,UAAU,6CAA6C,sCAAW,0BAAMA,UAAU,gBAAhB,OAC1E,2BAAOA,UAAU,OAAO2J,QAAQ,YAAhC,aACA,yBAAK3J,UAAU,eAIX,2BAAOY,KAAK,OAAOF,GAAG,WAAWqH,MAAO6L,GAAW,GAAInL,SAAU,SAACtJ,GAAD,OAAKA,GAAGkR,UAAQ,EAACrQ,UAAU,iBAC5F,4BAAQA,UAAU,eAAeI,MAAO,CAAC2Q,KAAK,SAAUtI,SAAU,SAACtJ,GAC/D,IAAI4Y,EAAW,GACXC,EAAc,GACd0B,EAAwB,GAE5BjN,EAAiB9J,KAAKgF,SAAQ,SAAAhF,GAEvBA,EAAK8J,EAAiBlF,MAAM,GAAGjG,QAAQnC,EAAE+I,OAAOH,QAC/CgQ,EAAWpV,EAAK8J,EAAiBlF,MAAM,GAAGjG,MAAMqB,EAAK8J,EAAiBlF,MAAM,GAAGjG,MAAM,GACrF0W,EAAcrV,EAAK8J,EAAiBlF,MAAM,GAAGjG,MAAMqB,EAAK8J,EAAiBlF,MAAM,GAAGjG,MAAM,GACxFoY,EAAwB/W,EAAK8J,EAAiBlF,MAAM,GAAGjG,MAAMqB,EAAK8J,EAAiBlF,MAAM,GAAGjG,MAAM,OAK9GyR,GAAiB,CAAC5T,EAAE+I,OAAOH,MAAMgQ,EAAWC,GAA5B,mBACTpE,GAAWhL,MAAM,EAtP/B,IAqPuB,CAC8B8Q,GAD9B,YAET9F,GAAWhL,MAAM+Q,MACxB0B,EACII,GAAuBtc,EAAE+I,OAAOH,MAAM6L,GAxPrD,OA4Pe,4BAAQ7L,MAAM,IAAd,wBACCqF,IAGT,2BAAOpN,UAAU,OAAO2J,QAAQ,cAAhC,eACA,2BAAOjJ,GAAG,aAAaqH,MAAO6L,GAAW,GAAInL,SAAU,SAACtJ,GAAD,OAAKA,GAAGkR,UAAQ,EAACrQ,UAAU,iBAClF,2BAAOA,UAAU,OAAO2J,QAAQ,iBAAhC,kBACA,8BAAUjJ,GAAG,gBAAgBqH,MAAO6L,GAAW,GAAInL,SAAU,SAACtJ,GAAD,OAAKA,GAAGkR,UAAQ,EAACrQ,UAAU,kBAI5F,yBAAKA,UAAU,4BACX,2BAAO2J,QAAQ,mBAAmB3J,UAAU,QAA5C,sBAAsE,0BAAMA,UAAU,gBAAhB,MACrE+T,EAAkB,CACftL,SAASA,GACTwL,OAAO,GACPK,SAAS,EACTC,QAAQ,qBAIZ,2BAAO5K,QAAQ,OAAO3J,UAAU,QAAhC,QAA4C,0BAAMA,UAAU,gBAAhB,MAC5C,2BAAOY,KAAK,OAAOgQ,SAAUA,EAAUP,UAAQ,EAACtI,MAAO6L,GAAW,GAAInL,SAAU,SAACtJ,GAAD,OAAKsJ,GAAStJ,EAAE+I,OAAOH,MAAM,IAC7G/H,UAAU,iBAEV,2BAAOA,UAAU,OAAO2J,QAAQ,UAAhC,WAAkD,0BAAM3J,UAAU,gBAAhB,MAClD,yBAAKA,UAAU,eACX,2BAAOY,KAAK,OAAOF,GAAG,SAASqH,MAAO6L,GAAW,GAAInL,SAAU,SAACtJ,GAAD,OAAKA,GAAGkR,UAAQ,EAACrQ,UAAU,eAC1F4Q,SAAUA,IACV,4BAAQ5Q,UAAU,eAAeI,MAAO,CAAC2Q,KAAK,SAAUH,SAAUA,EAAUnI,SAAU,SAACtJ,GACvFsJ,GAAStJ,EAAE+I,OAAOH,MAAM,KAEpB,4BAAQA,MAAM,IAAd,wBACCwR,IAIT,2BAAO5P,QAAQ,aAAa3J,UAAU,QAAtC,eACA,4BAAQU,GAAG,aAAa+H,SAAU,SAACtJ,GAAD,OAAMsJ,GAAStJ,EAAE+I,OAAOH,MAAM,IAAIA,MAAO6L,GAAW,GAAIhD,SAAUA,EACpG5Q,UAAU,gBACN,4BAAQ+H,MAAM,OAAd,UACA,4BAAQA,MAAM,MAAd,WACA,4BAAQA,MAAM,MAAd,WACA,4BAAQA,MAAM,MAAd,WACA,4BAAQA,MAAM,MAAd,YAGJ,2BAAO4B,QAAQ,cAAc3J,UAAU,QAAvC,eACA,8BAAUU,GAAG,cAAc+H,SAAU,SAACtJ,GAAD,OAAKsJ,GAAStJ,EAAE+I,OAAOH,MAAM,IAAIA,MAAO6L,GAAW,GACxFhD,SAAUA,EAAU5Q,UAAU,kBAIlC,kBAAC,GAAD,CAAY2W,aAAcA,EAAcR,qBA7SrC,GA8SHvF,SAAUA,EAAUgD,WAAYA,GAAYb,iBAAkBA,GAC9DpG,gBAAiBA,EAAiBW,UAAWA,EAAWiJ,eAAe,KACvEnB,kBAAmBA,GAAmBwB,gBAAiB,qBAEvD,wBAAI5W,UAAU,+BACT,UAAUoE,EAAmBoR,OAElC,wBAAIxV,UAAU,0BACV,0BAAMA,UAAU,yBACX,qBAAqBoE,EAAmBsW,QAGhDc,EAED,kBAAC,GAAD,CAAczB,sBAAuBoB,EAA6BvH,WAAYA,GAC1Eb,iBAAkBA,GAAkBnC,SAAUA,EAC9C8J,yBAA0BA,GAA0BlF,eAAgBA,GACpEuF,kBAAmBO,EAA4BN,kBAAmBO,EAClET,qBA1TD,UA0T6Ce,qBAzT7C,aA0TCZ,2BAA4BA,EAC5BJ,kBAAmB,gCAI3B,kBAAC,EAAD,CAAYlJ,MAAOA,EAAOgC,SAAUA,EAAUE,SAAUA,EAAUC,SAAUA,EAC5ElC,eAAgBA,EAAgBtP,KAAI,UAAKA,GAAL,kBAQhD,kBAAC,IAAD,CAAUrC,GAAIib,GAAe5Y,WAKzC4Y,GAAe7Y,YAAY,cAC3B6Y,GAAe5Y,KAAK,kBAEL4Y,U,oBCrZf,SAASY,GAAkBrd,GACvB,OACQ,kBAAC,EAAD,KACI,kBAAC,EAAD,CAASwI,eAAe,0BAA0B/F,KAAK,sBACvD3B,OAAQ,SAACwK,GACL,OACA,kBAAC,EAAD,eAAe1H,YAAY,4BAA4BwH,SAAUiS,GAAkBzZ,aAAiB0H,QASxH+R,GAAkBzZ,YAAY,sBAC9ByZ,GAAkBxZ,KAAK,qBAERwZ,UClBf,SAASC,GAAetd,GACpB,OACQ,kBAAC,EAAD,KACI,kBAAC,EAAD,CAASwI,eAAe,uBAAuB/F,KAAK,kBACpD3B,OAAQ,SAACwK,GACL,OACA,kBAAC,EAAD,eAAe1H,YAAa0Z,GAAe1Z,YAAawH,SAAUkS,GAAe1Z,aAAiB0H,QAStHgS,GAAe1Z,YAAY,kBAC3B0Z,GAAezZ,KAAK,kBAELyZ,UClBf,SAASC,GAAgBvd,GACrB,OACQ,kBAAC,EAAD,KACI,kBAAC,EAAD,CAASwI,eAAe,wBAAwB/F,KAAK,mBACrD3B,OAAQ,SAACwK,GACL,OACA,kBAAC,EAAD,eAAe1H,YAAa2Z,GAAgB3Z,YAAawH,SAAUmS,GAAgB3Z,aAAiB0H,QASxHiS,GAAgB3Z,YAAY,mBAC5B2Z,GAAgB1Z,KAAK,mBAEN0Z,UClBf,SAASC,GAAkBxd,GACvB,OACQ,kBAAC,EAAD,KACI,kBAAC,EAAD,CAASwI,eAAe,0BAA0B/F,KAAK,sBACvD3B,OAAQ,SAACwK,GACL,OACA,kBAAC,EAAD,eAAe1H,YAAa4Z,GAAkB5Z,YAAawH,SAAUoS,GAAkB5Z,aAAiB0H,QAS5HkS,GAAkB5Z,YAAY,sBAC9B4Z,GAAkB3Z,KAAK,qBAER2Z,UClBf,SAASC,GAAmBzd,GACxB,OACQ,kBAAC,EAAD,KACI,kBAAC,EAAD,CAASwI,eAAe,2BAA2B/F,KAAK,uBACxD3B,OAAQ,SAACwK,GACL,OACA,kBAAC,EAAD,eAAe1H,YAAa6Z,GAAmB7Z,YAAawH,SAAUqS,GAAmB7Z,aAAiB0H,QAS9HmS,GAAmB7Z,YAAY,uBAC/B6Z,GAAmB5Z,KAAK,sBAET4Z,UCmdAC,OAlef,SAA2B1d,GACvB,IAAMmI,EAAQC,cAsbd,OACI,yBAAK7G,UAAU,wBACX,4BAAQY,KAAK,QAAQZ,UAAU,sCAC3Ba,QAAS,WACL+G,SAAS+C,cAAc,uBAAuBxC,aAC9C,UAAU,yCACViC,EAAY,eACZxD,EAAQI,KAAKvI,EAAMmM,YAL3B,QAOA,wBAAI5K,UAAU,oBACTvB,EAAM4D,YAAY,SAAUoC,EAAiBhG,EAAMoM,YAAN,WAC7C,OAAQpG,EAAiBhG,EAAMoM,YAAN,UAG9B,2BAAO7K,UAAU,0BACb,2BAAOA,UAAU,6CACb,4BACI,wBAAIA,UAAU,aACuB,iBAAhCvB,EAAMoM,YAAN,SAAgD,eAAe,aAEpE,wBAAI7K,UAAU,aAAd,QAxcpB,WACI,IAAM8K,EAAa,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAChE,OAAQ,SAAU,YAAa,UAAW,WAAY,YAEpDzF,EAAO,GAEP0F,EAAgB,IAAIpG,KAAK,IAAIA,KAAKlG,EAAMoM,YAAYG,WAAWhG,cAAc,IAAIL,KAAKlG,EAAMoM,YAAYG,WAAWlG,WAAW,IAAIH,KAAKlG,EAAMoM,YAAYG,WAAWjG,UAAU,GAC9KkG,EAAc,IAAItG,KAAK,IAAIA,KAAKlG,EAAMoM,YAAYK,SAASlG,cAAc,IAAIL,KAAKlG,EAAMoM,YAAYK,SAASpG,WAAW,IAAIH,KAAKlG,EAAMoM,YAAYK,SAASnG,UAAU,GAE5K,GAAIkG,GAAe,IAAItG,KAAK,IAAIA,KAAKoG,GAAiB/F,cAAe,IAAIL,KAAKoG,GAAiBjG,WAAY,EAAE,IACrE,aAAhCrG,EAAMoM,YAAN,UAA+E,iBAAhCpM,EAAMoM,YAAN,UAAkF,aAAhCpM,EAAMoM,YAAN,UAA8CpM,EAAM0M,cACzJ9F,EAAO2B,KAAK,wBAAI7F,IAAK2J,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cAAc,OAC1FhF,UAAU,aACL8K,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cAAc,SAG1EK,EAAO2B,KAAK,wBAAI7F,IAAqC,aAAhC1C,EAAMoM,YAAN,UAA+E,iBAAhCpM,EAAMoM,YAAN,UAAkF,aAAhCpM,EAAMoM,YAAN,UAA8CpM,EAAM0M,YAC1KL,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cAAc,SACpE8F,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cACxDhF,UAAU,aAC2B,aAAhCvB,EAAMoM,YAAN,UAA+E,iBAAhCpM,EAAMoM,YAAN,UAAkF,aAAhCpM,EAAMoM,YAAN,UAA8CpM,EAAM0M,YACtJL,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cAAc,SACpE8F,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,oBAG3D,CACD,IAAIN,EAAK,IAAIC,KAAKoG,GAgBlB,KAfoC,aAAhCtM,EAAMoM,YAAN,UAA+E,iBAAhCpM,EAAMoM,YAAN,UAAkF,aAAhCpM,EAAMoM,YAAN,UAA8CpM,EAAM0M,cACzJ9F,EAAO2B,KAAK,wBAAI7F,IAAK2J,EAAWC,EAAgBjG,YAAY,IAAIiG,EAAgB/F,cAAc,OAC9FhF,UAAU,aACL8K,EAAWC,EAAgBjG,YAAY,IAAIiG,EAAgB/F,cAAc,SAG9EK,EAAO2B,KAAK,wBAAI7F,IAAqC,aAAhC1C,EAAMoM,YAAN,UAA+E,iBAAhCpM,EAAMoM,YAAN,UAAkF,aAAhCpM,EAAMoM,YAAN,UAA8CpM,EAAM0M,YAC1KL,EAAWC,EAAgBjG,YAAY,IAAIiG,EAAgB/F,cAAc,SACxE8F,EAAWC,EAAgBjG,YAAY,IAAIiG,EAAgB/F,cAC5DhF,UAAU,aAC2B,aAAhCvB,EAAMoM,YAAN,UAA+E,iBAAhCpM,EAAMoM,YAAN,UAAkF,aAAhCpM,EAAMoM,YAAN,UAA8CpM,EAAM0M,YACtJL,EAAWC,EAAgBjG,YAAY,IAAIiG,EAAgB/F,cAAc,SACxE8F,EAAWC,EAAgBjG,YAAY,IAAIiG,EAAgB/F,gBAG1DiG,EAAc,IAAItG,KAAK,IAAIA,KAAKD,GAAMM,cAAe,IAAIL,KAAKD,GAAMI,WAAY,EAAE,EAAE,IACtFJ,EAAK0G,SAAS1G,EAAKI,WAAW,EAAE,IACI,aAAhCrG,EAAMoM,YAAN,UAA+E,iBAAhCpM,EAAMoM,YAAN,UAAkF,aAAhCpM,EAAMoM,YAAN,UAA8CpM,EAAM0M,cACzJ9F,EAAO2B,KAAK,wBAAI7F,IAAK2J,EAAWpG,EAAKI,YAAY,IAAIJ,EAAKM,cAAc,OACxEhF,UAAU,aACL8K,EAAWpG,EAAKI,YAAY,IAAIJ,EAAKM,cAAc,SAGxDK,EAAO2B,KAAK,wBAAI7F,IAAqC,aAAhC1C,EAAMoM,YAAN,UAA+E,iBAAhCpM,EAAMoM,YAAN,UAAkF,aAAhCpM,EAAMoM,YAAN,UAA8CpM,EAAM0M,YAC1KL,EAAWpG,EAAKI,YAAY,IAAIJ,EAAKM,cAAc,SAClD8F,EAAWpG,EAAKI,YAAY,IAAIJ,EAAKM,cACtChF,UAAU,aAC2B,aAAhCvB,EAAMoM,YAAN,UAA+E,iBAAhCpM,EAAMoM,YAAN,UAAkF,aAAhCpM,EAAMoM,YAAN,UAA8CpM,EAAM0M,YACtJL,EAAWpG,EAAKI,YAAY,IAAIJ,EAAKM,cAAc,SAClD8F,EAAWpG,EAAKI,YAAY,IAAIJ,EAAKM,iBAGV,aAAhCvG,EAAMoM,YAAN,UAA+E,iBAAhCpM,EAAMoM,YAAN,UAAkF,aAAhCpM,EAAMoM,YAAN,UAA8CpM,EAAM0M,cACzJ9F,EAAO2B,KAAK,wBAAI7F,IAAK2J,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cAAc,OAC1FhF,UAAU,aACL8K,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cAAe,SAG3EK,EAAO2B,KAAK,wBAAI7F,IAAqC,aAAhC1C,EAAMoM,YAAN,UAA+E,iBAAhCpM,EAAMoM,YAAN,UAAkF,aAAhCpM,EAAMoM,YAAN,UAA8CpM,EAAM0M,YAC1KL,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cAAc,SACpE8F,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cACxDhF,UAAU,aAC2B,aAAhCvB,EAAMoM,YAAN,UAA+E,iBAAhCpM,EAAMoM,YAAN,UAAkF,aAAhCpM,EAAMoM,YAAN,UAA8CpM,EAAM0M,YACtJL,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cAAc,SACpE8F,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,gBAGhE,OAAOK,EA+XUgG,GACgC,aAAhC5M,EAAMoM,YAAN,UAA+E,iBAAhCpM,EAAMoM,YAAN,UAAkF,aAAhCpM,EAAMoM,YAAN,UAA8CpM,EAAM0M,YACjJ,wBAAInL,UAAU,aAAd,OAAoC,KACzC,wBAAIA,UAAU,aAAd,UAEHvB,EAAM0M,aAAe1M,EAAMoM,YAAN,SACrB,4BACG,wBAAI7K,UAAU,aACuB,iBAAhCvB,EAAMoM,YAAN,SAAgD,eAAe,aAEpE,wBAAI7K,UAAU,aAAd,SACG,MA7GvB,WACI,IAAM2C,EAAKlE,EAAMkE,KACX4E,EAAM9I,EAAM8I,MAAM,GAClBlD,EAAIkD,EAAM,GAAGjG,KACbA,EAAKiG,EAAM,GAAGjG,KACdgK,EAAoC,iBAAhC7M,EAAMoM,YAAN,SAA+C,KAAKtD,EAAM,GAAGjG,KACjEiK,EAAsC,iBAAhC9M,EAAMoM,YAAN,SAA+CtD,EAAM,GAAGjG,KAAKiG,EAAM,GAAGjG,KAE5EkK,EAAW/M,EAAM+M,WACjBC,EAAShN,EAAM8I,MAAM,GACrBmE,EAAOD,EAAS,GAAGnK,KACnBqK,EAAQF,EAAS,GAAGnK,KACpBsK,EAAOH,EAAS,GAAGnK,KACnBuK,EAASJ,EAAS,GAAGnK,KAErBwK,EAAkB,GAClBzG,EAAO,GAyDb,OAvDA1C,EAAKgF,SAAQ,SAAAzG,GACT,IAAM6K,EAAqB,IACgB,IAAxCD,EAAkBnD,QAAQzH,EAAKmD,MAC9ByH,EAAkB9E,KAAK9F,EAAKmD,IAC5BgB,EAAO2B,KACP,2BAAO7F,IAAKD,EAAKmD,GAAMrE,UAAU,kCAC7B,wBAAIA,UAAU,+BACV,wBAAIA,UAAU,aAAakB,EAAKmD,IAChC,wBAAIrE,UAAU,aAAakB,EAAKI,IAnTpD,SAA8BJ,EAAKyB,EAAK4E,GACpC,IAAMuD,EAAa,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAChE,OAAQ,SAAU,YAAa,UAAW,WAAY,YAEpDzF,EAAO,GAEPhB,EAAIkD,EAAM,GAAGjG,KACb0K,EAASzE,EAAM,GAAGjG,KAClBgK,EAAoC,iBAAhC7M,EAAMoM,YAAN,SAA+C,KAAKtD,EAAM,GAAGjG,KACjEiK,EAAsC,iBAAhC9M,EAAMoM,YAAN,SAA+CtD,EAAM,GAAGjG,KAAKiG,EAAM,GAAGjG,KAE5EyJ,EAAgB,IAAIpG,KAAK,IAAIA,KAAKlG,EAAMoM,YAAYG,WAAWhG,cAAc,IAAIL,KAAKlG,EAAMoM,YAAYG,WAAWlG,WAAW,IAAIH,KAAKlG,EAAMoM,YAAYG,WAAWjG,UAAU,GAC9KkG,EAAc,IAAItG,KAAK,IAAIA,KAAKlG,EAAMoM,YAAYK,SAASlG,cAAc,IAAIL,KAAKlG,EAAMoM,YAAYK,SAASpG,WAAW,IAAIH,KAAKlG,EAAMoM,YAAYK,SAASnG,UAAU,GAkI5K,OAjIIkG,GAAe,IAAItG,KAAK,IAAIA,KAAKoG,GAAiB/F,cAAe,IAAIL,KAAKoG,GAAiBjG,WAAY,EAAE,KACrE,aAAhCrG,EAAMoM,YAAN,UAA+E,iBAAhCpM,EAAMoM,YAAN,UAAkF,aAAhCpM,EAAMoM,YAAN,UAA8CpM,EAAM0M,cACzJ9F,EAAO2B,KACH,wBAAI7F,IAAK2J,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cAAc,OAC9EhF,UAAU,aACLoE,EAAmBzB,EAAKsJ,QAAO,SAACjI,EAAEC,GAC/B,OAAIA,EAAEI,KAAOnD,EAAKmD,GACPL,EAAEC,EAAEqH,GACHtH,IACd,MAIVqB,EAAO2B,KACH,wBAAI7F,IAAqC,aAAhC1C,EAAMoM,YAAN,SACTC,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cAAc,SACpE8F,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cACxDhF,UAAU,aACLoE,EAAmBzB,EAAKsJ,QAAO,SAACjI,EAAEC,GAC/B,OAAIA,EAAEI,KAAOnD,EAAKmD,GACPL,EAAEC,EAAEsH,GACHvH,IACd,OAKR,WACF,IAAIU,EAAK,IAAIC,KAAKoG,GAiClB,KA/BoC,aAAhCtM,EAAMoM,YAAN,UAA+E,iBAAhCpM,EAAMoM,YAAN,UAAkF,aAAhCpM,EAAMoM,YAAN,UAA8CpM,EAAM0M,cACzJ9F,EAAO2B,KACH,wBAAI7F,IAAK2J,EAAWC,EAAgBjG,YAAY,IAAIiG,EAAgB/F,cAAc,OAClFhF,UAAU,aACLoE,EAAmBzB,EAAKsJ,QAAO,SAACjI,EAAEC,GAC/B,IAAMiI,EAAgB,IAAIvH,KAAK,IAAIA,KAAKV,EAAE+H,IAAWhH,cAAc,IAAIL,KAAKV,EAAE+H,IAAWlH,WAAW,IAAIH,KAAKV,EAAE+H,IAAWjH,UAAU,GAExI,OAAId,EAAEI,KAAOnD,EAAKmD,IACX6H,GAAiB,IAAIvH,KAAK,IAAIA,KAAKoG,GAAiB/F,cAAe,IAAIL,KAAKoG,GAAiBjG,WAAY,EAAE,GACnGd,EAAEC,EAAEqH,GACPtH,IACV,MAIVqB,EAAO2B,KACH,wBAAI7F,IAAqC,aAAhC1C,EAAMoM,YAAN,SACTC,EAAWC,EAAgBjG,YAAY,IAAIiG,EAAgB/F,cAAc,SACxE8F,EAAWC,EAAgBjG,YAAY,IAAIiG,EAAgB/F,cAC5DhF,UAAU,aACLoE,EAAmBzB,EAAKsJ,QAAO,SAACjI,EAAEC,GAC/B,IAAMiI,EAAgB,IAAIvH,KAAK,IAAIA,KAAKV,EAAE+H,IAAWhH,cAAc,IAAIL,KAAKV,EAAE+H,IAAWlH,WAAW,IAAIH,KAAKV,EAAE+H,IAAWjH,UAAU,GAExI,OAAId,EAAEI,KAAOnD,EAAKmD,IACX6H,GAAiB,IAAIvH,KAAK,IAAIA,KAAKoG,GAAiB/F,cAAe,IAAIL,KAAKoG,GAAiBjG,WAAY,EAAE,GACnGd,EAAEC,EAAEsH,GACPvH,IACV,MAIJiH,EAAc,IAAItG,KAAK,IAAIA,KAAKD,GAAMM,cAAe,IAAIL,KAAKD,GAAMI,WAAY,EAAE,EAAE,IACtFJ,EAAK0G,SAAS1G,EAAKI,WAAW,EAAE,IACI,aAAhCrG,EAAMoM,YAAN,UAA+E,iBAAhCpM,EAAMoM,YAAN,UAAkF,aAAhCpM,EAAMoM,YAAN,UAA8CpM,EAAM0M,cACzJ9F,EAAO2B,KACH,wBAAI7F,IAAK2J,EAAWpG,EAAKI,YAAY,IAAIJ,EAAKM,cAAc,OAC5DhF,UAAU,aACLoE,EAAmBzB,EAAKsJ,QAAO,SAACjI,EAAEC,GACnC,IAAMiI,EAAgB,IAAIvH,KAAK,IAAIA,KAAKV,EAAE+H,IAAWhH,cAAc,IAAIL,KAAKV,EAAE+H,IAAWlH,WAAW,IAAIH,KAAKV,EAAE+H,IAAWjH,UAAU,GACpI,OAAId,EAAEI,KAAOnD,EAAKmD,IACX6H,EAAgB,IAAIvH,KAAK,IAAIA,KAAKD,GAAMM,cAAe,IAAIL,KAAKD,GAAMI,WAAY,IAClFoH,GAAiB,IAAIvH,KAAK,IAAIA,KAAKD,GAAMM,cAAe,IAAIL,KAAKD,GAAMI,WAAY,EAAE,GAC7Ed,EAAEC,EAAEqH,GACPtH,IACV,MAKVqB,EAAO2B,KACH,wBAAI7F,IAAqC,aAAhC1C,EAAMoM,YAAN,SACTC,EAAWpG,EAAKI,YAAY,IAAIJ,EAAKM,cAAc,SAClD8F,EAAWpG,EAAKI,YAAY,IAAIJ,EAAKM,cACtChF,UAAU,aACLoE,EAAmBzB,EAAKsJ,QAAO,SAACjI,EAAEC,GACnC,IAAMiI,EAAgB,IAAIvH,KAAK,IAAIA,KAAKV,EAAE+H,IAAWhH,cAAc,IAAIL,KAAKV,EAAE+H,IAAWlH,WAAW,IAAIH,KAAKV,EAAE+H,IAAWjH,UAAU,GACpI,OAAId,EAAEI,KAAOnD,EAAKmD,IACX6H,EAAgB,IAAIvH,KAAK,IAAIA,KAAKD,GAAMM,cAAe,IAAIL,KAAKD,GAAMI,WAAY,IAClFoH,GAAiB,IAAIvH,KAAK,IAAIA,KAAKD,GAAMM,cAAe,IAAIL,KAAKD,GAAMI,WAAY,EAAE,GAC7Ed,EAAEC,EAAEsH,GACPvH,IACV,OAKsB,aAAhCvF,EAAMoM,YAAN,UAA+E,iBAAhCpM,EAAMoM,YAAN,UAAkF,aAAhCpM,EAAMoM,YAAN,UAA8CpM,EAAM0M,cACzJ9F,EAAO2B,KACH,wBAAI7F,IAAK2J,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cAAc,OAC9EhF,UAAU,aACLoE,EAAmBzB,EAAKsJ,QAAO,SAACjI,EAAEC,GAC/B,IAAMiI,EAAgB,IAAIvH,KAAK,IAAIA,KAAKV,EAAE+H,IAAWhH,cAAc,IAAIL,KAAKV,EAAE+H,IAAWlH,WAAW,IAAIH,KAAKV,EAAE+H,IAAWjH,UAAU,GACpI,OAAId,EAAEI,KAAOnD,EAAKmD,IACX6H,EAAgB,IAAIvH,KAAK,IAAIA,KAAKsG,GAAejG,cAAe,IAAIL,KAAKsG,GAAenG,WAAY,IACpGoH,GAAiBjB,EACbjH,EAAEC,EAAEqH,GACHtH,IACd,MAKVqB,EAAO2B,KACH,wBAAI7F,IAAqC,aAAhC1C,EAAMoM,YAAN,SACTC,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cAAc,SACpE8F,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cACxDhF,UAAU,aACLoE,EAAmBzB,EAAKsJ,QAAO,SAACjI,EAAEC,GAC/B,IAAMiI,EAAgB,IAAIvH,KAAK,IAAIA,KAAKV,EAAE+H,IAAWhH,cAAc,IAAIL,KAAKV,EAAE+H,IAAWlH,WAAW,IAAIH,KAAKV,EAAE+H,IAAWjH,UAAU,GACpI,OAAId,EAAEI,KAAOnD,EAAKmD,IACX6H,EAAgB,IAAIvH,KAAK,IAAIA,KAAKsG,GAAejG,cAAe,IAAIL,KAAKsG,GAAenG,WAAY,IACpGoH,GAAiBjB,EACbjH,EAAEC,EAAEsH,GACHvH,IACd,MAjGR,GAsGCqB,EAsKU8G,CAAqBjL,EAAKyB,EAAK4E,GACC,aAAhC9I,EAAMoM,YAAN,UAA+E,iBAAhCpM,EAAMoM,YAAN,UAAkF,aAAhCpM,EAAMoM,YAAN,UAA8CpM,EAAM0M,YACrJ,wBAAInL,UAAU,aACVoE,EAAmBzB,EAAKsJ,QAAO,SAACjI,EAAEC,GAC/B,OAAGA,EAAEI,KAAOnD,EAAKmD,GACNL,EAAEC,EAAEqH,GACHtH,IACd,KACC,KACP,wBAAIhE,UAAU,aACToE,EAAmBzB,EAAKsJ,QAAO,SAACjI,EAAEC,GAC/B,OAAGA,EAAEI,KAAOnD,EAAKmD,GACNL,EAAEC,EAAEsH,GACHvH,IACd,MAGTvF,EAAMoM,YAAN,UAAiCpM,EAAM0M,YAAaK,EAAWvK,KAAI,SAAAmL,GAChE,IAAmD,IAA/CL,EAAqBpD,QAAQyD,EAAMV,IAEnC,OADAK,EAAqB/E,KAAKoF,EAAMV,IAE5B,wBAAIvK,IAAKiL,EAAMV,IACX,wBAAI1L,UAAU,aAAaoM,EAAMV,IACjC,wBAAI1L,UAAU,aAAaoM,EAAMT,IA1LjE,SAAoCzK,EAAKkL,EAAMzJ,EAAK4E,GAChD,IAAMuD,EAAa,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAChE,OAAQ,SAAU,YAAa,UAAW,WAAY,YAEpDzF,EAAO,GACPhB,EAAIkD,EAAM,GAAGjG,KACboK,EAAOnE,EAAM,GAAGjG,KAChB+K,EAAQ9E,EAAM,GAAGjG,KACjBsK,EAAOrE,EAAM,GAAGjG,KAChBuK,EAAStE,EAAM,GAAGjG,KAElByJ,EAAgB,IAAIpG,KAAK,IAAIA,KAAKlG,EAAMoM,YAAYG,WAAWhG,cAAc,IAAIL,KAAKlG,EAAMoM,YAAYG,WAAWlG,WAAW,IAAIH,KAAKlG,EAAMoM,YAAYG,WAAWjG,UAAU,GAC9KkG,EAAc,IAAItG,KAAK,IAAIA,KAAKlG,EAAMoM,YAAYK,SAASlG,cAAc,IAAIL,KAAKlG,EAAMoM,YAAYK,SAASpG,WAAW,IAAIH,KAAKlG,EAAMoM,YAAYK,SAASnG,UAAU,GAuH5K,OAtHIkG,GAAe,IAAItG,KAAK,IAAIA,KAAKoG,GAAiB/F,cAAe,IAAIL,KAAKoG,GAAiBjG,WAAY,EAAE,IACzGO,EAAO2B,KACH,wBAAI7F,IAAK2J,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cAAc,OAC9EhF,UAAU,aACLoE,EAAmBzB,EAAKsJ,QAAO,SAACjI,EAAEC,GAC/B,OAAIA,EAAEI,KAAOnD,EAAKmD,IAAQJ,EAAEyH,KAAUU,EAAMV,GACjC1H,EAAEC,EAAE2H,GACH5H,IACd,MAIVqB,EAAO2B,KACH,wBAAI7F,IAAK2J,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cAAe,SAC/EhF,UAAU,aACLoE,EAAmBzB,EAAKsJ,QAAO,SAACjI,EAAEC,GAC/B,OAAIA,EAAEI,KAAOnD,EAAKmD,IAAQJ,EAAEyH,KAAUU,EAAMV,GACjC1H,EAAEC,EAAE4H,GACH7H,IACd,OAIR,WACF,IAAIU,EAAK,IAAIC,KAAKoG,GA8BlB,IA5BA1F,EAAO2B,KACH,wBAAI7F,IAAK2J,EAAWC,EAAgBjG,YAAY,IAAIiG,EAAgB/F,cAAc,OAClFhF,UAAU,aACLoE,EAAmBzB,EAAKsJ,QAAO,SAACjI,EAAEC,GAC/B,IAAMiI,EAAgB,IAAIvH,KAAK,IAAIA,KAAKV,EAAEoI,IAAUrH,cAAc,IAAIL,KAAKV,EAAEoI,IAAUvH,WAAW,IAAIH,KAAKV,EAAEoI,IAAUtH,UAAU,GAErI,OAAId,EAAEI,KAAOnD,EAAKmD,IAAQJ,EAAEyH,KAAUU,EAAMV,IACrCQ,GAAiB,IAAIvH,KAAK,IAAIA,KAAKoG,GAAiB/F,cAAe,IAAIL,KAAKoG,GAAiBjG,WAAY,EAAE,GACnGd,EAAEC,EAAE2H,GACP5H,IACV,MAINqB,EAAO2B,KACP,wBAAI7F,IAAK2J,EAAWC,EAAgBjG,YAAY,IAAIiG,EAAgB/F,cAAc,SAClFhF,UAAU,aACLoE,EAAmBzB,EAAKsJ,QAAO,SAACjI,EAAEC,GAC/B,IAAMiI,EAAgB,IAAIvH,KAAK,IAAIA,KAAKV,EAAEoI,IAAUrH,cAAc,IAAIL,KAAKV,EAAEoI,IAAUvH,WAAW,IAAIH,KAAKV,EAAEoI,IAAUtH,UAAU,GAErI,OAAId,EAAEI,KAAOnD,EAAKmD,IAAQJ,EAAEyH,KAAUU,EAAMV,IACrCQ,GAAiB,IAAIvH,KAAK,IAAIA,KAAKoG,GAAiB/F,cAAe,IAAIL,KAAKoG,GAAiBjG,WAAY,EAAE,GACnGd,EAAEC,EAAE4H,GACP7H,IACV,MAIJiH,EAAc,IAAItG,KAAK,IAAIA,KAAKD,GAAMM,cAAe,IAAIL,KAAKD,GAAMI,WAAY,EAAE,EAAE,IACtFJ,EAAK0G,SAAS1G,EAAKI,WAAW,EAAE,GAEhCO,EAAO2B,KACH,wBAAI7F,IAAK2J,EAAWpG,EAAKI,YAAY,IAAIJ,EAAKM,cAAc,OAC5DhF,UAAU,aACLoE,EAAmBzB,EAAKsJ,QAAO,SAACjI,EAAEC,GACnC,IAAMiI,EAAgB,IAAIvH,KAAK,IAAIA,KAAKV,EAAEoI,IAAUrH,cAAc,IAAIL,KAAKV,EAAEoI,IAAUvH,WAAW,IAAIH,KAAKV,EAAEoI,IAAUtH,UAAU,GACjI,OAAId,EAAEI,KAAOnD,EAAKmD,IAAQJ,EAAEyH,KAAUU,EAAMV,IACrCQ,EAAgB,IAAIvH,KAAK,IAAIA,KAAKD,GAAMM,cAAe,IAAIL,KAAKD,GAAMI,WAAY,IAClFoH,GAAiB,IAAIvH,KAAK,IAAIA,KAAKD,GAAMM,cAAe,IAAIL,KAAKD,GAAMI,WAAY,EAAE,GAC7Ed,EAAEC,EAAE2H,GACP5H,IACV,MAKVqB,EAAO2B,KACH,wBAAI7F,IAAK2J,EAAWpG,EAAKI,YAAY,IAAIJ,EAAKM,cAAc,SAC5DhF,UAAU,aACLoE,EAAmBzB,EAAKsJ,QAAO,SAACjI,EAAEC,GACnC,IAAMiI,EAAgB,IAAIvH,KAAK,IAAIA,KAAKV,EAAEoI,IAAUrH,cAAc,IAAIL,KAAKV,EAAEoI,IAAUvH,WAAW,IAAIH,KAAKV,EAAEoI,IAAUtH,UAAU,GACjI,OAAId,EAAEI,KAAOnD,EAAKmD,IAAQJ,EAAEyH,KAAUU,EAAMV,IACrCQ,EAAgB,IAAIvH,KAAK,IAAIA,KAAKD,GAAMM,cAAe,IAAIL,KAAKD,GAAMI,WAAY,IAClFoH,GAAiB,IAAIvH,KAAK,IAAIA,KAAKD,GAAMM,cAAe,IAAIL,KAAKD,GAAMI,WAAY,EAAE,GAC7Ed,EAAEC,EAAE4H,GACP7H,IACV,MAMdqB,EAAO2B,KACH,wBAAI7F,IAAK2J,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cAAc,OAC9EhF,UAAU,aACLoE,EAAmBzB,EAAKsJ,QAAO,SAACjI,EAAEC,GAC/B,IAAMiI,EAAgB,IAAIvH,KAAK,IAAIA,KAAKV,EAAEoI,IAAUrH,cAAc,IAAIL,KAAKV,EAAEoI,IAAUvH,WAAW,IAAIH,KAAKV,EAAEoI,IAAUtH,UAAU,GACjI,OAAId,EAAEI,KAAOnD,EAAKmD,IAAQJ,EAAEyH,KAAUU,EAAMV,IACrCQ,EAAgB,IAAIvH,KAAK,IAAIA,KAAKsG,GAAejG,cAAe,IAAIL,KAAKsG,GAAenG,WAAY,IACpGoH,GAAiBjB,EACbjH,EAAEC,EAAE2H,GACH5H,IACd,MAKVqB,EAAO2B,KACH,wBAAI7F,IAAK2J,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cAAc,SAC9EhF,UAAU,aACLoE,EAAmBzB,EAAKsJ,QAAO,SAACjI,EAAEC,GAC/B,IAAMiI,EAAgB,IAAIvH,KAAK,IAAIA,KAAKV,EAAEoI,IAAUrH,cAAc,IAAIL,KAAKV,EAAEoI,IAAUvH,WAAW,IAAIH,KAAKV,EAAEoI,IAAUtH,UAAU,GACjI,OAAId,EAAEI,KAAOnD,EAAKmD,IAAQJ,EAAEyH,KAAUU,EAAMV,IACrCQ,EAAgB,IAAIvH,KAAK,IAAIA,KAAKsG,GAAejG,cAAe,IAAIL,KAAKsG,GAAenG,WAAY,IACpGoH,GAAiBjB,EACbjH,EAAEC,EAAE4H,GACH7H,IACd,MA1FR,GA+FCqB,EAwDsBiH,CAA2BpL,EAAKkL,EAAMZ,EAAWC,GAClD,wBAAIzL,UAAU,aACTwL,EAAWS,QAAO,SAACjI,EAAEC,GAClB,OAAIA,EAAEyH,KAAUU,EAAMV,IAAWzH,EAAEI,KAAOnD,EAAKmD,GACpCL,EAAEC,EAAE2H,GACH5H,IACd,IAEN,wBAAIhE,UAAU,aACToE,EAAmBoH,EAAWS,QAAO,SAACjI,EAAEC,GACrC,OAAIA,EAAEyH,KAAUU,EAAMV,IAAWzH,EAAEI,KAAOnD,EAAKmD,GACpCL,EAAEC,EAAE4H,GACH7H,IACd,SAKlB,WAITqB,EAuCEkH,IAGL,2BAAOvM,UAAU,uBAAjB,mBCpdZ,SAASoc,GAAe3d,GAAQ,IAAD,MACiC8D,EAAS,CACjES,IAAI,eACJE,KAAK,CACDoC,OAAO,OACPC,QAAQ,CAAC,eAAe,oBACxBC,KAAKC,KAAKC,UAAU,CAACxE,KAAK,aAC1ByE,YAAY,aAPO,sBACd0W,EADc,EACnB1Z,KAA8B2Z,EADX,EACKzZ,MADL,EAW2BN,EAAS,CAC3DS,IAAI,eACJE,KAAK,CACDoC,OAAO,OACPC,QAAQ,CAAC,eAAe,oBACxBC,KAAKC,KAAKC,UAAU,CAACxE,KAAK,UAC1ByE,YAAY,aAjBO,sBAWdgH,EAXc,EAWnBhK,KAA2BiK,EAXR,EAWE/J,MAXF,EAoB6EN,EAAS,MApBtF,0BAoBdga,EApBc,EAoBnB5Z,KAAsC6Z,EApBnB,EAoBa3Z,MAAmC4Z,EApBhD,OAqBO/d,mBAAS,gBArBhB,mBAqBpBsO,EArBoB,KAqBXC,EArBW,OAsBOvO,mBAAS,IAtBhB,mBAsBpBwO,EAtBoB,KAsBXC,EAtBW,OAuBezO,mBAAS,MAvBxB,mBAuBpBge,EAvBoB,KAuBPC,EAvBO,OAwBSje,mBAAS,MAxBlB,mBAwBpB4O,EAxBoB,KAwBVC,EAxBU,OAyBW7O,mBAAS,IAzBpB,mBAyBpB8O,EAzBoB,KAyBTC,EAzBS,OA0BW/O,mBAAS,IA1BpB,mBA0BpBgP,EA1BoB,KA0BTC,GA1BS,QA2BSjP,oBAAS,IAAIiG,MAAOK,cAAc,UA3B3C,qBA2BpBgG,GA3BoB,MA2BV4C,GA3BU,SA4BKlP,mBAASmP,GAAiB,IAAIlJ,OA5BnC,qBA4BpBuG,GA5BoB,MA4BZ4C,GA5BY,SA6BWpP,mBAAS,MA7BpB,qBA6BpBmM,GA7BoB,MA6BRkD,GA7BQ,SA8B6BrP,mBAAS,IA9BtC,qBA8BpBsP,GA9BoB,MA8BCC,GA9BD,SAiCWvP,oBAAS,GAjCpB,qBAiCpByM,GAjCoB,MAiCR+C,GAjCQ,SAkCqBxP,mBAAS,MAlC9B,qBAkCpByP,GAlCoB,MAkCHC,GAlCG,SAmCiC1P,mBAAS,MAnC1C,qBAmCpB2P,GAnCoB,MAmCGC,GAnCH,SAoCa5P,mBAAS,IApCtB,qBAoCpB6P,GApCoB,MAoCPC,GApCO,SAqCyB9P,mBAAS,IArClC,qBAqCpB+P,GArCoB,MAqCDC,GArCC,SAsC+BhQ,oBAAS,GAtCxC,qBAsCpBiQ,GAtCoB,MAsCEC,GAtCF,MAwCpBtM,GAAQuM,cAARvM,KACA1C,GAAcC,qBAAWL,GAAzBI,WACDgH,GAAQC,cAqId,SAASgH,GAAiBnJ,GACtB,IAAIoK,EAAS,IAAInK,KAAKD,GAEtB,OAAQoK,EAAS9J,eAAkB8J,EAAShK,WAAa,EAAG,GAAI,MAAOgK,EAAShK,WAAW,GAAG,KAAMgK,EAAShK,WAAW,KAAOgK,EAAS/J,UAAU,GAClJ,KAAK+J,EAAS/J,UAAY,IAAI+J,EAAS/J,WAvI3ChG,qBAAU,WAcN,GAZIsd,IAAgD,IAA1BA,EAAmBnV,MACjCC,MAAM,iEACNvH,IAAW,IAEdyc,GAAsBA,EAAmB1Z,MAAQ0Z,EAAmB9U,OACzEoV,EAAmBN,EAAmB1Z,KAAK1B,KAAI,SAAA0B,GAAI,OACnD,4BAAQxB,IAAKwB,EAAK0Z,EAAmB9U,MAAM,GAAGjG,MAAOyG,MAAOpF,EAAK0Z,EAAmB9U,MAAM,GAAGjG,OACxFqB,EAAK0Z,EAAmB9U,MAAM,GAAGjG,MAAM,OAAOqB,EAAK0Z,EAAmB9U,MAAM,GAAGjG,MAAMqB,EAAK0Z,EAAmB9U,MAAM,GAAGjG,MAAM,SAKjIqL,IAA0C,IAAvBA,EAAgBzF,KAC3BC,MAAM,iEACNvH,IAAW,QAElB,GAAI+M,GAAmBA,EAAgBhK,MAAQgK,EAAgBpF,MAAO,CACvE,IAAMwH,EAASpC,EAAgBpF,MAAM,GAAGjG,KAClC0N,EAAUrC,EAAgBpF,MAAM,GAAGjG,KAEzCiM,EAAgBZ,EAAgBhK,KAAK1B,KAAI,SAAA0B,GAAI,OACzC,4BAAQxB,IAAKwB,EAAKoM,GAAWhH,MAAOpF,EAAKoM,IACpCpM,EAAKoM,GAAU,OACbpM,EAAKqM,GAAWrM,EAAKqM,GAAW,YAMjD,CAACqN,EAAmBC,EAAoB3P,EAAgBC,IAE1D7N,qBAAU,WACN,GAAIwd,IAAgE,IAAlCA,EAA2BrV,KACrDC,MAAM,iEACNvH,IAAW,QAEd,GAAI2c,GAA8BA,EAA2B5Z,MAAQ4Z,EAA2BhV,MAAO,CACxG,IAAM5E,EAAK4Z,EAA2B5Z,KAAK,GACrC4E,EAAMgV,EAA2BhV,MAAM,GACvClD,EAAIkD,EAAM,GAAGjG,KACbA,EAAKiG,EAAM,GAAGjG,KAEdwK,EAAkB,GAClBmD,EAAQsN,EAA2B5Z,KAAK,GACxC8I,EAAS8Q,EAA2BhV,MAAM,GAC1CmE,EAAOD,EAAS,GAAGnK,KACnBqK,EAAQF,EAAS,GAAGnK,KAE1ByM,IAAkB,SAAAlD,OAElBlI,EAAKgF,SAAQ,SAAAzG,GACT,IAAIgO,EAAU,IAC4B,IAAxCpD,EAAkBnD,QAAQzH,EAAKmD,MAC7ByH,EAAkB9E,KAAK9F,EAAKmD,IAC5B6K,EAAUhO,EAAKmD,IAAM4K,EAAQE,QAAO,SAAA/C,GAAK,OAAEA,EAAM/H,KAAOnD,EAAKmD,MAC7D0J,IAAkB,SAAAlD,GAAW,OAAGzD,OAAOC,OAAO,GAAGwD,EAAYqE,UAIrEnB,IAAkB,SAAAlD,GAAW,sBAAOA,EAAP,CACzBlI,KAAK4Z,EAA2B5Z,KAChCyM,YAAY,YAAImN,EAA2B5Z,MAC3C4E,MAAMgV,EAA2BhV,MACjCyD,aACAE,WACA8B,WACAE,gBAEJkB,GACK,oCACG,4BAAQrG,MAAO1D,GAAiB,iBAAX2I,EAA0B,eAAe,aAC9D,4BAAQjF,MAAOzG,GAAf,UAIRgN,GADIpB,EAEC,oCACG,4BAAQnF,MAAO2D,GAAoB,iBAAXwB,EAA0B,eAAe,aACjE,4BAAQnF,MAAO4D,GAAf,SAI0B,MAElCsC,GAA2BnC,EAAkB7K,KAAI,SAAAC,GAAI,OAAEA,EAAKE,QAAQ,aAAa,WAGvF,CAACmb,EAA2BC,IAI9Bzd,qBAAU,WACFiP,IACAA,GAAqBrG,SAAQ,SAAA0H,GACzBC,IAAE,IAAID,GAAIE,GAAG,oBAAmB,SAAApQ,GACzBA,EAAE+I,SAAS/I,EAAEqQ,eAChBF,IAAE,aAAaD,GAAII,YAAY,kBAAkBC,SAAS,sBAE9DJ,IAAE,IAAID,GAAIE,GAAG,oBAAmB,SAAApQ,GACzBA,EAAE+I,SAAS/I,EAAEqQ,eAChBF,IAAE,aAAaD,GAAII,YAAY,mBAAmBC,SAAS,0BAIzE,CAAC7E,KAEH9L,qBAAU,WACN,SAAS4Q,IACL/H,SAAS+C,cAAc,uBAAuBxC,aAC1C,UAAU,yCAIlB,OAFAxJ,OAAOiR,iBAAiB,WAAWD,GAE5B,WACChR,OAAOkR,oBAAoB,WAAWF,MAEhD,IAEF5Q,qBAAU,WACN,SAAS+Q,IACL1F,EAAY,eAIhB,OAFAzL,OAAOiR,iBAAiB,WAAWE,GAE5B,WACCnR,OAAOkR,oBAAoB,WAAWC,MAEhD,IAiqBF,IAAIC,GAAa,KAuBjB,OArBKsM,GAAsBA,EAAmBxZ,OAAUyZ,GAAwB3P,GAAmBA,EAAgB9J,OAAU+J,GACzH2P,GAA8BA,EAA2B1Z,OAAU2Z,KACvEzM,GACI,yBAAK/P,UAAU,uBACVqc,GAAsBA,EAAmBxZ,MAAO,kDAAkDwZ,EAAmBxZ,MAAM2E,MAC3H,UAAU6U,EAAmBxZ,MAAM4E,KAAK,aAAa4U,EAAmBxZ,MAAM6E,WAAW,KACzF4U,EAAqB,2CAA2CA,EAAsB,KACvF,6BACA,6BACC3P,GAAmBA,EAAgB9J,MAAO,+CAA+C8J,EAAgB9J,MAAM2E,MAC/G,UAAUmF,EAAgB9J,MAAM4E,KAAK,aAAakF,EAAgB9J,MAAM6E,WAAW,KACnFkF,EAAkB,wCAAwCA,EAAmB,KAC9E,6BACA,6BACC2P,GAA8BA,EAA2B1Z,MAAO,oDAAoD0Z,EAA2B1Z,MAAM2E,MACrJ,UAAU+U,EAA2B1Z,MAAM4E,KAAK,aAAa8U,EAA2B1Z,MAAM6E,WAAW,KACzG8U,EAA6B,6CAA6CA,EAA8B,OAM7G,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOxM,OAAK,EAAC1N,KAAI,UAAKA,GAAL,aACZuI,GACA,kBAAC,GAAD,CACGD,SAAUwR,GAAe9Z,KACzBD,YAAa+Z,GAAe/Z,YAC5BwI,YAAaA,GACbM,YAAaA,GACbxI,KAAMgB,EAASkH,GAAW,YAAgB,GAAG0D,GAAa,OAC1D/C,WAAY7H,EAASkH,GAAW,YAAgB,GAAG4D,GAAmB,OACtElH,MAAOsD,GAAW,MAClBgD,iBAAkBA,KAGlB,kBAAC,IAAD,CAAU5N,GAAImc,GAAe9Z,QAGrC,kBAAC,IAAD,CAAO0N,OAAK,EAAC1N,KAAMA,IACf,kBAAC,EAAD,KACI,yBAAKtC,UAAU,iBAAiBI,MAAO,CAAC6P,YAAY,GAAGC,aAAa,KAChE,4BAAKkM,GAAe/Z,aACpB,0BAAMrC,UAAU,OAAOmQ,SAAU,SAAAhR,GACjCA,EAAEiR,iBACFxB,IAA4B,GAE5B6N,EADe,iBAAXzP,EACwB,CACxBhK,IAAI,eACJE,KAAK,CACDoC,OAAO,OACPC,QAAQ,CAAC,eAAe,oBACxBC,KAAKC,KAAKC,UAAU,CAChBxE,KAAK,mCACLuB,MAAM,CAACuI,GAAUE,GAAQsC,EAAWE,KAExC/H,YAAY,YAIQ,CACxB3C,IAAI,eACJE,KAAK,CACDoC,OAAO,OACPC,QAAQ,CAAC,eAAe,oBACxBC,KAAKC,KAAKC,UAAU,CAChBxE,KAAK,mCACLuB,MAAM,CAACuI,GAAUE,GAAQsC,EAAWE,KAExC/H,YAAY,eAMpB,yBAAK3F,UAAU,YACX,yBAAKA,UAAU,mCACX,2BAAOA,UAAU,0BAA0BI,MAAO,CAAC6P,YAAY,GAAItG,QAAQ,aAA3E,cACA,8BAAO/I,KAAK,OAAOF,GAAG,YAAY2P,UAAQ,EAAC5H,SAAU,SAACtJ,GAC9C,IAAIwF,KAAKxF,EAAE+I,OAAOH,OAAO,IAAIpD,KAAKuG,KAClC/D,MAAM,4BACNyG,IAAgB,IAAIjJ,MAAOK,cAAc,WAExC4I,GAAgBzO,EAAE+I,OAAOH,QAE9BA,MAAOiD,IAPX,uDAOyC,sCAPzC,IAQA,2BAAOhL,UAAU,sCAAsCI,MAAO,CAAC6P,YAAY,GAAItG,QAAQ,WAAvF,YACA,8BAAO/I,KAAK,OAAOF,GAAG,UAAU2P,UAAQ,EAAC5H,SAAU,SAACtJ,GAC5C,IAAIwF,KAAKxF,EAAE+I,OAAOH,OAAO,IAAIpD,KAAKqG,KAClC7D,MAAM,0BACN2G,GAAcD,GAAiB,IAAIlJ,QAElCmJ,GAAc3O,EAAE+I,OAAOH,QAC7BA,MAAOmD,IANV,uDAMsC,sCANtC,KASJ,8BAAUlL,UAAU,iEAChB,4BAAQA,UAAU,6CACd,wCAGJ,yBAAKA,UAAU,uBACX,2BAAOA,UAAU,0BAA0B2J,QAAQ,YAAnD,aACA,4BAAQ3J,UAAU,wBAAwBqQ,UAAQ,EAAC3P,GAAG,WACtDqH,MAAOiF,EAAUvE,SAAU,SAAAtJ,GACvB8N,EAAe9N,EAAE+I,OAAOH,OACxBoF,EAAe,IACfM,EAAiB,IACjBE,GAAiB,MAEjB,4BAAQ5F,MAAM,gBAAd,iBACA,4BAAQA,MAAM,YAAd,cAEJ,2BAAO/H,UAAU,+BAA+B2J,QAAQ,cACxC,iBAAXqD,EAA0B,cAAc,YAE7C,4BAAQhN,UAAU,wBAAwBqQ,UAAQ,EAACC,KAAK,IAAI5P,GAAG,aAC/DqH,MAAOyF,EAAY+C,UAAU,EAAM9H,SAAU,SAAAtJ,GACzC,IAAIkG,EAAO,GACXmL,MAAMC,KAAKtR,EAAE+I,OAAOwI,SAASzP,KAAI,SAAA0P,IACP,IAAlBA,EAAOrJ,UACPjC,EAAO2B,KAAK2J,EAAO5I,UAE3B0F,EAAiBpI,KAEL,iBAAX2H,EAA0B0P,EAAapP,IAIhD,yBAAKtN,UAAU,uBACX,yBAAKA,UAAU,0BACX,2BAAOY,KAAK,WAAWZ,UAAU,oBAAoBU,GAAG,gBACxDoH,QAAoB,iBAAXkF,KAA4BqP,GAAsBA,EAAmB1Z,KAAKjB,SAAS8L,EAAW9L,WACtFiL,GAAmBA,EAAgBhK,KAAKjB,SAAS8L,EAAW9L,QAE7E+G,SAAU,SAAAtJ,GACFA,EAAE+I,OAAOJ,QACT2F,EAA4B,iBAAXT,EACjBqP,EAAmB1Z,KAAK1B,KAAI,SAAA0B,GAAI,OAC5BA,EAAK0Z,EAAmB9U,MAAM,GAAGjG,SACpCqL,EAAgBhK,KAAK1B,KAAI,SAAA0B,GAAI,OAC1BA,EAAKgK,EAAgBpF,MAAM,GAAGjG,UAEjCmM,EAAiB,OAE1B,2BAAO9D,QAAQ,gBAAgBvJ,MAAO,CAAC6P,YAAY,GAAIjQ,UAAU,oBACjD,iBAAXgN,EAA0B,kBAAkB,kBAKzD,yBAAKhN,UAAU,uBACX,2BAAOA,UAAU,0BAA0B2J,QAAQ,YAAnD,aACA,4BAAQ3J,UAAU,wBAAwBU,GAAG,WAC7CqH,MAAOmF,EAAUzE,SAAU,SAAAtJ,GACvBgO,EAAehO,EAAE+I,OAAOH,OACxB4F,GAAiB,MAEjB,4BAAQ5F,MAAM,IAAd,wBACA,4BAAQA,MAAkB,iBAAXiF,EAA0B,WAAW,gBAA4B,iBAAXA,EAA0B,YAAY,kBAE9GE,EAAW,2BAAOlN,UAAU,+BAA+B2J,QAAQ,cACpD,iBAAXuD,EAA0B,cAAc,YACnC,KACTA,EAAW,4BAAQlN,UAAU,wBAAwBqQ,UAAQ,EAACC,KAAK,IAAI5P,GAAG,aAC3EkQ,UAAU1D,EACVnF,MAAO2F,EAAY6C,UAAU,EAAM9H,SAAU,SAAAtJ,GACzC,IAAIkG,EAAO,GACXmL,MAAMC,KAAKtR,EAAE+I,OAAOwI,SAASzP,KAAI,SAAA0P,IACP,IAAlBA,EAAOrJ,UACPjC,EAAO2B,KAAK2J,EAAO5I,UAE3B4F,GAAiBtI,KAEL,iBAAX6H,EAA0BwP,EAAapP,GACjC,MAGdJ,EAAW,yBAAKlN,UAAU,uBACvB,yBAAKA,UAAU,0BACX,2BAAOY,KAAK,WAAWZ,UAAU,oBAAoBU,GAAG,gBACxDoH,QAAoB,iBAAXoF,KAA4BmP,GAAsBA,EAAmB1Z,KAAKjB,SAASgM,EAAWhM,WAC1FiL,GAAmBA,EAAgBhK,KAAKjB,SAASgM,EAAWhM,QAEzE+G,SAAU,SAAAtJ,GACFA,EAAE+I,OAAOJ,QACT6F,GAA4B,iBAAXT,EACjBmP,EAAmB1Z,KAAK1B,KAAI,SAAA0B,GAAI,OAC5BA,EAAK0Z,EAAmB9U,MAAM,GAAGjG,SACpCqL,EAAgBhK,KAAK1B,KAAI,SAAA0B,GAAI,OAC1BA,EAAKgK,EAAgBpF,MAAM,GAAGjG,UAEjCqM,GAAiB,OAE1B,2BAAOhE,QAAQ,gBAAgBvJ,MAAO,CAAC6P,YAAY,GAAIjQ,UAAU,oBACjD,iBAAXkN,EAA0B,kBAAkB,kBAGjD,MAIZ,8BAAUlN,UAAU,6EAChB,4BAAQA,UAAU,kEACd,gDAEJ,yBAAKA,UAAU,YACf,yBAAKA,UAAU,iDAAiDI,MAAO,CAAC6P,YAAY,KAChF,2BAAOrP,KAAK,WAAWZ,UAAU,mBAAmBU,GAAG,cAAc+H,SAAU,SAAAtJ,GACvEA,EAAE+I,OAAOJ,QACToG,IAAkB,GACjBA,IAAkB,IACpBpG,QAASqD,KAChB,2BAAOxB,QAAQ,cAAc3J,UAAU,oBAAvC,iBAGJ,yBAAKA,UAAU,iCACX,2BAAOA,UAAU,0BAA0BI,MAAO,CAAC6P,YAAY,GAAItG,QAAQ,QAA3E,QAGA,4BAAQjJ,GAAG,OAAOV,UAAU,wBAAwB+H,MAAOwG,GAAc9F,SAAU,SAAAtJ,GAAC,OAChFqP,GAAmBrP,EAAE+I,OAAOH,SAE5B,4BAAQA,MAAM,IAAd,wBACCoG,KAIT,yBAAKnO,UAAU,iCACX,2BAAOA,UAAU,2BAA2BI,MAAO,CAAC6P,YAAY,GAAItG,QAAQ,QAA5E,eAGA,4BAAQjJ,GAAG,OAAOV,UAAU,wBAAwB+H,MAAO0G,GAAoBhG,SAAU,SAAAtJ,GAAC,OACtFuP,GAAyBvP,EAAE+I,OAAOH,SAElC,4BAAQA,MAAM,IAAd,wBACCsG,OAKb,yBAAKrO,UAAU,aACX,4BAAQY,KAAK,SAASZ,UAAU,wBAAhC,YACA,4BAAQY,KAAK,SAASZ,UAAU,kBAAkBa,QAAS,SAAA1B,GAAC,OACxD4O,GAAkB,QADtB,SAEA,4BAAQnN,KAAK,SAASC,QAAS,SAAC1B,GACvB0L,IAIDjD,SAAS+C,cAAc,uBAAuBxC,aAC9C,UAAU,yCACViC,EAAY,gBACZxD,GAAQI,KAAK,6BANb4H,IAA4B,IASpC5O,UAAU,0BAXV,WAYC2O,GACA,yBAAK3O,UAAU,uBAAf,iCAEO,QAIhB,6BACC+P,GAEAlF,GACA,yBAAK7K,UAAU,QACZ,wBAAIA,UAAU,QAAd,SAEI,4BAAQA,UAAU,oBACda,QAAS,SAAC1B,GAAD,OAAK6O,GAAqBrG,SAAQ,SAAA0H,GAAE,OACzCC,IAAE,IAAID,GAAIwB,SAAS,aACxB,uBAAG7Q,UAAU,sBAHhB,WAIA,4BAAQA,UAAU,gBACda,QAAS,SAAC1B,GAAD,OAAK6O,GAAqBrG,SAAQ,SAAA0H,GAAE,OACzCC,IAAE,IAAID,GAAIwB,SAAS,aAF3B,IAGI,uBAAG7Q,UAAU,uBAHjB,cAje5B,WACI,IAAM2C,EAAKkI,GAAW,KAAS,GACzBtD,EAAMsD,GAAW,MAAU,GAC3BxG,EAAIkD,EAAM,GAAGjG,KACbA,EAAKiG,EAAM,GAAGjG,KACdgK,EAA8B,iBAA1BT,GAAW,SAA8B,KAAKtD,EAAM,GAAGjG,KAC3DiK,EAAgC,iBAA1BV,GAAW,SAA8BtD,EAAM,GAAGjG,KAAKiG,EAAM,GAAGjG,KAGtEmK,GADQZ,GAAW,KAAS,GACnBA,GAAW,MAAU,IAC9Ba,EAAOD,EAAS,GAAGnK,KACnBqK,EAAQF,EAAS,GAAGnK,KACpBsK,EAAOH,EAAS,GAAGnK,KACnBuK,EAASJ,EAAS,GAAGnK,KAErBwP,EA3dV,WACI,IAAMhG,EAAa,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAChE,OAAQ,SAAU,YAAa,UAAW,WAAY,YAEpDzF,EAAO,GAKP0F,EAAgB,IAAIpG,KAAK,IAAIA,KAAKkG,GAAYG,WAAWhG,cAAc,IAAIL,KAAKkG,GAAYG,WAAWlG,WAAW,IAAIH,KAAKkG,GAAYG,WAAWjG,UAAU,GAC5JkG,EAAc,IAAItG,KAAK,IAAIA,KAAKkG,GAAYK,SAASlG,cAAc,IAAIL,KAAKkG,GAAYK,SAASpG,WAAW,IAAIH,KAAKkG,GAAYK,SAASnG,UAAU,GAE1J,GAAIkG,GAAe,IAAItG,KAAK,IAAIA,KAAKoG,GAAiB/F,cAAe,IAAIL,KAAKoG,GAAiBjG,WAAY,EAAE,GAC3E,aAA1B+F,GAAW,UACfxF,EAAO2B,KAAK,wBAAI7F,IAAK2J,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cAAc,OAC1F5E,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,KAChDpF,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cAAc,SAG1EK,EAAO2B,KAAK,wBAAI7F,IAA+B,aAA1B0J,GAAW,SAChCC,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cAAc,SACpE8F,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cACxD5E,MAAiC,aAA1ByK,GAAW,SAClB,CAACkG,KAAK,YAAYd,YAAY,GAAGC,aAAa,IAC7C,CAACa,KAAK,YAAYd,YAAY,GAAGC,aAAa,KAChB,aAA1BrF,GAAW,SACZC,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cAAc,SACpE8F,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,oBAG3D,CACD,IAAIN,EAAK,IAAIC,KAAKoG,GAkBlB,IAjB8B,aAA1BF,GAAW,UACfxF,EAAO2B,KAAK,wBAAI7F,IAAK2J,EAAWC,EAAgBjG,YAAY,IAAIiG,EAAgB/F,cAAc,OAC9F5E,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,KAChDpF,EAAWC,EAAgBjG,YAAY,IAAIiG,EAAgB/F,cAAc,SAG9EK,EAAO2B,KAAK,wBAAI7F,IAA+B,aAA1B0J,GAAW,SAChCC,EAAWC,EAAgBjG,YAAY,IAAIiG,EAAgB/F,cAAc,SACxE8F,EAAWC,EAAgBjG,YAAY,IAAIiG,EAAgB/F,cAC5D5E,MAAiC,aAA1ByK,GAAW,SAClB,CAACkG,KAAK,YAAYd,YAAY,GAAGC,aAAa,IAC7C,CAACa,KAAK,YAAYd,YAAY,GAAGC,aAAa,KAChB,aAA1BrF,GAAW,SACZC,EAAWC,EAAgBjG,YAAY,IAAIiG,EAAgB/F,cAAc,SACxE8F,EAAWC,EAAgBjG,YAAY,IAAIiG,EAAgB/F,gBAG1DiG,EAAc,IAAItG,KAAK,IAAIA,KAAKD,GAAMM,cAAe,IAAIL,KAAKD,GAAMI,WAAY,EAAE,EAAE,IACtFJ,EAAK0G,SAAS1G,EAAKI,WAAW,EAAE,GACF,aAA1B+F,GAAW,UACfxF,EAAO2B,KAAK,wBAAI7F,IAAK2J,EAAWpG,EAAKI,YAAY,IAAIJ,EAAKM,cAAc,OACxE5E,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,KAChDpF,EAAWpG,EAAKI,YAAY,IAAIJ,EAAKM,cAAc,SAGxDK,EAAO2B,KAAK,wBAAI7F,IAA+B,aAA1B0J,GAAW,SAChCC,EAAWpG,EAAKI,YAAY,IAAIJ,EAAKM,cAAc,SAClD8F,EAAWpG,EAAKI,YAAY,IAAIJ,EAAKM,cACtC5E,MAAiC,aAA1ByK,GAAW,SAClB,CAACkG,KAAK,YAAYd,YAAY,GAAGC,aAAa,IAC7C,CAACa,KAAK,YAAYd,YAAY,GAAGC,aAAa,KAChB,aAA1BrF,GAAW,SACZC,EAAWpG,EAAKI,YAAY,IAAIJ,EAAKM,cAAc,SAClD8F,EAAWpG,EAAKI,YAAY,IAAIJ,EAAKM,gBAGhB,aAA1B6F,GAAW,UACfxF,EAAO2B,KAAK,wBAAI7F,IAAK2J,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cAAc,OAC1F5E,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,KAChDpF,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cAAe,SAG3EK,EAAO2B,KAAK,wBAAI7F,IAA+B,aAA1B0J,GAAW,SAChCC,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cAAc,SACpE8F,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cACxD5E,MAAiC,aAA1ByK,GAAW,SAClB,CAACkG,KAAK,YAAYd,YAAY,GAAGC,aAAa,IAC7C,CAACa,KAAK,YAAYd,YAAY,GAAGC,aAAa,KAChB,aAA1BrF,GAAW,SACZC,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cAAc,SACpE8F,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,gBAIhE,OAAOK,EAqYMgG,GACP2F,EAA0C,iBAA1BnG,GAAW,SAA+B,IAA0B,IAAdiG,EAAOpP,OAAY,IAAI,IAA0B,IAAdoP,EAAOpP,OAAY,IAAI,IAmItI,OACI,yBAAK1B,UAAU,0BAA0BI,MAAO,CAAC6Q,UAAU,oBACvD,yBAAK7Q,MAAO,CAACC,MAAM2Q,EAAgBC,UAAU,oBACzC,yBAAKjR,UAAU,oDACfI,MAAO,CAAC8Q,WAAW,EAAEC,YAAY,IAC7B,wBAAI/Q,MAAO,CAAC2Q,KAAK,WAAWd,YAAY,GAAGC,aAAa,MACxD,wBAAI9P,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,GAAGlI,OAAO,WAC/DC,aAAW,MAAMpH,QAAS,SAAC1B,GAC3BA,EAAE+I,OAAOC,aAAa,aACgB,QAAtChJ,EAAE+I,OAAOE,aAAa,cAAsB,OAAO,OACnDyC,GAAW,KAAS,GAAGlH,EAASkH,GAAW,KAAS,GAAGxG,EAAIlF,EAAE+I,OAAOE,aAAa,eACjF2F,GAAkB,eAAIlD,KACwB,QAAtC1L,EAAE+I,OAAOE,aAAa,eACtBR,SAASC,eAAe,OAAOQ,UAAUC,OAAO,eAChDV,SAASC,eAAe,OAAOQ,UAAUE,IAAI,mBAG7CX,SAASC,eAAe,OAAOQ,UAAUC,OAAO,iBAChDV,SAASC,eAAe,OAAOQ,UAAUE,IAAI,kBAK1B,iBAA1BsC,GAAW,SAA8B,eAAe,YACzD,uBAAGnK,GAAG,MAAMV,UAAU,2BAE1B,wBAAII,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,GAAGlI,OAAO,WACnEC,aAAW,MAAMpH,QAAS,SAAC1B,GACvBA,EAAE+I,OAAOC,aAAa,aACgB,QAAtChJ,EAAE+I,OAAOE,aAAa,cAAsB,OAAO,OACnDyC,GAAW,KAAS,GAAGlH,EAASkH,GAAW,KAAS,GAAGvJ,EAAKnC,EAAE+I,OAAOE,aAAa,eAClF2F,GAAkB,eAAIlD,KACwB,QAAtC1L,EAAE+I,OAAOE,aAAa,eACtBR,SAASC,eAAe,QAAQQ,UAAUC,OAAO,eACjDV,SAASC,eAAe,QAAQQ,UAAUE,IAAI,mBAG9CX,SAASC,eAAe,QAAQQ,UAAUC,OAAO,iBACjDV,SAASC,eAAe,QAAQQ,UAAUE,IAAI,kBAZ1D,OAiBI,uBAAG7H,GAAG,OAAOV,UAAU,2BAE1B8Q,EAC0B,iBAA1BjG,GAAW,SAA8B,KAC1C,wBAAIzK,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,KAAzD,OACA,wBAAI9P,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,KAAzD,UAEJ,yBAAK9P,MAAO,CAACgR,UAAU,OAAOC,UAAU,SAASrI,UAAU,SAnLvE,WACI,IAAM8C,EAAkB,GAClBzG,EAAO,GA4Hb,OA1HA1C,EAAKgF,SAAQ,SAAAzG,GACT,IAAM6K,EAAqB,IACgB,IAAxCD,EAAkBnD,QAAQzH,EAAKmD,MAC9ByH,EAAkB9E,KAAK9F,EAAKmD,IAC5BgB,EAAO2B,KACH,yBAAK7F,IAAKD,EAAKmD,IACX,yBAAKrE,UAAU,SAASI,MAAOyK,GAAW,SAAa,CAAC7C,OAAO,WAAW,KAAMxH,cAAY,WAAWC,cAAa,IAAIS,EAAKmD,GAAKjD,QAAQ,aAAa,KACnJ,uBAAGpB,UAAW6K,GAAW,SAAa,yBAAyB,GAC/DzK,MAAOyK,GAAW,SAAc,CAACkG,KAAK,WAAWd,YAAY,GAAGC,aAAa,IAAI,CAACa,KAAK,YACvFrQ,GAAI,YAAYQ,EAAKmD,GAAKjD,QAAQ,aAAa,MAC/C,uBAAGpB,UAAU,OAAOI,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,KAAMhP,EAAKmD,IACpF,uBAAGrE,UAAU,OAAOI,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,KAAMhP,EAAKI,IAnZhH,SAA8BJ,EAAKyB,EAAK4E,GACpC,IAAMuD,EAAa,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAChE,OAAQ,SAAU,YAAa,UAAW,WAAY,YAEpDzF,EAAO,GAEPhB,EAAIkD,EAAM,GAAGjG,KACb0K,EAASzE,EAAM,GAAGjG,KAClBgK,EAA8B,iBAA1BT,GAAW,SAA8B,KAAKtD,EAAM,GAAGjG,KAC3DiK,EAAgC,iBAA1BV,GAAW,SAA8BtD,EAAM,GAAGjG,KAAKiG,EAAM,GAAGjG,KAKtEyJ,EAAgB,IAAIpG,KAAK,IAAIA,KAAKkG,GAAYG,WAAWhG,cAAc,IAAIL,KAAKkG,GAAYG,WAAWlG,WAAW,IAAIH,KAAKkG,GAAYG,WAAWjG,UAAU,GAC5JkG,EAAc,IAAItG,KAAK,IAAIA,KAAKkG,GAAYK,SAASlG,cAAc,IAAIL,KAAKkG,GAAYK,SAASpG,WAAW,IAAIH,KAAKkG,GAAYK,SAASnG,UAAU,GA+I1J,OA9IIkG,GAAe,IAAItG,KAAK,IAAIA,KAAKoG,GAAiB/F,cAAe,IAAIL,KAAKoG,GAAiBjG,WAAY,EAAE,IAC3E,aAA1B+F,GAAW,UACfxF,EAAO2B,KACH,uBAAG7F,IAAK2J,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cAAc,OAC7EhF,UAAU,OACVI,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,KAChD9L,EAAmBzB,EAAKsJ,QAAO,SAACjI,EAAEC,GAC/B,OAAIA,EAAEI,KAAOnD,EAAKmD,GACPL,EAAEC,EAAEqH,GACHtH,IACd,MAIVqB,EAAO2B,KACH,uBAAG7F,IAA+B,aAA1B0J,GAAW,SACnBC,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cAAc,SACpE8F,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cACxDhF,UAAU,OACVI,MAAiC,aAA1ByK,GAAW,SAClB,CAACkG,KAAK,YAAYd,YAAY,GAAGC,aAAa,IAC7C,CAACa,KAAK,YAAYd,YAAY,GAAGC,aAAa,KAC1C9L,EAAmBzB,EAAKsJ,QAAO,SAACjI,EAAEC,GAC/B,OAAIA,EAAEI,KAAOnD,EAAKmD,GACPL,EAAEC,EAAEsH,GACHvH,IACd,OAKR,WACF,IAAIU,EAAK,IAAIC,KAAKoG,GAoClB,IAlC8B,aAA1BF,GAAW,UACfxF,EAAO2B,KACH,uBAAG7F,IAAK2J,EAAWC,EAAgBjG,YAAY,IAAIiG,EAAgB/F,cAAc,OACjFhF,UAAU,OAAOI,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,KACjE9L,EAAmBzB,EAAKsJ,QAAO,SAACjI,EAAEC,GAC/B,IAAMiI,EAAgB,IAAIvH,KAAK,IAAIA,KAAKV,EAAE+H,IAAWhH,cAAc,IAAIL,KAAKV,EAAE+H,IAAWlH,WAAW,IAAIH,KAAKV,EAAE+H,IAAWjH,UAAU,GAExI,OAAId,EAAEI,KAAOnD,EAAKmD,IACX6H,GAAiB,IAAIvH,KAAK,IAAIA,KAAKoG,GAAiB/F,cAAe,IAAIL,KAAKoG,GAAiBjG,WAAY,EAAE,GACnGd,EAAEC,EAAEqH,GACPtH,IACV,MAIVqB,EAAO2B,KACH,uBAAG7F,IAA+B,aAA1B0J,GAAW,SACnBC,EAAWC,EAAgBjG,YAAY,IAAIiG,EAAgB/F,cAAc,SACxE8F,EAAWC,EAAgBjG,YAAY,IAAIiG,EAAgB/F,cAC5DhF,UAAU,OACVI,MAAiC,aAA1ByK,GAAW,SACd,CAACkG,KAAK,YAAYd,YAAY,GAAGC,aAAa,IAC7C,CAACa,KAAK,YAAYd,YAAY,GAAGC,aAAa,KAC9C9L,EAAmBzB,EAAKsJ,QAAO,SAACjI,EAAEC,GAC/B,IAAMiI,EAAgB,IAAIvH,KAAK,IAAIA,KAAKV,EAAE+H,IAAWhH,cAAc,IAAIL,KAAKV,EAAE+H,IAAWlH,WAAW,IAAIH,KAAKV,EAAE+H,IAAWjH,UAAU,GAExI,OAAId,EAAEI,KAAOnD,EAAKmD,IACX6H,GAAiB,IAAIvH,KAAK,IAAIA,KAAKoG,GAAiB/F,cAAe,IAAIL,KAAKoG,GAAiBjG,WAAY,EAAE,GACnGd,EAAEC,EAAEsH,GACPvH,IACV,MAIJiH,EAAc,IAAItG,KAAK,IAAIA,KAAKD,GAAMM,cAAe,IAAIL,KAAKD,GAAMI,WAAY,EAAE,EAAE,IACtFJ,EAAK0G,SAAS1G,EAAKI,WAAW,EAAE,GACF,aAA1B+F,GAAW,UACfxF,EAAO2B,KACH,uBAAG7F,IAAK2J,EAAWpG,EAAKI,YAAY,IAAIJ,EAAKM,cAAc,OAC3DhF,UAAU,OAAOI,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,KACjE9L,EAAmBzB,EAAKsJ,QAAO,SAACjI,EAAEC,GACnC,IAAMiI,EAAgB,IAAIvH,KAAK,IAAIA,KAAKV,EAAE+H,IAAWhH,cAAc,IAAIL,KAAKV,EAAE+H,IAAWlH,WAAW,IAAIH,KAAKV,EAAE+H,IAAWjH,UAAU,GACpI,OAAId,EAAEI,KAAOnD,EAAKmD,IACX6H,EAAgB,IAAIvH,KAAK,IAAIA,KAAKD,GAAMM,cAAe,IAAIL,KAAKD,GAAMI,WAAY,IAClFoH,GAAiB,IAAIvH,KAAK,IAAIA,KAAKD,GAAMM,cAAe,IAAIL,KAAKD,GAAMI,WAAY,EAAE,GAC7Ed,EAAEC,EAAEqH,GACPtH,IACV,MAKVqB,EAAO2B,KACH,uBAAG7F,IAA+B,aAA1B0J,GAAW,SACnBC,EAAWpG,EAAKI,YAAY,IAAIJ,EAAKM,cAAc,SAClD8F,EAAWpG,EAAKI,YAAY,IAAIJ,EAAKM,cACtChF,UAAU,OACVI,MAAiC,aAA1ByK,GAAW,SAClB,CAACkG,KAAK,YAAYd,YAAY,GAAGC,aAAa,IAC7C,CAACa,KAAK,YAAYd,YAAY,GAAGC,aAAa,KAC1C9L,EAAmBzB,EAAKsJ,QAAO,SAACjI,EAAEC,GACnC,IAAMiI,EAAgB,IAAIvH,KAAK,IAAIA,KAAKV,EAAE+H,IAAWhH,cAAc,IAAIL,KAAKV,EAAE+H,IAAWlH,WAAW,IAAIH,KAAKV,EAAE+H,IAAWjH,UAAU,GACpI,OAAId,EAAEI,KAAOnD,EAAKmD,IACX6H,EAAgB,IAAIvH,KAAK,IAAIA,KAAKD,GAAMM,cAAe,IAAIL,KAAKD,GAAMI,WAAY,IAClFoH,GAAiB,IAAIvH,KAAK,IAAIA,KAAKD,GAAMM,cAAe,IAAIL,KAAKD,GAAMI,WAAY,EAAE,GAC7Ed,EAAEC,EAAEsH,GACPvH,IACV,MAKgB,aAA1B6G,GAAW,UACfxF,EAAO2B,KACH,uBAAG7F,IAAK2J,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cAAc,OAC7EhF,UAAU,OAAOI,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,KACjE9L,EAAmBzB,EAAKsJ,QAAO,SAACjI,EAAEC,GAC/B,IAAMiI,EAAgB,IAAIvH,KAAK,IAAIA,KAAKV,EAAE+H,IAAWhH,cAAc,IAAIL,KAAKV,EAAE+H,IAAWlH,WAAW,IAAIH,KAAKV,EAAE+H,IAAWjH,UAAU,GACpI,OAAId,EAAEI,KAAOnD,EAAKmD,IACX6H,EAAgB,IAAIvH,KAAK,IAAIA,KAAKsG,GAAejG,cAAe,IAAIL,KAAKsG,GAAenG,WAAY,IACpGoH,GAAiBjB,EACbjH,EAAEC,EAAEqH,GACHtH,IACd,MAKVqB,EAAO2B,KACH,uBAAG7F,IAA+B,aAA1B0J,GAAW,SACnBC,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cAAc,SACpE8F,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cACxDhF,UAAU,OACVI,MAAiC,aAA1ByK,GAAW,SAClB,CAACkG,KAAK,YAAYd,YAAY,GAAGC,aAAa,IAC7C,CAACa,KAAK,YAAYd,YAAY,GAAGC,aAAa,KAC1C9L,EAAmBzB,EAAKsJ,QAAO,SAACjI,EAAEC,GAC/B,IAAMiI,EAAgB,IAAIvH,KAAK,IAAIA,KAAKV,EAAE+H,IAAWhH,cAAc,IAAIL,KAAKV,EAAE+H,IAAWlH,WAAW,IAAIH,KAAKV,EAAE+H,IAAWjH,UAAU,GACpI,OAAId,EAAEI,KAAOnD,EAAKmD,IACX6H,EAAgB,IAAIvH,KAAK,IAAIA,KAAKsG,GAAejG,cAAe,IAAIL,KAAKsG,GAAenG,WAAY,IACpGoH,GAAiBjB,EACbjH,EAAEC,EAAEsH,GACHvH,IACd,MA1GR,GA+GCqB,EAsPkB8G,CAAqBjL,EAAKyB,EAAK4E,GACL,aAA1BsD,GAAW,SACZ,uBAAG7K,UAAU,OAAOI,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,KACpE9L,EAAmBzB,EAAKsJ,QAAO,SAACjI,EAAEC,GAC/B,OAAGA,EAAEI,KAAOnD,EAAKmD,GACNL,EAAEC,EAAEqH,GACHtH,IACd,KACD,KACL,uBAAGhE,UAAU,OAAOI,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,KACpE9L,EAAmBzB,EAAKsJ,QAAO,SAACjI,EAAEC,GAC/B,OAAGA,EAAEI,KAAOnD,EAAKmD,GACNL,EAAEC,EAAEsH,GACHvH,IACd,MAGT6G,GAAW,SACX,yBAAK7K,UAAU,6CAChBU,GAAIQ,EAAKmD,GAAKjD,QAAQ,aAAa,KAC/B,2BAAOpB,UAAU,qBACb,+BACI,4BACI,wBAAIA,UAAU,YAAYI,MAAO,CAAC4H,OAAO,WAAYC,aAAW,MAChEpH,QAAS,SAAC1B,GACV,GAAI0L,GAAY3J,EAAKmD,IAAO,CACxB,IAAM3D,EAAG,SAASQ,EAAKmD,GAAKjD,QAAQ,aAAa,IACjDjC,EAAE+I,OAAOC,aAAa,aACgB,QAAtChJ,EAAE+I,OAAOE,aAAa,cAAsB,OAAO,OACnD,IAAIkJ,EAAW,GACfA,EAAWpQ,EAAKmD,IAAMV,EAASkH,GAAY3J,EAAKmD,IAAMqH,EAAOvM,EAAE+I,OAAOE,aAAa,eACnF2F,GAAkB3G,OAAOC,OAAO,GAAGwD,GAAYyG,IAEL,QAAtCnS,EAAE+I,OAAOE,aAAa,eACtBR,SAASC,eAAenH,GAAI2H,UAAUC,OAAO,eAC7CV,SAASC,eAAenH,GAAI2H,UAAUE,IAAI,mBAG1CX,SAASC,eAAenH,GAAI2H,UAAUC,OAAO,iBAC7CV,SAASC,eAAenH,GAAI2H,UAAUE,IAAI,mBAInB,aAA1BsC,GAAW,SAA0B,YAAY,eAClD,uBAAGnK,GAAI,SAASQ,EAAKmD,GAAKjD,QAAQ,aAAa,IAAKpB,UAAU,2BAElE,wBAAIA,UAAU,YAAYI,MAAO,CAAC4H,OAAO,WAAYC,aAAW,MAChEpH,QAAS,SAAC1B,GACV,GAAI0L,GAAY3J,EAAKmD,IAAO,CACxB,IAAM3D,EAAG,UAAUQ,EAAKmD,GAAKjD,QAAQ,aAAa,IAClDjC,EAAE+I,OAAOC,aAAa,aACgB,QAAtChJ,EAAE+I,OAAOE,aAAa,cAAsB,OAAO,OACnD,IAAIkJ,EAAW,GACfA,EAAWpQ,EAAKmD,IAAMV,EAASkH,GAAY3J,EAAKmD,IAAMsH,EAAQxM,EAAE+I,OAAOE,aAAa,eACpF2F,GAAkB3G,OAAOC,OAAO,GAAGwD,GAAYyG,IAEL,QAAtCnS,EAAE+I,OAAOE,aAAa,eACtBR,SAASC,eAAenH,GAAI2H,UAAUC,OAAO,eAC7CV,SAASC,eAAenH,GAAI2H,UAAUE,IAAI,mBAG1CX,SAASC,eAAenH,GAAI2H,UAAUC,OAAO,iBAC7CV,SAASC,eAAenH,GAAI2H,UAAUE,IAAI,mBAhBlD,OAqBQ,uBAAG7H,GAAI,UAAUQ,EAAKmD,GAAKjD,QAAQ,aAAa,IAAKpB,UAAU,2BAtT/G,WACI,IAAM8K,EAAa,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAChE,OAAQ,SAAU,YAAa,UAAW,WAAY,YAEpDzF,EAAO,GAKP0F,EAAgB,IAAIpG,KAAK,IAAIA,KAAKkG,GAAYG,WAAWhG,cAAc,IAAIL,KAAKkG,GAAYG,WAAWlG,WAAW,IAAIH,KAAKkG,GAAYG,WAAWjG,UAAU,GAC5JkG,EAAc,IAAItG,KAAK,IAAIA,KAAKkG,GAAYK,SAASlG,cAAc,IAAIL,KAAKkG,GAAYK,SAASpG,WAAW,IAAIH,KAAKkG,GAAYK,SAASnG,UAAU,GAE1J,GAAIkG,GAAe,IAAItG,KAAK,IAAIA,KAAKoG,GAAiB/F,cAAe,IAAIL,KAAKoG,GAAiBjG,WAAY,EAAE,GACzGO,EAAO2B,KACP,wBAAI7F,IAAK2J,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cAAc,OAC9EhF,UAAU,aACL8K,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cAAc,SAG1EK,EAAO2B,KACP,wBAAI7F,IAAK2J,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cAAc,SAC9EhF,UAAU,aACL8K,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cAAc,eAGzE,CACD,IAAIN,EAAK,IAAIC,KAAKoG,GAYlB,IAXA1F,EAAO2B,KACP,wBAAI7F,IAAK2J,EAAWC,EAAgBjG,YAAY,IAAIiG,EAAgB/F,cAAc,OAClFhF,UAAU,aACL8K,EAAWC,EAAgBjG,YAAY,IAAIiG,EAAgB/F,cAAc,SAE9EK,EAAO2B,KACH,wBAAI7F,IAAK2J,EAAWC,EAAgBjG,YAAY,IAAIiG,EAAgB/F,cAAc,SAClFhF,UAAU,aACL8K,EAAWC,EAAgBjG,YAAY,IAAIiG,EAAgB/F,cAAc,WAG5EiG,EAAc,IAAItG,KAAK,IAAIA,KAAKD,GAAMM,cAAe,IAAIL,KAAKD,GAAMI,WAAY,EAAE,EAAE,IACtFJ,EAAK0G,SAAS1G,EAAKI,WAAW,EAAE,GAEhCO,EAAO2B,KACP,wBAAI7F,IAAK2J,EAAWpG,EAAKI,YAAY,IAAIJ,EAAKM,cAAc,OAC5DhF,UAAU,aACL8K,EAAWpG,EAAKI,YAAY,IAAIJ,EAAKM,cAAc,SAGxDK,EAAO2B,KACP,wBAAI7F,IAAK2J,EAAWpG,EAAKI,YAAY,IAAIJ,EAAKM,cAAc,SAC5DhF,UAAU,aACL8K,EAAWpG,EAAKI,YAAY,IAAIJ,EAAKM,cAAc,WAI5DK,EAAO2B,KACP,wBAAI7F,IAAK2J,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cAAc,OAC9EhF,UAAU,aACL8K,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cAAc,SAG1EK,EAAO2B,KACP,wBAAI7F,IAAK2J,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cAAc,SAC9EhF,UAAU,aACL8K,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cAAc,WAI9E,OAAOK,EAqP8BkM,GACD,wBAAIvR,UAAU,aAAd,aACA,wBAAIA,UAAU,aAAd,WAGR,+BACK6K,GAAY3J,EAAKmD,IAAOwG,GAAY3J,EAAKmD,IAAMpD,KAAI,SAAAmL,GAChD,IAAmD,IAA/CL,EAAqBpD,QAAQyD,EAAMV,IAEnC,OADAK,EAAqB/E,KAAKoF,EAAMV,IAE5B,wBAAIvK,IAAKiL,EAAMV,IACX,wBAAI1L,UAAU,aAAaoM,EAAMV,IACjC,wBAAI1L,UAAU,aAAaoM,EAAMT,IA7PrF,SAAmCzK,EAAKyB,EAAK4E,GACzC,IAAMuD,EAAa,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAChE,OAAQ,SAAU,YAAa,UAAW,WAAY,YAEpDzF,EAAO,GAEPqG,EAAOnE,EAAM,GAAGjG,KAChB+K,EAAQ9E,EAAM,GAAGjG,KACjBsK,EAAOrE,EAAM,GAAGjG,KAChBuK,EAAStE,EAAM,GAAGjG,KAKlByJ,EAAgB,IAAIpG,KAAK,IAAIA,KAAKkG,GAAYG,WAAWhG,cAAc,IAAIL,KAAKkG,GAAYG,WAAWlG,WAAW,IAAIH,KAAKkG,GAAYG,WAAWjG,UAAU,GAC5JkG,EAAc,IAAItG,KAAK,IAAIA,KAAKkG,GAAYK,SAASlG,cAAc,IAAIL,KAAKkG,GAAYK,SAASpG,WAAW,IAAIH,KAAKkG,GAAYK,SAASnG,UAAU,GAuH1J,OAtHIkG,GAAe,IAAItG,KAAK,IAAIA,KAAKoG,GAAiB/F,cAAe,IAAIL,KAAKoG,GAAiBjG,WAAY,EAAE,IACzGO,EAAO2B,KACH,wBAAI7F,IAAK2J,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cAAc,OAC9EhF,UAAU,aACLoE,EAAmBzB,EAAKsJ,QAAO,SAACjI,EAAEC,GAC/B,OAAIA,EAAEyH,KAAUxK,EAAKwK,GACV1H,EAAEC,EAAE2H,GACH5H,IACd,MAIVqB,EAAO2B,KACH,wBAAI7F,IAAK2J,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cAAe,SAC/EhF,UAAU,aACLoE,EAAmBzB,EAAKsJ,QAAO,SAACjI,EAAEC,GAC/B,OAAIA,EAAEyH,KAAUxK,EAAKwK,GACV1H,EAAEC,EAAE4H,GACH7H,IACd,OAIR,WACF,IAAIU,EAAK,IAAIC,KAAKoG,GA8BlB,IA5BA1F,EAAO2B,KACH,wBAAI7F,IAAK2J,EAAWC,EAAgBjG,YAAY,IAAIiG,EAAgB/F,cAAc,OAClFhF,UAAU,aACLoE,EAAmBzB,EAAKsJ,QAAO,SAACjI,EAAEC,GAC/B,IAAMiI,EAAgB,IAAIvH,KAAK,IAAIA,KAAKV,EAAEoI,IAAUrH,cAAc,IAAIL,KAAKV,EAAEoI,IAAUvH,WAAW,IAAIH,KAAKV,EAAEoI,IAAUtH,UAAU,GAErI,OAAId,EAAEyH,KAAUxK,EAAKwK,IACdQ,GAAiB,IAAIvH,KAAK,IAAIA,KAAKoG,GAAiB/F,cAAe,IAAIL,KAAKoG,GAAiBjG,WAAY,EAAE,GACnGd,EAAEC,EAAE2H,GACP5H,IACV,MAINqB,EAAO2B,KACP,wBAAI7F,IAAK2J,EAAWC,EAAgBjG,YAAY,IAAIiG,EAAgB/F,cAAc,SAClFhF,UAAU,aACLoE,EAAmBzB,EAAKsJ,QAAO,SAACjI,EAAEC,GAC/B,IAAMiI,EAAgB,IAAIvH,KAAK,IAAIA,KAAKV,EAAEoI,IAAUrH,cAAc,IAAIL,KAAKV,EAAEoI,IAAUvH,WAAW,IAAIH,KAAKV,EAAEoI,IAAUtH,UAAU,GAErI,OAAId,EAAEyH,KAAUxK,EAAKwK,IACdQ,GAAiB,IAAIvH,KAAK,IAAIA,KAAKoG,GAAiB/F,cAAe,IAAIL,KAAKoG,GAAiBjG,WAAY,EAAE,GACnGd,EAAEC,EAAE4H,GACP7H,IACV,MAIJiH,EAAc,IAAItG,KAAK,IAAIA,KAAKD,GAAMM,cAAe,IAAIL,KAAKD,GAAMI,WAAY,EAAE,EAAE,IACtFJ,EAAK0G,SAAS1G,EAAKI,WAAW,EAAE,GAEhCO,EAAO2B,KACH,wBAAI7F,IAAK2J,EAAWpG,EAAKI,YAAY,IAAIJ,EAAKM,cAAc,OAC5DhF,UAAU,aACLoE,EAAmBzB,EAAKsJ,QAAO,SAACjI,EAAEC,GACnC,IAAMiI,EAAgB,IAAIvH,KAAK,IAAIA,KAAKV,EAAEoI,IAAUrH,cAAc,IAAIL,KAAKV,EAAEoI,IAAUvH,WAAW,IAAIH,KAAKV,EAAEoI,IAAUtH,UAAU,GACjI,OAAId,EAAEyH,KAAUxK,EAAKwK,IACdQ,EAAgB,IAAIvH,KAAK,IAAIA,KAAKD,GAAMM,cAAe,IAAIL,KAAKD,GAAMI,WAAY,IAClFoH,GAAiB,IAAIvH,KAAK,IAAIA,KAAKD,GAAMM,cAAe,IAAIL,KAAKD,GAAMI,WAAY,EAAE,GAC7Ed,EAAEC,EAAE2H,GACP5H,IACV,MAKVqB,EAAO2B,KACH,wBAAI7F,IAAK2J,EAAWpG,EAAKI,YAAY,IAAIJ,EAAKM,cAAc,SAC5DhF,UAAU,aACLoE,EAAmBzB,EAAKsJ,QAAO,SAACjI,EAAEC,GACnC,IAAMiI,EAAgB,IAAIvH,KAAK,IAAIA,KAAKV,EAAEoI,IAAUrH,cAAc,IAAIL,KAAKV,EAAEoI,IAAUvH,WAAW,IAAIH,KAAKV,EAAEoI,IAAUtH,UAAU,GACjI,OAAId,EAAEyH,KAAUxK,EAAKwK,IACdQ,EAAgB,IAAIvH,KAAK,IAAIA,KAAKD,GAAMM,cAAe,IAAIL,KAAKD,GAAMI,WAAY,IAClFoH,GAAiB,IAAIvH,KAAK,IAAIA,KAAKD,GAAMM,cAAe,IAAIL,KAAKD,GAAMI,WAAY,EAAE,GAC7Ed,EAAEC,EAAE4H,GACP7H,IACV,MAMdqB,EAAO2B,KACH,wBAAI7F,IAAK2J,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cAAc,OAC9EhF,UAAU,aACLoE,EAAmBzB,EAAKsJ,QAAO,SAACjI,EAAEC,GAC/B,IAAMiI,EAAgB,IAAIvH,KAAK,IAAIA,KAAKV,EAAEoI,IAAUrH,cAAc,IAAIL,KAAKV,EAAEoI,IAAUvH,WAAW,IAAIH,KAAKV,EAAEoI,IAAUtH,UAAU,GACjI,OAAId,EAAEyH,KAAUxK,EAAKwK,IACdQ,EAAgB,IAAIvH,KAAK,IAAIA,KAAKsG,GAAejG,cAAe,IAAIL,KAAKsG,GAAenG,WAAY,IACpGoH,GAAiBjB,EACbjH,EAAEC,EAAE2H,GACH5H,IACd,MAKVqB,EAAO2B,KACH,wBAAI7F,IAAK2J,EAAWG,EAAcnG,YAAY,IAAImG,EAAcjG,cAAc,SAC9EhF,UAAU,aACLoE,EAAmBzB,EAAKsJ,QAAO,SAACjI,EAAEC,GAC/B,IAAMiI,EAAgB,IAAIvH,KAAK,IAAIA,KAAKV,EAAEoI,IAAUrH,cAAc,IAAIL,KAAKV,EAAEoI,IAAUvH,WAAW,IAAIH,KAAKV,EAAEoI,IAAUtH,UAAU,GACjI,OAAId,EAAEyH,KAAUxK,EAAKwK,IACdQ,EAAgB,IAAIvH,KAAK,IAAIA,KAAKsG,GAAejG,cAAe,IAAIL,KAAKsG,GAAenG,WAAY,IACpGoH,GAAiBjB,EACbjH,EAAEC,EAAE4H,GACH7H,IACd,MA1FR,GA+FCqB,EAwH0CmM,CAA0BpF,EAAMvB,GAAY3J,EAAKmD,IAAMoH,GACxD,wBAAIzL,UAAU,aACT6K,GAAY3J,EAAKmD,IAAM4H,QAAO,SAACjI,EAAEC,GAC9B,OAAIA,EAAEyH,KAAUU,EAAMV,GACX1H,EAAEC,EAAE2H,GACH5H,IACd,IAEN,wBAAIhE,UAAU,aACToE,EAAmByG,GAAY3J,EAAKmD,IAAM4H,QAAO,SAACjI,EAAEC,GACjD,OAAIA,EAAEyH,KAAUU,EAAMV,GACX1H,EAAEC,EAAE4H,GACH7H,IACd,SAQrB,QAGL,WAIjBqB,EAsDMoM,MAgSIlF,IAEG,KAER,wBAAIvM,UAAU,YAI1B,kBAAC,IAAD,CAAUC,GAAImc,GAAe9Z,QAIzC8Z,GAAe/Z,YAAY,kBAC3B+Z,GAAe9Z,KAAK,kBAEL8Z,UCtnCf,SAASQ,GAAuBne,GAC5B,IAAMuE,EAAI,CACN9B,KAAK,IAAIuW,gBAAgBhZ,EAAMiZ,SAAStR,QAAQuR,IAAI,QACpDjX,GAAG,IAAI+W,gBAAgBhZ,EAAMiZ,SAAStR,QAAQuR,IAAI,OAHnB,EAKyBpV,EAAS,CACjES,IAAI,eACJE,KAAK,CACDoC,OAAO,OACPC,QAAQ,CAAC,eAAe,oBACxBC,KAAKC,KAAKC,UAAU,CAACxE,KAAK,aAC1ByE,YAAY,aAXe,sBAKtB0W,EALsB,EAK3B1Z,KAA8B2Z,EALH,EAKHzZ,MALG,EAemBN,EAAS,CAC3DS,IAAI,eACJE,KAAK,CACDoC,OAAO,OACPC,QAAQ,CAAC,eAAe,oBACxBC,KAAKC,KAAKC,UAAU,CAChBxE,KAAK,QACLuB,MAAMO,EAAItC,GAAG,CAACsC,EAAItC,IAAI,OAE1BiF,YAAY,aAxBe,sBAetBgH,EAfsB,EAe3BhK,KAA2BiK,EAfA,EAeN/J,MAcvB8T,EAAa,EA7BgB,EAgCOjY,mBAAS,MAhChB,mBAgC5Bge,EAhC4B,KAgCfC,EAhCe,OAiCCje,mBAAS,MAjCV,mBAiC5B4O,EAjC4B,KAiClBC,EAjCkB,OAkCC7O,mBAAS,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,KAlCnC,mBAkC5BkV,EAlC4B,KAkCjBb,EAlCiB,KAoC5BzQ,EAAQuM,cAARvM,KACA1C,EAAcC,qBAAWL,GAAzBI,WAqDP,SAAS6I,EAASV,EAAMlE,GACpBkP,EAAiB,GAAD,mBAAKa,EAAWhL,MAAM,EAAE/E,IAAxB,CAA+BkE,GAA/B,YAAwC6L,EAAWhL,MAAM/E,EAAM,MAGnF,SAAS2R,IACL,IAAIjK,EAAM,EAMV,OALAqI,EAAW+C,GAAchP,SAAQ,SAACkV,EAAyBrU,GAEnB,KAAjCoL,EAAW+C,GAAcnO,GAAG,KAC9B+C,GAAakI,SAASG,EAAW+C,GAAcnO,GAAG,QAEhD+C,EA9DXxM,qBAAU,WAcN,GAZIsd,IAAgD,IAA1BA,EAAmBnV,MACjCC,MAAM,iEACNvH,GAAW,IAEdyc,GAAsBA,EAAmB1Z,MAAQ0Z,EAAmB9U,OAC7EoV,EAAmBN,EAAmB1Z,KAAK1B,KAAI,SAAA0B,GAAI,OAC/C,4BAAQxB,IAAKwB,EAAK0Z,EAAmB9U,MAAM,GAAGjG,MAAOyG,MAAOpF,EAAK0Z,EAAmB9U,MAAM,GAAGjG,OACxFqB,EAAK0Z,EAAmB9U,MAAM,GAAGjG,MAAM,OAAOqB,EAAK0Z,EAAmB9U,MAAM,GAAGjG,MAAMqB,EAAK0Z,EAAmB9U,MAAM,GAAGjG,MAAM,SAKjIqL,IAA0C,IAAvBA,EAAgBzF,KAC3BC,MAAM,iEACNvH,GAAW,QAElB,GAAI+M,GAAmBA,EAAgBhK,MAAQgK,EAAgBpF,MAAO,CACvE,IAAMwH,EAASpC,EAAgBpF,MAAM,GAAGjG,KAClC0N,EAAUrC,EAAgBpF,MAAM,GAAGjG,KACnCuW,EAAWlL,EAAgBpF,MAAM,GAAGjG,KACpCqU,EAAYhJ,EAAgBpF,MAAM,GAAGjG,KAE3CiM,EAAgBZ,EAAgBhK,KAAK1B,KAAI,SAAA0B,GAAI,OACzC,4BAAQxB,IAAKwB,EAAKoM,GAAWhH,MAAOpF,EAAKoM,IACpCpM,EAAKoM,GAAU,OACbpM,EAAKqM,GAAWrM,EAAKqM,GAAW,IAAI,eACpCrM,EAAKkV,GAAYlV,EAAKkV,GAAY,IAAI,iBACtClV,EAAKgT,GAAahT,EAAKgT,GAAa,aAQrD,CAAC0G,EAAmBC,EAAoB3P,EAAgBC,IAE1D7N,qBAAU,WACN,SAAS4Q,IACL/H,SAAS+C,cAAc,uBAAuBxC,aAC1C,UAAU,yCAIlB,OAFAxJ,OAAOiR,iBAAiB,WAAWD,GAE5B,WACChR,OAAOkR,oBAAoB,WAAWF,MAE5C,IAoBN,IAAImI,EAAsB,KAkB1B,OAfKuE,GAAsBA,EAAmBxZ,OAAUyZ,GAAuB3P,GAAmBA,EAAgB9J,OAAU+J,KAC5HkL,EACI,yBAAK9X,UAAU,uBACVqc,GAAsBA,EAAmBxZ,MAAO,kDAAkDwZ,EAAmBxZ,MAAM2E,MAC3H,UAAU6U,EAAmBxZ,MAAM4E,KAAK,aAAa4U,EAAmBxZ,MAAM6E,WAAW,KACzF4U,EAAqB,2CAA2CA,EAAsB,KACvF,6BACA,6BACC3P,GAAmBA,EAAgB9J,MAAO,+CAA+C8J,EAAgB9J,MAAM2E,MAC/G,UAAUmF,EAAgB9J,MAAM4E,KAAK,aAAakF,EAAgB9J,MAAM6E,WAAW,KACnFkF,EAAkB,wCAAwCA,EAAmB,OAMlF,kBAAC,EAAD,CAAMgH,WAAYA,EAAYb,iBAAkBA,EAAkB/P,IAAKA,EAAK9B,KAAK,sBAAsBwS,YAAY,uBAE/G,gBAAE/B,EAAF,EAAEA,MAAMf,EAAR,EAAQA,SAASgB,EAAjB,EAAiBA,eAAe+B,EAAhC,EAAgCA,SAASE,EAAzC,EAAyCA,SAASC,EAAlD,EAAkDA,SAAS/D,EAA3D,EAA2DA,aAAagE,EAAxE,EAAwEA,kBAAxE,OACC,kBAAC,IAAD,KACG,kBAAC,IAAD,CAAO/D,OAAK,EAAC1N,KAAI,UAAKA,EAAL,aACb,kBAAC,EAAD,CAAaD,YAAaua,GAAsBva,YAC5CuI,SAAUgS,GAAsBta,KAChCsS,aAAc,CAAChB,EAAW,GAAGA,EAAW,IACxCmB,cAAe,CAAC6H,GAAsBva,YAAY,MAAM,OAAO,qBAC/D2S,cAAe,CAACpB,EAAW,GAAGnP,EAAiBmP,EAAW,KAC1DqB,YAAa,CAAC,GAAG,YAAY,cAAc,OAC3CC,YAAatB,EAAW+C,GACxBnB,eAAgBA,EAChBC,OAAO,MAGnB,kBAAC,IAAD,CAAOzF,OAAK,EAAC1N,KAAMA,GACnB,kBAAC,EAAD,KACI,yBAAKtC,UAAU,0BAIX,wBAAIA,UAAU,SAAiB,WAAR2R,EAAkB,SAAS,UAAY,IAAKiL,GAAsBva,aACzF,2BAAOrC,UAAU,gBAAjB,cACC+P,EACA+H,EAID,0BAAM3H,SAAU,SAAChR,GAAKA,EAAEiR,iBAA6B,WAARuB,EAAkBgC,IAAiBE,MAC5E,yBAAK7T,UAAU,OACX,8BAAUA,UAAU,yEAAyE4Q,SAAUA,GACnG,4BAAQ5Q,UAAU,6CAA6C,wCAAa,0BAAMA,UAAU,gBAAhB,OAC5E,2BAAOA,UAAU,OAAO2J,QAAQ,cAAhC,eACA,yBAAK3J,UAAU,eAIX,2BAAOY,KAAK,OAAOF,GAAG,aAAaqH,MAAO6L,EAAW,GAAInL,SAAU,SAACtJ,GAAD,OAAKA,GAAGkR,UAAQ,EAACrQ,UAAU,iBAC9F,4BAAQA,UAAU,eAAeI,MAAO,CAAC2Q,KAAK,SAAUtI,SAAU,SAACtJ,GAC/D,IAAI2d,EAAa,GACbC,EAAgB,GAEpBV,EAAmB1Z,KAAKgF,SAAQ,SAAAhF,GAEzBA,EAAK0Z,EAAmB9U,MAAM,GAAGjG,QAAQnC,EAAE+I,OAAOH,QACjD+U,EAAana,EAAK0Z,EAAmB9U,MAAM,GAAGjG,MAAMqB,EAAK0Z,EAAmB9U,MAAM,GAAGjG,MAAM,GAC3Fyb,EAAgBpa,EAAK0Z,EAAmB9U,MAAM,GAAGjG,MAAMqB,EAAK0Z,EAAmB9U,MAAM,GAAGjG,MAAM,OAK1GyR,EAAiB,CAAC5T,EAAE+I,OAAOH,MAAM+U,EAAaC,GAA9B,mBAAiDnJ,EAAWhL,MAAM,EAAEgL,EAAWlS,aAE3F,4BAAQqG,MAAM,IAAd,wBACC2U,IAGT,2BAAO1c,UAAU,OAAO2J,QAAQ,gBAAhC,iBACA,2BAAOjJ,GAAG,eAAeqH,MAAO6L,EAAW,GAAInL,SAAU,SAACtJ,GAAD,OAAKA,GAAGkR,UAAQ,EAACrQ,UAAU,iBACpF,2BAAOA,UAAU,OAAO2J,QAAQ,mBAAhC,oBACA,8BAAUjJ,GAAG,kBAAkBqH,MAAO6L,EAAW,GAAInL,SAAU,SAACtJ,GAAD,OAAKA,GAAGkR,UAAQ,EAACrQ,UAAU,kBAI9F,yBAAKA,UAAU,4BACX,2BAAO2J,QAAQ,0BAA0B3J,UAAU,QAAnD,8BAAqF,0BAAMA,UAAU,gBAAhB,MACpF+T,EAAkB,CACftL,SAASA,EACTwL,OAAO,GACPK,SAAS,EACTC,QAAQ,4BAIZ,2BAAO5K,QAAQ,OAAO3J,UAAU,QAAhC,QAA4C,0BAAMA,UAAU,gBAAhB,MAC5C,2BAAOY,KAAK,OAAOgQ,SAAUA,EAAUP,UAAQ,EAACtI,MAAO6L,EAAW,GAAInL,SAAU,SAACtJ,GAAD,OAAKsJ,EAAStJ,EAAE+I,OAAOH,MAAM,IAC7G/H,UAAU,iBAEV,2BAAO2J,QAAQ,cAAc3J,UAAU,QAAvC,eACA,8BAAUU,GAAG,cAAc+H,SAAU,SAACtJ,GAAD,OAAKsJ,EAAStJ,EAAE+I,OAAOH,MAAM,IAAIA,MAAO6L,EAAW,GACxFhD,SAAUA,EAAU5Q,UAAU,kBAIlC,kBAAC,EAAD,CAAmB2W,aAAcA,EAAcR,qBAtL5C,EAuLHvF,SAAUA,EAAUgD,WAAYA,EAAYb,iBAAkBA,EAC9DpG,gBAAiBA,EAAiBW,UAAWA,EAAWiJ,eAAe,KACvEK,gBAAiB,aAGjB,wBAAI5W,UAAU,0BACT,UAAUoE,EAAmBoR,OAItC,kBAAC,EAAD,CAAY7D,MAAOA,EAAOgC,SAAUA,EAAUE,SAAUA,EAAUC,SAAUA,EAC5ElC,eAAgBA,EAAgBtP,KAAI,UAAKA,EAAL,kBAQhD,kBAAC,IAAD,CAAUrC,GAAI2c,GAAsBta,WAMhDsa,GAAsBva,YAAY,sBAClCua,GAAsBta,KAAK,yBAEZsa,UCjPf,SAASI,GAAoBve,GACzB,IAAMuE,EAAI,CACN9B,KAAK,IAAIuW,gBAAgBhZ,EAAMiZ,SAAStR,QAAQuR,IAAI,QACpDjX,GAAG,IAAI+W,gBAAgBhZ,EAAMiZ,SAAStR,QAAQuR,IAAI,OAHtB,EAK4BpV,EAAS,CACjES,IAAI,eACJE,KAAK,CACDoC,OAAO,OACPC,QAAQ,CAAC,eAAe,oBACxBC,KAAKC,KAAKC,UAAU,CAACxE,KAAK,aAC1ByE,YAAY,aAXY,sBAKnB0W,EALmB,EAKxB1Z,KAA8B2Z,EALN,EAKAzZ,MALA,EAesBN,EAAS,CAC3DS,IAAI,eACJE,KAAK,CACDoC,OAAO,OACPC,QAAQ,CAAC,eAAe,oBACxBC,KAAKC,KAAKC,UAAU,CAChBxE,KAAK,QACLuB,MAAMO,EAAItC,GAAG,CAACsC,EAAItC,IAAI,OAE1BiF,YAAY,aAxBY,sBAenBgH,EAfmB,EAexBhK,KAA2BiK,EAfH,EAeH/J,MAcvB8T,EAAa,EA7Ba,EAgCUjY,mBAAS,MAhCnB,mBAgCzBge,EAhCyB,KAgCZC,EAhCY,OAiCIje,mBAAS,MAjCb,mBAiCzB4O,EAjCyB,KAiCfC,EAjCe,OAkCI7O,mBAAS,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,KAlCtC,mBAkCzBkV,EAlCyB,KAkCdb,EAlCc,KAoCzBzQ,EAAQuM,cAARvM,KACA1C,EAAcC,qBAAWL,GAAzBI,WAqDP,SAAS6I,EAASV,EAAMlE,GACpBkP,EAAiB,GAAD,mBAAKa,EAAWhL,MAAM,EAAE/E,IAAxB,CAA+BkE,GAA/B,YAAwC6L,EAAWhL,MAAM/E,EAAM,MAGnF,SAAS2R,IACL,IAAIjK,EAAM,EAMV,OALAqI,EAAW+C,GAAchP,SAAQ,SAACsV,EAAsBzU,GAEhB,KAAjCoL,EAAW+C,GAAcnO,GAAG,KAC9B+C,GAAakI,SAASG,EAAW+C,GAAcnO,GAAG,QAEhD+C,EA9DXxM,qBAAU,WAcN,GAZIsd,IAAgD,IAA1BA,EAAmBnV,MACjCC,MAAM,iEACNvH,GAAW,IAEdyc,GAAsBA,EAAmB1Z,MAAQ0Z,EAAmB9U,OAC7EoV,EAAmBN,EAAmB1Z,KAAK1B,KAAI,SAAA0B,GAAI,OAC/C,4BAAQxB,IAAKwB,EAAK0Z,EAAmB9U,MAAM,GAAGjG,MAAOyG,MAAOpF,EAAK0Z,EAAmB9U,MAAM,GAAGjG,OACxFqB,EAAK0Z,EAAmB9U,MAAM,GAAGjG,MAAM,OAAOqB,EAAK0Z,EAAmB9U,MAAM,GAAGjG,MAAMqB,EAAK0Z,EAAmB9U,MAAM,GAAGjG,MAAM,SAKjIqL,IAA0C,IAAvBA,EAAgBzF,KAC3BC,MAAM,iEACNvH,GAAW,QAElB,GAAI+M,GAAmBA,EAAgBhK,MAAQgK,EAAgBpF,MAAO,CACvE,IAAMwH,EAASpC,EAAgBpF,MAAM,GAAGjG,KAClC0N,EAAUrC,EAAgBpF,MAAM,GAAGjG,KACnCuW,EAAWlL,EAAgBpF,MAAM,GAAGjG,KACpCqU,EAAYhJ,EAAgBpF,MAAM,GAAGjG,KAE3CiM,EAAgBZ,EAAgBhK,KAAK1B,KAAI,SAAA0B,GAAI,OACzC,4BAAQxB,IAAKwB,EAAKoM,GAAWhH,MAAOpF,EAAKoM,IACpCpM,EAAKoM,GAAU,OACbpM,EAAKqM,GAAWrM,EAAKqM,GAAW,IAAI,eACpCrM,EAAKkV,GAAYlV,EAAKkV,GAAY,IAAI,iBACtClV,EAAKgT,GAAahT,EAAKgT,GAAa,aAQrD,CAAC0G,EAAmBC,EAAoB3P,EAAgBC,IAE1D7N,qBAAU,WACN,SAAS4Q,IACL/H,SAAS+C,cAAc,uBAAuBxC,aAC1C,UAAU,yCAIlB,OAFAxJ,OAAOiR,iBAAiB,WAAWD,GAE5B,WACChR,OAAOkR,oBAAoB,WAAWF,MAE5C,IAiBN,IAAImI,EAAsB,KAkB1B,OAfKuE,GAAsBA,EAAmBxZ,OAAUyZ,GAAuB3P,GAAmBA,EAAgB9J,OAAU+J,KAC5HkL,EACI,yBAAK9X,UAAU,uBACVqc,GAAsBA,EAAmBxZ,MAAO,kDAAkDwZ,EAAmBxZ,MAAM2E,MAC3H,UAAU6U,EAAmBxZ,MAAM4E,KAAK,aAAa4U,EAAmBxZ,MAAM6E,WAAW,KACzF4U,EAAqB,2CAA2CA,EAAsB,KACvF,6BACA,6BACC3P,GAAmBA,EAAgB9J,MAAO,+CAA+C8J,EAAgB9J,MAAM2E,MAC/G,UAAUmF,EAAgB9J,MAAM4E,KAAK,aAAakF,EAAgB9J,MAAM6E,WAAW,KACnFkF,EAAkB,wCAAwCA,EAAmB,OAMlF,kBAAC,EAAD,CAAMgH,WAAYA,EAAYb,iBAAkBA,EAAkB/P,IAAKA,EAAK9B,KAAK,kBAAkBwS,YAAY,oBAE3G,gBAAE/B,EAAF,EAAEA,MAAMf,EAAR,EAAQA,SAASgB,EAAjB,EAAiBA,eAAe+B,EAAhC,EAAgCA,SAASE,EAAzC,EAAyCA,SAASC,EAAlD,EAAkDA,SAAS/D,EAA3D,EAA2DA,aAAagE,EAAxE,EAAwEA,kBAAxE,OACC,kBAAC,IAAD,KACG,kBAAC,IAAD,CAAO/D,OAAK,EAAC1N,KAAI,UAAKA,EAAL,aACb,kBAAC,EAAD,CAAaD,YAAa2a,GAAmB3a,YACzCuI,SAAUoS,GAAmB1a,KAC7BsS,aAAc,CAAChB,EAAW,GAAGA,EAAW,IACxCmB,cAAe,CAACiI,GAAmB3a,YAAY,MAAM,OAAO,qBAC5D2S,cAAe,CAACpB,EAAW,GAAGnP,EAAiBmP,EAAW,KAC1DqB,YAAa,CAAC,GAAG,YAAY,cAAc,OAC3CC,YAAatB,EAAW+C,GACxBnB,eAAgBA,EAChBC,OAAO,MAGnB,kBAAC,IAAD,CAAOzF,OAAK,EAAC1N,KAAMA,GACnB,kBAAC,EAAD,KACI,yBAAKtC,UAAU,0BAIX,wBAAIA,UAAU,SAAiB,WAAR2R,EAAkB,SAAS,UAAY,IAAKqL,GAAmB3a,aACtF,2BAAOrC,UAAU,gBAAjB,cACC+P,EACA+H,EAID,0BAAM3H,SAAU,SAAChR,GAAKA,EAAEiR,iBAA6B,WAARuB,EAAkBgC,IAAiBE,MAC5E,yBAAK7T,UAAU,OACX,8BAAUA,UAAU,yEAAyE4Q,SAAUA,GACnG,4BAAQ5Q,UAAU,6CAA6C,wCAAa,0BAAMA,UAAU,gBAAhB,OAC5E,2BAAOA,UAAU,OAAO2J,QAAQ,cAAhC,eACA,yBAAK3J,UAAU,eAIX,2BAAOY,KAAK,OAAOF,GAAG,aAAaqH,MAAO6L,EAAW,GAAInL,SAAU,SAACtJ,GAAD,OAAKA,GAAGkR,UAAQ,EAACrQ,UAAU,iBAC9F,4BAAQA,UAAU,eAAeI,MAAO,CAAC2Q,KAAK,SAAUtI,SAAU,SAACtJ,GAC/D,IAAI2d,EAAa,GACbC,EAAgB,GAEpBV,EAAmB1Z,KAAKgF,SAAQ,SAAAhF,GAEzBA,EAAK0Z,EAAmB9U,MAAM,GAAGjG,QAAQnC,EAAE+I,OAAOH,QACjD+U,EAAana,EAAK0Z,EAAmB9U,MAAM,GAAGjG,MAAMqB,EAAK0Z,EAAmB9U,MAAM,GAAGjG,MAAM,GAC3Fyb,EAAgBpa,EAAK0Z,EAAmB9U,MAAM,GAAGjG,MAAMqB,EAAK0Z,EAAmB9U,MAAM,GAAGjG,MAAM,OAK1GyR,EAAiB,CAAC5T,EAAE+I,OAAOH,MAAM+U,EAAaC,GAA9B,mBAAiDnJ,EAAWhL,MAAM,EAAEgL,EAAWlS,aAE3F,4BAAQqG,MAAM,IAAd,wBACC2U,IAGT,2BAAO1c,UAAU,OAAO2J,QAAQ,gBAAhC,iBACA,2BAAOjJ,GAAG,eAAeqH,MAAO6L,EAAW,GAAInL,SAAU,SAACtJ,GAAD,OAAKA,GAAGkR,UAAQ,EAACrQ,UAAU,iBACpF,2BAAOA,UAAU,OAAO2J,QAAQ,mBAAhC,oBACA,8BAAUjJ,GAAG,kBAAkBqH,MAAO6L,EAAW,GAAInL,SAAU,SAACtJ,GAAD,OAAKA,GAAGkR,UAAQ,EAACrQ,UAAU,kBAI9F,yBAAKA,UAAU,4BACX,2BAAO2J,QAAQ,uBAAuB3J,UAAU,QAAhD,0BAA8E,0BAAMA,UAAU,gBAAhB,MAC7E+T,EAAkB,CACftL,SAASA,EACTwL,OAAO,GACPK,SAAS,EACTC,QAAQ,yBAIZ,2BAAO5K,QAAQ,OAAO3J,UAAU,QAAhC,QAA4C,0BAAMA,UAAU,gBAAhB,MAC5C,2BAAOY,KAAK,OAAOgQ,SAAUA,EAAUP,UAAQ,EAACtI,MAAO6L,EAAW,GAAInL,SAAU,SAACtJ,GAAD,OAAKsJ,EAAStJ,EAAE+I,OAAOH,MAAM,IAC7G/H,UAAU,iBAEV,2BAAO2J,QAAQ,cAAc3J,UAAU,QAAvC,eACA,8BAAUU,GAAG,cAAc+H,SAAU,SAACtJ,GAAD,OAAKsJ,EAAStJ,EAAE+I,OAAOH,MAAM,IAAIA,MAAO6L,EAAW,GACxFhD,SAAUA,EAAU5Q,UAAU,kBAIlC,kBAAC,EAAD,CAAmB2W,aAAcA,EAAcR,qBAnL5C,EAoLHvF,SAAUA,EAAUgD,WAAYA,EAAYb,iBAAkBA,EAC9DpG,gBAAiBA,EAAiBW,UAAWA,EAAWiJ,eAAe,MACvEK,gBAAiB,yBAGjB,wBAAI5W,UAAU,0BACT,UAAUoE,EAAmBoR,OAItC,kBAAC,EAAD,CAAY7D,MAAOA,EAAOgC,SAAUA,EAAUE,SAAUA,EAAUC,SAAUA,EAC5ElC,eAAgBA,EAAgBtP,KAAI,UAAKA,EAAL,kBAQhD,kBAAC,IAAD,CAAUrC,GAAI+c,GAAmB1a,WAM7C0a,GAAmB3a,YAAY,kBAC/B2a,GAAmB1a,KAAK,sBAET0a,UC7Of,SAASE,GAAqBze,GAC1B,IAAMuE,EAAI,CACN9B,KAAK,IAAIuW,gBAAgBhZ,EAAMiZ,SAAStR,QAAQuR,IAAI,QACpDjX,GAAG,IAAI+W,gBAAgBhZ,EAAMiZ,SAAStR,QAAQuR,IAAI,OAHrB,EAK2BpV,EAAS,CACjES,IAAI,eACJE,KAAK,CACDoC,OAAO,OACPC,QAAQ,CAAC,eAAe,oBACxBC,KAAKC,KAAKC,UAAU,CAACxE,KAAK,aAC1ByE,YAAY,aAXa,sBAKpB0W,EALoB,EAKzB1Z,KAA8B2Z,EALL,EAKDzZ,MALC,EAeqBN,EAAS,CAC3DS,IAAI,eACJE,KAAK,CACDoC,OAAO,OACPC,QAAQ,CAAC,eAAe,oBACxBC,KAAKC,KAAKC,UAAU,CAChBxE,KAAK,QACLuB,MAAMO,EAAItC,GAAG,CAACsC,EAAItC,IAAI,OAE1BiF,YAAY,aAxBa,sBAepBgH,EAfoB,EAezBhK,KAA2BiK,EAfF,EAeJ/J,MAfI,EA4BuBN,EAAS,CAC7DS,IAAI,yBACJE,KAAK,CACDoC,OAAO,OACPC,QAAQ,CAAC,eAAe,oBACxBC,KAAKC,KAAKC,UAAU,CAACxE,KAAK,qBAC1ByE,YAAY,aAlCa,sBA4BpBwT,EA5BoB,EA4BzBxW,KAA4ByW,EA5BH,EA4BHvW,MA5BG,EAsCuCN,EAASS,EAAI9B,MAAQ8B,EAAItC,GAAG,CAChGsC,IAAI,sBACJE,KAAK,CACDoC,OAAO,OACPC,QAAQ,CAAC,eAAe,oBACxBC,KAAKC,KAAKC,UAAU,CAChBxE,KAAK,mBACLuB,MAAM,CAACO,EAAItC,MAEfiF,YAAY,YAElB,MAjD+B,sBAsCpBwX,EAtCoB,EAsCzBxa,KAAoCya,EAtCX,EAsCKva,MAehC8T,EAAa,EArDc,EAwDSjY,mBAAS,MAxDlB,mBAwD1Bge,EAxD0B,KAwDbC,EAxDa,OAyDGje,mBAAS,MAzDZ,mBAyD1B4O,EAzD0B,KAyDhBC,EAzDgB,OA0DK7O,mBAAS,MA1Dd,mBA0D1B6a,EA1D0B,KA0DfC,EA1De,OA2DG9a,mBAAS,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,MAAM,GAAG,GAAG,GAAG,KA3D9C,mBA2D1BkV,EA3D0B,KA2Dfb,EA3De,KA6D1BzQ,EAAQuM,cAARvM,KACA1C,EAAcC,qBAAWL,GAAzBI,WAwEP,SAAS6I,EAASV,EAAMlE,GACpBkP,EAAiB,GAAD,mBAAKa,EAAWhL,MAAM,EAAE/E,IAAxB,CAA+BkE,GAA/B,YAAwC6L,EAAWhL,MAAM/E,EAAM,EAAE+P,EAAWlS,WAEhG,SAAS0T,EAAkB5M,GACvB,MAAqC,KAAjCoL,EAAW+C,GAAcnO,GAAG,IAA4C,KAAjCoL,EAAW+C,GAAcnO,GAAG,IAA4C,KAAjCoL,EAAW+C,GAAcnO,GAAG,GACjGiR,WAAW7F,EAAW+C,GAAcnO,GAAG,IAAIiR,WAAW7F,EAAW+C,GAAcnO,GAAG,IAC1FiR,WAAW7F,EAAW+C,GAAcnO,GAAG,IAChC,GAGhB,SAASgN,IACL,IAAIjK,EAAM,EAQV,OAPAqI,EAAW+C,GAAchP,SAAQ,SAACkP,EAAQrO,GAEF,KAAjCoL,EAAW+C,GAAcnO,GAAG,IAA4C,KAAjCoL,EAAW+C,GAAcnO,GAAG,IACrC,KAAjCoL,EAAW+C,GAAcnO,GAAG,KAC3B+C,GAAckO,WAAW7F,EAAW+C,GAAcnO,GAAG,IAAIiR,WAAW7F,EAAW+C,GAAcnO,GAAG,IAC/FiR,WAAW7F,EAAW+C,GAAcnO,GAAG,QAEtC+C,EAzFXxM,qBAAU,WAeN,GAbIsd,IAAgD,IAA1BA,EAAmBnV,MACjCC,MAAM,iEACNvH,GAAW,IAEdyc,GAAsBA,EAAmB1Z,MAAQ0Z,EAAmB9U,OACzEoV,EAAmBN,EAAmB1Z,KAAK1B,KAAI,SAAA0B,GAAI,OACnD,4BAAQxB,IAAKwB,EAAK0Z,EAAmB9U,MAAM,GAAGjG,MAAOyG,MAAOpF,EAAK0Z,EAAmB9U,MAAM,GAAGjG,QACvFqB,EAAK0Z,EAAmB9U,MAAM,GAAGjG,MAAMqB,EAAK0Z,EAAmB9U,MAAM,GAAGjG,MAAM,IAC/E,OAAOqB,EAAK0Z,EAAmB9U,MAAM,GAAGjG,MAAMqB,EAAK0Z,EAAmB9U,MAAM,GAAGjG,MAAM,SAK1FqL,IAA0C,IAAvBA,EAAgBzF,KAC3BC,MAAM,iEACNvH,GAAW,QAElB,GAAI+M,GAAmBA,EAAgBhK,MAAQgK,EAAgBpF,MAAO,CACvE,IAAMwH,EAASpC,EAAgBpF,MAAM,GAAGjG,KAClC0N,EAAUrC,EAAgBpF,MAAM,GAAGjG,KACnCuW,EAAWlL,EAAgBpF,MAAM,GAAGjG,KACpCqU,EAAYhJ,EAAgBpF,MAAM,GAAGjG,KAE3CiM,EAAgBZ,EAAgBhK,KAAK1B,KAAI,SAAA0B,GAAI,OACzC,4BAAQxB,IAAKwB,EAAKoM,GAAWhH,MAAOpF,EAAKoM,IACpCpM,EAAKoM,GAAU,OACbpM,EAAKqM,GAAWrM,EAAKqM,GAAW,IAAI,eACpCrM,EAAKkV,GAAYlV,EAAKkV,GAAY,IAAI,iBACtClV,EAAKgT,GAAahT,EAAKgT,GAAa,UAM/CwD,IAA4C,IAAxBA,EAAiBjS,MAC7BC,MAAM,iEACNvH,GAAW,IAEduZ,GAAoBA,EAAiBxW,MAAQwW,EAAiB5R,OAE/DiS,EAAiBL,EAAiBxW,KAAK1B,KAAI,SAAA0B,GAAI,OAC/C,4BAAQxB,IAAKwB,EAAKwW,EAAiB5R,MAAM,GAAGjG,MAAOyG,MAAOpF,EAAKwW,EAAiB5R,MAAM,GAAGjG,QACnFqB,EAAKwW,EAAiB5R,MAAM,GAAGjG,MAAMqB,EAAKwW,EAAiB5R,MAAM,GAAGjG,MAAM,IAC3E,OAAOqB,EAAKwW,EAAiB5R,MAAM,GAAGjG,MAAMqB,EAAKwW,EAAiB5R,MAAM,GAAGjG,MAAM,SAK1F6b,IAA4D,IAAhCA,EAAyBjW,OACrDC,MAAM,iEACNvH,GAAW,MAGjB,CAACyc,EAAmBC,EAAoB3P,EAAgBC,EAAiBuM,EAAiBC,EAC5F+D,EAAyBC,IAEzBre,qBAAU,WACN,SAAS4Q,IACL/H,SAAS+C,cAAc,uBAAuBxC,aAC1C,UAAU,yCAIlB,OAFAxJ,OAAOiR,iBAAiB,WAAWD,GAE5B,WACChR,OAAOkR,oBAAoB,WAAWF,MAE5C,IAgCN,IAAImI,EAAsB,KA2B1B,OAzBKuE,GAAsBA,EAAmBxZ,OAAUyZ,GAAuB3P,GAAmBA,EAAgB9J,OAAU+J,GACxHuM,GAAoBA,EAAiBtW,OAAUuW,GAAsB+D,GAA4BA,EAAyBta,OAC3Hua,KACHtF,EACI,yBAAK9X,UAAU,uBACVqc,GAAsBA,EAAmBxZ,MAAO,kDAAkDwZ,EAAmBxZ,MAAM2E,MAC3H,UAAU6U,EAAmBxZ,MAAM4E,KAAK,aAAa4U,EAAmBxZ,MAAM6E,WAAW,KACzF4U,EAAqB,2CAA2CA,EAAsB,KACvF,6BACA,6BACC3P,GAAmBA,EAAgB9J,MAAO,+CAA+C8J,EAAgB9J,MAAM2E,MAC/G,UAAUmF,EAAgB9J,MAAM4E,KAAK,aAAakF,EAAgB9J,MAAM6E,WAAW,KACnFkF,EAAkB,wCAAwCA,EAAmB,KAC9E,6BACA,6BACCuM,GAAoBA,EAAiBtW,MAAO,iDAAiDsW,EAAiBtW,MAAM2E,MACpH,UAAU2R,EAAiBtW,MAAM4E,KAAK,aAAa0R,EAAiBtW,MAAM6E,WAAW,KACrF0R,EAAmB,0CAA0CA,EAAoB,KAClF,6BACA,6BACC+D,GAA4BA,EAAyBta,MAAO,oDAAoDsa,EAAyBta,MAAM2E,MAC/I,UAAU2V,EAAyBta,MAAM4E,KAAK,aAAa0V,EAAyBta,MAAM6E,WAAW,KACrG0V,EAA2B,6CAA6CA,EAA4B,OAIzG,kBAAC,EAAD,CAAMxJ,WAAYA,EAAYb,iBAAkBA,EAAkB/P,IAAKA,EAAK9B,KAAK,mBAAmBwS,YAAY,qBAE5G,gBAAE/B,EAAF,EAAEA,MAAMf,EAAR,EAAQA,SAASgB,EAAjB,EAAiBA,eAAe+B,EAAhC,EAAgCA,SAASE,EAAzC,EAAyCA,SAASC,EAAlD,EAAkDA,SAAS/D,EAA3D,EAA2DA,aAA3D,OACC,kBAAC,IAAD,KACG,kBAAC,IAAD,CAAOC,OAAK,EAAC1N,KAAI,UAAKA,EAAL,aACb,kBAAC,EAAD,CAAaD,YAAa6a,GAAoB7a,YAC1CuI,SAAUsS,GAAoB5a,KAC9BsS,aAAc,CAAChB,EAAW,GAAGA,EAAW,IACxCmB,cAAe,CAACmI,GAAoB7a,YAAY,MAAM,OAAO,cAAc,qBAC3E2S,cAAe,CAACpB,EAAW,GAAGnP,EAAiBmP,EAAW,IAAoB,QAAhBA,EAAW,GAAW,SAASA,EAAW,GAAG,QAAQA,EAAW,IAC9HqB,YAAa,CAAC,GAAG,YAAY,cAAc,QAAQ,MAAM,WAAW,YACpEC,YAAatB,EAAW+C,GACxBvB,kBAAmBA,EACnBI,eAAgBA,KAGxB,kBAAC,IAAD,CAAOxF,OAAK,EAAC1N,KAAMA,GACnB,kBAAC,EAAD,KACA,yBAAKtC,UAAU,0BAIX,wBAAIA,UAAU,SAAiB,WAAR2R,EAAkB,SAAS,UAAY,IAAKuL,GAAoB7a,aACvF,2BAAOrC,UAAU,gBAAjB,cACC+P,EACA+H,EAID,0BAAM3H,SAAU,SAAChR,GAAKA,EAAEiR,iBAA6B,WAARuB,EAAkBgC,IAAiBE,MAC5E,yBAAK7T,UAAU,OACX,8BAAUA,UAAU,yEAAyE4Q,SAAUA,GACnG,4BAAQ5Q,UAAU,6CAA6C,wCAAa,0BAAMA,UAAU,gBAAhB,OAC5E,2BAAOA,UAAU,OAAO2J,QAAQ,cAAhC,eACA,yBAAK3J,UAAU,eAIX,2BAAOY,KAAK,OAAOF,GAAG,aAAaqH,MAAO6L,EAAW,GAAInL,SAAU,SAACtJ,GAAD,OAAKA,GAAGkR,UAAQ,EAACrQ,UAAU,iBAC9F,4BAAQA,UAAU,eAAeI,MAAO,CAAC2Q,KAAK,SAAUtI,SAAU,SAACtJ,GAC/D,IAAI2d,EAAa,GACbC,EAAgB,GAChBM,EAA0B,GAE9BhB,EAAmB1Z,KAAKgF,SAAQ,SAAAhF,GAEzBA,EAAK0Z,EAAmB9U,MAAM,GAAGjG,QAAQnC,EAAE+I,OAAOH,QACjD+U,EAAana,EAAK0Z,EAAmB9U,MAAM,GAAGjG,MAAMqB,EAAK0Z,EAAmB9U,MAAM,GAAGjG,MAAM,GAC3Fyb,EAAgBpa,EAAK0Z,EAAmB9U,MAAM,GAAGjG,MAAMqB,EAAK0Z,EAAmB9U,MAAM,GAAGjG,MAAM,GAC9F+b,EAA0B1a,EAAK0Z,EAAmB9U,MAAM,GAAGjG,MAAMqB,EAAK0Z,EAAmB9U,MAAM,GAAGjG,MAAM,OAKpHyR,EAAiB,CAAC5T,EAAE+I,OAAOH,MAAM+U,EAAaC,GAA9B,mBACTnJ,EAAWhL,MAAM,EAnM/B,IAkMuB,CAC8ByU,GAD9B,YAETzJ,EAAWhL,MAAM+Q,QAEpB,4BAAQ5R,MAAM,IAAd,wBACC2U,IAGT,2BAAO1c,UAAU,OAAO2J,QAAQ,gBAAhC,iBACA,2BAAOjJ,GAAG,eAAeqH,MAAO6L,EAAW,GAAInL,SAAU,SAACtJ,GAAD,OAAKA,GAAGkR,UAAQ,EAACrQ,UAAU,iBACpF,2BAAOA,UAAU,OAAO2J,QAAQ,mBAAhC,oBACA,8BAAUjJ,GAAG,kBAAkBqH,MAAO6L,EAAW,GAAInL,SAAU,SAACtJ,GAAD,OAAKA,GAAGkR,UAAQ,EAACrQ,UAAU,kBAG9F,yBAAKA,UAAU,4BACX,2BAAO2J,QAAQ,wBAAwB3J,UAAU,QAAjD,2BAAgF,0BAAMA,UAAU,gBAAhB,MAChF,2BAAOY,KAAK,OAAOF,GAAG,wBAAwBwT,UAAU,KAAKnM,MAAO6L,EAAW,GAAInL,SAC/E,SAACtJ,GAAD,OAAKsJ,EAAStJ,EAAE+I,OAAOH,MAAM,IAAI6I,SAAUA,EAAUP,UAAQ,EAACrQ,UAAU,iBAE5E,2BAAO2J,QAAQ,OAAO3J,UAAU,QAAhC,QAA4C,0BAAMA,UAAU,gBAAhB,MAC5C,2BAAOY,KAAK,OAAOgQ,SAAUA,EAAUP,UAAQ,EAACtI,MAAO6L,EAAW,GAAInL,SAAU,SAACtJ,GAAD,OAAKsJ,EAAStJ,EAAE+I,OAAOH,MAAM,IAC7G/H,UAAU,iBAEV,2BAAOA,UAAU,OAAO2J,QAAQ,UAAhC,WAAkD,0BAAM3J,UAAU,gBAAhB,MAClD,yBAAKA,UAAU,eACX,2BAAOY,KAAK,OAAOF,GAAG,SAASqH,MAAO6L,EAAW,GAAInL,SAAU,SAACtJ,GAAD,OAAKA,GAAGkR,UAAQ,EAACrQ,UAAU,eAC1F4Q,SAAUA,IACV,4BAAQ5Q,UAAU,eAAeI,MAAO,CAAC2Q,KAAK,SAAUH,SAAUA,EAAUnI,SAAU,SAACtJ,GAAD,OAClFsJ,EAAStJ,EAAE+I,OAAOH,MAAM,KACxB,4BAAQA,MAAM,IAAd,wBACCwR,IAIT,2BAAO5P,QAAQ,aAAa3J,UAAU,QAAtC,eACA,4BAAQU,GAAG,aAAa+H,SAAU,SAACtJ,GAAD,OAAMsJ,EAAStJ,EAAE+I,OAAOH,MAAM,IAAIA,MAAO6L,EAAW,GAAIhD,SAAUA,EACpG5Q,UAAU,gBACN,4BAAQ+H,MAAM,OAAd,UACA,4BAAQA,MAAM,MAAd,WACA,4BAAQA,MAAM,MAAd,WACA,4BAAQA,MAAM,MAAd,WACA,4BAAQA,MAAM,MAAd,YAGJ,2BAAO4B,QAAQ,cAAc3J,UAAU,QAAvC,eACA,8BAAUU,GAAG,cAAc+H,SAAU,SAACtJ,GAAD,OAAKsJ,EAAStJ,EAAE+I,OAAOH,MAAM,IAAIA,MAAO6L,EAAW,GACxFhD,SAAUA,EAAU5Q,UAAU,kBAGlC,kBAAC,GAAD,CAAY2W,aAAcA,EAAcR,qBAjPrC,GAkPHvF,SAAUA,EAAUgD,WAAYA,EAAYb,iBAAkBA,EAC9DpG,gBAAiBA,EAAiBW,UAAWA,EAAWiJ,eAAe,KACvEnB,kBAAmBA,EAAmBwB,gBAAiB,0BAEvD,wBAAI5W,UAAU,0BACT,UAAUoE,EAAmBoR,MAEzB,WAAR7D,EAAiB,KAAM,wBAAI3R,UAAU,0BAClC,0BAAMA,UAAU,yBACX,uBAAuBoE,EArJxD,WACI,IAAMmU,EAAO4E,EAA0BA,EAAyB5V,MAAM,GAAGjG,KAAK,KAE9E,OAAOkU,KAAkB2H,EAA0BA,EAAyBxa,KAAKsJ,QAAO,SAACjI,EAAEC,GAAH,OACpFD,EAAEC,EAAEsU,KAAQ,GAAG,GAiJoDqB,MAI1C,WAARjI,EAAiB,KAElB,kBAAC,GAAD,CAA6B2G,gCAAiC6E,EAC1DvM,SAAUA,EAAU4H,mBAAoB,qBAIhD,kBAAC,EAAD,CAAY7G,MAAOA,EAAOgC,SAAUA,EAAUE,SAAUA,EAAUC,SAAUA,EAC5ElC,eAAgBA,EAAgBtP,KAAI,UAAKA,EAAL,kBAQhD,kBAAC,IAAD,CAAUrC,GAAIid,GAAoB5a,WAM9C4a,GAAoB7a,YAAY,mBAChC6a,GAAoB5a,KAAK,uBAEV4a,UC7Uf,SAASI,GAAuB7e,GAC5B,IAAMuE,EAAI,CACN9B,KAAK,IAAIuW,gBAAgBhZ,EAAMiZ,SAAStR,QAAQuR,IAAI,QACpDjX,GAAG,IAAI+W,gBAAgBhZ,EAAMiZ,SAAStR,QAAQuR,IAAI,OAHnB,EAKyBpV,EAAS,CACjES,IAAI,eACJE,KAAK,CACDoC,OAAO,OACPC,QAAQ,CAAC,eAAe,oBACxBC,KAAKC,KAAKC,UAAU,CAACxE,KAAK,aAC1ByE,YAAY,aAXe,sBAKtB0W,EALsB,EAK3B1Z,KAA8B2Z,EALH,EAKHzZ,MALG,EAemBN,EAAS,CAC3DS,IAAI,eACJE,KAAK,CACDoC,OAAO,OACPC,QAAQ,CAAC,eAAe,oBACxBC,KAAKC,KAAKC,UAAU,CAChBxE,KAAK,QACLuB,MAAMO,EAAItC,GAAG,CAACsC,EAAItC,IAAI,OAE1BiF,YAAY,aAxBe,sBAetBgH,EAfsB,EAe3BhK,KAA2BiK,EAfA,EAeN/J,MAfM,EA4BqBN,EAAS,CAC7DS,IAAI,yBACJE,KAAK,CACDoC,OAAO,OACPC,QAAQ,CAAC,eAAe,oBACxBC,KAAKC,KAAKC,UAAU,CAACxE,KAAK,wBAC1ByE,YAAY,aAlCe,sBA4BtBwT,EA5BsB,EA4B3BxW,KAA4ByW,EA5BD,EA4BLvW,MA5BK,EAsCqCN,EAASS,EAAI9B,MAAQ8B,EAAItC,GAAG,CAChGsC,IAAI,sBACJE,KAAK,CACDoC,OAAO,OACPC,QAAQ,CAAC,eAAe,oBACxBC,KAAKC,KAAKC,UAAU,CAChBxE,KAAK,sBACLuB,MAAM,CAACO,EAAItC,MAEfiF,YAAY,YAElB,MAjDiC,sBAsCtBwX,EAtCsB,EAsC3Bxa,KAAoCya,EAtCT,EAsCGva,MAehC8T,EAAa,EArDgB,EAwDOjY,mBAAS,MAxDhB,mBAwD5Bge,EAxD4B,KAwDfC,EAxDe,OAyDCje,mBAAS,MAzDV,mBAyD5B4O,EAzD4B,KAyDlBC,EAzDkB,OA0DG7O,mBAAS,MA1DZ,mBA0D5B6a,EA1D4B,KA0DjBC,EA1DiB,OA2DC9a,mBAAS,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,MAAM,GAAG,GAAG,GAAG,KA3D5C,mBA2D5BkV,EA3D4B,KA2DjBb,EA3DiB,KA6D5BzQ,EAAQuM,cAARvM,KACA1C,EAAcC,qBAAWL,GAAzBI,WAuEP,SAAS6I,EAASV,EAAMlE,GACpBkP,EAAiB,GAAD,mBAAKa,EAAWhL,MAAM,EAAE/E,IAAxB,CAA+BkE,GAA/B,YAAwC6L,EAAWhL,MAAM/E,EAAM,MAGnF,SAASuR,EAAkB5M,GACvB,MAAqC,KAAjCoL,EAAW+C,GAAcnO,GAAG,IAA4C,KAAjCoL,EAAW+C,GAAcnO,GAAG,IAA4C,KAAjCoL,EAAW+C,GAAcnO,GAAG,GACjGiR,WAAW7F,EAAW+C,GAAcnO,GAAG,IAAIiR,WAAW7F,EAAW+C,GAAcnO,GAAG,IAC1FiR,WAAW7F,EAAW+C,GAAcnO,GAAG,IAChC,GAGhB,SAASgN,IACL,IAAIjK,EAAM,EAQV,OAPAqI,EAAW+C,GAAchP,SAAQ,SAACkP,EAAQrO,GAEF,KAAjCoL,EAAW+C,GAAcnO,GAAG,IAA4C,KAAjCoL,EAAW+C,GAAcnO,GAAG,IACrC,KAAjCoL,EAAW+C,GAAcnO,GAAG,KAC3B+C,GAAckO,WAAW7F,EAAW+C,GAAcnO,GAAG,IAAIiR,WAAW7F,EAAW+C,GAAcnO,GAAG,IAC/FiR,WAAW7F,EAAW+C,GAAcnO,GAAG,QAEtC+C,EAzFXxM,qBAAU,WAcN,GAZIsd,IAAgD,IAA1BA,EAAmBnV,MACjCC,MAAM,iEACNvH,GAAW,IAEdyc,GAAsBA,EAAmB1Z,MAAQ0Z,EAAmB9U,OACzEoV,EAAmBN,EAAmB1Z,KAAK1B,KAAI,SAAA0B,GAAI,OACnD,4BAAQxB,IAAKwB,EAAK0Z,EAAmB9U,MAAM,GAAGjG,MAAOyG,MAAOpF,EAAK0Z,EAAmB9U,MAAM,GAAGjG,OACxFqB,EAAK0Z,EAAmB9U,MAAM,GAAGjG,MAAM,OAAOqB,EAAK0Z,EAAmB9U,MAAM,GAAGjG,MAAMqB,EAAK0Z,EAAmB9U,MAAM,GAAGjG,MAAM,SAKjIqL,IAA0C,IAAvBA,EAAgBzF,KAC3BC,MAAM,iEACNvH,GAAW,QAElB,GAAI+M,GAAmBA,EAAgBhK,MAAQgK,EAAgBpF,MAAO,CACvE,IAAMwH,EAASpC,EAAgBpF,MAAM,GAAGjG,KAClC0N,EAAUrC,EAAgBpF,MAAM,GAAGjG,KACnCuW,EAAWlL,EAAgBpF,MAAM,GAAGjG,KACpCqU,EAAYhJ,EAAgBpF,MAAM,GAAGjG,KAE3CiM,EAAgBZ,EAAgBhK,KAAK1B,KAAI,SAAA0B,GAAI,OACzC,4BAAQxB,IAAKwB,EAAKoM,GAAWhH,MAAOpF,EAAKoM,IACpCpM,EAAKoM,GAAU,OACbpM,EAAKqM,GAAWrM,EAAKqM,GAAW,IAAI,eACpCrM,EAAKkV,GAAYlV,EAAKkV,GAAY,IAAI,iBACtClV,EAAKgT,GAAahT,EAAKgT,GAAa,UAO/CwD,IAA4C,IAAxBA,EAAiBjS,MACjCC,MAAM,iEACNvH,GAAW,IAEVuZ,GAAoBA,EAAiBxW,MAAQwW,EAAiB5R,OACnEiS,EAAiBL,EAAiBxW,KAAK1B,KAAI,SAAA0B,GAAI,OAC/C,4BAAQxB,IAAKwB,EAAKwW,EAAiB5R,MAAM,GAAGjG,MAAOyG,MAAOpF,EAAKwW,EAAiB5R,MAAM,GAAGjG,QACnFqB,EAAKwW,EAAiB5R,MAAM,GAAGjG,MAAMqB,EAAKwW,EAAiB5R,MAAM,GAAGjG,MAAM,IAC3E,OAAOqB,EAAKwW,EAAiB5R,MAAM,GAAGjG,MAAMqB,EAAKwW,EAAiB5R,MAAM,GAAGjG,MAAM,SAKtF6b,IAA4D,IAAhCA,EAAyBjW,OACrDC,MAAM,iEACNvH,GAAW,MAGjB,CAACyc,EAAmBC,EAAoB3P,EAAgBC,EAAiBuM,EAAiBC,EAC5F+D,EAAyBC,IAEzBre,qBAAU,WACN,SAAS4Q,IACL/H,SAAS+C,cAAc,uBAAuBxC,aAC1C,UAAU,yCAIlB,OAFAxJ,OAAOiR,iBAAiB,WAAWD,GAE5B,WACChR,OAAOkR,oBAAoB,WAAWF,MAE5C,IAiCN,IAAImI,EAAsB,KA6B1B,OA1BKuE,GAAsBA,EAAmBxZ,OAAUyZ,GAAuB3P,GAAmBA,EAAgB9J,OAAU+J,GAC3HuM,GAAoBA,EAAiBtW,OAAUuW,GAAsB+D,GAA4BA,EAAyBta,OACxHua,KACHtF,EACI,yBAAK9X,UAAU,uBACVqc,GAAsBA,EAAmBxZ,MAAO,kDAAkDwZ,EAAmBxZ,MAAM2E,MAC3H,UAAU6U,EAAmBxZ,MAAM4E,KAAK,aAAa4U,EAAmBxZ,MAAM6E,WAAW,KACzF4U,EAAqB,2CAA2CA,EAAsB,KACvF,6BACA,6BACC3P,GAAmBA,EAAgB9J,MAAO,+CAA+C8J,EAAgB9J,MAAM2E,MAC/G,UAAUmF,EAAgB9J,MAAM4E,KAAK,aAAakF,EAAgB9J,MAAM6E,WAAW,KACnFkF,EAAkB,wCAAwCA,EAAmB,KAC9E,6BACA,6BACCuM,GAAoBA,EAAiBtW,MAAO,iDAAiDsW,EAAiBtW,MAAM2E,MACpH,UAAU2R,EAAiBtW,MAAM4E,KAAK,aAAa0R,EAAiBtW,MAAM6E,WAAW,KACrF0R,EAAmB,0CAA0CA,EAAoB,KAClF,6BACA,6BACC+D,GAA4BA,EAAyBta,MAAO,oDAAoDsa,EAAyBta,MAAM2E,MAC/I,UAAU2V,EAAyBta,MAAM4E,KAAK,aAAa0V,EAAyBta,MAAM6E,WAAW,KACrG0V,EAA2B,6CAA6CA,EAA4B,OAKzG,kBAAC,EAAD,CAAMxJ,WAAYA,EAAYb,iBAAkBA,EAAkB/P,IAAKA,EAAK9B,KAAK,sBAAsBwS,YAAY,uBAE/G,gBAAE/B,EAAF,EAAEA,MAAMf,EAAR,EAAQA,SAASgB,EAAjB,EAAiBA,eAAe+B,EAAhC,EAAgCA,SAASE,EAAzC,EAAyCA,SAASC,EAAlD,EAAkDA,SAAS/D,EAA3D,EAA2DA,aAA3D,OACC,kBAAC,IAAD,KACG,kBAAC,IAAD,CAAOC,OAAK,EAAC1N,KAAI,UAAKA,EAAL,aACb,kBAAC,EAAD,CAAaD,YAAaib,GAAsBjb,YAC5CuI,SAAU0S,GAAsBhb,KAChCsS,aAAc,CAAChB,EAAW,GAAGA,EAAW,IACxCmB,cAAe,CAACuI,GAAsBjb,YAAY,MAAM,OAAO,cAAc,qBAC7E2S,cAAe,CAACpB,EAAW,GAAGnP,EAAiBmP,EAAW,IAAoB,QAAhBA,EAAW,GAAW,SAASA,EAAW,GAAG,QAAQA,EAAW,IAC9HqB,YAAa,CAAC,GAAG,YAAY,cAAc,QAAQ,MAAM,WAAW,YACpEC,YAAatB,EAAW+C,GACxBvB,kBAAmBA,EACnBI,eAAgBA,KAGxB,kBAAC,IAAD,CAAOxF,OAAK,EAAC1N,KAAMA,GACnB,kBAAC,EAAD,KACA,yBAAKtC,UAAU,0BAIX,wBAAIA,UAAU,SAAiB,WAAR2R,EAAkB,SAAS,UAAY,IAAK2L,GAAsBjb,aACzF,2BAAOrC,UAAU,gBAAjB,cACC+P,EACA+H,EAID,0BAAM3H,SAAU,SAAChR,GAAKA,EAAEiR,iBAA6B,WAARuB,EAAkBgC,IAAiBE,MAC5E,yBAAK7T,UAAU,OACX,8BAAUA,UAAU,yEAAyE4Q,SAAUA,GACnG,4BAAQ5Q,UAAU,6CAA6C,wCAAa,0BAAMA,UAAU,gBAAhB,OAC5E,2BAAOA,UAAU,OAAO2J,QAAQ,cAAhC,eACA,yBAAK3J,UAAU,eAIX,2BAAOY,KAAK,OAAOF,GAAG,aAAaqH,MAAO6L,EAAW,GAAInL,SAAU,SAACtJ,GAAD,OAAKA,GAAGkR,UAAQ,EAACrQ,UAAU,iBAC9F,4BAAQA,UAAU,eAAeI,MAAO,CAAC2Q,KAAK,SAAUtI,SAAU,SAACtJ,GAC/D,IAAI2d,EAAa,GACbC,EAAgB,GAChBM,EAA0B,GAE9BhB,EAAmB1Z,KAAKgF,SAAQ,SAAAhF,GAEzBA,EAAK0Z,EAAmB9U,MAAM,GAAGjG,QAAQnC,EAAE+I,OAAOH,QACjD+U,EAAana,EAAK0Z,EAAmB9U,MAAM,GAAGjG,MAAMqB,EAAK0Z,EAAmB9U,MAAM,GAAGjG,MAAM,GAC3Fyb,EAAgBpa,EAAK0Z,EAAmB9U,MAAM,GAAGjG,MAAMqB,EAAK0Z,EAAmB9U,MAAM,GAAGjG,MAAM,GAC9F+b,EAA0B1a,EAAK0Z,EAAmB9U,MAAM,GAAGjG,MAAMqB,EAAK0Z,EAAmB9U,MAAM,GAAGjG,MAAM,OAKpHyR,EAAiB,CAAC5T,EAAE+I,OAAOH,MAAM+U,EAAaC,GAA9B,mBACTnJ,EAAWhL,MAAM,EArM/B,IAoMuB,CAC8ByU,GAD9B,YAETzJ,EAAWhL,MAAM+Q,QAEpB,4BAAQ5R,MAAM,IAAd,wBACC2U,IAGT,2BAAO1c,UAAU,OAAO2J,QAAQ,gBAAhC,iBACA,2BAAOjJ,GAAG,eAAeqH,MAAO6L,EAAW,GAAInL,SAAU,SAACtJ,GAAD,OAAKA,GAAGkR,UAAQ,EAACrQ,UAAU,iBACpF,2BAAOA,UAAU,OAAO2J,QAAQ,mBAAhC,oBACA,8BAAUjJ,GAAG,kBAAkBqH,MAAO6L,EAAW,GAAInL,SAAU,SAACtJ,GAAD,OAAKA,GAAGkR,UAAQ,EAACrQ,UAAU,kBAI9F,yBAAKA,UAAU,4BACX,2BAAO2J,QAAQ,0BAA0B3J,UAAU,QAAnD,8BAAqF,0BAAMA,UAAU,gBAAhB,MACrF,2BAAOY,KAAK,OAAOF,GAAG,0BAA0BwT,UAAU,KAAKnM,MAAO6L,EAAW,GAAInL,SACjF,SAACtJ,GAAD,OAAKsJ,EAAStJ,EAAE+I,OAAOH,MAAM,IAAI6I,SAAUA,EAAUP,UAAQ,EAACrQ,UAAU,iBAE5E,2BAAO2J,QAAQ,OAAO3J,UAAU,QAAhC,QAA4C,0BAAMA,UAAU,gBAAhB,MAC5C,2BAAOY,KAAK,OAAOgQ,SAAUA,EAAUP,UAAQ,EAACtI,MAAO6L,EAAW,GAAInL,SAAU,SAACtJ,GAAD,OAAKsJ,EAAStJ,EAAE+I,OAAOH,MAAM,IAC7G/H,UAAU,iBAEV,2BAAOA,UAAU,OAAO2J,QAAQ,UAAhC,WAAkD,0BAAM3J,UAAU,gBAAhB,MAClD,yBAAKA,UAAU,eACX,2BAAOY,KAAK,OAAOF,GAAG,SAASqH,MAAO6L,EAAW,GAAInL,SAAU,SAACtJ,GAAD,OAAKA,GAAGkR,UAAQ,EAACrQ,UAAU,eAC1F4Q,SAAUA,IACV,4BAAQ5Q,UAAU,eAAeI,MAAO,CAAC2Q,KAAK,SAAUH,SAAUA,EAAUnI,SAAU,SAACtJ,GACvFsJ,EAAStJ,EAAE+I,OAAOH,MAAM,KAEpB,4BAAQA,MAAM,IAAd,wBACCwR,IAIT,2BAAO5P,QAAQ,aAAa3J,UAAU,QAAtC,eACA,4BAAQU,GAAG,aAAa+H,SAAU,SAACtJ,GAAD,OAAMsJ,EAAStJ,EAAE+I,OAAOH,MAAM,IAAIA,MAAO6L,EAAW,GAAIhD,SAAUA,EACpG5Q,UAAU,gBACN,4BAAQ+H,MAAM,OAAd,UACA,4BAAQA,MAAM,MAAd,WACA,4BAAQA,MAAM,MAAd,WACA,4BAAQA,MAAM,MAAd,WACA,4BAAQA,MAAM,MAAd,YAGJ,2BAAO4B,QAAQ,cAAc3J,UAAU,QAAvC,eACA,8BAAUU,GAAG,cAAc+H,SAAU,SAACtJ,GAAD,OAAKsJ,EAAStJ,EAAE+I,OAAOH,MAAM,IAAIA,MAAO6L,EAAW,GACxFhD,SAAUA,EAAU5Q,UAAU,kBAIlC,kBAAC,GAAD,CAAY2W,aAAcA,EAAcR,qBAtPrC,GAuPHvF,SAAUA,EAAUgD,WAAYA,EAAYb,iBAAkBA,EAC9DpG,gBAAiBA,EAAiBW,UAAWA,EAAWiJ,eAAe,KACvEnB,kBAAmBA,EAAmBwB,gBAAiB,6BAGvD,wBAAI5W,UAAU,0BACT,UAAUoE,EAAmBoR,MAEzB,WAAR7D,EAAiB,KAAM,wBAAI3R,UAAU,0BAClC,0BAAMA,UAAU,yBACX,uBAAuBoE,EA3JxD,WACI,IAAMmU,EAAO4E,EAA0BA,EAAyB5V,MAAM,GAAGjG,KAAK,KAE9E,OAAOkU,KAAkB2H,EAA0BA,EAAyBxa,KAAKsJ,QAAO,SAACjI,EAAEC,GAAH,OACpFD,EAAEC,EAAEsU,KAAQ,GAAG,GAuJoDqB,MAI1C,WAARjI,EAAiB,KAElB,kBAAC,GAAD,CAA6B2G,gCAAiC6E,EAC1DvM,SAAUA,EAAU4H,mBAAoB,qBAIhD,kBAAC,EAAD,CAAY7G,MAAOA,EAAOgC,SAAUA,EAAUE,SAAUA,EAAUC,SAAUA,EAC5ElC,eAAgBA,EAAgBtP,KAAI,UAAKA,EAAL,kBAMhD,kBAAC,IAAD,CAAUrC,GAAIqd,GAAsBhb,WAMhDgb,GAAsBjb,YAAY,sBAClCib,GAAsBhb,KAAK,yBAEZgb,UClVf,SAASC,GAAwB9e,GAC7B,IAAMuE,EAAI,CACN9B,KAAK,IAAIuW,gBAAgBhZ,EAAMiZ,SAAStR,QAAQuR,IAAI,QACpDjX,GAAG,IAAI+W,gBAAgBhZ,EAAMiZ,SAAStR,QAAQuR,IAAI,OAHlB,EAKwBpV,EAAS,CACjES,IAAI,eACJE,KAAK,CACDoC,OAAO,OACPC,QAAQ,CAAC,eAAe,oBACxBC,KAAKC,KAAKC,UAAU,CAACxE,KAAK,aAC1ByE,YAAY,aAXgB,sBAKvB0W,EALuB,EAK5B1Z,KAA8B2Z,EALF,EAKJzZ,MALI,EAekBN,EAAS,CAC3DS,IAAI,eACJE,KAAK,CACDoC,OAAO,OACPC,QAAQ,CAAC,eAAe,oBACxBC,KAAKC,KAAKC,UAAU,CAChBxE,KAAK,QACLuB,MAAMO,EAAItC,GAAG,CAACsC,EAAItC,IAAI,OAE1BiF,YAAY,aAxBgB,sBAevBgH,EAfuB,EAe5BhK,KAA2BiK,EAfC,EAeP/J,MAfO,EA4BoBN,EAAS,CAC7DS,IAAI,yBACJE,KAAK,CACDoC,OAAO,OACPC,QAAQ,CAAC,eAAe,oBACxBC,KAAKC,KAAKC,UAAU,CAACxE,KAAK,yBAC1ByE,YAAY,aAlCgB,sBA4BvBwT,EA5BuB,EA4B5BxW,KAA4ByW,EA5BA,EA4BNvW,MA5BM,EAsC6EN,EAAS,MAtCtF,0BAsCvBib,EAtCuB,EAsC5B7a,KAAyC8a,EAtCb,EAsCO5a,MAAsC6a,EAtC7C,KA4C9B/G,EAAa,EACbgH,EAA8B,GAC9BC,EAAgC,GAIhC1D,EAAqB,EACrBC,EAAqB,EAnDS,EAwDMzb,mBAAS,MAxDf,mBAwD7Bge,EAxD6B,KAwDhBC,EAxDgB,OAyDAje,mBAAS,MAzDT,mBAyD7B4O,EAzD6B,KAyDnBC,EAzDmB,OA0DE7O,mBAAS,MA1DX,mBA0D7B6a,EA1D6B,KA0DlBC,EA1DkB,OA2DsB9a,mBAAS,MA3D/B,mBA2D7B8c,EA3D6B,KA2DRP,EA3DQ,QA4DAvc,mBAAS,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,MAAM,GAAG,GAAG,GAAG,GAAG,GAAG,KA5DjD,qBA4D7BkV,GA5D6B,MA4DlBb,GA5DkB,MA8D7BzQ,GAAQuM,cAARvM,KACA1C,GAAcC,qBAAWL,GAAzBI,WAyEP,SAASie,GAAyBC,EAAYnC,GAC1C,MAAO,CACH3Y,IAAI,2BACJE,KAAK,CACDoC,OAAO,OACPC,QAAQ,CAAC,eAAe,oBACxBC,KAAKC,KAAKC,UAAU,CAChBoY,YAAYA,EACZnC,OAAOA,IAEXhW,YAAY,YAKxB,SAAS8C,GAASV,EAAMlE,GACpBkP,GAAiB,GAAD,mBAAKa,GAAWhL,MAAM,EAAE/E,IAAxB,CAA+BkE,GAA/B,YAAwC6L,GAAWhL,MAAM/E,EAAM,MAGnF,SAASuR,GAAkB5M,GACvB,MAAqC,KAAjCoL,GAAW+C,GAAcnO,GAAG,IAA4C,KAAjCoL,GAAW+C,GAAcnO,GAAG,IAA4C,KAAjCoL,GAAW+C,GAAcnO,GAAG,GACjGiR,WAAW7F,GAAW+C,GAAcnO,GAAG,IAAIiR,WAAW7F,GAAW+C,GAAcnO,GAAG,IAC1FiR,WAAW7F,GAAW+C,GAAcnO,GAAG,IAChC,GAGhB,SAASgN,KACL,IAAIjK,EAAM,EAQV,OAPAqI,GAAW+C,GAAchP,SAAQ,SAACoW,EAAQvV,GAEF,KAAjCoL,GAAW+C,GAAcnO,GAAG,IAA4C,KAAjCoL,GAAW+C,GAAcnO,GAAG,IACrC,KAAjCoL,GAAW+C,GAAcnO,GAAG,KAC3B+C,GAAckO,WAAW7F,GAAW+C,GAAcnO,GAAG,IAAIiR,WAAW7F,GAAW+C,GAAcnO,GAAG,IAC/FiR,WAAW7F,GAAW+C,GAAcnO,GAAG,QAEtC+C,EAGX,SAASmP,GAAyBkB,GAC9B,OAAOhI,GAAWgK,GAAiC3R,QAAO,SAACjI,EAAEC,GAEzD,OAAG2X,IAAU3X,EAAEiW,GACJlW,EAECA,EAAEC,EAAEkW,KAClBvG,GAAW+J,GAA+B1R,QAAO,SAACjI,EAAEC,GAElD,OAAG2X,IAAU3X,EAAEiW,GACJlW,EAECA,EAAEC,EAAEkW,KAClB3E,OA1HNzW,qBAAU,WAcN,GAZIsd,IAAgD,IAA1BA,EAAmBnV,MACjCC,MAAM,iEACNvH,IAAW,IAEdyc,GAAsBA,EAAmB1Z,MAAQ0Z,EAAmB9U,OACzEoV,EAAmBN,EAAmB1Z,KAAK1B,KAAI,SAAA0B,GAAI,OACnD,4BAAQxB,IAAKwB,EAAK0Z,EAAmB9U,MAAM,GAAGjG,MAAOyG,MAAOpF,EAAK0Z,EAAmB9U,MAAM,GAAGjG,OACxFqB,EAAK0Z,EAAmB9U,MAAM,GAAGjG,MAAM,OAAOqB,EAAK0Z,EAAmB9U,MAAM,GAAGjG,MAAMqB,EAAK0Z,EAAmB9U,MAAM,GAAGjG,MAAM,SAKjIqL,IAA0C,IAAvBA,EAAgBzF,KAC3BC,MAAM,iEACNvH,IAAW,QAElB,GAAI+M,GAAmBA,EAAgBhK,MAAQgK,EAAgBpF,MAAO,CACvE,IAAMwH,EAASpC,EAAgBpF,MAAM,GAAGjG,KAClC0N,EAAUrC,EAAgBpF,MAAM,GAAGjG,KACnCuW,EAAWlL,EAAgBpF,MAAM,GAAGjG,KACpCqU,EAAYhJ,EAAgBpF,MAAM,GAAGjG,KAE3CiM,EAAgBZ,EAAgBhK,KAAK1B,KAAI,SAAA0B,GAAI,OACzC,4BAAQxB,IAAKwB,EAAKoM,GAAWhH,MAAOpF,EAAKoM,IACpCpM,EAAKoM,GAAU,OACbpM,EAAKqM,GAAWrM,EAAKqM,GAAW,IAAI,eACpCrM,EAAKkV,GAAYlV,EAAKkV,GAAY,IAAI,iBACtClV,EAAKgT,GAAahT,EAAKgT,GAAa,UAO/CwD,IAA4C,IAAxBA,EAAiBjS,MACjCC,MAAM,iEACNvH,IAAW,IAEVuZ,GAAoBA,EAAiBxW,MAAQwW,EAAiB5R,OACnEiS,EAAiBL,EAAiBxW,KAAK1B,KAAI,SAAA0B,GAAI,OAC/C,4BAAQxB,IAAKwB,EAAKwW,EAAiB5R,MAAM,GAAGjG,MAAOyG,MAAOpF,EAAKwW,EAAiB5R,MAAM,GAAGjG,QACnFqB,EAAKwW,EAAiB5R,MAAM,GAAGjG,MAAMqB,EAAKwW,EAAiB5R,MAAM,GAAGjG,MAAM,IAC3E,OAAOqB,EAAKwW,EAAiB5R,MAAM,GAAGjG,MAAMqB,EAAKwW,EAAiB5R,MAAM,GAAGjG,MAAM,WAK5F,CAAC+a,EAAmBC,EAAoB3P,EAAgBC,EAAiBuM,EAAiBC,IAG5Fra,qBAAU,WACFye,IAAsE,IAArCA,EAA8BtW,OAC/DC,MAAM,iEACNvH,IAAW,MAEjB,CAAC4d,EAA8BC,IAEjC1e,qBAAU,WACN,SAAS4Q,IACL/H,SAAS+C,cAAc,uBAAuBxC,aAC1C,UAAU,yCAIlB,OAFAxJ,OAAOiR,iBAAiB,WAAWD,GAE5B,WACChR,OAAOkR,oBAAoB,WAAWF,MAE5C,IA2DN,IAAImI,GAAsB,KA8B1B,OA3BKuE,GAAsBA,EAAmBxZ,OAAUyZ,GAAuB3P,GAAmBA,EAAgB9J,OAAU+J,GACpHuM,GAAoBA,EAAiBtW,OAAUuW,GAAsBoE,GACtEA,EAA8B3a,OAAU4a,KAC/C3F,GACI,yBAAK9X,UAAU,uBACVqc,GAAsBA,EAAmBxZ,MAAO,kDAAkDwZ,EAAmBxZ,MAAM2E,MAC3H,UAAU6U,EAAmBxZ,MAAM4E,KAAK,aAAa4U,EAAmBxZ,MAAM6E,WAAW,KACzF4U,EAAqB,2CAA2CA,EAAsB,KACvF,6BACA,6BACC3P,GAAmBA,EAAgB9J,MAAO,+CAA+C8J,EAAgB9J,MAAM2E,MAC/G,UAAUmF,EAAgB9J,MAAM4E,KAAK,aAAakF,EAAgB9J,MAAM6E,WAAW,KACnFkF,EAAkB,wCAAwCA,EAAmB,KAC9E,6BACA,6BACCuM,GAAoBA,EAAiBtW,MAAO,iDAAiDsW,EAAiBtW,MAAM2E,MACpH,UAAU2R,EAAiBtW,MAAM4E,KAAK,aAAa0R,EAAiBtW,MAAM6E,WAAW,KACrF0R,EAAmB,0CAA0CA,EAAoB,KAClF,6BACA,6BACCoE,GAAiCA,EAA8B3a,MAAO,8DACrE2a,EAA8B3a,MAAM2E,MAAO,UAAUgW,EAA8B3a,MAAM4E,KAAK,aAChG+V,EAA8B3a,MAAM6E,WAAW,KAC9C+V,EAAgC,uDAAuDA,EAAiC,OAK7H,kBAAC,EAAD,CAAM7J,WAAYA,GAAYb,iBAAkBA,GAAkB/P,IAAKA,EAAK9B,KAAK,uBAAuBwS,YAAY,sBACpHT,iBAAkB4K,GAA0B7K,uBAAwB0K,EACpExK,0BAzLsB,EAyL0BC,eAvL/B,IAyLb,gBAAExB,EAAF,EAAEA,MAAMf,EAAR,EAAQA,SAASgB,EAAjB,EAAiBA,eAAe+B,EAAhC,EAAgCA,SAASE,EAAzC,EAAyCA,SAASC,EAAlD,EAAkDA,SAAS/D,EAA3D,EAA2DA,aAA3D,OACC,kBAAC,IAAD,KACG,kBAAC,IAAD,CAAOzN,KAAI,UAAKA,GAAL,aACP,kBAAC,EAAD,CAAaD,YAAakb,GAAuBlb,YAC7CuI,SAAU,IAAI2S,GAAuBjb,KACrCsS,aAAc,CAAChB,GAAW,GAAGA,GAAW,IACxCmB,cAAe,CAACwI,GAAuBlb,YAAY,MAAM,OAAO,cAAc,qBAC9E2S,cAAe,CAACpB,GAAW,GAAGnP,EAAiBmP,GAAW,IAAoB,QAAhBA,GAAW,GAAW,SAASA,GAAW,GAAG,QAAQA,GAAW,IAC9HqB,YAAa,CAAC,GAAG,YAAY,cAAc,QAAQ,MAAM,WAAW,YACpEC,YAAatB,GAAW+C,GACxBvB,kBAAmBA,GACnBI,eAAgBA,MAGxB,kBAAC,IAAD,CAAOxF,OAAK,EAAC1N,KAAMA,IACnB,kBAAC,EAAD,KACA,yBAAKtC,UAAU,0BAIX,wBAAIA,UAAU,SAAiB,WAAR2R,EAAkB,SAAS,UAAY,IAAK4L,GAAuBlb,aAC1F,2BAAOrC,UAAU,gBAAjB,cACC+P,EACA+H,GAID,0BAAM3H,SAAU,SAAChR,GACbA,EAAEiR,iBACS,WAARuB,EAAkBgC,IAChBE,MAGL,yBAAK7T,UAAU,OACX,8BAAUA,UAAU,yEAAyE4Q,SAAUA,GACnG,4BAAQ5Q,UAAU,6CAA6C,wCAAa,0BAAMA,UAAU,gBAAhB,OAC5E,2BAAOA,UAAU,OAAO2J,QAAQ,cAAhC,eACA,yBAAK3J,UAAU,eAIX,2BAAOY,KAAK,OAAOF,GAAG,aAAaqH,MAAO6L,GAAW,GAAInL,SAAU,SAACtJ,GAAD,OAAKA,GAAGkR,UAAQ,EAACrQ,UAAU,iBAC9F,4BAAQA,UAAU,eAAeI,MAAO,CAAC2Q,KAAK,SAAUtI,SAAU,SAACtJ,GAC/D,IAAI2d,EAAa,GACbC,EAAgB,GAChBM,EAA0B,GAE9BhB,EAAmB1Z,KAAKgF,SAAQ,SAAAhF,GAEzBA,EAAK0Z,EAAmB9U,MAAM,GAAGjG,QAAQnC,EAAE+I,OAAOH,QACjD+U,EAAana,EAAK0Z,EAAmB9U,MAAM,GAAGjG,MAAMqB,EAAK0Z,EAAmB9U,MAAM,GAAGjG,MAAM,GAC3Fyb,EAAgBpa,EAAK0Z,EAAmB9U,MAAM,GAAGjG,MAAMqB,EAAK0Z,EAAmB9U,MAAM,GAAGjG,MAAM,GAC9F+b,EAA0B1a,EAAK0Z,EAAmB9U,MAAM,GAAGjG,MAAMqB,EAAK0Z,EAAmB9U,MAAM,GAAGjG,MAAM,OAKpHyR,GAAiB,CAAC5T,EAAE+I,OAAOH,MAAM+U,EAAaC,GAA9B,mBACTnJ,GAAWhL,MAAM,EApP/B,IAmPuB,CAC8ByU,GAD9B,YAETzJ,GAAWhL,MAAM+Q,MACxB+D,EACIG,GAAyB1e,EAAE+I,OAAOH,MAAM6L,GAtPvD,OAyPe,4BAAQ7L,MAAM,IAAd,wBACC2U,IAGT,2BAAO1c,UAAU,OAAO2J,QAAQ,gBAAhC,iBACA,2BAAOjJ,GAAG,eAAeqH,MAAO6L,GAAW,GAAInL,SAAU,SAACtJ,GAAD,OAAKA,GAAGkR,UAAQ,EAACrQ,UAAU,iBACpF,2BAAOA,UAAU,OAAO2J,QAAQ,mBAAhC,oBACA,8BAAUjJ,GAAG,kBAAkBqH,MAAO6L,GAAW,GAAInL,SAAU,SAACtJ,GAAD,OAAKA,GAAGkR,UAAQ,EAACrQ,UAAU,kBAI9F,yBAAKA,UAAU,4BACX,2BAAO2J,QAAQ,2BAA2B3J,UAAU,QAApD,+BAAuF,0BAAMA,UAAU,gBAAhB,MACvF,2BAAOY,KAAK,OAAOF,GAAG,2BAA2BwT,UAAU,KAAKnM,MAAO6L,GAAW,GAAInL,SAClF,SAACtJ,GAAD,OAAKsJ,GAAStJ,EAAE+I,OAAOH,MAAM,IAAI6I,SAAUA,EAAUP,UAAQ,EAACrQ,UAAU,iBAE5E,2BAAO2J,QAAQ,OAAO3J,UAAU,QAAhC,QAA4C,0BAAMA,UAAU,gBAAhB,MAC5C,2BAAOY,KAAK,OAAOgQ,SAAUA,EAAUP,UAAQ,EAACtI,MAAO6L,GAAW,GAAInL,SAAU,SAACtJ,GAAD,OAAKsJ,GAAStJ,EAAE+I,OAAOH,MAAM,IAC7G/H,UAAU,iBAEV,2BAAOA,UAAU,OAAO2J,QAAQ,UAAhC,WAAkD,0BAAM3J,UAAU,gBAAhB,MAClD,yBAAKA,UAAU,eACX,2BAAOY,KAAK,OAAOF,GAAG,SAASqH,MAAO6L,GAAW,GAAInL,SAAU,SAACtJ,GAAD,OAAKA,GAAGkR,UAAQ,EAACrQ,UAAU,eAC1F4Q,SAAUA,IACV,4BAAQ5Q,UAAU,eAAeI,MAAO,CAAC2Q,KAAK,SAAUH,SAAUA,EAAUnI,SAAU,SAACtJ,GACvFsJ,GAAStJ,EAAE+I,OAAOH,MAAM,KAEpB,4BAAQA,MAAM,IAAd,wBACCwR,IAIT,2BAAO5P,QAAQ,aAAa3J,UAAU,QAAtC,eACA,4BAAQU,GAAG,aAAa+H,SAAU,SAACtJ,GAAD,OAAMsJ,GAAStJ,EAAE+I,OAAOH,MAAM,IAAIA,MAAO6L,GAAW,GAAIhD,SAAUA,EACpG5Q,UAAU,gBACN,4BAAQ+H,MAAM,OAAd,UACA,4BAAQA,MAAM,MAAd,WACA,4BAAQA,MAAM,MAAd,WACA,4BAAQA,MAAM,MAAd,WACA,4BAAQA,MAAM,MAAd,YAGJ,2BAAO4B,QAAQ,cAAc3J,UAAU,QAAvC,eACA,8BAAUU,GAAG,cAAc+H,SAAU,SAACtJ,GAAD,OAAKsJ,GAAStJ,EAAE+I,OAAOH,MAAM,IAAIA,MAAO6L,GAAW,GACxFhD,SAAUA,EAAU5Q,UAAU,kBAIlC,kBAAC,GAAD,CAAY2W,aAAcA,EAAcR,qBArSrC,GAsSHvF,SAAUA,EAAUgD,WAAYA,GAAYb,iBAAkBA,GAC9DpG,gBAAiBA,EAAiBW,UAAWA,EAAWiJ,eAAe,MACvEnB,kBAAmBA,GAAmBwB,gBAAiB,8BAGvD,wBAAI5W,UAAU,+BACT,UAAUoE,EAAmBoR,OAElC,wBAAIxV,UAAU,0BACV,0BAAMA,UAAU,yBAAyB,qBAAqBoE,EAAmBsW,QAEpFc,EAGD,kBAAC,GAAD,CAAczB,sBAAuByD,EAA+B5J,WAAYA,GAC5Eb,iBAAkBA,GAAkBnC,SAAUA,EAC9C8J,yBAA0BA,GAA0BlF,eAAgBA,GACpEuF,kBAAmB4C,EAA+B3C,kBAAmB4C,EACrE9C,qBAlTD,mBAkT6Ce,qBAjT7C,sBAkTCZ,2BAA4BA,EAC5BJ,kBAAmB,4CAI3B,kBAAC,EAAD,CAAYlJ,MAAOA,EAAOgC,SAAUA,EAAUE,SAAUA,EAAUC,SAAUA,EAC5ElC,eAAgBA,EAAgBtP,KAAI,UAAKA,GAAL,kBAMhD,kBAAC,IAAD,CAAUrC,GAAIsd,GAAuBjb,WAMjDib,GAAuBlb,YAAY,uBACnCkb,GAAuBjb,KAAK,0BAEbib,U,oBC5Yf,SAASS,GAAqBvf,GAC1B,OACQ,kBAAC,EAAD,KACI,kBAAC,EAAD,CAASwI,eAAe,cAAc/F,KAAK,QAC3C3B,OAAQ,SAACwK,GACL,OACA,kBAAC,EAAD,eAAe1H,YAAa2b,GAAqB3b,YAAawH,SAAU,cAAkBE,QAS9GiU,GAAqB3b,YAAY,yBACjC2b,GAAqB1b,KAAK,wBAEX0b,UClBf,SAASC,GAAgBxf,GACrB,OACQ,kBAAC,EAAD,KACI,kBAAC,EAAD,CAASwI,eAAe,wBAAwB/F,KAAK,mBACrD3B,OAAQ,SAACwK,GACL,OACA,kBAAC,EAAD,eAAe1H,YAAa4b,GAAgB5b,YAAawH,SAAU,oBAAwBE,QAS/GkU,GAAgB5b,YAAY,mBAC5B4b,GAAgB3b,KAAK,mBAEN2b,UCyGAC,OAxHf,SAAsBzf,GAClB,IAAMmI,EAAQC,cA4Ed,OACI,yBAAK7G,UAAU,wBACX,4BAAQY,KAAK,QAAQZ,UAAU,sCAC3Ba,QAAS,WACL+G,SAAS+C,cAAc,uBAAuBxC,aAC9C,UAAU,yCACViC,EAAY,eACZxD,EAAQI,KAAKvI,EAAMmM,YAL3B,QAOA,wBAAI5K,UAAU,oBACTvB,EAAM4D,YAAY,SAAUoC,EAAiBhG,EAAMoM,YAAN,WAC7C,OAAQpG,EAAiBhG,EAAMoM,YAAN,UAE9B,wBAAI7K,UAAU,uBACd,2BAAOA,UAAU,0BACb,+BACI,wBAAIA,UAAU,+BACV,wBAAIA,UAAU,aAAd,aACA,wBAAIA,UAAU,YAAYme,QAAS,GAAnC,eACA,wBAAIne,UAAU,aAAd,WACA,wBAAIA,UAAU,aAAd,gBAEHvB,EAAM0M,YACN,4BACG,wBAAInL,UAAU,aAAd,WACA,wBAAIA,UAAU,aAAd,QACA,wBAAIA,UAAU,aAAd,QACA,wBAAIA,UAAU,aAAd,MACA,wBAAIA,UAAU,aAAd,OACA,wBAAIA,UAAU,aAAd,YACG,KACP,4BACI,wBAAIA,UAAU,iCAAiCme,QAAS,MA1G5E,WACI,IAAMC,EAAmB3f,EAAM2f,mBACzBC,EAAoB5f,EAAM4f,oBAC1B1b,EAAKlE,EAAMkE,KAEX4E,GADW9I,EAAM+M,WACX/M,EAAM8I,OACZwH,EAASxH,EAAM,GAAGjG,KAClBe,EAAYkF,EAAM,GAAGjG,KACrBwF,EAAOS,EAAM,GAAGjG,KAChBgd,EAAQ/W,EAAM,GAAGjG,KACjBV,EAAK2G,EAAM,GAAGjG,KACdid,EAAGhX,EAAM,GAAGjG,KACZkd,EAAIjX,EAAM,GAAGjG,KACbmd,EAAMJ,EAAoB,GAAG/c,KAE7Bod,EAAmB,GACnBrZ,EAAO,GACTsZ,EAAO,EAmDX,OAjDAhc,EAAKgF,SAAQ,SAAAzG,IACwC,IAA9Cwd,EAAmB/V,QAAQzH,EAAK6N,MAC/B2P,EAAmB1X,KAAK9F,EAAK6N,IAC7B4P,EAAOP,EAAmB5H,MAAK,SAAApK,GAAK,OAChCA,EAAM2C,KAAY7N,EAAK6N,MACzB0P,GACFpZ,EAAO2B,KACN,2BAAO7F,IAAKD,EAAK6N,GAAW/O,UAAU,kCACnC,wBAAIA,UAAU,+BACV,wBAAIA,UAAU,aAAakB,EAAK6N,IAChC,wBAAI/O,UAAU,aAAakB,EAAKmB,IAChC,6BACA,6BACA,wBAAIrC,UAAU,aACToE,EAAmBga,EAAmB5H,MAAK,SAAApK,GAAK,OAC7CA,EAAM2C,KAAY7N,EAAK6N,MACrB0P,KAGV,wBAAIze,UAAU,aACToE,EACGga,EAAmB5H,MAAK,SAAApK,GAAK,OACzBA,EAAM2C,KAAY7N,EAAK6N,MACzB0P,GAAO9b,EAAKsJ,QAAO,SAACjI,EAAEC,GACpB,OAAGA,EAAE8K,KAAY7N,EAAK6N,GACX/K,EAAEC,EAAEsa,GAAIta,EAAEua,GACTxa,IACd,MAIbvF,EAAM0M,YAAa1M,EAAM+M,WAAWvK,KAAI,SAAAmL,GACrC,GAAIA,EAAM2C,KAAY7N,EAAK6N,GACvB,OACA,wBAAI5N,IAAKiL,EAAMtF,IACX,wBAAI9G,UAAU,aAAaoM,EAAMtF,IACjC,wBAAI9G,UAAU,aAAayE,EAAiB2H,EAAMkS,KAClD,wBAAIte,UAAU,aAAaoM,EAAMxL,IACjC,wBAAIZ,UAAU,aAAaoM,EAAMmS,IACjC,wBAAIve,UAAU,aAAaoM,EAAMoS,IACjC,wBAAIxe,UAAU,aAAa2e,GAAQvS,EAAMmS,GAAInS,EAAMoS,QAG5D,WAMRnZ,EAyCEkH,IAEL,wBAAIvM,UAAU,uBACd,2BAAOA,UAAU,uBAAjB,mBCzGZ,SAAS4e,GAAgBngB,GAAQ,IAAD,MAC0B8D,EAAS,CAC3DS,IAAI,eACJE,KAAK,CACDoC,OAAO,OACPC,QAAQ,CAAC,eAAe,oBACxBC,KAAKC,KAAKC,UAAU,CAACxE,KAAK,UAC1ByE,YAAY,aAPQ,sBACfgH,EADe,EACpBhK,KAA2BiK,EADP,EACC/J,MADD,EAUuDN,EAAS,MAVhE,0BAUfsc,EAVe,EAUpBlc,KAA+Bmc,EAVX,EAUKjc,MAA4Bkc,EAVjC,OAWQrgB,mBAAS,MAXjB,mBAWrB4O,EAXqB,KAWXC,EAXW,OAYI7O,mBAAS,IAZb,mBAYrBsgB,EAZqB,KAYbC,EAZa,OAaQvgB,oBAAS,IAAIiG,MAAOK,cAAc,UAb1C,mBAarBgG,EAbqB,KAaX4C,EAbW,OAcIlP,mBAASmP,GAAiB,IAAIlJ,OAdlC,mBAcrBuG,EAdqB,KAcb4C,EAda,OAeUpP,mBAAS,MAfnB,mBAerBmM,EAfqB,KAeTkD,EAfS,OAgB4BrP,mBAAS,IAhBrC,mBAgBrBsP,EAhBqB,KAgBAC,EAhBA,OAmBUvP,oBAAS,GAnBnB,mBAmBrByM,GAnBqB,KAmBT+C,GAnBS,QAoBoBxP,mBAAS,MApB7B,qBAoBrByP,GApBqB,MAoBJC,GApBI,SAqBgC1P,mBAAS,MArBzC,qBAqBrB2P,GArBqB,MAqBEC,GArBF,SAsBY5P,mBAAS,IAtBrB,qBAsBrB6P,GAtBqB,MAsBRC,GAtBQ,SAuBwB9P,mBAAS,IAvBjC,qBAuBrB+P,GAvBqB,MAuBFC,GAvBE,SAwB8BhQ,oBAAS,GAxBvC,qBAwBrBiQ,GAxBqB,MAwBCC,GAxBD,MA0BrBtM,GAAQuM,cAARvM,KACA1C,GAAcC,qBAAWL,GAAzBI,WACDgH,GAAQC,cAERmK,GAAgB,IAkHtB,SAASnD,GAAiBnJ,GACtB,IAAIoK,EAAS,IAAInK,KAAKD,GAEtB,OAAQoK,EAAS9J,eAAkB8J,EAAShK,WAAa,EAAG,GAAI,MAAOgK,EAAShK,WAAW,GAAG,KAAMgK,EAAShK,WAAW,KAAOgK,EAAS/J,UAAU,GAClJ,KAAK+J,EAAS/J,UAAY,IAAI+J,EAAS/J,WApH3ChG,qBAAU,WAEF4N,IAA0C,IAAvBA,EAAgBzF,MAC/BC,MAAM,iEACNvH,IAAW,IAEV+M,GAAmBA,EAAgBhK,MAAQgK,EAAgBpF,OAChEgG,EAAgBZ,EAAgBhK,KAAK1B,KAAI,SAAA0B,GAAI,OAC7C,4BAAQxB,IAAKwB,EAAKgK,EAAgBpF,MAAM,GAAGjG,MAAOyG,MAAOpF,EAAKgK,EAAgBpF,MAAM,GAAGjG,OAClFqB,EAAKgK,EAAgBpF,MAAM,GAAGjG,MAAM,KAAKqB,EAAKgK,EAAgBpF,MAAM,GAAGjG,MAAMqB,EAAKgK,EAAgBpF,MAAM,GAAGjG,MAAM,WAI5H,CAACqL,EAAgBC,IAEnB7N,qBAAU,WACN,GAAI8f,IAAkD,IAA3BA,EAAoB3X,KACvCC,MAAM,iEACNvH,IAAW,QAEd,GAAIif,GAAuBA,EAAoBlc,MAAQkc,EAAoBtX,MAAO,CACnF,IAAMmX,EAAmB,GACnB/b,EAAKkc,EAAoBlc,KAAK,GAC9B4E,EAAMsX,EAAoBtX,MAAM,GAChCwH,EAASxH,EAAM,GAAGjG,KAClBe,EAAYkF,EAAM,GAAGjG,KACrBwF,EAAOS,EAAM,GAAGjG,KAChBgd,EAAQ/W,EAAM,GAAGjG,KACjBV,EAAK2G,EAAM,GAAGjG,KACdid,EAAGhX,EAAM,GAAGjG,KACZkd,EAAIjX,EAAM,GAAGjG,KAEnByM,GAAkB,SAAAlD,OAElBlI,EAAKgF,SAAQ,SAAAzG,GACT,IAAIgO,EAAU,IACkC,IAA9CwP,EAAmB/V,QAAQzH,EAAK6N,MAClC2P,EAAmB1X,KAAK9F,EAAK6N,IACzBG,EAAUhO,EAAK6N,IAAWpM,EAAKwM,QAAO,SAAA/C,GAAK,OAAEA,EAAM2C,KAAY7N,EAAK6N,MACpEhB,GAAkB,SAAAlD,GAAW,OAAGzD,OAAOC,OAAO,GAAGwD,EAAYqE,UAIrEnB,GAAkB,SAAAlD,GAAW,sBAAOA,EAAP,CACzBlI,KAAKkc,EAAoBlc,KACzByM,YAAY,YAAIyP,EAAoBlc,MACpC4E,MAAMsX,EAAoBtX,MAC1ByD,YACAE,UACA8T,eAGJ5Q,GACK,oCACG,4BAAQrG,MAAOgH,GAAf,aACA,4BAAQhH,MAAO1F,GAAf,iBAGRiM,GACK,oCACG,4BAAQvG,MAAOjB,GAAf,WACA,4BAAQiB,MAAOuW,GAAf,YACA,4BAAQvW,MAAOnH,GAAf,QACA,4BAAQmH,MAAOwW,GAAf,MACA,4BAAQxW,MAAOyW,GAAf,SAIPvQ,EAA2ByQ,EAAmBzd,KAAI,SAAAC,GAAI,OAAEA,EAAKE,QAAQ,aAAa,WAGzF,CAACyd,EAAoBC,IAGvB/f,qBAAU,WACFiP,GACAA,EAAqBrG,SAAQ,SAAA0H,GACzBC,IAAE,IAAID,GAAIE,GAAG,oBAAmB,SAAApQ,GACzBA,EAAE+I,SAAS/I,EAAEqQ,eAChBF,IAAE,aAAaD,GAAII,YAAY,kBAAkBC,SAAS,sBAE9DJ,IAAE,IAAID,GAAIE,GAAG,oBAAmB,SAAApQ,GACzBA,EAAE+I,SAAS/I,EAAEqQ,eAChBF,IAAE,aAAaD,GAAII,YAAY,mBAAmBC,SAAS,0BAIzE,CAAC7E,IAEH9L,qBAAU,WACN,SAAS4Q,IACL/H,SAAS+C,cAAc,uBAAuBxC,aAC1C,UAAU,yCAIlB,OAFAxJ,OAAOiR,iBAAiB,WAAWD,GAE5B,WACChR,OAAOkR,oBAAoB,WAAWF,MAEhD,IAEF5Q,qBAAU,WACN,SAAS+Q,IACL1F,EAAY,eAIhB,OAFAzL,OAAOiR,iBAAiB,WAAWE,GAE5B,WACCnR,OAAOkR,oBAAoB,WAAWC,MAEhD,IAkRF,IAAIC,GAAa,KAkBjB,OAhBKpD,GAAmBA,EAAgB9J,OAAU+J,GACjDiS,GAAuBA,EAAoBhc,OAAUic,KACtD/O,GACI,yBAAK/P,UAAU,uBACV2M,GAAmBA,EAAgB9J,MAAO,+CAA+C8J,EAAgB9J,MAAM2E,MAC/G,UAAUmF,EAAgB9J,MAAM4E,KAAK,aAAakF,EAAgB9J,MAAM6E,WAAW,KACnFkF,EAAkB,wCAAwCA,EAAmB,KAC9E,6BACA,6BACCiS,GAAuBA,EAAoBhc,MAAO,+CAA+Cgc,EAAoBhc,MAAM2E,MAC3H,UAAUqX,EAAoBhc,MAAM4E,KAAK,aAAaoX,EAAoBhc,MAAM6E,WAAW,KAC3FoX,EAAsB,wCAAwCA,EAAuB,OAM1F,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAO9O,OAAK,EAAC1N,KAAI,UAAKA,GAAL,aACZuI,EACA,kBAAC,GAAD,CACGD,SAAUgU,GAAgBtc,KAC1BD,YAAauc,GAAgBvc,YAC7BwI,YAAaA,EACbM,YAAaA,GACbxI,KAAMgB,EAASkH,EAAW,YAAgB,GAAG0D,GAAa,OAC1D/C,WAAY7H,EAASkH,EAAW,YAAgB,GAAG4D,GAAmB,OACtElH,MAAOsD,EAAW,MAAU,GAC5BuT,mBAAoBvT,EAAW,YAAgB,GAC/CwT,oBAAqBQ,EAAoBtX,MAAM,GAC/CsG,iBAAkBA,KAGlB,kBAAC,IAAD,CAAU5N,GAAI2e,GAAgBtc,QAGtC,kBAAC,IAAD,CAAO0N,OAAK,EAAC1N,KAAMA,IACf,kBAAC,EAAD,KACI,yBAAKtC,UAAU,iBAAiBI,MAAO,CAAC6P,YAAY,GAAGC,aAAa,KAChE,4BAAK0O,GAAgBvc,aACrB,0BAAMrC,UAAU,OAAOmQ,SAAU,SAAAhR,GACjCA,EAAEiR,iBACFxB,IAA4B,GAC5BmQ,EAAqB,CACjB/b,IAAI,eACJE,KAAK,CACDoC,OAAO,OACPC,QAAQ,CAAC,eAAe,oBACxBC,KAAKC,KAAKC,UAAU,CAChBxE,KAAK,aACLuB,MAAM,CAACuI,EAAUE,EAAQ8T,KAE7BrZ,YAAY,eAKhB,yBAAK3F,UAAU,4BACX,2BAAOA,UAAU,0BAA0BI,MAAO,CAAC6P,YAAY,GAAItG,QAAQ,aAA3E,cACA,8BAAO/I,KAAK,OAAOF,GAAG,YAAY2P,UAAQ,EAAC5H,SAAU,SAACtJ,GAC9C,IAAIwF,KAAKxF,EAAE+I,OAAOH,OAAO,IAAIpD,KAAKuG,IAClC/D,MAAM,4BACNyG,GAAgB,IAAIjJ,MAAOK,cAAc,WAExC4I,EAAgBzO,EAAE+I,OAAOH,QAE9BA,MAAOiD,GAPX,uDAOyC,sCAPzC,IAQA,2BAAOhL,UAAU,sCAAsCI,MAAO,CAAC6P,YAAY,GAAItG,QAAQ,WAAvF,YACA,8BAAO/I,KAAK,OAAOF,GAAG,UAAU2P,UAAQ,EAAC5H,SAAU,SAACtJ,GAC5C,IAAIwF,KAAKxF,EAAE+I,OAAOH,OAAO,IAAIpD,KAAKqG,IAClC7D,MAAM,0BACN2G,EAAcD,GAAiB,IAAIlJ,QAElCmJ,EAAc3O,EAAE+I,OAAOH,QAC7BA,MAAOmD,GANV,uDAMsC,sCANtC,KASJ,yBAAKlL,UAAU,4BACX,2BAAOA,UAAU,0BAA0BI,MAAO,CAAC6P,YAAY,GAAItG,QAAQ,WAA3E,YACA,4BAAQ3J,UAAU,wBAAwBqQ,UAAQ,EAACC,KAAK,IAAI5P,GAAG,UAC/DqH,MAAOiX,EAASzO,UAAU,EAAM9H,SAAU,SAAAtJ,GACtC,IAAIkG,EAAO,GACXmL,MAAMC,KAAKtR,EAAE+I,OAAOwI,SAASzP,KAAI,SAAA0P,IACP,IAAlBA,EAAOrJ,UACPjC,EAAO2B,KAAK2J,EAAO5I,UAE3BkX,EAAc5Z,KAEbiI,IAIT,yBAAKtN,UAAU,4BACX,yBAAKA,UAAU,0BACX,2BAAOY,KAAK,WAAWZ,UAAU,oBAAoBU,GAAG,aAAa+H,SAAU,SAAAtJ,GACvEA,EAAE+I,OAAOJ,QACTmX,EAActS,EAAgBhK,KAAK1B,KAAI,SAAA0B,GAAI,OACvCA,EAAKgK,EAAgBpF,MAAM,GAAGjG,UAEjC2d,EAAc,OAEvB,2BAAOtV,QAAQ,aAAavJ,MAAO,CAAC6P,YAAY,GAAIjQ,UAAU,oBAA9D,kBAMR,8BAAUA,UAAU,iEAChB,4BAAQA,UAAU,kEACd,gDAEJ,yBAAKA,UAAU,YACf,yBAAKA,UAAU,iDAAiDI,MAAO,CAAC6P,YAAY,KAChF,2BAAOrP,KAAK,WAAWZ,UAAU,mBAAmBU,GAAG,cAAc+H,SAAU,SAAAtJ,GACvEA,EAAE+I,OAAOJ,QACToG,IAAkB,GACjBA,IAAkB,IACpBpG,QAASqD,KAChB,2BAAOxB,QAAQ,cAAc3J,UAAU,oBAAvC,iBAGJ,yBAAKA,UAAU,gCACX,2BAAOA,UAAU,0BAA0BI,MAAO,CAAC6P,YAAY,GAAItG,QAAQ,QAA3E,QAGA,4BAAQjJ,GAAG,OAAOV,UAAU,wBAAwB+H,MAAOwG,GAAc9F,SAAU,SAAAtJ,GAAC,OAChFqP,GAAmBrP,EAAE+I,OAAOH,SAE5B,4BAAQA,MAAM,IAAd,wBACCoG,KAIT,yBAAKnO,UAAU,gCACX,2BAAOA,UAAU,0BAA0BI,MAAO,CAAC6P,YAAY,GAAItG,QAAQ,QAA3E,eAGA,4BAAQjJ,GAAG,OAAOV,UAAU,wBAAwB+H,MAAO0G,GAAoBhG,SAAU,SAAAtJ,GAAC,OACtFuP,GAAyBvP,EAAE+I,OAAOH,SAElC,4BAAQA,MAAM,IAAd,wBACCsG,OAOb,4BAAQzN,KAAK,SAASZ,UAAU,wBAAhC,YACA,4BAAQY,KAAK,SAASZ,UAAU,kBAAkBa,QAAS,SAAA1B,GAAC,OACxD4O,EAAkB,QADtB,SAEA,4BAAQnN,KAAK,SAASC,QAAS,SAAC1B,GACvB0L,GAIDjD,SAAS+C,cAAc,uBAAuBxC,aAC9C,UAAU,yCACViC,EAAY,gBACZxD,GAAQI,KAAK,8BANb4H,IAA4B,IASpC5O,UAAU,0BAXV,WAYC2O,GACA,yBAAK3O,UAAU,uBAAf,iCAEO,MAGZ,6BACC+P,GAEAlF,EACA,yBAAK7K,UAAU,QACZ,wBAAIA,UAAU,QAAd,SAEI,4BAAQA,UAAU,oBACda,QAAS,SAAC1B,GAAD,OAAK6O,EAAqBrG,SAAQ,SAAA0H,GAAE,OACzCC,IAAE,IAAID,GAAIwB,SAAS,aACxB,uBAAG7Q,UAAU,sBAHhB,WAIA,4BAAQA,UAAU,gBACda,QAAS,SAAC1B,GAAD,OAAK6O,EAAqBrG,SAAQ,SAAA0H,GAAE,OACzCC,IAAE,IAAID,GAAIwB,SAAS,aAF3B,IAGI,uBAAG7Q,UAAU,uBAHjB,cAjb5B,WACI,IAAMoe,EAAmBvT,EAAW,KAAS,GACvCwT,EAAoBxT,EAAW,MAAU,GACzClI,EAAKkI,EAAW,KAAS,GACzBtD,EAAMsD,EAAW,MAAU,GAC3BkE,EAASxH,EAAM,GAAGjG,KAClBe,EAAYkF,EAAM,GAAGjG,KACrBwF,EAAOS,EAAM,GAAGjG,KAChBgd,EAAQ/W,EAAM,GAAGjG,KACjBV,EAAK2G,EAAM,GAAGjG,KACdid,EAAGhX,EAAM,GAAGjG,KACZkd,EAAIjX,EAAM,GAAGjG,KACbmd,EAAMJ,EAAoB,GAAG/c,KAwLnC,OACI,yBAAKtB,UAAU,0BAA0BI,MAAO,CAAC6Q,UAAU,oBACvD,yBAAK7Q,MAAO,CAACgX,SAASpG,GAAgBC,UAAU,oBAC5C,yBAAKjR,UAAU,oDACfI,MAAO,CAAC8Q,WAAW,EAAEC,YAAY,IAC7B,wBAAI/Q,MAAO,CAAC2Q,KAAK,WAAWd,YAAY,GAAGC,aAAa,MACxD,wBAAI9P,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,GAAGlI,OAAO,WAC/DC,aAAW,MAAMpH,QAAS,SAAC1B,GAC3BA,EAAE+I,OAAOC,aAAa,aACgB,QAAtChJ,EAAE+I,OAAOE,aAAa,cAAsB,OAAO,OACnDyC,EAAW,KAAS,GAAGlH,EAASkH,EAAW,KAAS,GAAGkE,EAAS5P,EAAE+I,OAAOE,aAAa,eACtF2F,EAAkB,eAAIlD,IACwB,QAAtC1L,EAAE+I,OAAOE,aAAa,eACtBR,SAASC,eAAe,WAAWQ,UAAUC,OAAO,eACpDV,SAASC,eAAe,WAAWQ,UAAUE,IAAI,mBAGjDX,SAASC,eAAe,WAAWQ,UAAUC,OAAO,iBACpDV,SAASC,eAAe,WAAWQ,UAAUE,IAAI,kBAZ7D,YAkBI,uBAAG7H,GAAG,UAAUV,UAAU,2BAE9B,wBAAII,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,GAAGlI,OAAO,WACnEC,aAAW,MAAMpH,QAAS,SAAC1B,GACvBA,EAAE+I,OAAOC,aAAa,aACgB,QAAtChJ,EAAE+I,OAAOE,aAAa,cAAsB,OAAO,OACnDyC,EAAW,KAAS,GAAGlH,EAASkH,EAAW,KAAS,GAAGxI,EAAYlD,EAAE+I,OAAOE,aAAa,eACzF2F,EAAkB,eAAIlD,IACwB,QAAtC1L,EAAE+I,OAAOE,aAAa,eACtBR,SAASC,eAAe,eAAeQ,UAAUC,OAAO,eACxDV,SAASC,eAAe,eAAeQ,UAAUE,IAAI,mBAGrDX,SAASC,eAAe,eAAeQ,UAAUC,OAAO,iBACxDV,SAASC,eAAe,eAAeQ,UAAUE,IAAI,kBAZjE,cAiBI,uBAAG7H,GAAG,cAAcV,UAAU,2BAElC,wBAAII,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,KAAzD,WACA,wBAAI9P,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,KAAzD,gBAEJ,yBAAK9P,MAAO,CAACgR,UAAU,OAAOC,UAAU,SAASrI,UAAU,SApOvE,WACI,IAAM0V,EAAmB,GACnBrZ,EAAO,GACTsZ,EAAO,EA8KX,OA5KAhc,EAAKgF,SAAQ,SAAAzG,IACwC,IAA9Cwd,EAAmB/V,QAAQzH,EAAK6N,MAC/B2P,EAAmB1X,KAAK9F,EAAK6N,IAC7B4P,EAAOP,EAAmB5H,MAAK,SAAApK,GAAK,OAChCA,EAAM2C,KAAY7N,EAAK6N,MACzB0P,GACFpZ,EAAO2B,KACH,yBAAK7F,IAAKD,EAAK6N,IACX,yBAAK/O,UAAU,SAASI,MAAO,CAAC4H,OAAO,WAAYxH,cAAY,WAAWC,cAAa,IAAIS,EAAK6N,GAAU3N,QAAQ,aAAa,KAC3H,uBAAGpB,UAAU,yBAAyBI,MAAO,CAAC2Q,KAAK,WAAWd,YAAY,GAAGC,aAAa,IAC1FxP,GAAI,YAAYQ,EAAK6N,GAAU3N,QAAQ,aAAa,MACpD,uBAAGpB,UAAU,OAAOI,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,KAAMhP,EAAK6N,IACpF,uBAAG/O,UAAU,OAAOI,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,KAAMhP,EAAKmB,IACpF,uBAAGrC,UAAU,OAAOI,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,KACpE9L,EAAmBga,EAAmB5H,MAAK,SAAApK,GAAK,OAC7CA,EAAM2C,KAAY7N,EAAK6N,MACrB0P,KAGV,uBAAGze,UAAU,OAAOI,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,KACpE9L,EACGga,EAAmB5H,MAAK,SAAApK,GAAK,OACzBA,EAAM2C,KAAY7N,EAAK6N,MACzB0P,GAAO9b,EAAKsJ,QAAO,SAACjI,EAAEC,GACpB,OAAGA,EAAE8K,KAAY7N,EAAK6N,GACZ/K,EAAEC,EAAEsa,GAAIta,EAAEua,GACRxa,IACd,MAId,yBAAKhE,UAAU,6CACfU,GAAIQ,EAAK6N,GAAU3N,QAAQ,aAAa,KACpC,2BAAOpB,UAAU,qBACb,+BACI,4BACI,wBAAIA,UAAU,cAAcI,MAAO,CAAC4H,OAAO,WAAYC,aAAW,MAClEpH,QAAS,SAAC1B,GACV,IAAMuB,EAAG,SAASQ,EAAK6N,GAAU3N,QAAQ,aAAa,IACtDjC,EAAE+I,OAAOC,aAAa,aACgB,QAAtChJ,EAAE+I,OAAOE,aAAa,cAAsB,OAAO,OAEnD,IAAIkJ,EAAW,GACfA,EAAWpQ,EAAK6N,IAAWpL,EAASkH,EAAY3J,EAAK6N,IAAWjI,EAAO3H,EAAE+I,OAAOE,aAAa,eAC7F2F,EAAkB3G,OAAOC,OAAO,GAAGwD,EAAYyG,IAEL,QAAtCnS,EAAE+I,OAAOE,aAAa,eACtBR,SAASC,eAAenH,GAAI2H,UAAUC,OAAO,eAC7CV,SAASC,eAAenH,GAAI2H,UAAUE,IAAI,mBAG1CX,SAASC,eAAenH,GAAI2H,UAAUC,OAAO,iBAC7CV,SAASC,eAAenH,GAAI2H,UAAUE,IAAI,kBAhB9C,UAoBI,uBAAG7H,GAAI,SAASQ,EAAK6N,GAAU3N,QAAQ,aAAa,IAAKpB,UAAU,2BAEvE,wBAAIA,UAAU,cAAcI,MAAO,CAAC4H,OAAO,WAAYC,aAAW,MAClEpH,QAAS,SAAC1B,GACN,IAAMuB,EAAG,OAAOQ,EAAK6N,GAAU3N,QAAQ,aAAa,IACpDjC,EAAE+I,OAAOC,aAAa,aACgB,QAAtChJ,EAAE+I,OAAOE,aAAa,cAAsB,OAAO,OAEnD,IAAIkJ,EAAW,GACfA,EAAWpQ,EAAK6N,IAAWpL,EAASkH,EAAY3J,EAAK6N,IAAWuP,EAAQnf,EAAE+I,OAAOE,aAAa,eAC9F2F,EAAkB3G,OAAOC,OAAO,GAAGwD,EAAYyG,IAEL,QAAtCnS,EAAE+I,OAAOE,aAAa,eACtBR,SAASC,eAAenH,GAAI2H,UAAUC,OAAO,eAC7CV,SAASC,eAAenH,GAAI2H,UAAUE,IAAI,mBAG1CX,SAASC,eAAenH,GAAI2H,UAAUC,OAAO,iBAC7CV,SAASC,eAAenH,GAAI2H,UAAUE,IAAI,kBAhBlD,OAoBI,uBAAG7H,GAAI,OAAOQ,EAAK6N,GAAU3N,QAAQ,aAAa,IAAKpB,UAAU,2BAErE,wBAAIA,UAAU,cAAcI,MAAO,CAAC4H,OAAO,WAAYC,aAAW,MAClEpH,QAAS,SAAC1B,GACN,IAAMuB,EAAG,OAAOQ,EAAK6N,GAAU3N,QAAQ,aAAa,IACpDjC,EAAE+I,OAAOC,aAAa,aACgB,QAAtChJ,EAAE+I,OAAOE,aAAa,cAAsB,OAAO,OAEnD,IAAIkJ,EAAW,GACfA,EAAWpQ,EAAK6N,IAAWpL,EAASkH,EAAY3J,EAAK6N,IAAWnO,EAAKzB,EAAE+I,OAAOE,aAAa,eAC3F2F,EAAkB3G,OAAOC,OAAO,GAAGwD,EAAYyG,IAEL,QAAtCnS,EAAE+I,OAAOE,aAAa,eACtBR,SAASC,eAAenH,GAAI2H,UAAUC,OAAO,eAC7CV,SAASC,eAAenH,GAAI2H,UAAUE,IAAI,mBAG1CX,SAASC,eAAenH,GAAI2H,UAAUC,OAAO,iBAC7CV,SAASC,eAAenH,GAAI2H,UAAUE,IAAI,kBAhBlD,OAoBI,uBAAG7H,GAAI,OAAOQ,EAAK6N,GAAU3N,QAAQ,aAAa,IAAKpB,UAAU,2BAErE,wBAAIA,UAAU,cAAcI,MAAO,CAAC4H,OAAO,WAAYC,aAAW,MAClEpH,QAAS,SAAC1B,GACN,IAAMuB,EAAG,KAAKQ,EAAK6N,GAAU3N,QAAQ,aAAa,IAClDjC,EAAE+I,OAAOC,aAAa,aACgB,QAAtChJ,EAAE+I,OAAOE,aAAa,cAAsB,OAAO,OAEnD,IAAIkJ,EAAW,GACfA,EAAWpQ,EAAK6N,IAAWpL,EAASkH,EAAY3J,EAAK6N,IAAWwP,EAAGpf,EAAE+I,OAAOE,aAAa,eACzF2F,EAAkB3G,OAAOC,OAAO,GAAGwD,EAAYyG,IAEL,QAAtCnS,EAAE+I,OAAOE,aAAa,eACtBR,SAASC,eAAenH,GAAI2H,UAAUC,OAAO,eAC7CV,SAASC,eAAenH,GAAI2H,UAAUE,IAAI,mBAG1CX,SAASC,eAAenH,GAAI2H,UAAUC,OAAO,iBAC7CV,SAASC,eAAenH,GAAI2H,UAAUE,IAAI,kBAhBlD,KAoBI,uBAAG7H,GAAI,KAAKQ,EAAK6N,GAAU3N,QAAQ,aAAa,IAAKpB,UAAU,2BAEnE,wBAAIA,UAAU,cAAcI,MAAO,CAAC4H,OAAO,WAAYC,aAAW,MAClEpH,QAAS,SAAC1B,GACN,IAAMuB,EAAG,MAAMQ,EAAK6N,GAAU3N,QAAQ,aAAa,IACnDjC,EAAE+I,OAAOC,aAAa,aACgB,QAAtChJ,EAAE+I,OAAOE,aAAa,cAAsB,OAAO,OAEnD,IAAIkJ,EAAW,GACfA,EAAWpQ,EAAK6N,IAAWpL,EAASkH,EAAY3J,EAAK6N,IAAWyP,EAAIrf,EAAE+I,OAAOE,aAAa,eAC1F2F,EAAkB3G,OAAOC,OAAO,GAAGwD,EAAYyG,IAEL,QAAtCnS,EAAE+I,OAAOE,aAAa,eACtBR,SAASC,eAAenH,GAAI2H,UAAUC,OAAO,eAC7CV,SAASC,eAAenH,GAAI2H,UAAUE,IAAI,mBAG1CX,SAASC,eAAenH,GAAI2H,UAAUC,OAAO,iBAC7CV,SAASC,eAAenH,GAAI2H,UAAUE,IAAI,kBAhBlD,MAoBI,uBAAG7H,GAAI,MAAMQ,EAAK6N,GAAU3N,QAAQ,aAAa,IAAKpB,UAAU,2BAEpE,wBAAIA,UAAU,eAAd,aAGR,+BACC6K,EAAY3J,EAAK6N,IAAW9N,KAAI,SAAAmL,GAC7B,GAAGA,EAAM2C,KAAY7N,EAAK6N,GACtB,OACI,wBAAI5N,IAAKiL,EAAMtF,GAAS1G,MAAO,CAAC4H,OAAO,WAAYnH,QAAS,SAAC1B,GAAD,OAC5DyH,GAAQI,KAAK,KA7LzD,SAAoByR,EAAO/X,GACvB,IAAIgY,EAAUD,EAAOE,MAAM,KAS3B,OAJAD,GAHAA,EAAUA,EAAUzX,KAAI,SAAAwX,GACpB,OAAOA,EAAOG,kBAEE3X,KAAI,SAAAwX,GACpB,OAAOA,EAAO,GAAG5F,cAAckD,OAAO0C,EAAOI,OAAO,QAGvCC,KAAK,IAAI,aAAaL,EAAOrX,QAAQ,KAAK,KAAK,OAAO2X,mBAAmBrY,GAmLhCsY,CAAW5M,EAAMxL,GAAMgY,cAAcxM,EAAMtF,OAEzD,wBAAI9G,UAAU,eAAeoM,EAAMtF,IACnC,wBAAI9G,UAAU,eAAeyE,EAAiB2H,EAAMkS,KACpD,wBAAIte,UAAU,eAAeoM,EAAMxL,IACnC,wBAAIZ,UAAU,eAAeoM,EAAMmS,IACnC,wBAAIve,UAAU,eAAeoM,EAAMoS,IACnC,wBAAIxe,UAAU,eAAe2e,GAAQvS,EAAMmS,GAAInS,EAAMoS,iBAWtFnZ,EAoDM6Z,MAiMI3S,IAEG,KAER,wBAAIvM,UAAU,YAI1B,kBAAC,IAAD,CAAUC,GAAI2e,GAAgBtc,QAI1Csc,GAAgBvc,YAAY,oBAC5Buc,GAAgBtc,KAAK,mBAENsc,UCvnBf,SAASO,GAAW1gB,GAEhB,IAAMuE,EAAI,CACN9B,KAAK,IAAIuW,gBAAgBhZ,EAAMiZ,SAAStR,QAAQuR,IAAI,QACpDjX,GAAG,IAAI+W,gBAAgBhZ,EAAMiZ,SAAStR,QAAQuR,IAAI,OAJ/B,EAOajZ,mBAAS,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,KAPlD,mBAOhBkV,EAPgB,KAOLb,EAPK,KASvB,SAAStK,EAASV,EAAMlE,GACpBkP,EAAiB,GAAD,mBAAKa,EAAWhL,MAAM,EAAE/E,IAAxB,CAA+BkE,GAA/B,YAAwC6L,EAAWhL,MAAM/E,EAAM,EAAE+P,EAAWlS,WAGhG,OACI,kBAAC,EAAD,CAAMkS,WAAYA,EAAYb,iBAAkBA,EAAkB/P,IAAKA,EAAK9B,KAAK,QAAQwS,YAAY,0BAEjG,gBAAE/B,EAAF,EAAEA,MAAMf,EAAR,EAAQA,SAASgB,EAAjB,EAAiBA,eAAe+B,EAAhC,EAAgCA,SAASE,EAAzC,EAAyCA,SAASC,EAAlD,EAAkDA,SAAS/D,EAA3D,EAA2DA,aAAagE,EAAxE,EAAwEA,kBAAxE,OACC,kBAAC,EAAD,KACG,yBAAK/T,UAAU,0BAIX,wBAAIA,UAAU,SAAiB,WAAR2R,EAAkB,SAAS,UAAY,IAAKwN,GAAU9c,aAC7E,2BAAOrC,UAAU,gBAAjB,cACC+P,EAKD,0BAAMI,SAAU,SAAChR,GAAKA,EAAEiR,iBAA6B,WAARuB,EAAkBgC,IAAiBE,MAC5E,yBAAK7T,UAAU,uBACX,2BAAOA,UAAU,0BAA0B2J,QAAQ,cAAnD,eAA6E,0BAAM3J,UAAU,gBAAhB,MAC5E+T,EAAkB,CACftL,SAASA,EACTwL,OAAO,WACPK,SAAS,EACTC,QAAQ,gBAIhB,yBAAKvU,UAAU,uBACX,2BAAOA,UAAU,0BAA0B2J,QAAQ,eAAnD,eAA6E,0BAAM3J,UAAU,gBAAhB,MAC7E,yBAAKA,UAAU,aACX,8BAAUU,GAAG,cAAc+H,SAAU,SAACtJ,GAAD,OACrCsJ,EAAStJ,EAAE+I,OAAOH,MAAM,IACxBA,MAAO6L,EAAW,GAAIhD,SAAUA,EAAUP,UAAQ,EAACrQ,UAAU,mBAGrE,yBAAKA,UAAU,OACX,8BAAUA,UAAU,iEAChB,4BAAQA,UAAU,6CAA4C,sCAE9D,2BAAO2J,QAAQ,eAAe3J,UAAU,UAAxC,kBACA,yBAAKA,UAAU,UACX,2BAAOY,KAAK,SAAS6T,IAAI,IAAI0C,KAAK,MAAMzW,GAAG,eAAe+H,SAAU,SAACtJ,GAAD,OACxEsJ,EAAStJ,EAAE+I,OAAOH,MAAM,IACxBA,MAAO6L,EAAW,GAAIhD,SAAUA,EAAU5Q,UAAU,kBAEpD,2BAAQ2J,QAAQ,WAAW3J,UAAU,UAArC,cACA,yBAAKA,UAAU,UACX,2BAAOY,KAAK,SAAS6T,IAAI,IAAI0C,KAAK,MAAMzW,GAAG,WAAW+H,SAAU,SAACtJ,GAAD,OACpEsJ,EAAStJ,EAAE+I,OAAOH,MAAM,IACxBA,MAAO6L,EAAW,GAAIhD,SAAUA,EAAU5Q,UAAU,kBAEpD,2BAAQ2J,QAAQ,WAAW3J,UAAU,UAArC,cACA,yBAAKA,UAAU,UACX,2BAAOY,KAAK,SAAS6T,IAAI,IAAI0C,KAAK,MAAMzW,GAAG,WAAW+H,SAAU,SAACtJ,GAAD,OAAKsJ,EAAStJ,EAAE+I,OAAOH,MAAM,IACjGA,MAAO6L,EAAW,GAAIhD,SAAUA,EAAU5Q,UAAU,kBAEpD,2BAAOA,UAAU,gBAAjB,0BAEJ,8BAAUA,UAAU,iEAChB,4BAAQA,UAAU,6CAA4C,qCAE9D,2BAAO2J,QAAQ,eAAe3J,UAAU,UAAxC,kBACA,yBAAKA,UAAU,UACX,2BAAOY,KAAK,SAAS6T,IAAI,IAAI0C,KAAK,MAAMzW,GAAG,eAAe+H,SAAU,SAACtJ,GAAD,OAAKsJ,EAAStJ,EAAE+I,OAAOH,MAAM,IACrGA,MAAO6L,EAAW,GAAIhD,SAAUA,EAAU5Q,UAAU,kBAEpD,2BAAOA,UAAU,gBAAjB,0BAEJ,8BAAUA,UAAU,iEAChB,4BAAQA,UAAU,6CAA4C,4CAE9D,2BAAO2J,QAAQ,SAAS3J,UAAU,UAAlC,iCACA,yBAAKA,UAAU,UACX,2BAAOY,KAAK,SAAS6T,IAAI,IAAI0C,KAAK,IAAIzW,GAAG,SAAS+H,SAAU,SAACtJ,GAAD,OAAKsJ,EAAStJ,EAAE+I,OAAOH,MAAM,IAC7FA,MAAO6L,EAAW,GAAIhD,SAAUA,EAAU5Q,UAAU,kBAEpD,2BAAO2J,QAAQ,SAAS3J,UAAU,UAAlC,iBACA,yBAAKA,UAAU,UACX,2BAAOY,KAAK,SAAS6T,IAAI,IAAI0C,KAAK,IAAIzW,GAAG,SAAS+H,SAAU,SAACtJ,GAAD,OAAKsJ,EAAStJ,EAAE+I,OAAOH,MAAM,IAC7FA,MAAO6L,EAAW,GAAIhD,SAAUA,EAAU5Q,UAAU,kBAEpD,2BAAO2J,QAAQ,aAAa3J,UAAU,UAAtC,sBACA,yBAAKA,UAAU,UACX,2BAAOY,KAAK,SAASF,GAAG,aAAa+H,SAAU,SAACtJ,GAAD,OAAKA,GACxD4I,MAAO6L,EAAW,GAAIhD,UAAQ,EAC9BP,UAAQ,EAACrQ,UAAU,oBAK3B,kBAAC,EAAD,CAAY2R,MAAOA,EAAOgC,SAAUA,EAAUE,SAAUA,EAAUC,SAAUA,EAAUlC,eAAgBA,UAY9HuN,GAAU9c,YAAY,aACtB8c,GAAU7c,KAAK,aAEA6c,UC/Gf,SAASC,GAAqB3gB,GAC1B,IAAMuE,EAAI,CACN9B,KAAK,IAAIuW,gBAAgBhZ,EAAMiZ,SAAStR,QAAQuR,IAAI,QACpDjX,GAAG,IAAI+W,gBAAgBhZ,EAAMiZ,SAAStR,QAAQuR,IAAI,OAHrB,EAMqBpV,EAAS,CAC3DS,IAAI,eACJE,KAAK,CACDoC,OAAO,OACPC,QAAQ,CAAC,eAAe,oBACxBC,KAAKC,KAAKC,UAAU,CAChBxE,KAAK,QACLuB,MAAMO,EAAItC,GAAG,CAACsC,EAAItC,IAAI,OAE1BiF,YAAY,aAfa,sBAMpBgH,EANoB,EAMzBhK,KAA2BiK,EANF,EAMJ/J,MAcvB8T,EAAa,EApBc,EAsBGjY,mBAAS,MAtBZ,mBAsB1B4O,EAtB0B,KAsBhBC,EAtBgB,OAuBG7O,mBAAS,CAAC,GAAG,GAAG,GAAG,GAAG,KAvBzB,mBAuB1BkV,EAvB0B,KAuBfb,EAvBe,KAyB1BnT,EAAcC,qBAAWL,GAAzBI,WAwBP,SAAS6I,EAASV,EAAMlE,GACpBkP,EAAiB,GAAD,mBAAKa,EAAWhL,MAAM,EAAE/E,IAAxB,CAA+BkE,GAA/B,YAAwC6L,EAAWhL,MAAM/E,EAAM,MAuBnF,SAASwb,EAA8BzO,GACnC,OACIgD,EAAW+C,GAAc1V,KAAI,SAACqe,EAAuB9W,GAAxB,aAC7B,yBAAKxI,UAAU,kBAAkBI,MAAO,CAAC8Q,WAAW,EAAEC,YAAY,GAAIhQ,IAAKqH,GAEvE,2BAAOmB,QAAQ,SAAS3J,UAAU,YAClC,2BAAOY,KAAK,SAASF,GAAG,SAASV,UAAU,yCAAyC+H,MAAO6L,EAAW+C,GAAcnO,GAAG,GACvHoL,EAAW+C,GAAcnO,GAAG,GAAG,GAC/BC,SAAU,SAACtJ,GAAD,OAAKA,GAAGiB,MAAO,CAAC2Q,KAAK,WAAWd,YAAY,GAAGC,aAAa,GAAIU,SAAUA,IAEpF,yBAAK5Q,UAAU,kBAAkBI,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,EAAEC,aAAa,IACjF,2BAAOvG,QAAQ,WAAW3J,UAAU,YACpC,2BAAOY,KAAK,OAAOF,GAAI,WAAW2P,UAAQ,EAACrQ,UAAU,yBAAyB4Q,SAAUA,EACxFxQ,MAAO,CAAC6P,YAAY,IACpBlI,MAAO6L,EAAW+C,GAAcnO,GAAG,GAAGoL,EAAW+C,GAAcnO,GAAG,GAAG,GAAIC,SAAU,SAACtJ,GAAD,OAAKA,KACxF,4BAAQa,UAAU,yBAAyBI,MAAO,CAAC2Q,KAAK,SAAUH,SAAUA,EAAUnI,SAAU,SAACtJ,GACzF,IAAI4X,EAAiB,GACjBd,EAAS9W,EAAE+I,OAAOH,MAEtB4E,EAAgBhK,KAAKgF,SAAQ,SAAAhF,GACtBA,EAAKgK,EAAgBpF,MAAM,GAAGjG,QAAQnC,EAAE+I,OAAOH,QAC9CgP,EAAiBpU,EAAKgK,EAAgBpF,MAAM,GAAGjG,MAC3CqB,EAAKgK,EAAgBpF,MAAM,GAAGjG,MAAM,OAIhDyR,GAAiB,SAAAa,GAAU,OAAEA,EAAWhL,MAAM,EAAE+N,GAC/CZ,OAAO,CAACnC,EAAW+C,GAAc/N,MAAM,EAAEJ,GACzCuN,OAAO,CAACnC,EAAW+C,GAAcnO,GAAGI,MAAM,EAAE,GAC5CmN,OAAOE,GAAUF,OAAOgB,GACxBhB,OAAOnC,EAAW+C,GAAcnO,GAAGI,MAAM,MACzCmN,OAAOnC,EAAW+C,GAAc/N,MAAMJ,EAAE,MACxCuN,OAAOnC,EAAWhL,MAAM+N,EAAa,SAI1C,4BAAQ5O,MAAM,IAAd,uBACCuF,IAGT,2BAAO3D,QAAQ,cAAc3J,UAAU,YACvC,2BAAOY,KAAK,OAAOF,GAAG,cAAc2P,UAAQ,EAACrQ,UAAU,6BAA6B+H,MAAO6L,EAAW+C,GAAcnO,GAAG,GACvHoL,EAAW+C,GAAcnO,GAAG,GAAG,GAC/BC,SAAU,SAACtJ,GAAD,OAAKA,GAAGyR,SAAUA,EAC5BxQ,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,KAErD,2BAAOvG,QAAQ,MAAM3J,UAAU,YAC/B,8BAAOY,KAAK,SAASyP,UAAQ,EAAE8G,KAAK,IAAI1C,IAAI,WAAWD,IAAI,UAAU9T,GAAG,OAAxE,uDAAiG,8BAAjG,sBACOkT,EAAW+C,GAAcnO,GAAG,IADnC,yBACiDoI,GADjD,sBAEO,CAACG,KAAK,WAAWd,YAAY,GAAGC,aAAa,IAFpD,0BAGU,SAAC/Q,GAAD,OAtEtB,SAA0CA,EAAE0E,EAAMgS,EAAWC,GACzD/C,EAAiBa,EAAWhL,MAAM,EAAE/E,GACnCkS,OAAO,CAACnC,EAAW/P,GAAO+E,MAAM,EAAEiN,GAClCE,OAAO,CAACnC,EAAW/P,GAAOgS,GAAYjN,MAAM,EAAEkN,GAC9CC,OAAO5W,GACP4W,OAAOnC,EAAW/P,GAAOgS,GAAYjN,MAAMkN,EAAW,MACtDC,OAAOnC,EAAW/P,GAAO+E,MAAMiN,EAAW,MAC1CE,OAAOnC,EAAWhL,MAAM/E,EAAM,KA+DR0b,CAAiCpgB,EAAE+I,OAAOH,MAAM4O,EAAanO,EAAE,MAH9E,QA7FZzJ,qBAAU,WAEN,GAAI4N,IAA0C,IAAvBA,EAAgBzF,KAC3BC,MAAM,iEACNvH,GAAW,QAElB,GAAI+M,GAAmBA,EAAgBhK,MAAQgK,EAAgBpF,MAAO,CACvE,IAAMwH,EAASpC,EAAgBpF,MAAM,GAAGjG,KAClC0N,EAAUrC,EAAgBpF,MAAM,GAAGjG,KACnCqU,EAAYhJ,EAAgBpF,MAAM,GAAGjG,KAE3CiM,EAAgBZ,EAAgBhK,KAAK1B,KAAI,SAAA0B,GAAI,OACzC,4BAAQxB,IAAKwB,EAAKoM,GAAWhH,MAAOpF,EAAKoM,IACpCpM,EAAKoM,GAAU,OACbpM,EAAKqM,GAAWrM,EAAKqM,GAAW,IAAI,iBACpCrM,EAAKgT,GAAahT,EAAKgT,GAAa,aAKrD,CAAChJ,EAAgBC,IAmFnB,IAAIkL,EAAsB,KAY1B,OATKnL,GAAmBA,EAAgB9J,OAAU+J,KAClDkL,EACI,yBAAK9X,UAAU,uBACV2M,GAAmBA,EAAgB9J,MAAO,+CAA+C8J,EAAgB9J,MAAM2E,MAC/G,UAAUmF,EAAgB9J,MAAM4E,KAAK,aAAakF,EAAgB9J,MAAM6E,WAAW,KACnFkF,EAAkB,wCAAwCA,EAAmB,OAKlF,kBAAC,EAAD,CAAMgH,WAAYA,EAAYb,iBAAkBA,EAAkB/P,IAAKA,EAAK9B,KAAK,mBAAmBwS,YAAY,qBAE5G,gBAAE/B,EAAF,EAAEA,MAAMf,EAAR,EAAQA,SAASgB,EAAjB,EAAiBA,eAAe+B,EAAhC,EAAgCA,SAASE,EAAzC,EAAyCA,SAASC,EAAlD,EAAkDA,SAAS/D,EAA3D,EAA2DA,aAAagE,EAAxE,EAAwEA,kBAAxE,OACC,kBAAC,EAAD,KACG,yBAAK/T,UAAU,0BAIX,wBAAIA,UAAU,SAAiB,WAAR2R,EAAkB,SAAS,UAAY,IAAKyN,GAAoB/c,aACvF,2BAAOrC,UAAU,gBAAjB,cACC+P,EACA+H,EAID,0BAAM3H,SAAU,SAAChR,GAAKA,EAAEiR,iBAA6B,WAARuB,EAAkBgC,IAAiBE,MAC5E,yBAAK7T,UAAU,uBACX,2BAAOA,UAAU,0BAA0B2J,QAAQ,yBAAnD,2BAAoG,0BAAM3J,UAAU,gBAAhB,MACnG+T,EAAkB,CACftL,SAASA,EACTwL,OAAO,WACPK,SAAS,EACTC,QAAQ,2BAIhB,yBAAKvU,UAAU,uBACX,2BAAOA,UAAU,0BAA0B2J,QAAQ,QAAnD,QAA+D,0BAAM3J,UAAU,gBAAhB,MAC/D,yBAAKA,UAAU,YACX,2BAAOY,KAAK,OAAOF,GAAG,OAAO+H,SAAU,SAACtJ,GAAD,OACvCsJ,EAAStJ,EAAE+I,OAAOH,MAAM,IAAIA,MAAO6L,EAAW,GAAIhD,SAAUA,EAAUP,UAAQ,EAACrQ,UAAU,mBAGjG,yBAAKA,UAAU,uBACX,2BAAOA,UAAU,0BAA0B2J,QAAQ,eAAnD,eACA,yBAAK3J,UAAU,aACX,8BAAUU,GAAG,cAAc+H,SAAU,SAACtJ,GAAD,OACrCsJ,EAAStJ,EAAE+I,OAAOH,MAAM,IACxBA,MAAO6L,EAAW,GAAIhD,SAAUA,EAAU5Q,UAAU,mBAI5D,8BAAUA,UAAU,wDAChB,4BAAQA,UAAU,0DACd,4BAAQY,KAAK,SAASZ,UAAU,kBAAkB4Q,SAAUA,EAC5D/P,QAAS,kBACLkS,EACIa,EAAWhL,MAAM,EAAE+N,GAClBZ,OAAO,CAACnC,EAAW+C,GAAc/N,MAAM,GACnCmN,OACG,CAAC,CAACnC,EAAW+C,GAAcjV,OAAO,EAAE,GAAG,GAAG,QACjDqU,OAAOnC,EAAWhL,MAAM+N,EAAa,OAP9C,KAUA,wBAAI3W,UAAU,+BAAd,yBACA,4BAAQY,KAAK,SAASZ,UAAU,oBAAoB4Q,SAAUA,EAC9D/P,QAAS,kBACLkS,EACIa,EAAWhL,MAAM,EAAE+N,GAClBZ,OAAO,CAACnC,EAAW+C,GAAc/N,MAAM,EAAEgL,EAAW+C,GAAcjV,OAAO,KACzEqU,OAAOnC,EAAWhL,MAAM+N,EAAa,OAL9C,MASJ,yBAAK3W,UAAU,iBAEX,yBAAKA,UAAU,kBAAkBI,MAAO,CAAC8Q,WAAW,EAAEC,YAAY,IAC9D,wBAAInR,UAAU,MAAMI,MAAO,CAAC2Q,KAAK,WAAWd,YAAY,GAAGC,aAAa,KAAxE,YACA,wBAAIlQ,UAAU,MAAMI,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,KAAzE,aACA,wBAAIlQ,UAAU,MAAMI,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,KAAzE,eACA,wBAAIlQ,UAAU,MAAMI,MAAO,CAAC2Q,KAAK,WAAWd,YAAY,GAAGC,aAAa,KAAxE,QAEHmP,EAA8BzO,KAKvC,wBAAI5Q,UAAU,0BACT,UAAUoE,EA9JnC,WACI,IAAImH,EAAM,EAMV,OALAqI,EAAW+C,GAAchP,SAAQ,SAAC6X,EAAuBhX,GAEjB,KAAjCoL,EAAW+C,GAAcnO,GAAG,KAC9B+C,GAAakI,SAASG,EAAW+C,GAAcnO,GAAG,QAEhD+C,EAuJ2CiK,KAIlC,kBAAC,EAAD,CAAY7D,MAAOA,EAAOgC,SAAUA,EAAUE,SAAUA,EAAUC,SAAUA,EAC5ElC,eAAgBA,UAQxCwN,GAAoB/c,YAAY,mBAChC+c,GAAoB9c,KAAK,uBAEV8c,U,oBCpPf,SAASK,GAAgBhhB,GACrB,OACQ,kBAAC,EAAD,KACI,kBAAC,EAAD,CAASwI,eAAe,aAAa/F,KAAK,OAC1C3B,OAAQ,SAACwK,GACL,OACA,kBAAC,EAAD,eAAe1H,YAAaod,GAAgBpd,YAAawH,SAAU,QAAYE,QASnG0V,GAAgBpd,YAAY,mBAC5Bod,GAAgBnd,KAAK,mBAENmd,UClBf,SAASC,GAAYjhB,GACjB,OACQ,kBAAC,EAAD,KACI,kBAAC,EAAD,CAASwI,eAAe,oBAAoB/F,KAAK,eACjD3B,OAAQ,SAACwK,GACL,OACA,kBAAC,EAAD,eAAe1H,YAAaqd,GAAYrd,YAAawH,SAAU6V,GAAYrd,aAAiB0H,QAShH2V,GAAYrd,YAAY,eACxBqd,GAAYpd,KAAK,eAEFod,UClBf,SAASC,GAAYlhB,GACjB,OACQ,kBAAC,EAAD,KACI,kBAAC,EAAD,CAASwI,eAAe,oBAAoB/F,KAAK,eACjD3B,OAAQ,SAACwK,GACL,OACA,kBAAC,EAAD,eAAe1H,YAAasd,GAAYtd,YAAawH,SAAU8V,GAAYtd,aAAiB0H,QAShH4V,GAAYtd,YAAY,eACxBsd,GAAYrd,KAAK,eAEFqd,UClBf,SAASC,GAAYnhB,GACjB,OACQ,kBAAC,EAAD,KACI,kBAAC,EAAD,CAASwI,eAAe,oBAAoB/F,KAAK,eACjD3B,OAAQ,SAACwK,GACL,OACA,kBAAC,EAAD,eAAe1H,YAAaud,GAAYvd,YAAawH,SAAU+V,GAAYvd,aAAiB0H,QAShH6V,GAAYvd,YAAY,eACxBud,GAAYtd,KAAK,eAEFsd,UClBf,SAASC,GAAYphB,GACjB,OACQ,kBAAC,EAAD,KACI,kBAAC,EAAD,CAASwI,eAAe,oBAAoB/F,KAAK,eACjD3B,OAAQ,SAACwK,GACL,OACA,kBAAC,EAAD,eAAe1H,YAAawd,GAAYxd,YAAawH,SAAUgW,GAAYxd,aAAiB0H,QAShH8V,GAAYxd,YAAY,eACxBwd,GAAYvd,KAAK,eAEFud,UClBf,SAASC,GAAUrhB,GAEf,IAAMuE,EAAI,CACN9B,KAAK,IAAIuW,gBAAgBhZ,EAAMiZ,SAAStR,QAAQuR,IAAI,QACpDjX,GAAG,IAAI+W,gBAAgBhZ,EAAMiZ,SAAStR,QAAQuR,IAAI,OAJhC,EAOcjZ,mBAAS,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,KAPvC,mBAOfkV,EAPe,KAOJb,EAPI,KAStB,SAAStK,EAASV,EAAMlE,GACpBkP,EAAiB,GAAD,mBAAKa,EAAWhL,MAAM,EAAE/E,IAAxB,CAA+BkE,GAA/B,YAAwC6L,EAAWhL,MAAM/E,EAAM,EAAE+P,EAAWlS,WAGhG,OACI,kBAAC,EAAD,CAAMkS,WAAYA,EAAYb,iBAAkBA,EAAkB/P,IAAKA,EAAK9B,KAAK,OAAOwS,YAAY,qBAEhG,gBAAE/B,EAAF,EAAEA,MAAMf,EAAR,EAAQA,SAASgB,EAAjB,EAAiBA,eAAe+B,EAAhC,EAAgCA,SAASE,EAAzC,EAAyCA,SAASC,EAAlD,EAAkDA,SAAS/D,EAA3D,EAA2DA,aAAagE,EAAxE,EAAwEA,kBAAxE,OACC,kBAAC,EAAD,KACG,yBAAK/T,UAAU,0BAIX,wBAAIA,UAAU,SAAiB,WAAR2R,EAAkB,SAAS,UAAY,IAAKmO,GAASzd,aAC5E,2BAAOrC,UAAU,gBAAjB,cACC+P,EAKD,0BAAMI,SAAU,SAAChR,GAAKA,EAAEiR,iBAA6B,WAARuB,EAAkBgC,IAAiBE,MAC5E,yBAAK7T,UAAU,uBACX,2BAAOA,UAAU,0BAA0B2J,QAAQ,YAAnD,aAAyE,0BAAM3J,UAAU,gBAAhB,MACxE+T,EAAkB,CACftL,SAASA,EACTwL,OAAO,WACPK,SAAS,EACTC,QAAQ,cAIhB,yBAAKvU,UAAU,uBACX,2BAAOA,UAAU,0BAA0B2J,QAAQ,YAAnD,aAAwE,0BAAM3J,UAAU,gBAAhB,MACxE,yBAAKA,UAAU,aACX,2BAAOY,KAAK,OAAOF,GAAG,WAAW+H,SAAU,SAACtJ,GAAD,OAC3CsJ,EAAStJ,EAAE+I,OAAOH,MAAM,IAAIA,MAAO6L,EAAW,GAAIhD,SAAUA,EAAUP,UAAQ,EAACrQ,UAAU,mBAGjG,yBAAKA,UAAU,uBACX,2BAAOA,UAAU,0BAA0B2J,QAAQ,eAAnD,gBAA8E,0BAAM3J,UAAU,gBAAhB,MAC9E,yBAAKA,UAAU,aACX,8BAAUU,GAAG,cAAc+H,SAAU,SAACtJ,GAAD,OACrCsJ,EAAStJ,EAAE+I,OAAOH,MAAM,IACxBA,MAAO6L,EAAW,GAAIhD,SAAUA,EAAUP,UAAQ,EAACrQ,UAAU,mBAGrE,yBAAKA,UAAU,uBACX,2BAAOA,UAAU,0BAA0B2J,QAAQ,gBAAnD,iBAAgF,0BAAM3J,UAAU,gBAAhB,MAChF,yBAAKA,UAAU,YACX,2BAAOY,KAAK,OAAOsT,UAAU,IAAIxT,GAAG,eAAe+H,SAAU,SAACtJ,GAAD,OAC7DsJ,EAAStJ,EAAE+I,OAAOH,MAAM,IAAIA,MAAO6L,EAAW,GAAIhD,SAAUA,EAAUP,UAAQ,EAACrQ,UAAU,mBAIjG,kBAAC,EAAD,CAAY2R,MAAOA,EAAOgC,SAAUA,EAAUE,SAAUA,EAAUC,SAAUA,EAAUlC,eAAgBA,UAY9HkO,GAASzd,YAAY,YACrByd,GAASxd,KAAK,YAECwd,UCxEf,SAASC,GAAiBthB,GACtB,IAAMuE,EAAI,CACN9B,KAAK,IAAIuW,gBAAgBhZ,EAAMiZ,SAAStR,QAAQuR,IAAI,QACpDjX,GAAG,IAAI+W,gBAAgBhZ,EAAMiZ,SAAStR,QAAQuR,IAAI,OAHzB,EAK2BpV,EAAS,CAC7DS,IAAI,eACJE,KAAK,CACDoC,OAAO,OACPC,QAAQ,CAAC,eAAe,oBACxBC,KAAKC,KAAKC,UAAU,CAACxE,KAAK,WAC1ByE,YAAY,aAXS,sBAKhB8G,EALgB,EAKrB9J,KAA4B+J,EALP,EAKC7J,MALD,EAe2BN,EAAS,CAC7DS,IAAI,yBACJE,KAAK,CACDoC,OAAO,OACPC,QAAQ,CAAC,eAAe,oBACxBC,KAAKC,KAAKC,UAAU,CAACxE,KAAK,iBAC1ByE,YAAY,aArBS,sBAehBwT,EAfgB,EAerBxW,KAA4ByW,EAfP,EAeCvW,MAfD,EAyBuBN,EAAS,CACzDS,IAAI,eACJE,KAAK,CACDoC,OAAO,OACPC,QAAQ,CAAC,eAAe,oBACxBC,KAAKC,KAAKC,UAAU,CAACxE,KAAK,SAC1ByE,YAAY,aA/BS,sBAyBhBqa,EAzBgB,EAyBrBrd,KAA0Bsd,EAzBL,EAyBDpd,MAzBC,EAmC8EN,EAAS,MAnCvF,0BAmChB4Y,EAnCgB,EAmCrBxY,KAAuCyY,EAnClB,EAmCYvY,MAAoCwY,EAnChD,KAuCvB6E,EAAe,EAGf5E,EAA2B,GAC3BC,EAAwB,GAGxBrB,EAAqB,EACrBC,EAAqB,EA/CE,EAoDSzb,mBAAS,MApDlB,mBAoDtB0O,EApDsB,KAoDXC,EApDW,OAqDS3O,mBAAS,MArDlB,mBAqDtB6a,EArDsB,KAqDXC,EArDW,OAsDK9a,mBAAS,MAtDd,mBAsDtByhB,EAtDsB,KAsDbC,EAtDa,OAuD6B1hB,mBAAS,MAvDtC,mBAuDtB8c,EAvDsB,KAuDDP,EAvDC,OAwDmBvc,oBAAS,GAxD5B,mBAwDtB2hB,EAxDsB,KAwDNC,GAxDM,QAyDO5hB,mBAAS,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,KAzDlD,qBAyDtBkV,GAzDsB,MAyDXb,GAzDW,MA0DtBnT,GAAcC,qBAAWL,GAAzBI,WA0DP,SAAS6b,GAAuBC,EAAUC,GACtC,MAAO,CACH3Y,IAAI,yBACJE,KAAK,CACDoC,OAAO,OACPC,QAAQ,CAAC,eAAe,oBACxBC,KAAKC,KAAKC,UAAU,CAChBgW,UAAUA,EACVC,OAAOA,IAEXhW,YAAY,YAKxB,SAAS8C,GAASV,EAAMlE,GACpBkP,GAAiB,GAAD,mBAAKa,GAAWhL,MAAM,EAAE/E,IAAxB,CAA+BkE,GAA/B,YAAwC6L,GAAWhL,MAAM/E,EAAM,EAAE+P,GAAWlS,WAGhG,SAAS8T,KACL,OAAS5B,GAAWsM,GAGxB,SAASxF,GAAyBkB,GAE9B,OAAOhI,GAAW2H,GAAyBtP,QAAO,SAACjI,EAAEC,GAEjD,OAAG2X,IAAU3X,EAAEiW,GACJlW,EAECA,EAAEC,EAAEkW,KAClBvG,GAAW0H,GAA4BrP,QAAO,SAACjI,EAAEC,GAE/C,OAAG2X,IAAU3X,EAAEiW,GACJlW,EAECA,EAAEC,EAAEkW,KAClB3E,OA7FNzW,qBAAU,WAGF0N,IAA4C,IAAxBA,EAAiBvF,MAC7BC,MAAM,iEACNvH,IAAW,IAEd6M,GAAoBA,EAAiB9J,MAAQ8J,EAAiBlF,OACnE8F,EAAiBZ,EAAiB9J,KAAK1B,KAAI,SAAA0B,GAAI,OAC/C,4BAAQxB,IAAKwB,EAAK8J,EAAiBlF,MAAM,GAAGjG,MAAOyG,MAAOpF,EAAK8J,EAAiBlF,MAAM,GAAGjG,OACpFqB,EAAK8J,EAAiBlF,MAAM,GAAGjG,MAAM,OAAOqB,EAAK8J,EAAiBlF,MAAM,GAAGjG,MAAMqB,EAAK8J,EAAiBlF,MAAM,GAAGjG,MAAM,SAK3H6X,IAA4C,IAAxBA,EAAiBjS,MAC7BC,MAAM,iEACNvH,IAAW,IAEduZ,GAAoBA,EAAiBxW,MAAQwW,EAAiB5R,OAC/DiS,EAAiBL,EAAiBxW,KAAK1B,KAAI,SAAA0B,GAAI,OAC/C,4BAAQxB,IAAKwB,EAAKwW,EAAiB5R,MAAM,GAAGjG,MAAOyG,MAAOpF,EAAKwW,EAAiB5R,MAAM,GAAGjG,QACnFqB,EAAKwW,EAAiB5R,MAAM,GAAGjG,MAAMqB,EAAKwW,EAAiB5R,MAAM,GAAGjG,MAAM,IAC3E,OAAOqB,EAAKwW,EAAiB5R,MAAM,GAAGjG,MAAMqB,EAAKwW,EAAiB5R,MAAM,GAAGjG,MAAM,SAK1F0e,IAAwC,IAAtBA,EAAe9Y,MAC7BC,MAAM,iEACNvH,IAAW,IAEVogB,GAAkBA,EAAerd,MAAQqd,EAAezY,OAC7D6Y,EAAeJ,EAAerd,KAAK1B,KAAI,SAAA0B,GAAI,OAC3C,4BAAQxB,IAAKwB,EAAKqd,EAAezY,MAAM,GAAGjG,MAAOyG,MAAOpF,EAAKqd,EAAezY,MAAM,GAAGjG,QAC/EqB,EAAKqd,EAAezY,MAAM,GAAGjG,MAAMqB,EAAKqd,EAAezY,MAAM,GAAGjG,MAAM,IACvE,OAAOqB,EAAKqd,EAAezY,MAAM,GAAGjG,MAAMqB,EAAKqd,EAAezY,MAAM,GAAGjG,MAAM,SAKzD,KAAzBsS,GA7DS,IA8DT0M,IAAsB,KAG5B,CAAC7T,EAAiBC,EAAkByM,EAAiBC,EAAkB4G,EAAeC,EAAgBrM,GAjEvF,KAqEjB7U,qBAAU,WACFoc,IAAkE,IAAnCA,EAA4BjU,OAC3DC,MAAM,iEACNvH,IAAW,MAEjB,CAACub,EAA4BC,IA4C/B,IAAItD,GAAsB,KA4B1B,OA1BKrL,GAAoBA,EAAiB5J,OAAU6J,GAAsByM,GAAoBA,EAAiBtW,OAAUuW,GACrH4G,GAAkBA,EAAend,OAAUod,GAAoB9E,GAA+BA,EAA4BtY,OAC9HuY,KACAtD,GACI,yBAAK9X,UAAU,uBACVyM,GAAoBA,EAAiB5J,MAAO,gDAAgD4J,EAAiB5J,MAAM2E,MACnH,UAAUiF,EAAiB5J,MAAM4E,KAAK,aAAagF,EAAiB5J,MAAM6E,WAAW,KACrFgF,EAAmB,yCAAyCA,EAAoB,KACjF,6BACA,6BACCyM,GAAoBA,EAAiBtW,MAAO,iDAAiDsW,EAAiBtW,MAAM2E,MACpH,UAAU2R,EAAiBtW,MAAM4E,KAAK,aAAa0R,EAAiBtW,MAAM6E,WAAW,KACrF0R,EAAmB,0CAA0CA,EAAoB,KAClF,6BACA,6BACC4G,GAAkBA,EAAend,MAAO,8CAA8Cmd,EAAend,MAAM2E,MAC3G,UAAUwY,EAAend,MAAM4E,KAAK,aAAauY,EAAend,MAAM6E,WAAW,KACjFuY,EAAiB,uCAAuCA,EAAkB,KAC3E,6BACA,6BACC9E,GAA+BA,EAA4BtY,MAAO,4DACjEsY,EAA4BtY,MAAM2E,MAAO,UAAU2T,EAA4BtY,MAAM4E,KAAK,aAC5F0T,EAA4BtY,MAAM6E,WAAW,KAC5C0T,EAA8B,qDAAqDA,EAA+B,OAIvH,kBAAC,EAAD,CAAMxH,WAAYA,GAAYb,iBAAkBA,GAAkB/P,IAAKA,EAAK9B,KAAK,eAAewS,YAAY,eAC5GT,iBAAkBwI,GAAwBzI,uBAAwBqI,EAClEnI,0BAvJoB,EAuJ0BC,eApJ7B,IAsJb,gBAAExB,EAAF,EAAEA,MAAMf,EAAR,EAAQA,SAASgB,EAAjB,EAAiBA,eAAe+B,EAAhC,EAAgCA,SAASE,EAAzC,EAAyCA,SAASC,EAAlD,EAAkDA,SAAS/D,EAA3D,EAA2DA,aAAagE,EAAxE,EAAwEA,kBAAxE,OACC,kBAAC,EAAD,KACG,yBAAK/T,UAAU,0BAIX,wBAAIA,UAAU,SAAiB,WAAR2R,EAAkB,SAAS,UAAY,IAAKoO,GAAgB1d,aACnF,2BAAOrC,UAAU,gBAAjB,cACC+P,EACA+H,GAID,0BAAM3H,SAAU,SAAChR,GACbA,EAAEiR,iBAC+B,IAA7BsK,MAAkC2F,EAClCpF,EACK,uBAAGjb,UAAU,iDAAb,0CAKM,WAAR2R,EAAkBgC,IAChBE,MAGT,yBAAK7T,UAAU,cACX,2BAAOA,UAAU,mBAAmBY,KAAK,WAAWkH,QAASuY,EAAiBzP,SAAUA,EAAUlQ,GAAG,kBACrG+H,SAAU,SAACtJ,GACPmhB,IAAuBD,GACvBtN,GAAiB,GAAD,mBAAKa,GAAWhL,MAAM,EAvL1C,IAuLoB,CAA2C,IAA3C,YACbgL,GAAWhL,MAAM2X,EAtL/B,IAqL2B,CACoC,IADpC,YAEb3M,GAAWhL,MAAM4X,EAAalF,IAFjB,CAE6C,GAAG,SAIpE,2BAAOtb,UAAU,mBAAmB2J,QAAQ,mBAA5C,oBAIJ,yBAAK3J,UAAU,OACX,8BAAUA,UAAU,yEACpB4Q,WAAUA,IAAgByP,GACtB,4BAAQrgB,UAAU,6CAA6C,uCAC/D,2BAAOA,UAAU,OAAO2J,QAAQ,YAAhC,aACA,yBAAK3J,UAAU,eACX,2BAAOY,KAAK,OAAOF,GAAG,WAAWqH,MAAO6L,GAAW,GAAInL,SAAU,SAACtJ,GAAD,OAAKA,GAAGkR,UAAQ,EAACrQ,UAAU,iBAC5F,4BAAQA,UAAU,eAAeI,MAAO,CAAC2Q,KAAK,SAAUhJ,MAAO6L,GAAW,GAAInL,SAAU,SAACtJ,GACzFsJ,GAAStJ,EAAE+I,OAAOH,MAAM,GACxBsT,EACII,GAAuBtc,EAAE+I,OAAOH,MAAM6L,GAxMrD,OA2Me,4BAAQ7L,MAAM,IAAd,wBACCqF,KAIb,8BAAUpN,UAAU,yEAAyE4Q,WAAUA,GAAeyP,GAClH,4BAAQrgB,UAAU,6CAA6C,wCAC/D,2BAAOA,UAAU,OAAO2J,QAAQ,UAAhC,WACA,yBAAK3J,UAAU,eACX,2BAAOY,KAAK,OAAOF,GAAG,SAASqH,MAAO6L,GAAW,GAAInL,SAAU,SAACtJ,GAAD,OAAKA,GAAGkR,UAAQ,EAACrQ,UAAU,iBAC1F,4BAAQA,UAAU,eAAeI,MAAO,CAAC2Q,KAAK,SAAUtI,SAAU,SAACtJ,GACnEsJ,GAAStJ,EAAE+I,OAAOH,MAAM,KAEpB,4BAAQA,MAAM,IAAd,wBACCwR,KAKb,yBAAKvZ,UAAU,4BACX,2BAAO2J,QAAQ,kBAAf,mBAAgD,0BAAM3J,UAAU,gBAAhB,MAC/C+T,EAAkB,CACftL,SAASA,GACTwL,OAAO,GACPK,SAAS,EACTC,QAAQ,oBAKhB,yBAAKvU,UAAU,qCACX,2BAAO2J,QAAQ,YAAf,aAAoC,0BAAM3J,UAAU,gBAAhB,MACpC,yBAAKA,UAAU,eACX,2BAAOY,KAAK,OAAOF,GAAG,WAAWqH,MAAO6L,GAAW,GAAInL,SAAU,SAACtJ,GAAD,OAAKA,GAAGkR,UAAQ,EAACrQ,UAAU,eAC5F4Q,SAAUA,IACV,4BAAQ5Q,UAAU,eAAeI,MAAO,CAAC2Q,KAAK,SAAUtI,SAAU,SAACtJ,GACnEsJ,GAAStJ,EAAE+I,OAAOH,MAAM,KAEpB,4BAAQA,MAAM,IAAd,wBACCoY,KAMb,yBAAKngB,UAAU,qCACX,2BAAO2J,QAAQ,QAAf,QAA2B,0BAAM3J,UAAU,gBAAhB,MAC3B,2BAAOY,KAAK,OAAOgQ,SAAUA,EAAUP,UAAQ,EAACtI,MAAO6L,GAAW,GAAInL,SAAU,SAACtJ,GAAD,OAAKsJ,GAAStJ,EAAE+I,OAAOH,MAAM,IAC7G/H,UAAU,kBAGd,yBAAKA,UAAU,qCACX,2BAAO2J,QAAQ,iBAAf,kBACA,2BAAO/I,KAAK,OAAOF,GAAG,gBAAgB+H,SAAU,SAACtJ,GAAD,OAAKsJ,GAAStJ,EAAE+I,OAAOH,MAAM,IAAIA,MAAO6L,GAAW,GACnGhD,SAAUA,EAAU5Q,UAAU,kBAGlC,yBAAKA,UAAU,qCACX,2BAAO2J,QAAQ,iBAAf,kBACA,2BAAO/I,KAAK,OAAOF,GAAG,gBAAgB+H,SAAU,SAACtJ,GAAD,OAAKsJ,GAAStJ,EAAE+I,OAAOH,MAAM,IAAIA,MAAO6L,GAAW,GACnGhD,SAAUA,EAAU5Q,UAAU,kBAGlC,yBAAKA,UAAU,qCACX,2BAAO2J,QAAQ,eAAf,eACA,8BAAU/I,KAAK,OAAOF,GAAG,cAAc+H,SAAU,SAACtJ,GAAD,OAAKsJ,GAAStJ,EAAE+I,OAAOH,MAAM,IAAIA,MAAO6L,GAAW,GACpGhD,SAAUA,EAAU5Q,UAAU,kBAGlC,yBAAKA,UAAU,qCACX,2BAAO2J,QAAQ,UAAf,UAA+B,0BAAM3J,UAAU,gBAAhB,MAC/B,2BAAOY,KAAK,SAASF,GAAG,SAAS+H,SAAU,SAACtJ,GAAD,OAAKsJ,GAAStJ,EAAE+I,OAAOH,MAAM,IAAIA,MAAO6L,GAAW,GAC9FhD,SAAUA,EAAUP,UAAQ,EAACoE,IAAI,IAAI0C,KAAK,MAAMnX,UAAU,kBAG7DqgB,EACA,wBAAIrgB,UAAU,yBAAyBI,MAAO,CAAC8P,aAAa,KACzD,0BAAMlQ,UAAU,yBAAyB,qBAAqBoE,EAAmBsW,QAC9E,KACNc,EAEA6E,EACG,kBAAC,GAAD,CAActG,sBAAuBoB,EAA6BvH,WAAYA,GAC9Eb,iBAAkBA,GAAkBnC,SAAUA,EAC9C8J,yBAA0BA,GAA0BlF,eAAgBA,GACpEuF,kBAAmBO,EAA4BN,kBAAmBO,EAClET,qBAzRD,UAyR6Ce,qBAxR7C,aAyRCZ,2BAA4BA,EAC5BJ,kBAAmB,+BACtB,MAGL,kBAAC,EAAD,CAAYlJ,MAAOA,EAAOgC,SAAUA,EAAUE,SAAUA,EAAUC,SAAUA,EAC5ElC,eAAgBA,UAaxCmO,GAAgB1d,YAAY,eAC5B0d,GAAgBzd,KAAK,mBAENyd,UCjWf,SAASU,GAAiBhiB,GACtB,IAAMuE,EAAI,CACN9B,KAAK,IAAIuW,gBAAgBhZ,EAAMiZ,SAAStR,QAAQuR,IAAI,QACpDjX,GAAG,IAAI+W,gBAAgBhZ,EAAMiZ,SAAStR,QAAQuR,IAAI,OAHzB,EAK+BpV,EAAS,CACjES,IAAI,eACJE,KAAK,CACDoC,OAAO,OACPC,QAAQ,CAAC,eAAe,oBACxBC,KAAKC,KAAKC,UAAU,CAACxE,KAAK,aAC1ByE,YAAY,aAXS,sBAKhB0W,EALgB,EAKrB1Z,KAA8B2Z,EALT,EAKGzZ,MALH,EAe2BN,EAAS,CAC7DS,IAAI,yBACJE,KAAK,CACDoC,OAAO,OACPC,QAAQ,CAAC,eAAe,oBACxBC,KAAKC,KAAKC,UAAU,CAACxE,KAAK,iBAC1ByE,YAAY,aArBS,sBAehBwT,EAfgB,EAerBxW,KAA4ByW,EAfP,EAeCvW,MAfD,EAyB6CN,EAAS,CAC/ES,IAAI,eACJE,KAAK,CACDoC,OAAO,OACPC,QAAQ,CAAC,eAAe,oBACxBC,KAAKC,KAAKC,UAAU,CAACxE,KAAK,SAC1ByE,YAAY,aA/BS,0BAyBhBqa,EAzBgB,EAyBrBrd,KAA0Bsd,EAzBL,EAyBDpd,MAzBC,QAmCoFN,EAAS,OAnC7F,0BAmChBib,EAnCgB,EAmCrB7a,KAAyC8a,EAnCpB,EAmCc5a,MAAsC6a,EAnCpD,KAuCvBwC,EAAe,EAGfvC,EAA8B,GAC9BC,EAAgC,GAGhC1D,EAAqB,EACrBC,EAAqB,EA/CE,EAqDazb,mBAAS,MArDtB,mBAqDtBge,EArDsB,KAqDTC,EArDS,OAsDSje,mBAAS,MAtDlB,mBAsDtB6a,EAtDsB,KAsDXC,EAtDW,OAuDK9a,mBAAS,MAvDd,mBAuDtByhB,EAvDsB,KAuDbC,EAvDa,OAwD6B1hB,mBAAS,MAxDtC,mBAwDtB8c,EAxDsB,KAwDDP,EAxDC,OAyDuBvc,oBAAS,GAzDhC,mBAyDtBgiB,GAzDsB,KAyDJC,GAzDI,QA0DOjiB,mBAAS,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,KA1DlD,qBA0DtBkV,GA1DsB,MA0DXb,GA1DW,MA2DtBnT,GAAcC,qBAAWL,GAAzBI,WA2DP,SAASie,GAAyBC,EAAYnC,GAC1C,MAAO,CACH3Y,IAAI,2BACJE,KAAK,CACDoC,OAAO,OACPC,QAAQ,CAAC,eAAe,oBACxBC,KAAKC,KAAKC,UAAU,CAChBoY,YAAYA,EACZnC,OAAOA,IAEXhW,YAAY,YAKxB,SAAS8C,GAASV,EAAMlE,GACpBkP,GAAiB,GAAD,mBAAKa,GAAWhL,MAAM,EAAE/E,IAAxB,CAA+BkE,GAA/B,YAAwC6L,GAAWhL,MAAM/E,EAAM,EAAE+P,GAAWlS,WAGhG,SAAS8T,KACL,OAAS5B,GAAWsM,GAGxB,SAASxF,GAAyBkB,GAE9B,OAAOhI,GAAWgK,GAAiC3R,QAAO,SAACjI,EAAEC,GAEzD,OAAG2X,IAAU3X,EAAEiW,GACJlW,EAECA,EAAEC,EAAEkW,KAClBvG,GAAW+J,GAA+B1R,QAAO,SAACjI,EAAEC,GAElD,OAAG2X,IAAU3X,EAAEiW,GACJlW,EAECA,EAAEC,EAAEkW,KAClB3E,OA9FNzW,qBAAU,WAEFsd,IAAgD,IAA1BA,EAAmBnV,MACjCC,MAAM,iEACNvH,IAAW,IAEdyc,GAAsBA,EAAmB1Z,MAAQ0Z,EAAmB9U,OACzEoV,EAAmBN,EAAmB1Z,KAAK1B,KAAI,SAAA0B,GAAI,OACnD,4BAAQxB,IAAKwB,EAAK0Z,EAAmB9U,MAAM,GAAGjG,MAAOyG,MAAOpF,EAAK0Z,EAAmB9U,MAAM,GAAGjG,OACxFqB,EAAK0Z,EAAmB9U,MAAM,GAAGjG,MAAM,OAAOqB,EAAK0Z,EAAmB9U,MAAM,GAAGjG,MAAMqB,EAAK0Z,EAAmB9U,MAAM,GAAGjG,MAAM,SAKhI6X,IAA4C,IAAxBA,EAAiBjS,MAC9BC,MAAM,iEACNvH,IAAW,IAEduZ,GAAoBA,EAAiBxW,MAAQwW,EAAiB5R,OAE/DiS,EAAiBL,EAAiBxW,KAAK1B,KAAI,SAAA0B,GAAI,OAC/C,4BAAQxB,IAAKwB,EAAKwW,EAAiB5R,MAAM,GAAGjG,MAAOyG,MAAOpF,EAAKwW,EAAiB5R,MAAM,GAAGjG,QACnFqB,EAAKwW,EAAiB5R,MAAM,GAAGjG,MAAMqB,EAAKwW,EAAiB5R,MAAM,GAAGjG,MAAM,IAC3E,OAAOqB,EAAKwW,EAAiB5R,MAAM,GAAGjG,MAAMqB,EAAKwW,EAAiB5R,MAAM,GAAGjG,MAAM,SAM1F0e,IAAwC,IAAtBA,EAAe9Y,MAC7BC,MAAM,iEACNvH,IAAW,IAEVogB,GAAkBA,EAAerd,MAAQqd,EAAezY,OAC7D6Y,EAAeJ,EAAerd,KAAK1B,KAAI,SAAA0B,GAAI,OAC3C,4BAAQxB,IAAKwB,EAAKqd,EAAezY,MAAM,GAAGjG,MAAOyG,MAAOpF,EAAKqd,EAAezY,MAAM,GAAGjG,QAC/EqB,EAAKqd,EAAezY,MAAM,GAAGjG,MAAMqB,EAAKqd,EAAezY,MAAM,GAAGjG,MAAM,IACvE,OAAOqB,EAAKqd,EAAezY,MAAM,GAAGjG,MAAMqB,EAAKqd,EAAezY,MAAM,GAAGjG,MAAM,SAKzD,KAAzBsS,GA/DS,IAgET+M,IAAwB,KAG9B,CAACtE,EAAmBC,EAAoBnD,EAAiBC,EAAkB4G,EAAeC,EAAgBrM,GAnE3F,KAuEjB7U,qBAAU,WACFye,IAAsE,IAArCA,EAA8BtW,OAC/DC,MAAM,iEACNvH,IAAW,MAEjB,CAAC4d,EAA8BC,IA4CjC,IAAI3F,GAAsB,KA4B1B,OA1BKuE,GAAsBA,EAAmBxZ,OAAUyZ,GAAwBnD,GAAoBA,EAAiBtW,OAAUuW,GAC3H4G,GAAkBA,EAAend,OAAUod,GAAoBzC,GAAiCA,EAA8B3a,OAClI4a,KACA3F,GACI,yBAAK9X,UAAU,uBACVqc,GAAsBA,EAAmBxZ,MAAO,kDAAkDwZ,EAAmBxZ,MAAM2E,MAC3H,UAAU6U,EAAmBxZ,MAAM4E,KAAK,aAAa4U,EAAmBxZ,MAAM6E,WAAW,KACzF4U,EAAqB,2CAA2CA,EAAsB,KACvF,6BACA,6BACCnD,GAAoBA,EAAiBtW,MAAO,iDAAiDsW,EAAiBtW,MAAM2E,MACpH,UAAU2R,EAAiBtW,MAAM4E,KAAK,aAAa0R,EAAiBtW,MAAM6E,WAAW,KACrF0R,EAAmB,0CAA0CA,EAAoB,KAClF,6BACA,6BACC4G,GAAkBA,EAAend,MAAO,8CAA8Cmd,EAAend,MAAM2E,MAC3G,UAAUwY,EAAend,MAAM4E,KAAK,aAAauY,EAAend,MAAM6E,WAAW,KACjFuY,EAAiB,uCAAuCA,EAAkB,KAC3E,6BACA,6BACCzC,GAAiCA,EAA8B3a,MAAO,8DACrE2a,EAA8B3a,MAAM2E,MAAO,UAAUgW,EAA8B3a,MAAM4E,KAAK,aAChG+V,EAA8B3a,MAAM6E,WAAW,KAC9C+V,EAAgC,uDAAuDA,EAAiC,OAI7H,kBAAC,EAAD,CAAM7J,WAAYA,GAAYb,iBAAkBA,GAAkB/P,IAAKA,EAAK9B,KAAK,eAAewS,YAAY,eAC5GT,iBAAkB4K,GAA0B7K,uBAAwB0K,EACpExK,0BAzJsB,EAyJ0BC,eAtJ/B,IAwJb,gBAAExB,EAAF,EAAEA,MAAMf,EAAR,EAAQA,SAASgB,EAAjB,EAAiBA,eAAe+B,EAAhC,EAAgCA,SAASE,EAAzC,EAAyCA,SAASC,EAAlD,EAAkDA,SAAS/D,EAA3D,EAA2DA,aAAagE,EAAxE,EAAwEA,kBAAxE,OACC,kBAAC,EAAD,KACG,yBAAK/T,UAAU,0BAIX,wBAAIA,UAAU,SAAiB,WAAR2R,EAAkB,SAAS,UAAY,IAAK8O,GAAgBpe,aACnF,2BAAOrC,UAAU,gBAAjB,cACC+P,EACA+H,GAID,0BAAM3H,SAAU,SAAChR,GAAKA,EAAEiR,iBACa,IAA7BsK,MAAkCgG,GAClCzF,EACK,uBAAGjb,UAAU,iDAAb,0CAKM,WAAR2R,EAAkBgC,IAChBE,MAGT,yBAAK7T,UAAU,cACX,2BAAOA,UAAU,mBAAmBY,KAAK,WAAWkH,QAAS4Y,GAAmB9P,SAAUA,EAAUlQ,GAAG,oBACvG+H,SAAU,SAACtJ,GACPwhB,IAAyBD,IACzB3N,GAAiB,GAAD,mBAAKa,GAAWhL,MAAM,EAxLxC,IAwLkB,CAA6C,IAA7C,YACbgL,GAAWhL,MAAMgY,EAvL/B,IAsL2B,CACsC,IADtC,YAEbhN,GAAWhL,MAAM4X,EAAa7C,IAFjB,CAEgD,GAAG,SAGvE,2BAAO3d,UAAU,mBAAmB2J,QAAQ,qBAA5C,sBAIJ,yBAAK3J,UAAU,OACX,8BAAUA,UAAU,yEACpB4Q,WAAUA,IAAgB8P,IACtB,4BAAQ1gB,UAAU,6CAA6C,yCAC/D,2BAAOA,UAAU,OAAO2J,QAAQ,cAAhC,eACA,yBAAK3J,UAAU,eACX,2BAAOY,KAAK,OAAOF,GAAG,aAAaqH,MAAO6L,GAAW,GAAInL,SAAU,SAACtJ,GAAD,OAAKA,GAAGkR,UAAQ,EAACrQ,UAAU,iBAC9F,4BAAQA,UAAU,eAAeI,MAAO,CAAC2Q,KAAK,SAAUhJ,MAAO6L,GAAW,GAAInL,SAAU,SAACtJ,GACzFsJ,GAAStJ,EAAE+I,OAAOH,MAAM,GACxB2V,EACIG,GAAyB1e,EAAE+I,OAAOH,MAAM6L,GAxMvD,OA2Me,4BAAQ7L,MAAM,IAAd,wBACC2U,KAIb,8BAAU1c,UAAU,yEAAyE4Q,WAAUA,GAAe8P,IAClH,4BAAQ1gB,UAAU,6CAA6C,wCAC/D,2BAAOA,UAAU,OAAO2J,QAAQ,UAAhC,WACA,yBAAK3J,UAAU,eACX,2BAAOY,KAAK,OAAOF,GAAG,SAASqH,MAAO6L,GAAW,GAAInL,SAAU,SAACtJ,GAAD,OAAKA,GAAGkR,UAAQ,EAACrQ,UAAU,iBAC1F,4BAAQA,UAAU,eAAeI,MAAO,CAAC2Q,KAAK,SAAUtI,SAAU,SAACtJ,GACnEsJ,GAAStJ,EAAE+I,OAAOH,MAAM,KAEpB,4BAAQA,MAAM,IAAd,wBACCwR,KAKb,yBAAKvZ,UAAU,4BACX,2BAAO2J,QAAQ,kBAAf,mBAAgD,0BAAM3J,UAAU,gBAAhB,MAC/C+T,EAAkB,CACftL,SAASA,GACTwL,OAAO,GACPK,SAAS,EACTC,QAAQ,oBAKhB,yBAAKvU,UAAU,qCACX,2BAAO2J,QAAQ,YAAf,aAAoC,0BAAM3J,UAAU,gBAAhB,MACpC,yBAAKA,UAAU,eACX,2BAAOY,KAAK,OAAOF,GAAG,WAAWqH,MAAO6L,GAAW,GAAInL,SAAU,SAACtJ,GAAD,OAAKA,GAAGkR,UAAQ,EAACrQ,UAAU,eAC5F4Q,SAAUA,IACV,4BAAQ5Q,UAAU,eAAeI,MAAO,CAAC2Q,KAAK,SAAUtI,SAAU,SAACtJ,GACnEsJ,GAAStJ,EAAE+I,OAAOH,MAAM,KAEpB,4BAAQA,MAAM,IAAd,wBACCoY,KAMb,yBAAKngB,UAAU,qCACX,2BAAO2J,QAAQ,QAAf,QAA2B,0BAAM3J,UAAU,gBAAhB,MAC3B,2BAAOY,KAAK,OAAOgQ,SAAUA,EAAUP,UAAQ,EAACtI,MAAO6L,GAAW,GAAInL,SAAU,SAACtJ,GAAD,OAAKsJ,GAAStJ,EAAE+I,OAAOH,MAAM,IAC7G/H,UAAU,kBAGd,yBAAKA,UAAU,qCACX,2BAAO2J,QAAQ,iBAAf,kBACA,2BAAO/I,KAAK,OAAOF,GAAG,gBAAgB+H,SAAU,SAACtJ,GAAD,OAAKsJ,GAAStJ,EAAE+I,OAAOH,MAAM,IAAIA,MAAO6L,GAAW,GACnGhD,SAAUA,EAAU5Q,UAAU,kBAGlC,yBAAKA,UAAU,qCACX,2BAAO2J,QAAQ,iBAAf,kBACA,2BAAO/I,KAAK,OAAOF,GAAG,gBAAgB+H,SAAU,SAACtJ,GAAD,OAAKsJ,GAAStJ,EAAE+I,OAAOH,MAAM,IAAIA,MAAO6L,GAAW,GACnGhD,SAAUA,EAAU5Q,UAAU,kBAGlC,yBAAKA,UAAU,qCACX,2BAAO2J,QAAQ,eAAf,eACA,8BAAU/I,KAAK,OAAOF,GAAG,cAAc+H,SAAU,SAACtJ,GAAD,OAAKsJ,GAAStJ,EAAE+I,OAAOH,MAAM,IAAIA,MAAO6L,GAAW,GACpGhD,SAAUA,EAAU5Q,UAAU,kBAGlC,yBAAKA,UAAU,qCACX,2BAAO2J,QAAQ,UAAf,UAA+B,0BAAM3J,UAAU,gBAAhB,MAC/B,2BAAOY,KAAK,SAASF,GAAG,SAAS+H,SAAU,SAACtJ,GAAD,OAAKsJ,GAAStJ,EAAE+I,OAAOH,MAAM,IAAIA,MAAO6L,GAAW,GAC9FhD,SAAUA,EAAUP,UAAQ,EAACoE,IAAI,IAAI0C,KAAK,MAAMnX,UAAU,kBAG7D0gB,GACA,wBAAI1gB,UAAU,yBAAyBI,MAAO,CAAC8P,aAAa,KACzD,0BAAMlQ,UAAU,yBAAyB,qBAAqBoE,EAAmBsW,QAC9E,KACNc,EAEAkF,GACD,kBAAC,GAAD,CAAc3G,sBAAuByD,EAA+B5J,WAAYA,GAC5Eb,iBAAkBA,GAAkBnC,SAAUA,EAC9C8J,yBAA0BA,GAA0BlF,eAAgBA,GACpEuF,kBAAmB4C,EAA+B3C,kBAAmB4C,EACrE9C,qBAzRD,mBAyR6Ce,qBAxR7C,sBAyRCZ,2BAA4BA,EAC5BJ,kBAAmB,2CACtB,MAGL,kBAAC,EAAD,CAAYlJ,MAAOA,EAAOgC,SAAUA,EAAUE,SAAUA,EAAUC,SAAUA,EAC5ElC,eAAgBA,UAYxC6O,GAAgBpe,YAAY,eAC5Boe,GAAgBne,KAAK,mBAENme,UCjWf,SAASI,GAAiBpiB,GACtB,IAAMuE,EAAI,CACN9B,KAAK,IAAIuW,gBAAgBhZ,EAAMiZ,SAAStR,QAAQuR,IAAI,QACpDjX,GAAG,IAAI+W,gBAAgBhZ,EAAMiZ,SAAStR,QAAQuR,IAAI,OAHzB,EAK2BpV,EAAS,CAC7DS,IAAI,eACJE,KAAK,CACDoC,OAAO,OACPC,QAAQ,CAAC,eAAe,oBACxBC,KAAKC,KAAKC,UAAU,CAACxE,KAAK,WAC1ByE,YAAY,aAXS,sBAKhB8G,EALgB,EAKrB9J,KAA4B+J,EALP,EAKC7J,MALD,EAe2BN,EAAS,CAC7DS,IAAI,yBACJE,KAAK,CACDoC,OAAO,OACPC,QAAQ,CAAC,eAAe,oBACxBC,KAAKC,KAAKC,UAAU,CAACxE,KAAK,iBAC1ByE,YAAY,aArBS,sBAehBwT,EAfgB,EAerBxW,KAA4ByW,EAfP,EAeCvW,MAfD,EAyB8EN,EAAS,MAzBvF,0BAyBhB4Y,EAzBgB,EAyBrBxY,KAAuCyY,EAzBlB,EAyBYvY,MAAoCwY,EAzBhD,KA6BvB6E,EAAe,EAGf5E,EAA2B,GAC3BC,EAAwB,GAGxBrB,EAAqB,EACrBC,EAAqB,EArCE,EA0CSzb,mBAAS,MA1ClB,mBA0CtB0O,EA1CsB,KA0CXC,EA1CW,OA2CS3O,mBAAS,MA3ClB,mBA2CtB6a,EA3CsB,KA2CXC,EA3CW,OA4C6B9a,mBAAS,MA5CtC,mBA4CtB8c,EA5CsB,KA4CDP,EA5CC,OA6CmBvc,oBAAS,GA7C5B,mBA6CtB2hB,EA7CsB,KA6CNC,EA7CM,OA8CO5hB,mBAAS,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,KA9ClD,mBA8CtBkV,EA9CsB,KA8CXb,EA9CW,KA+CtBnT,EAAcC,qBAAWL,GAAzBI,WA4CP,SAAS6b,EAAuBC,EAAUC,GACtC,MAAO,CACH3Y,IAAI,yBACJE,KAAK,CACDoC,OAAO,OACPC,QAAQ,CAAC,eAAe,oBACxBC,KAAKC,KAAKC,UAAU,CAChBgW,UAAUA,EACVC,OAAOA,IAEXhW,YAAY,YAKxB,SAAS8C,EAASV,EAAMlE,GACpBkP,EAAiB,GAAD,mBAAKa,EAAWhL,MAAM,EAAE/E,IAAxB,CAA+BkE,GAA/B,YAAwC6L,EAAWhL,MAAM/E,EAAM,EAAE+P,EAAWlS,WAGhG,SAAS8T,KACL,OAAS5B,EAAWsM,GAGxB,SAASxF,GAAyBkB,GAE9B,OAAOhI,EAAW2H,GAAyBtP,QAAO,SAACjI,EAAEC,GAEjD,OAAG2X,IAAU3X,EAAEiW,GACJlW,EAECA,EAAEC,EAAEkW,KAClBvG,EAAW0H,GAA4BrP,QAAO,SAACjI,EAAEC,GAE/C,OAAG2X,IAAU3X,EAAEiW,GACJlW,EAECA,EAAEC,EAAEkW,KAClB3E,OA/ENzW,qBAAU,WAEF0N,IAA4C,IAAxBA,EAAiBvF,MAC7BC,MAAM,iEACNvH,GAAW,IAEd6M,GAAoBA,EAAiB9J,MAAQ8J,EAAiBlF,OACnE8F,EAAiBZ,EAAiB9J,KAAK1B,KAAI,SAAA0B,GAAI,OAC/C,4BAAQxB,IAAKwB,EAAK8J,EAAiBlF,MAAM,GAAGjG,MAAOyG,MAAOpF,EAAK8J,EAAiBlF,MAAM,GAAGjG,OACpFqB,EAAK8J,EAAiBlF,MAAM,GAAGjG,MAAM,OAAOqB,EAAK8J,EAAiBlF,MAAM,GAAGjG,MAAMqB,EAAK8J,EAAiBlF,MAAM,GAAGjG,MAAM,SAK3H6X,IAA4C,IAAxBA,EAAiBjS,MAC7BC,MAAM,iEACNvH,GAAW,IAEduZ,GAAoBA,EAAiBxW,MAAQwW,EAAiB5R,OAE/DiS,EAAiBL,EAAiBxW,KAAK1B,KAAI,SAAA0B,GAAI,OAC/C,4BAAQxB,IAAKwB,EAAKwW,EAAiB5R,MAAM,GAAGjG,MAAOyG,MAAOpF,EAAKwW,EAAiB5R,MAAM,GAAGjG,QACnFqB,EAAKwW,EAAiB5R,MAAM,GAAGjG,MAAMqB,EAAKwW,EAAiB5R,MAAM,GAAGjG,MAAM,IAC3E,OAAOqB,EAAKwW,EAAiB5R,MAAM,GAAGjG,MAAMqB,EAAKwW,EAAiB5R,MAAM,GAAGjG,MAAM,SAIjE,KAAzBsS,EA9CS,IA+CT0M,GAAsB,KAG5B,CAAC7T,EAAiBC,EAAkByM,EAAiBC,EAAkBxF,EAlDxD,KAsDjB7U,qBAAU,WACFoc,IAAkE,IAAnCA,EAA4BjU,OAC3DC,MAAM,iEACNvH,GAAW,MAEjB,CAACub,EAA4BC,IA4C/B,IAAItD,GAAsB,KAsB1B,OApBKrL,GAAoBA,EAAiB5J,OAAU6J,GAAsByM,GAAoBA,EAAiBtW,OAAUuW,GACrH+B,GAA+BA,EAA4BtY,OAAUuY,KACzEtD,GACI,yBAAK9X,UAAU,uBACVyM,GAAoBA,EAAiB5J,MAAO,gDAAgD4J,EAAiB5J,MAAM2E,MACnH,UAAUiF,EAAiB5J,MAAM4E,KAAK,aAAagF,EAAiB5J,MAAM6E,WAAW,KACrFgF,EAAmB,yCAAyCA,EAAoB,KACjF,6BACA,6BACCyM,GAAoBA,EAAiBtW,MAAO,iDAAiDsW,EAAiBtW,MAAM2E,MACpH,UAAU2R,EAAiBtW,MAAM4E,KAAK,aAAa0R,EAAiBtW,MAAM6E,WAAW,KACrF0R,EAAmB,0CAA0CA,EAAoB,KAClF,6BACA,6BACC+B,GAA+BA,EAA4BtY,MAAO,4DACjEsY,EAA4BtY,MAAM2E,MAAO,UAAU2T,EAA4BtY,MAAM4E,KAAK,aAC5F0T,EAA4BtY,MAAM6E,WAAW,KAC5C0T,EAA8B,qDAAqDA,EAA+B,OAIvH,kBAAC,EAAD,CAAMxH,WAAYA,EAAYb,iBAAkBA,EAAkB/P,IAAKA,EAAK9B,KAAK,eAAewS,YAAY,eACxGT,iBAAkBwI,EAAwBzI,uBAAwBqI,EAClEnI,0BAlIgB,EAkI8BC,eA/HjC,IAiIb,gBAAExB,EAAF,EAAEA,MAAMf,EAAR,EAAQA,SAASgB,EAAjB,EAAiBA,eAAe+B,EAAhC,EAAgCA,SAASE,EAAzC,EAAyCA,SAASC,EAAlD,EAAkDA,SAAS/D,EAA3D,EAA2DA,aAAagE,EAAxE,EAAwEA,kBAAxE,OACC,kBAAC,EAAD,KACG,yBAAK/T,UAAU,0BAIX,wBAAIA,UAAU,SAAiB,WAAR2R,EAAkB,SAAS,UAAY,IAAKkP,GAAgBxe,aACnF,2BAAOrC,UAAU,gBAAjB,cACC+P,EACA+H,GAID,0BAAM3H,SAAU,SAAChR,GACbA,EAAEiR,iBAE+B,IAA7BsK,MAAkC2F,EAClCpF,EACK,uBAAGjb,UAAU,iDAAb,0CAKM,WAAR2R,EAAkBgC,IAChBE,MAGT,yBAAK7T,UAAU,cACX,2BAAOA,UAAU,mBAAmBY,KAAK,WAAWkH,QAASuY,EAAiBzP,SAAUA,EAAUlQ,GAAG,kBACrG+H,SAAU,SAACtJ,GACPmhB,GAAuBD,GACvBtN,EAAiB,GAAD,mBAAKa,EAAWhL,MAAM,EAnK1C,IAmKoB,CAA2C,IAA3C,YACbgL,EAAWhL,MAAM2X,EAlK/B,IAiK2B,CACoC,IADpC,YAEb3M,EAAWhL,MAAM4X,EAAalF,IAFjB,CAE6C,GAAG,SAGpE,2BAAOtb,UAAU,mBAAmB2J,QAAQ,mBAA5C,oBAIJ,yBAAK3J,UAAU,OACX,8BAAUA,UAAU,yEACpB4Q,WAAUA,IAAgByP,GACtB,4BAAQrgB,UAAU,6CAA6C,uCAC/D,2BAAOA,UAAU,OAAO2J,QAAQ,YAAhC,aACA,yBAAK3J,UAAU,eACX,2BAAOY,KAAK,OAAOF,GAAG,WAAWqH,MAAO6L,EAAW,GAAInL,SAAU,SAACtJ,GAAD,OAAKA,GAAGkR,UAAQ,EAACrQ,UAAU,iBAC5F,4BAAQA,UAAU,eAAeI,MAAO,CAAC2Q,KAAK,SAAUhJ,MAAO6L,EAAW,GAAInL,SAAU,SAACtJ,GACzFsJ,EAAStJ,EAAE+I,OAAOH,MAAM,GACxBsT,EACII,EAAuBtc,EAAE+I,OAAOH,MAAM6L,EAnLrD,OAsLe,4BAAQ7L,MAAM,IAAd,wBACCqF,KAIb,8BAAUpN,UAAU,yEAAyE4Q,WAAUA,GAAeyP,GAClH,4BAAQrgB,UAAU,6CAA6C,wCAC/D,2BAAOA,UAAU,OAAO2J,QAAQ,UAAhC,WACA,yBAAK3J,UAAU,eACX,2BAAOY,KAAK,OAAOF,GAAG,SAASqH,MAAO6L,EAAW,GAAInL,SAAU,SAACtJ,GAAD,OAAKA,GAAGkR,UAAQ,EAACrQ,UAAU,iBAC1F,4BAAQA,UAAU,eAAeI,MAAO,CAAC2Q,KAAK,SAAUtI,SAAU,SAACtJ,GACnEsJ,EAAStJ,EAAE+I,OAAOH,MAAM,KAEpB,4BAAQA,MAAM,IAAd,wBACCwR,KAKb,yBAAKvZ,UAAU,4BACX,2BAAO2J,QAAQ,kBAAf,mBAAgD,0BAAM3J,UAAU,gBAAhB,MAC/C+T,EAAkB,CACftL,SAASA,EACTwL,OAAO,GACPK,SAAS,EACTC,QAAQ,oBAMhB,yBAAKvU,UAAU,qCACX,2BAAO2J,QAAQ,QAAf,QAA2B,0BAAM3J,UAAU,gBAAhB,MAC3B,2BAAOY,KAAK,OAAOgQ,SAAUA,EAAUP,UAAQ,EAACtI,MAAO6L,EAAW,GAAInL,SAAU,SAACtJ,GAAD,OAAKsJ,EAAStJ,EAAE+I,OAAOH,MAAM,IAC7G/H,UAAU,kBAGd,yBAAKA,UAAU,qCACX,2BAAO2J,QAAQ,iBAAf,kBACA,2BAAO/I,KAAK,OAAOF,GAAG,gBAAgB+H,SAAU,SAACtJ,GAAD,OAAKsJ,EAAStJ,EAAE+I,OAAOH,MAAM,IAAIA,MAAO6L,EAAW,GACnGhD,SAAUA,EAAU5Q,UAAU,kBAGlC,yBAAKA,UAAU,qCACX,2BAAO2J,QAAQ,iBAAf,kBACA,2BAAO/I,KAAK,OAAOF,GAAG,gBAAgB+H,SAAU,SAACtJ,GAAD,OAAKsJ,EAAStJ,EAAE+I,OAAOH,MAAM,IAAIA,MAAO6L,EAAW,GACnGhD,SAAUA,EAAU5Q,UAAU,kBAGlC,yBAAKA,UAAU,qCACX,2BAAO2J,QAAQ,eAAf,eACA,8BAAU/I,KAAK,OAAOF,GAAG,cAAc+H,SAAU,SAACtJ,GAAD,OAAKsJ,EAAStJ,EAAE+I,OAAOH,MAAM,IAAIA,MAAO6L,EAAW,GACpGhD,SAAUA,EAAU5Q,UAAU,kBAGlC,yBAAKA,UAAU,qCACX,2BAAO2J,QAAQ,UAAf,UAA+B,0BAAM3J,UAAU,gBAAhB,MAC/B,2BAAOY,KAAK,SAASF,GAAG,SAAS+H,SAAU,SAACtJ,GAAD,OAAKsJ,EAAStJ,EAAE+I,OAAOH,MAAM,IAAIA,MAAO6L,EAAW,GAC9FhD,SAAUA,EAAUP,UAAQ,EAACoE,IAAI,IAAI0C,KAAK,MAAMnX,UAAU,kBAI7DqgB,EACA,wBAAIrgB,UAAU,yBAAyBI,MAAO,CAAC8P,aAAa,KACzD,0BAAMlQ,UAAU,yBAAyB,qBAAqBoE,EAAmBsW,QAC9E,KACNc,EAEA6E,EACD,kBAAC,GAAD,CAActG,sBAAuBoB,EAA6BvH,WAAYA,EAC1Eb,iBAAkBA,EAAkBnC,SAAUA,EAC9C8J,yBAA0BA,GAA0BlF,eAAgBA,GACpEuF,kBAAmBO,EAA4BN,kBAAmBO,EAClET,qBAvPD,UAuP6Ce,qBAtP7C,aAuPCZ,2BAA4BA,EAC5BJ,kBAAmB,+BACtB,MAGL,kBAAC,EAAD,CAAYlJ,MAAOA,EAAOgC,SAAUA,EAAUE,SAAUA,EAAUC,SAAUA,EAC5ElC,eAAgBA,UAYxCiP,GAAgBxe,YAAY,eAC5Bwe,GAAgBve,KAAK,mBAENue,UCpTf,SAASC,GAAiBriB,GACtB,IAAMuE,EAAI,CACN9B,KAAK,IAAIuW,gBAAgBhZ,EAAMiZ,SAAStR,QAAQuR,IAAI,QACpDjX,GAAG,IAAI+W,gBAAgBhZ,EAAMiZ,SAAStR,QAAQuR,IAAI,OAHzB,EAKyDpV,EAAS,CAC3FS,IAAI,eACJE,KAAK,CACDoC,OAAO,OACPC,QAAQ,CAAC,eAAe,oBACxBC,KAAKC,KAAKC,UAAU,CAACxE,KAAK,aAC1ByE,YAAY,aAXS,0BAKhB0W,EALgB,EAKrB1Z,KAA8B2Z,EALT,EAKGzZ,MALH,QAemDN,EAAS,CACrFS,IAAI,yBACJE,KAAK,CACDoC,OAAO,OACPC,QAAQ,CAAC,eAAe,oBACxBC,KAAKC,KAAKC,UAAU,CAACxE,KAAK,iBAC1ByE,YAAY,cArBS,0BAehBwT,EAfgB,EAerBxW,KAA4ByW,EAfP,EAeCvW,MAfD,QAyBoFN,EAAS,OAzB7F,0BAyBhBib,EAzBgB,EAyBrB7a,KAAyC8a,EAzBpB,EAyBc5a,MAAsC6a,EAzBpD,KA6BvBwC,EAAe,EAGfvC,EAA8B,GAC9BC,EAAgC,GAGhC1D,EAAqB,EACrBC,EAAqB,EArCE,EA0Cazb,mBAAS,MA1CtB,mBA0CtBge,EA1CsB,KA0CTC,EA1CS,OA2CSje,mBAAS,MA3ClB,mBA2CtB6a,EA3CsB,KA2CXC,EA3CW,OA4C6B9a,mBAAS,MA5CtC,mBA4CtB8c,EA5CsB,KA4CDP,EA5CC,OA6CuBvc,oBAAS,GA7ChC,mBA6CtBgiB,EA7CsB,KA6CJC,EA7CI,OA8COjiB,mBAAS,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,KA9ClD,mBA8CtBkV,EA9CsB,KA8CXb,EA9CW,KA+CtBnT,EAAcC,qBAAWL,GAAzBI,WA6CP,SAASie,GAAyBC,EAAYnC,GAC1C,MAAO,CACH3Y,IAAI,2BACJE,KAAK,CACDoC,OAAO,OACPC,QAAQ,CAAC,eAAe,oBACxBC,KAAKC,KAAKC,UAAU,CAChBoY,YAAYA,EACZnC,OAAOA,IAEXhW,YAAY,YAKxB,SAAS8C,GAASV,EAAMlE,GACpBkP,EAAiB,GAAD,mBAAKa,EAAWhL,MAAM,EAAE/E,IAAxB,CAA+BkE,GAA/B,YAAwC6L,EAAWhL,MAAM/E,EAAM,EAAE+P,EAAWlS,WAGhG,SAAS8T,KACL,OAAS5B,EAAWsM,GAGxB,SAASxF,GAAyBkB,GAC9B,OAAOhI,EAAWgK,GAAiC3R,QAAO,SAACjI,EAAEC,GAEzD,OAAG2X,IAAU3X,EAAEiW,GACJlW,EAECA,EAAEC,EAAEkW,KAClBvG,EAAW+J,GAA+B1R,QAAO,SAACjI,EAAEC,GAElD,OAAG2X,IAAU3X,EAAEiW,GACJlW,EAECA,EAAEC,EAAEkW,KAClB3E,OA/ENzW,qBAAU,WAEFsd,IAAgD,IAA1BA,EAAmBnV,MACjCC,MAAM,iEACNvH,GAAW,IAEdyc,GAAsBA,EAAmB1Z,MAAQ0Z,EAAmB9U,OACzEoV,EAAmBN,EAAmB1Z,KAAK1B,KAAI,SAAA0B,GAAI,OACnD,4BAAQxB,IAAKwB,EAAK0Z,EAAmB9U,MAAM,GAAGjG,MAAOyG,MAAOpF,EAAK0Z,EAAmB9U,MAAM,GAAGjG,OACxFqB,EAAK0Z,EAAmB9U,MAAM,GAAGjG,MAAM,OAAOqB,EAAK0Z,EAAmB9U,MAAM,GAAGjG,MAAMqB,EAAK0Z,EAAmB9U,MAAM,GAAGjG,MAAM,SAKjI6X,IAA4C,IAAxBA,EAAiBjS,MAC7BC,MAAM,iEACNvH,GAAW,IAEduZ,GAAoBA,EAAiBxW,MAAQwW,EAAiB5R,OAE/DiS,EAAiBL,EAAiBxW,KAAK1B,KAAI,SAAA0B,GAAI,OAC/C,4BAAQxB,IAAKwB,EAAKwW,EAAiB5R,MAAM,GAAGjG,MAAOyG,MAAOpF,EAAKwW,EAAiB5R,MAAM,GAAGjG,QACnFqB,EAAKwW,EAAiB5R,MAAM,GAAGjG,MAAMqB,EAAKwW,EAAiB5R,MAAM,GAAGjG,MAAM,IAC3E,OAAOqB,EAAKwW,EAAiB5R,MAAM,GAAGjG,MAAMqB,EAAKwW,EAAiB5R,MAAM,GAAGjG,MAAM,SAKjE,KAAzBsS,EA/CS,IAgDT+M,GAAwB,KAG9B,CAACtE,EAAmBC,EAAoBnD,EAAiBC,EAAkBxF,EAnD5D,KAuDjB7U,qBAAU,WACFye,IAAsE,IAArCA,EAA8BtW,OAC/DC,MAAM,iEACNvH,GAAW,MAEjB,CAAC4d,EAA8BC,IA2CjC,IAAI3F,GAAsB,KAwB1B,OAtBKuE,GAAsBA,EAAmBxZ,OAAUyZ,GAAwBnD,GAAoBA,EAAiBtW,OAClHuW,GAAsBoE,GAAiCA,EAA8B3a,OACxF4a,KACA3F,GACI,yBAAK9X,UAAU,uBACVqc,GAAsBA,EAAmBxZ,MAAO,kDAAkDwZ,EAAmBxZ,MAAM2E,MAC3H,UAAU6U,EAAmBxZ,MAAM4E,KAAK,aAAa4U,EAAmBxZ,MAAM6E,WAAW,KACzF4U,EAAqB,2CAA2CA,EAAsB,KACvF,6BACA,6BACCnD,GAAoBA,EAAiBtW,MAAO,iDAAiDsW,EAAiBtW,MAAM2E,MACpH,UAAU2R,EAAiBtW,MAAM4E,KAAK,aAAa0R,EAAiBtW,MAAM6E,WAAW,KACrF0R,EAAmB,0CAA0CA,EAAoB,KAClF,6BACA,6BACCoE,GAAiCA,EAA8B3a,MAAO,8DACrE2a,EAA8B3a,MAAM2E,MAAO,UAAUgW,EAA8B3a,MAAM4E,KAAK,aAChG+V,EAA8B3a,MAAM6E,WAAW,KAC9C+V,EAAgC,uDAAuDA,EAAiC,OAK7H,kBAAC,EAAD,CAAM7J,WAAYA,EAAYb,iBAAkBA,EAAkB/P,IAAKA,EAAK9B,KAAK,eAAewS,YAAY,eAC5GT,iBAAkB4K,GAA0B7K,uBAAwB0K,EACpExK,0BApIsB,EAoI0BC,eAjI/B,IAmIb,gBAAExB,EAAF,EAAEA,MAAMf,EAAR,EAAQA,SAASgB,EAAjB,EAAiBA,eAAe+B,EAAhC,EAAgCA,SAASE,EAAzC,EAAyCA,SAASC,EAAlD,EAAkDA,SAAS/D,EAA3D,EAA2DA,aAAagE,EAAxE,EAAwEA,kBAAxE,OACC,kBAAC,EAAD,KACG,yBAAK/T,UAAU,0BAIX,wBAAIA,UAAU,SAAiB,WAAR2R,EAAkB,SAAS,UAAY,IAAKmP,GAAgBze,aACnF,2BAAOrC,UAAU,gBAAjB,cACC+P,EACA+H,GAID,0BAAM3H,SAAU,SAAChR,GAAKA,EAAEiR,iBACa,IAA7BsK,MAAkCgG,EAClCzF,EACK,uBAAGjb,UAAU,iDAAb,0CAKM,WAAR2R,EAAkBgC,IAChBE,MAGT,yBAAK7T,UAAU,cACX,2BAAOA,UAAU,mBAAmBY,KAAK,WAAWkH,QAAS4Y,EAAmB9P,SAAUA,EAAUlQ,GAAG,oBACvG+H,SAAU,SAACtJ,GACPwhB,GAAyBD,GACzB3N,EAAiB,GAAD,mBAAKa,EAAWhL,MAAM,EAnKxC,IAmKkB,CAA6C,IAA7C,YACbgL,EAAWhL,MAAMgY,EAlK/B,IAiK2B,CACsC,IADtC,YAEbhN,EAAWhL,MAAM4X,EAAa7C,IAFjB,CAEgD,GAAG,SAGvE,2BAAO3d,UAAU,mBAAmB2J,QAAQ,qBAA5C,sBAIJ,yBAAK3J,UAAU,OACX,8BAAUA,UAAU,yEACpB4Q,WAAUA,IAAgB8P,GACtB,4BAAQ1gB,UAAU,6CAA6C,yCAC/D,2BAAOA,UAAU,OAAO2J,QAAQ,cAAhC,eACA,yBAAK3J,UAAU,eACX,2BAAOY,KAAK,OAAOF,GAAG,aAAaqH,MAAO6L,EAAW,GAAInL,SAAU,SAACtJ,GAAD,OAAKA,GAAGkR,UAAQ,EAACrQ,UAAU,iBAC9F,4BAAQA,UAAU,eAAeI,MAAO,CAAC2Q,KAAK,SAAUhJ,MAAO6L,EAAW,GAAInL,SAAU,SAACtJ,GACzFsJ,GAAStJ,EAAE+I,OAAOH,MAAM,GACxB2V,EACIG,GAAyB1e,EAAE+I,OAAOH,MAAM6L,EAnLvD,OAsLe,4BAAQ7L,MAAM,IAAd,wBACC2U,KAIb,8BAAU1c,UAAU,yEAAyE4Q,WAAUA,GAAe8P,GAClH,4BAAQ1gB,UAAU,6CAA6C,wCAC/D,2BAAOA,UAAU,OAAO2J,QAAQ,UAAhC,WACA,yBAAK3J,UAAU,eACX,2BAAOY,KAAK,OAAOF,GAAG,SAASqH,MAAO6L,EAAW,GAAInL,SAAU,SAACtJ,GAAD,OAAKA,GAAGkR,UAAQ,EAACrQ,UAAU,iBAC1F,4BAAQA,UAAU,eAAeI,MAAO,CAAC2Q,KAAK,SAAUtI,SAAU,SAACtJ,GACnEsJ,GAAStJ,EAAE+I,OAAOH,MAAM,KAEpB,4BAAQA,MAAM,IAAd,wBACCwR,KAKb,yBAAKvZ,UAAU,4BACX,2BAAO2J,QAAQ,kBAAf,mBAAgD,0BAAM3J,UAAU,gBAAhB,MAC/C+T,EAAkB,CACftL,SAASA,GACTwL,OAAO,GACPK,SAAS,EACTC,QAAQ,oBAMhB,yBAAKvU,UAAU,qCACX,2BAAO2J,QAAQ,QAAf,QAA2B,0BAAM3J,UAAU,gBAAhB,MAC3B,2BAAOY,KAAK,OAAOgQ,SAAUA,EAAUP,UAAQ,EAACtI,MAAO6L,EAAW,GAAInL,SAAU,SAACtJ,GAAD,OAAKsJ,GAAStJ,EAAE+I,OAAOH,MAAM,IAC7G/H,UAAU,kBAGd,yBAAKA,UAAU,qCACX,2BAAO2J,QAAQ,iBAAf,kBACA,2BAAO/I,KAAK,OAAOF,GAAG,gBAAgB+H,SAAU,SAACtJ,GAAD,OAAKsJ,GAAStJ,EAAE+I,OAAOH,MAAM,IAAIA,MAAO6L,EAAW,GACnGhD,SAAUA,EAAU5Q,UAAU,kBAGlC,yBAAKA,UAAU,qCACX,2BAAO2J,QAAQ,iBAAf,kBACA,2BAAO/I,KAAK,OAAOF,GAAG,gBAAgB+H,SAAU,SAACtJ,GAAD,OAAKsJ,GAAStJ,EAAE+I,OAAOH,MAAM,IAAIA,MAAO6L,EAAW,GACnGhD,SAAUA,EAAU5Q,UAAU,kBAGlC,yBAAKA,UAAU,qCACX,2BAAO2J,QAAQ,eAAf,eACA,8BAAU/I,KAAK,OAAOF,GAAG,cAAc+H,SAAU,SAACtJ,GAAD,OAAKsJ,GAAStJ,EAAE+I,OAAOH,MAAM,IAAIA,MAAO6L,EAAW,GACpGhD,SAAUA,EAAU5Q,UAAU,kBAGlC,yBAAKA,UAAU,qCACX,2BAAO2J,QAAQ,UAAf,UAA+B,0BAAM3J,UAAU,gBAAhB,MAC/B,2BAAOY,KAAK,SAASF,GAAG,SAAS+H,SAAU,SAACtJ,GAAD,OAAKsJ,GAAStJ,EAAE+I,OAAOH,MAAM,IAAIA,MAAO6L,EAAW,GAC9FhD,SAAUA,EAAUP,UAAQ,EAACoE,IAAI,IAAI0C,KAAK,MAAMnX,UAAU,kBAI7D0gB,EACA,wBAAI1gB,UAAU,yBAAyBI,MAAO,CAAC8P,aAAa,KACzD,0BAAMlQ,UAAU,yBAAyB,qBAAqBoE,EAAmBsW,QAC9E,KACNc,EAEAkF,EACG,kBAAC,GAAD,CAAc3G,sBAAuByD,EAA+B5J,WAAYA,EAChFb,iBAAkBA,EAAkBnC,SAAUA,EAC9C8J,yBAA0BA,GAA0BlF,eAAgBA,GACpEuF,kBAAmB4C,EAA+B3C,kBAAmB4C,EACrE9C,qBAvPD,mBAuP6Ce,qBAtP7C,sBAuPCZ,2BAA4BA,EAC5BJ,kBAAmB,2CACtB,MAGL,kBAAC,EAAD,CAAYlJ,MAAOA,EAAOgC,SAAUA,EAAUE,SAAUA,EAAUC,SAAUA,EAC5ElC,eAAgBA,UAYxCkP,GAAgBze,YAAY,eAC5Bye,GAAgBxe,KAAK,mBAENwe,U,oBCzTf,SAASC,GAAkBtiB,GACvB,OACQ,kBAAC,EAAD,KACI,kBAAC,EAAD,CAASwI,eAAe,eAAe/F,KAAK,SAC5C3B,OAAQ,SAACwK,GACL,OACA,kBAAC,EAAD,eAAe1H,YAAa0e,GAAkB1e,YAAawH,SAAU,UAAcE,QASvGgX,GAAkB1e,YAAY,qBAC9B0e,GAAkBze,KAAK,qBAERye,UCoNAC,OAnOf,SAAgCviB,GAAQ,IAAD,EAEVA,EAAMoM,YAA5BiE,EAFgC,EAEhCA,SAASmS,EAFuB,EAEvBA,YACVra,EAAQC,cA2KV,OACI,yBAAK7G,UAAU,wBACX,4BAAQY,KAAK,QAAQZ,UAAU,sCAC3Ba,QAAS,WACL+G,SAAS+C,cAAc,uBAAuBxC,aAC9C,UAAU,yCACViC,EAAY,eACZxD,EAAQI,KAAKvI,EAAMmM,YAL3B,QAOA,wBAAI5K,UAAU,oBACTvB,EAAM4D,YAAY,UAAYoC,EAAiBhG,EAAMoM,YAAN,WAEpD,wBAAI7K,UAAU,uBACd,2BAAOA,UAAU,0BACb,+BACI,wBAAIA,UAAU,+BACV,wBAAIA,UAAU,aAAd,cACA,wBAAIA,UAAU,aAAd,QACCvB,EAAM0M,YAAa,6BAAW,KAC9B1M,EAAM0M,YAAa,6BAAW,KAC/B,wBAAInL,UAAU,aAAd,WACCvB,EAAMyiB,0BAA0BziB,EAAMoM,YAAN,aACjC,wBAAI7K,UAAU,aAAa,KAAKvB,EAAMoM,YAAN,YAAiC,UACjE,wBAAI7K,UAAU,aAAd,iBACA,wBAAIA,UAAU,aAAd,YAGHvB,EAAM0M,YACN,wBAAInL,UAAU,iDACX,wBAAIA,UAAU,aAAd,WACA,wBAAIA,UAAU,aAAd,YACA,wBAAIA,UAAU,aAAd,QACA,wBAAIA,UAAU,aAAd,YACA,wBAAIme,QAAS,EAAE1f,EAAMoM,YAAN,eACZ,KACNpM,EAAM0M,YACN,4BACG,wBAAInL,UAAU,iCAAiCme,QAAS,EAAE1f,EAAMoM,YAAN,eAE7D,4BACG,wBAAI7K,UAAU,4CAA4Cme,QAAS,EAAE1f,EAAMoM,YAAN,gBAjN7F,SAAwBiE,EAASmS,GACzB,IAAMte,EAAKlE,EAAMkE,KACX6I,EAAW/M,EAAM+M,WACjBjE,EAAM9I,EAAM8I,MACZmU,EAAUnU,EAAM,GAAGjG,KACnBA,EAAKiG,EAAM,GAAGjG,KACdwF,EAAOS,EAAM,GAAGjG,KAChBgd,EAAQ/W,EAAM,GAAGjG,KACjBV,EAAK2G,EAAM,GAAGjG,KACdiX,EAAOhR,EAAM,GAAGjG,KAChB6f,EAAW5Z,EAAM,GAAGjG,KAGpB8f,EAAoB,GACpB/b,EAAO,GAuJb,OArJA1C,EAAKgF,SAAQ,SAAAzG,IAC0C,IAAhDkgB,EAAoBzY,QAAQzH,EAAKwa,MAChC0F,EAAoBpa,KAAK9F,EAAKwa,IAC9BrW,EAAO2B,KACN,2BAAO7F,IAAKD,EAAKwa,GAAY1b,UAAU,kCACpC,wBAAIA,UAAU,+BACV,wBAAIA,UAAU,aAAakB,EAAKwa,IAChC,wBAAI1b,UAAU,aAAakB,EAAKI,IAC/B7C,EAAM0M,YAAa,6BAAW,KAC9B1M,EAAM0M,YAAa,6BAAW,KAC/B,wBAAInL,UAAU,aACToE,EAAmBzB,EAAKsJ,QAAO,SAACjI,EAAEC,GACnC,OAAGA,EAAEyX,KAAaxa,EAAKwa,IACTjd,EAAM4iB,4BACZvS,EACA7K,EAAEkd,IAA+B,QAAhBld,EAAEkd,GACf1iB,EAAMoP,iBAAiB,IAAIlJ,KAAK,IAAIA,KAAKV,EAAEqa,IAC1CgD,QAAQ,IAAI3c,KAAKV,EAAEqa,IAAUvZ,UAAUF,OAAOZ,EAAEkd,OAC/Cld,EAAEqa,GACRra,EAAEsU,IAIKvU,EAAEC,EAAEsU,GAIPvU,IACd,KAEDvF,EAAM0N,qBACH2C,EACA5N,EAAKwa,GACL7W,OAAOoc,GACP,SAEJ,wBAAIjhB,UAAU,aACToE,EAAmBzB,EAAKsJ,QAAO,SAACjI,EAAEC,GACnC,OAAGA,EAAEyX,KAAaxa,EAAKwa,IACTjd,EAAM8iB,8BACZzS,EACA7K,EAAEkd,IAA+B,QAAhBld,EAAEkd,GACf1iB,EAAMoP,iBAAiB,IAAIlJ,KAAK,IAAIA,KAAKV,EAAEqa,IAC1CgD,QAAQ,IAAI3c,KAAKV,EAAEqa,IAAUvZ,UAAUF,OAAOZ,EAAEkd,OAC/Cld,EAAEqa,GACRra,EAAEsU,GACF1T,OAAOoc,IAIAjd,EAAEC,EAAEsU,GAKPvU,IACd,KACF,wBAAIhE,UAAU,aACToE,EACGzB,EAAKsJ,QAAO,SAACjI,EAAEC,GACf,OAAGA,EAAEyX,KAAaxa,EAAKwa,GACZ1X,EAAEC,EAAEsU,GACHvU,IACV,GACFrB,EAAKsJ,QAAO,SAACjI,EAAEC,GACf,OAAGA,EAAEyX,KAAaxa,EAAKwa,IACTjd,EAAM4iB,4BACZvS,EACA7K,EAAEkd,IAA+B,QAAhBld,EAAEkd,GACf1iB,EAAMoP,iBAAiB,IAAIlJ,KAAK,IAAIA,KAAKV,EAAEqa,IAC1CgD,QAAQ,IAAI3c,KAAKV,EAAEqa,IAAUvZ,UAAUF,OAAOZ,EAAEkd,OAC/Cld,EAAEqa,GACRra,EAAEsU,IAIKvU,EAAEC,EAAEsU,GAIPvU,IACd,KAGN,wBAAIhE,UAAU,aACToE,EACGzB,EAAKsJ,QAAO,SAACjI,EAAEC,GACf,OAAGA,EAAEyX,KAAaxa,EAAKwa,GACZ1X,EAAEC,EAAEsU,GACHvU,IACV,MAIbvF,EAAM0M,YAAaK,EAAWvK,KAAI,SAACmL,EAAM5D,GACtC,OAAI4D,EAAMsP,KAAaxa,EAAKwa,GAEpB,wBAAIva,IAAKiL,EAAMtF,IACX,wBAAI9G,UAAU,aAAaoM,EAAMtF,IACjC,wBAAI9G,UAAU,aAAayE,EAAiB2H,EAAMkS,KAClD,wBAAIte,UAAU,aAAaoM,EAAMxL,IACjC,wBAAIZ,UAAU,aACVoM,EAAM+U,IAAmC,QAApB/U,EAAM+U,GAC3B1c,EAAiBhG,EAAMoP,iBACnB,IAAIlJ,KAAK,IAAIA,KAAKyH,EAAMkS,IACvBgD,QAAQ,IAAI3c,KAAKyH,EAAMkS,IAAUvZ,UAAUF,OAAOuH,EAAM+U,QAC3D1c,EAAiB2H,EAAMkS,KAE7B,wBAAIte,UAAU,aACVoE,EAAmB3F,EAAM4iB,4BACrBvS,EACA1C,EAAM+U,IAAmC,QAApB/U,EAAM+U,GACvB1iB,EAAMoP,iBAAiB,IAAIlJ,KAAK,IAAIA,KAAKyH,EAAMkS,IAC9CgD,QAAQ,IAAI3c,KAAKyH,EAAMkS,IAAUvZ,UAAUF,OAAOuH,EAAM+U,OACvD/U,EAAMkS,GACZlS,EAAMmM,MAGb9Z,EAAM+S,0BACH1C,EACA1C,EAAM+U,IAAmC,QAApB/U,EAAM+U,GACvB1iB,EAAMoP,iBAAiB,IAAIlJ,KAAK,IAAIA,KAAKyH,EAAMkS,IAC9CgD,QAAQ,IAAI3c,KAAKyH,EAAMkS,IAAUvZ,UAAUF,OAAOuH,EAAM+U,OACvD/U,EAAMkS,GACZlS,EAAMmM,GACN1T,OAAOoc,IAEX,wBAAIjhB,UAAU,aACdoE,EAAmB3F,EAAM8iB,8BACrBzS,EACA1C,EAAM+U,IAAmC,QAApB/U,EAAM+U,GACvB1iB,EAAMoP,iBAAiB,IAAIlJ,KAAK,IAAIA,KAAKyH,EAAMkS,IAC9CgD,QAAQ,IAAI3c,KAAKyH,EAAMkS,IAAUvZ,UAAUF,OAAOuH,EAAM+U,OACvD/U,EAAMkS,GACZlS,EAAMmM,GACN1T,OAAOoc,MAGX,wBAAIjhB,UAAU,cACd,wBAAIA,UAAU,eAGd,QACT,WAMZqF,EAiDEmc,CAAe1S,EAASmS,IAE7B,wBAAIjhB,UAAU,uBACd,2BAAOA,UAAU,uBAAjB,mBCpNZ,SAASyhB,GAAkBhjB,GAAQ,IAAD,IAC0B8D,EAAS,CAC7DS,IAAI,eACJE,KAAK,CACDoC,OAAO,OACPC,QAAQ,CAAC,eAAe,oBACxBC,KAAKC,KAAKC,UAAU,CAACxE,KAAK,WAC1ByE,YAAY,aAPU,sBACjB8G,EADiB,EACtB9J,KAA4B+J,EADN,EACA7J,MADA,EAW2DN,EAAS,MAXpE,0BAWjBmf,EAXiB,EAWtB/e,KAAiCgf,EAXX,EAWK9e,MAA8B+e,EAXnC,OAaQljB,mBAAS,MAbjB,mBAavB0O,EAbuB,KAaZC,EAbY,OAeI3O,mBAAUmP,GAAiB,IAAIlJ,OAfnC,mBAevBmK,EAfuB,KAed+S,EAfc,OAgBInjB,mBAAS,IAhBb,mBAgBvBojB,EAhBuB,KAgBdC,EAhBc,OAiBQrjB,mBAAS,GAjBjB,mBAiBvBuiB,EAjBuB,KAiBXe,EAjBW,OAkBQtjB,mBAAS,MAlBjB,mBAkBvBmM,EAlBuB,KAkBXkD,EAlBW,OAmB0BrP,mBAAS,IAnBnC,mBAmBvBsP,EAnBuB,KAmBFC,EAnBE,OAsBQvP,oBAAS,GAtBjB,mBAsBvByM,EAtBuB,KAsBX+C,GAtBW,QAuBkBxP,mBAAS,MAvB3B,qBAuBvByP,GAvBuB,MAuBNC,GAvBM,SAwB8B1P,mBAAS,MAxBvC,qBAwBvB2P,GAxBuB,MAwBAC,GAxBA,SAyBU5P,mBAAS,IAzBnB,qBAyBvB6P,GAzBuB,MAyBVC,GAzBU,SA0BsB9P,mBAAS,IA1B/B,qBA0BvB+P,GA1BuB,MA0BJC,GA1BI,SA2B4BhQ,oBAAS,GA3BrC,qBA2BvBiQ,GA3BuB,MA2BDC,GA3BC,MA6BvBtM,GAAQuM,cAARvM,KACA1C,GAAcC,qBAAWL,GAAzBI,WACDgH,GAAQC,cAERmK,GAAgBnG,GAAeA,EAAW,YAAiB,IAA+B,GAA3BA,EAAW,YAAmB,OAmHnG,SAASgD,GAAiBnJ,GACtB,IAAIoK,EAAS,IAAInK,KAAKD,GAEtB,OAAQoK,EAAS9J,eAAkB8J,EAAShK,WAAa,EAAG,GAAI,MAAOgK,EAAShK,WAAW,GAAG,KAAMgK,EAAShK,WAAW,KAAOgK,EAAS/J,UAAU,GAClJ,KAAK+J,EAAS/J,UAAY,IAAI+J,EAAS/J,WAa3C,SAASoH,GAAqB2C,EAASgT,EAASG,EAAOrhB,GASnD,IARA,IAAIyE,EAAO,GACL1C,EAAKkI,EAAW,KAChBtD,EAAMsD,EAAW,MACjB6Q,EAAUnU,EAAM,GAAGjG,KACnBgd,EAAQ/W,EAAM,GAAGjG,KACjBiX,EAAOhR,EAAM,GAAGjG,KAChB6f,EAAW5Z,EAAM,GAAGjG,KAP+B,WASjDkH,GACJ,IAAI0Z,EAAYvf,EAAKsJ,QAAO,SAACjI,EAAEC,GAC3B,OAAGA,EAAEyX,KAAaoG,GAEJK,GACNrT,EACA7K,EAAEkd,IAA+B,QAAhBld,EAAEkd,GACftT,GAAiB,IAAIlJ,KAAK,IAAIA,KAAKV,EAAEqa,IACpCgD,QAAQ,IAAI3c,KAAKV,EAAEqa,IAAUvZ,UAAUF,OAAOZ,EAAEkd,OAC/Cld,EAAEqa,GACRra,EAAEsU,GACF/P,GAIOxE,EAAEC,EAAEsU,GAGPvU,IACd,GAES,UAAPpD,EACAyE,EAAO2B,KACH,uBAAGhH,UAAU,OAAOmB,IAAKqH,EAAGpI,MAAO,CAAC2Q,KAAK,WAAWd,YAAY,GAAGC,aAAa,KAC5EgS,EAAY9d,EAAmB8d,GAAa,KAGnD7c,EAAO2B,KACP,wBAAIhH,UAAU,YAAYmB,IAAKqH,GAC3B0Z,EAAY9d,EAAmB8d,GAAa,MA7BjD1Z,EAAE,EAAEA,GAAIyZ,EAAQ,EAAEzZ,IAAM,EAAxBA,GAiCR,OAAOnD,EAGX,SAAS6b,GAA0Be,GAE/B,IADA,IAAI5c,EAAO,GACHmD,EAAE,EAAEA,GAAIyZ,EAAQ,EAAEzZ,IACtBnD,EAAO2B,KACF,wBAAI7F,IAAKqH,EAAGxI,UAAU,yBAAyBwI,EAAE,WAG1D,OAAOnD,EAGX,SAASmM,GAA0B1C,EAASsT,EAAQ7J,EAAO0J,GAEvD,IADA,IAAI5c,EAAO,GACHmD,EAAE,EAAEA,GAAIyZ,EAAQ,EAAEzZ,IACtBnD,EAAO2B,KACF,wBAAIhH,UAAU,wBAAwBmB,IAAKqH,GACvCpE,EAAmB+d,GAA2BrT,EAASsT,EAAQ7J,EAAO/P,MAInF,OAAOnD,EAGX,SAASgc,GAA4BvS,EAASsT,EAAQ7J,GAMlD,OAFDzJ,EAAS,IAAInK,KAAK,IAAIA,KAAKmK,GAAU9J,cAAc,IAAIL,KAAKmK,GAAUhK,WAAW,IAAIH,KAAKmK,GAAU/J,UAAU,KAE/F,IAAIJ,KAAK,IAAIA,KAAKyd,GAASpd,cAAe,IAAIL,KAAKyd,GAAStd,WAAY,EAAE,GAC7EyT,EAEC,GAGhB,SAAS4J,GAA2BrT,EAASsT,EAAQ7J,EAAO0I,GAGxD,OAFDnS,EAAS,IAAInK,KAAK,IAAIA,KAAKmK,GAAU9J,cAAc,IAAIL,KAAKmK,GAAUhK,WAAW,IAAIH,KAAKmK,GAAU/J,UAAU,KAE/F,IAAIJ,KAAK,IAAIA,KAAKyd,GAASpd,cAAe,IAAIL,KAAKyd,GAAStd,WAAY,EAAEmc,EAAY,IACjGnS,EAAS,IAAInK,KAAK,IAAIA,KAAKyd,GAASpd,cAAe,IAAIL,KAAKyd,GAAStd,WAAYmc,EAAY,GACrF1I,EAEC,GAGhB,SAASgJ,GAA8BzS,EAASsT,EAAQ7J,EAAO0J,GAG3D,OAFDnT,EAAS,IAAInK,KAAK,IAAIA,KAAKmK,GAAU9J,cAAc,IAAIL,KAAKmK,GAAUhK,WAAW,IAAIH,KAAKmK,GAAU/J,UAAU,IAEhG,IAAIJ,KAAK,IAAIA,KAAKyd,GAASpd,cAAe,IAAIL,KAAKyd,GAAStd,WAAYmd,EAAO,EAAE,GACnF1J,EAEC,GAhOhBxZ,qBAAU,WAEF0N,IAA4C,IAAxBA,EAAiBvF,MACjCC,MAAM,iEACNvH,IAAW,IAEV6M,GAAoBA,EAAiB9J,MAAQ8J,EAAiBlF,OACnE8F,EAAiBZ,EAAiB9J,KAAK1B,KAAI,SAAA0B,GAAI,OAC/C,4BAAQxB,IAAKwB,EAAK8J,EAAiBlF,MAAM,GAAGjG,MAAOyG,MAAOpF,EAAK8J,EAAiBlF,MAAM,GAAGjG,OACpFqB,EAAK8J,EAAiBlF,MAAM,GAAGjG,MAAM,KAAKqB,EAAK8J,EAAiBlF,MAAM,GAAGjG,MAAMqB,EAAK8J,EAAiBlF,MAAM,GAAGjG,MAAM,WAI/H,CAACmL,EAAiBC,IAEpB3N,qBAAU,WACN,GAAI2iB,IAAsD,IAA7BA,EAAsBxa,KAC3CC,MAAM,iEACNvH,IAAW,QAEd,GAAI8hB,GAAyBA,EAAsB/e,MAAQ+e,EAAsBna,MAAO,CACzF,IAAM6Z,EAAoB,GACpBze,EAAK+e,EAAsB/e,KAC3B4E,EAAMma,EAAsBna,MAC5BmU,EAAUnU,EAAM,GAAGjG,KACnBA,EAAKiG,EAAM,GAAGjG,KACdwF,EAAOS,EAAM,GAAGjG,KAChBgd,EAAQ/W,EAAM,GAAGjG,KACjBV,EAAK2G,EAAM,GAAGjG,KAIpByM,GAAkB,SAAAlD,OAIlBlI,EAAKgF,SAAQ,SAAAzG,GACT,IAAIgO,EAAU,IACoC,IAAhDkS,EAAoBzY,QAAQzH,EAAKwa,MAC/B0F,EAAoBpa,KAAK9F,EAAKwa,IAC9BxM,EAAUhO,EAAKwa,IAAY/Y,EAAKwM,QAAO,SAAA/C,GAAK,OAAEA,EAAMsP,KAAaxa,EAAKwa,MACtE3N,GAAkB,SAAAlD,GAAW,OAAGzD,OAAOC,OAAO,GAAGwD,EAAYqE,UAIrEnB,GAAkB,SAAAlD,GAAW,sBAAOA,EAAP,CACzBlI,KAAK+e,EAAsB/e,KAC3ByM,YAAY,YAAIsS,EAAsB/e,MACtC4E,MAAMma,EAAsBna,MAC5BuH,WACAmS,mBAGJ7S,GACK,oCACG,4BAAQrG,MAAO2T,GAAf,cACA,4BAAQ3T,MAAOzG,GAAf,UAGRgN,GACK,oCACG,4BAAQvG,MAAOjB,GAAf,WACA,4BAAQiB,MAAOuW,GAAf,YACA,4BAAQvW,MAAOnH,GAAf,UAGRqN,EAA2BmT,EAAoBngB,KAAI,SAAAC,GAAI,OAAEA,EAAKE,QAAQ,aAAa,WAEzF,CAACsgB,EAAsBC,IAGzB5iB,qBAAU,WACFiP,GACAA,EAAqBrG,SAAQ,SAAA0H,GACzBC,IAAE,IAAID,GAAIE,GAAG,oBAAmB,SAAApQ,GACzBA,EAAE+I,SAAS/I,EAAEqQ,eAChBF,IAAE,aAAaD,GAAII,YAAY,kBAAkBC,SAAS,sBAE9DJ,IAAE,IAAID,GAAIE,GAAG,oBAAmB,SAAApQ,GACzBA,EAAE+I,SAAS/I,EAAEqQ,eAChBF,IAAE,aAAaD,GAAII,YAAY,mBAAmBC,SAAS,0BAKzE,CAAC7E,IAEH9L,qBAAU,WACN,SAAS4Q,IACL/H,SAAS+C,cAAc,uBAAuBxC,aAC1C,UAAU,yCAIlB,OAFAxJ,OAAOiR,iBAAiB,WAAWD,GAE5B,WACChR,OAAOkR,oBAAoB,WAAWF,MAEhD,IAEF5Q,qBAAU,WACN,SAAS+Q,IACL1F,EAAY,eAIhB,OAFAzL,OAAOiR,iBAAiB,WAAWE,GAE5B,WACCnR,OAAOkR,oBAAoB,WAAWC,MAEhD,IA6XF,IAAIC,GAAa,KAkBjB,OAhBKtD,GAAoBA,EAAiB5J,OAAU6J,GAAsBgV,GAAyBA,EAAsB7e,OACtH8e,KACH5R,GACI,yBAAK/P,UAAU,uBACVyM,GAAoBA,EAAiB5J,MAAO,gDAAgD4J,EAAiB5J,MAAM2E,MACnH,UAAUiF,EAAiB5J,MAAM4E,KAAK,aAAagF,EAAiB5J,MAAM6E,WAAW,KACrFgF,EAAmB,yCAAyCA,EAAoB,KACjF,6BACA,6BACCgV,GAAyBA,EAAsB7e,MAAO,iDAAiD6e,EAAsB7e,MAAM2E,MACnI,UAAUka,EAAsB7e,MAAM4E,KAAK,aAAaia,EAAsB7e,MAAM6E,WAAW,KAC/Fia,EAAwB,0CAA0CA,EAAyB,OAMpG,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAO3R,OAAK,EAAC1N,KAAI,UAAKA,GAAL,aACZuI,EACA,kBAAC,GAAD,CACGD,SAAU6W,GAAkBnf,KAC5BD,YAAaof,GAAkBpf,YAC/BwI,YAAaA,EACbM,YAAaA,EACbxI,KAAMgB,EAASkH,EAAW,YAAgB0D,GAAa,OACvDhH,MAAOsD,EAAW,MAClBW,WAAY7H,EAASkH,EAAW,YAAgB4D,GAAmB,OACnEyS,0BAA2BA,GAC3B1P,0BAA2BA,GAC3B6P,4BAA6BA,GAC7BlV,qBAAsBA,GACtBoV,8BAA+BA,GAC/B1T,iBAAkBA,KAClB,kBAAC,IAAD,CAAU5N,GAAIwhB,GAAkBnf,QAExC,kBAAC,IAAD,CAAO0N,OAAK,EAAC1N,KAAMA,IACf,kBAAC,EAAD,KACI,yBAAKtC,UAAU,iBAAiBI,MAAO,CAAC6P,YAAY,GAAGC,aAAa,KAChE,4BAAKuR,GAAkBpf,aACvB,0BAAMrC,UAAU,OAAOmQ,SAAU,SAAAhR,GAC7BA,EAAEiR,iBACFxB,IAA4B,GAC5BgT,EAAuB,CACnB5e,IAAI,eACJE,KAAK,CACDoC,OAAO,OACPC,QAAQ,CAAC,eAAe,oBACxBC,KAAKC,KAAKC,UAAU,CAChBxE,KAAK,eACLuB,MAAM,CAACqf,EAAShT,KAEpBnJ,YAAY,eAMhB,yBAAK3F,UAAU,4BACX,2BAAOA,UAAU,0BAA0BI,MAAO,CAAC6P,YAAY,GAAItG,QAAQ,QAA3E,QACA,8BAAO/I,KAAK,OAAOF,GAAG,OAAO2P,UAAQ,EAAC5H,SAAU,SAACtJ,GAAD,OAAK0iB,EAAe1iB,EAAE+I,OAAOH,QAAQA,MAAO+G,GAA5F,uDACU,sCADV,IAEA,2BAAO9O,UAAU,sCAAsCI,MAAO,CAAC6P,YAAY,GAAItG,QAAQ,eAAvF,kBAGA,4BAAQjJ,GAAG,cAAcV,UAAU,wBAAwBqQ,UAAQ,EAACtI,MAAOkZ,EAAaxY,SAAU,SAAAtJ,GAAC,OAC/F6iB,EAAkB7iB,EAAE+I,OAAOH,SAE3B,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,OAIR,yBAAK/H,UAAU,4BACX,2BAAOA,UAAU,0BAA0BI,MAAO,CAAC6P,YAAY,GAAItG,QAAQ,YAA3E,aACA,4BAAQ3J,UAAU,wBAAwBqQ,UAAQ,EAACC,KAAK,IAAIvI,MAAO+Z,EAAUvR,UAAU,EAAM9H,SAAU,SAAAtJ,GACnG,IAAIkG,EAAO,GACXmL,MAAMC,KAAKtR,EAAE+I,OAAOwI,SAASzP,KAAI,SAAA0P,IACP,IAAlBA,EAAOrJ,UACPjC,EAAO2B,KAAK2J,EAAO5I,UAE3Bga,EAAe1c,KAEd+H,IAIT,yBAAKpN,UAAU,4BACX,yBAAKA,UAAU,0BACX,2BAAOY,KAAK,WAAWZ,UAAU,oBAAoBU,GAAG,cAAc+H,SAAU,SAAAtJ,GACxEA,EAAE+I,OAAOJ,QACTia,EAAetV,EAAiB9J,KAAK1B,KAAI,SAAA0B,GAAI,OACzCA,EAAK8J,EAAiBlF,MAAM,GAAGjG,UAElCygB,EAAe,OAExB,2BAAOpY,QAAQ,cAAcvJ,MAAO,CAAC6P,YAAY,GAAIjQ,UAAU,oBAA/D,mBAMR,8BAAUA,UAAU,iEAChB,4BAAQA,UAAU,kEACd,gDAEJ,yBAAKA,UAAU,YACX,yBAAKA,UAAU,iCACX,2BAAOA,UAAU,0BAA0BI,MAAO,CAAC6P,YAAY,GAAItG,QAAQ,QAA3E,QAGA,4BAAQjJ,GAAG,OAAOV,UAAU,wBAAwB+H,MAAOwG,GAAc9F,SAAU,SAAAtJ,GAAC,OAChFqP,GAAmBrP,EAAE+I,OAAOH,SAE5B,4BAAQA,MAAM,IAAd,wBACCoG,KAIT,yBAAKnO,UAAU,gDAAgDI,MAAO,CAAC6P,YAAY,KAC/E,2BAAOrP,KAAK,WAAWZ,UAAU,mBAAmBU,GAAG,cAAc+H,SAAU,SAAAtJ,GACvEA,EAAE+I,OAAOJ,QACToG,IAAkB,GACjBA,IAAkB,IACxBpG,QAASqD,IACZ,2BAAOxB,QAAQ,cAAc3J,UAAU,oBAAvC,iBAGJ,yBAAKA,UAAU,gCACX,2BAAOA,UAAU,0BAA0BI,MAAO,CAAC6P,YAAY,GAAItG,QAAQ,QAA3E,eAGA,4BAAQjJ,GAAG,OAAOV,UAAU,wBAAwB+H,MAAO0G,GAAoBhG,SAAU,SAAAtJ,GAAC,OACtFuP,GAAyBvP,EAAE+I,OAAOH,SAElC,4BAAQA,MAAM,IAAd,wBACCsG,OAMrB,4BAAQzN,KAAK,SAASZ,UAAU,wBAAhC,YACA,4BAAQY,KAAK,SAASZ,UAAU,kBAAkBa,QAAS,SAAA1B,GAAC,OAC5D4O,EAAkB,QADlB,SAEA,4BAAQnN,KAAK,SAASC,QAAS,SAAC1B,GACvB0L,GAIDjD,SAAS+C,cAAc,uBAAuBxC,aAC9C,UAAU,yCACViC,EAAY,gBACZxD,GAAQI,KAAK,gCANb4H,IAA4B,IASpC5O,UAAU,0BAXV,WAYC2O,GACA,yBAAK3O,UAAU,uBAAf,iCAEO,MAGZ,6BACC+P,GAEAlF,EACA,yBAAK7K,UAAU,0BAA0BI,MAAO,CAAC6Q,UAAU,oBACxD,yBAAK7Q,MAAO,CAACC,MAAM2Q,GAAgBC,UAAU,oBACzC,wBAAIjR,UAAU,QAAd,SAEI,4BAAQA,UAAU,oBACda,QAAS,SAAC1B,GAAD,OAAK6O,EAAqBrG,SAAQ,SAAA0H,GAAE,OACzCC,IAAE,IAAID,GAAIwB,SAAS,aACxB,uBAAG7Q,UAAU,sBAHhB,WAIA,4BAAQA,UAAU,gBACda,QAAS,SAAC1B,GAAD,OAAK6O,EAAqBrG,SAAQ,SAAA0H,GAAE,OACzCC,IAAE,IAAID,GAAIwB,SAAS,aAF3B,IAGI,uBAAG7Q,UAAU,uBAHjB,cAKJ,yBAAKA,UAAU,oDACfI,MAAO,CACH8Q,WAAW,EACXC,YAAY,IAIZ,wBAAI/Q,MAAO,CAAC2Q,KAAK,WAAWd,YAAY,GAAGC,aAAa,MACxD,wBAAI9P,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,GAAGlI,OAAO,WACnEC,aAAW,MAAMpH,QAAS,SAAC1B,GACvBA,EAAE+I,OAAOC,aAAa,aACgB,QAAtChJ,EAAE+I,OAAOE,aAAa,cAAsB,OAAO,OACnD2F,EAAkB,eAAIlD,EAAL,CACblI,KAAKgB,EAASkH,EAAW,KAAS,aAAa1L,EAAE+I,OAAOE,aAAa,kBAE/B,QAAtCjJ,EAAE+I,OAAOE,aAAa,eACtBR,SAASC,eAAe,YAAYQ,UAAUC,OAAO,eACrDV,SAASC,eAAe,YAAYQ,UAAUE,IAAI,mBAGlDX,SAASC,eAAe,YAAYQ,UAAUC,OAAO,iBACrDV,SAASC,eAAe,YAAYQ,UAAUE,IAAI,kBAb1D,aAmBI,uBAAG7H,GAAG,WAAWV,UAAU,2BAE/B,wBAAII,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,GAAGlI,OAAO,WACnEC,aAAW,MAAMpH,QAAS,SAAC1B,GACvBA,EAAE+I,OAAOC,aAAa,aACgB,QAAtChJ,EAAE+I,OAAOE,aAAa,cAAsB,OAAO,OACnD2F,EAAkB,eAAIlD,EAAL,CACblI,KAAKgB,EAASkH,EAAW,KAAS,OAAO1L,EAAE+I,OAAOE,aAAa,kBAEzB,QAAtCjJ,EAAE+I,OAAOE,aAAa,eACtBR,SAASC,eAAe,QAAQQ,UAAUC,OAAO,eACjDV,SAASC,eAAe,QAAQQ,UAAUE,IAAI,mBAG9CX,SAASC,eAAe,QAAQQ,UAAUC,OAAO,iBACjDV,SAASC,eAAe,QAAQQ,UAAUE,IAAI,kBAbtD,OAkBI,uBAAG7H,GAAG,OAAOV,UAAU,2BAE3B,wBAAII,MAAO,CAAC2Q,KAAK,WAAWd,YAAY,GAAGC,aAAa,KAAxD,WA7lB5B,SAA8B+R,GAE1B,IADA,IAAI5c,EAAO,GACHmD,EAAE,EAAEA,GAAIyZ,EAAQ,EAAEzZ,IACtBnD,EAAO2B,KACF,wBAAI7F,IAAKqH,EAAGpI,MAAO,CAAC2Q,KAAK,WAAWd,YAAY,GAAGC,aAAa,KAAM1H,EAAE,WAGjF,OAAOnD,EAulBkBgG,CAAqBR,EAAW,aACjC,wBAAIzK,MAAO,CAAC2Q,KAAK,WAAWd,YAAY,GAAGC,aAAa,KACnD,KAAKrF,EAAW,YAAgB,UAErC,wBAAIzK,MAAO,CAAC2Q,KAAK,WAAWd,YAAY,GAAGC,aAAa,KAAxD,iBACA,wBAAI9P,MAAO,CAAC2Q,KAAK,WAAWd,YAAY,GAAGC,aAAa,KAAxD,YAGJ,yBAAK9P,MAAO,CAACgR,UAAU,OAAOC,UAAU,SAASrI,UAAU,SA7enF,SAAwB8F,EAASmS,GAC7B,IAAMte,EAAKkI,EAAW,KAChBtD,EAAMsD,EAAW,MACjB6Q,EAAUnU,EAAM,GAAGjG,KACnBA,EAAKiG,EAAM,GAAGjG,KACdwF,EAAOS,EAAM,GAAGjG,KAChBgd,EAAQ/W,EAAM,GAAGjG,KACjBV,EAAK2G,EAAM,GAAGjG,KACdiX,EAAOhR,EAAM,GAAGjG,KAChB6f,EAAW5Z,EAAM,GAAGjG,KAEpB8f,EAAoB,GACpB/b,EAAO,GAuOb,OArOA1C,EAAKgF,SAAQ,SAAAzG,IAC0C,IAAhDkgB,EAAoBzY,QAAQzH,EAAKwa,MAChC0F,EAAoBpa,KAAK9F,EAAKwa,IAC9BrW,EAAO2B,KACN,yBAAK7F,IAAKD,EAAKwa,IACZ,yBAAK1b,UAAU,SAASI,MAAO,CAAC4H,OAAO,WAAYxH,cAAY,WAAWC,cAAa,IAAIS,EAAKwa,GAAWta,QAAQ,aAAa,KAC5H,uBAAGpB,UAAU,yBAAyBI,MAAO,CAAC2Q,KAAK,WAAWd,YAAY,GAAGC,aAAa,IAC1FxP,GAAI,YAAYQ,EAAKwa,GAAWta,QAAQ,aAAa,MACrD,uBAAGpB,UAAU,OAAOI,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,KAAMhP,EAAKwa,IACpF,uBAAG1b,UAAU,OAAOI,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,KAAMhP,EAAKI,IACpF,uBAAGtB,UAAU,OAAOI,MAAO,CAAC2Q,KAAK,WAAWd,YAAY,GAAGC,aAAa,KACnE9L,EAAmBzB,EAAKsJ,QAAO,SAACjI,EAAEC,GACnC,OAAGA,EAAEyX,KAAaxa,EAAKwa,IACT2F,GACNvS,EACA7K,EAAEkd,IAA+B,QAAhBld,EAAEkd,GACftT,GAAiB,IAAIlJ,KAAK,IAAIA,KAAKV,EAAEqa,IACpCgD,QAAQ,IAAI3c,KAAKV,EAAEqa,IAAUvZ,UAAUF,OAAOZ,EAAEkd,OAC/Cld,EAAEqa,GACRra,EAAEsU,IAIKvU,EAAEC,EAAEsU,GAIPvU,IACd,KAEDmI,GACG2C,EACA5N,EAAKwa,GACL7W,OAAOoc,IAEX,uBAAGjhB,UAAU,OAAOI,MAAO,CAAC2Q,KAAK,WAAWd,YAAY,GAAGC,aAAa,KACnE9L,EAAmBzB,EAAKsJ,QAAO,SAACjI,EAAEC,GACnC,OAAGA,EAAEyX,KAAaxa,EAAKwa,IACT6F,GACNzS,EACA7K,EAAEkd,IAA+B,QAAhBld,EAAEkd,GACftT,GAAiB,IAAIlJ,KAAK,IAAIA,KAAKV,EAAEqa,IACpCgD,QAAQ,IAAI3c,KAAKV,EAAEqa,IAAUvZ,UAAUF,OAAOZ,EAAEkd,OAC/Cld,EAAEqa,GACRra,EAAEsU,GACF1T,OAAOoc,IAIAjd,EAAEC,EAAEsU,GAKPvU,IACd,KACF,uBAAGhE,UAAU,OAAOI,MAAO,CAAC2Q,KAAK,WAAWd,YAAY,GAAGC,aAAa,KACnE9L,EACGzB,EAAKsJ,QAAO,SAACjI,EAAEC,GACf,OAAGA,EAAEyX,KAAaxa,EAAKwa,GACZ1X,EAAEC,EAAEsU,GACHvU,IACV,GACFrB,EAAKsJ,QAAO,SAACjI,EAAEC,GACf,OAAGA,EAAEyX,KAAaxa,EAAKwa,IACT2F,GACNvS,EACA7K,EAAEkd,IAA+B,QAAhBld,EAAEkd,GACftT,GAAiB,IAAIlJ,KAAK,IAAIA,KAAKV,EAAEqa,IACpCgD,QAAQ,IAAI3c,KAAKV,EAAEqa,IAAUvZ,UAAUF,OAAOZ,EAAEkd,OAC/Cld,EAAEqa,GACRra,EAAEsU,IAIKvU,EAAEC,EAAEsU,GAIPvU,IACd,KAGN,uBAAGhE,UAAU,OAAOI,MAAO,CAAC2Q,KAAK,WAAWd,YAAY,GAAGC,aAAa,KACnE9L,EACGzB,EAAKsJ,QAAO,SAACjI,EAAEC,GACf,OAAGA,EAAEyX,KAAaxa,EAAKwa,GACZ1X,EAAEC,EAAEsU,GACHvU,IACV,MAGd,yBAAKhE,UAAU,kDACfU,GAAIQ,EAAKwa,GAAWta,QAAQ,aAAa,KACrC,2BAAOV,GAAG,QAAQV,UAAU,gCACxB,+BACI,4BACI,wBAAIA,UAAU,cAAcI,MAAO,CAAC4H,OAAO,WAAYC,aAAW,MAClEpH,QAAS,SAAC1B,GACNA,EAAE+I,OAAOC,aAAa,aACgB,QAAtChJ,EAAE+I,OAAOE,aAAa,cAAsB,OAAO,OACnD,IAAIkJ,EAAW,GACfA,EAAWpQ,EAAKwa,IAAY/X,EAASkH,EAAY3J,EAAKwa,IAAY5U,EAAO3H,EAAE+I,OAAOE,aAAa,eAC/F2F,EAAkB3G,OAAOC,OAAO,GAAGwD,EAAYyG,IAEL,QAAtCnS,EAAE+I,OAAOE,aAAa,eACtBR,SAASC,eAAe,QAAQ3G,EAAKwa,GAAWta,QAAQ,aAAa,KAAKiH,UAAUC,OAAO,eAC3FV,SAASC,eAAe,QAAQ3G,EAAKwa,GAAWta,QAAQ,aAAa,KAAKiH,UAAUE,IAAI,mBAGxFX,SAASC,eAAe,QAAQ3G,EAAKwa,GAAWta,QAAQ,aAAa,KAAKiH,UAAUC,OAAO,iBAC3FV,SAASC,eAAe,QAAQ3G,EAAKwa,GAAWta,QAAQ,aAAa,KAAKiH,UAAUE,IAAI,kBAdhG,UAkBI,uBAAG7H,GAAI,QAAQQ,EAAKwa,GAAWta,QAAQ,aAAa,IAAKpB,UAAU,2BAEvE,wBAAIA,UAAU,cAAcI,MAAO,CAAC4H,OAAO,WAAYC,aAAW,MAClEpH,QAAS,SAAC1B,GACNA,EAAE+I,OAAOC,aAAa,aACgB,QAAtChJ,EAAE+I,OAAOE,aAAa,cAAsB,OAAO,OACnD,IAAIkJ,EAAW,GACfA,EAAWpQ,EAAKwa,IAAY/X,EAASkH,EAAY3J,EAAKwa,IAAY4C,EAAQnf,EAAE+I,OAAOE,aAAa,eAChG2F,EAAkB3G,OAAOC,OAAO,GAAGwD,EAAYyG,IAEL,QAAtCnS,EAAE+I,OAAOE,aAAa,eACtBR,SAASC,eAAe,UAAU3G,EAAKwa,GAAWta,QAAQ,aAAa,KAAKiH,UAAUC,OAAO,eAC7FV,SAASC,eAAe,UAAU3G,EAAKwa,GAAWta,QAAQ,aAAa,KAAKiH,UAAUE,IAAI,mBAG1FX,SAASC,eAAe,UAAU3G,EAAKwa,GAAWta,QAAQ,aAAa,KAAKiH,UAAUC,OAAO,iBAC7FV,SAASC,eAAe,UAAU3G,EAAKwa,GAAWta,QAAQ,aAAa,KAAKiH,UAAUE,IAAI,kBAdlG,WAkBI,uBAAG7H,GAAI,UAAUQ,EAAKwa,GAAWta,QAAQ,aAAa,IAAKpB,UAAU,2BAEzE,wBAAIA,UAAU,cAAcI,MAAO,CAAC4H,OAAO,WAAYC,aAAW,MAClEpH,QAAS,SAAC1B,GACNA,EAAE+I,OAAOC,aAAa,aACgB,QAAtChJ,EAAE+I,OAAOE,aAAa,cAAsB,OAAO,OACnD,IAAIkJ,EAAW,GACfA,EAAWpQ,EAAKwa,IAAY/X,EAASkH,EAAY3J,EAAKwa,IAAY9a,EAAKzB,EAAE+I,OAAOE,aAAa,eAC7F2F,EAAkB3G,OAAOC,OAAO,GAAGwD,EAAYyG,IAEL,QAAtCnS,EAAE+I,OAAOE,aAAa,eACtBR,SAASC,eAAe,OAAO3G,EAAKwa,GAAWta,QAAQ,aAAa,KAAKiH,UAAUC,OAAO,eAC1FV,SAASC,eAAe,OAAO3G,EAAKwa,GAAWta,QAAQ,aAAa,KAAKiH,UAAUE,IAAI,mBAGvFX,SAASC,eAAe,OAAO3G,EAAKwa,GAAWta,QAAQ,aAAa,KAAKiH,UAAUC,OAAO,iBAC1FV,SAASC,eAAe,OAAO3G,EAAKwa,GAAWta,QAAQ,aAAa,KAAKiH,UAAUE,IAAI,kBAd/F,OAmBI,uBAAG7H,GAAI,OAAOQ,EAAKwa,GAAWta,QAAQ,aAAa,IAAKpB,UAAU,2BAEtE,wBAAIA,UAAU,eAAd,YACA,wBAAIA,UAAU,eAAd,WACCkhB,GAA0BD,GAC3B,wBAAIjhB,UAAU,eAAe,KAAKihB,EAAc,YAGxD,+BACKpW,EAAY3J,EAAKwa,IAAYza,KAAI,SAAAmL,GAC1B,OACI,wBAAIjL,IAAKiL,EAAMtF,GAAS1G,MAAO,CAAC4H,OAAO,WAAYnH,QAAS,SAAC1B,GAAD,OACxDyH,GAAQI,KAAK,KAnMzD,SAAoByR,EAAO/X,GACvB,IAAIgY,EAAUD,EAAOE,MAAM,KAS3B,OAJAD,GAHAA,EAAUA,EAAUzX,KAAI,SAAAwX,GACpB,OAAOA,EAAOG,kBAEE3X,KAAI,SAAAwX,GACpB,OAAOA,EAAO,GAAG5F,cAAckD,OAAO0C,EAAOI,OAAO,QAGvCC,KAAK,IAAI,aAAaL,EAAOrX,QAAQ,KAAK,KAAK,OAAO2X,mBAAmBrY,GAyLhCsY,CAAW5M,EAAMxL,GAAMgY,cAAcxM,EAAMtF,OAE7D,wBAAI9G,UAAU,eAAeoM,EAAMtF,IACnC,wBAAI9G,UAAU,eAAeyE,EAAiB2H,EAAMkS,KACpD,wBAAIte,UAAU,eAAeoM,EAAMxL,IACnC,wBAAIZ,UAAU,eACdoM,EAAM+U,IAAmC,QAApB/U,EAAM+U,GAC3B1c,EAAiBoJ,GACT,IAAIlJ,KAAK,IAAIA,KAAKyH,EAAMkS,IACvBgD,QAAQ,IAAI3c,KAAKyH,EAAMkS,IAAUvZ,UAAUF,OAAOuH,EAAM+U,QAC3D1c,EAAiB2H,EAAMkS,KAE7B,wBAAIte,UAAU,eACVoE,EAAmBid,GACfvS,EACA1C,EAAM+U,IAAmC,QAApB/U,EAAM+U,GACvBtT,GAAiB,IAAIlJ,KAAK,IAAIA,KAAKyH,EAAMkS,IACxCgD,QAAQ,IAAI3c,KAAKyH,EAAMkS,IAAUvZ,UAAUF,OAAOuH,EAAM+U,OACvD/U,EAAMkS,GACZlS,EAAMmM,MAKb/G,GACG1C,EACA1C,EAAM+U,IAAmC,QAApB/U,EAAM+U,GACvBtT,GAAiB,IAAIlJ,KAAK,IAAIA,KAAKyH,EAAMkS,IACxCgD,QAAQ,IAAI3c,KAAKyH,EAAMkS,IAAUvZ,UAAUF,OAAOuH,EAAM+U,OACvD/U,EAAMkS,GACZlS,EAAMmM,GACN1T,OAAOoc,IAEX,wBAAIjhB,UAAU,eACdoE,EAAmBmd,GACfzS,EACA1C,EAAM+U,IAAmC,QAApB/U,EAAM+U,GACvBtT,GAAiB,IAAIlJ,KAAK,IAAIA,KAAKyH,EAAMkS,IACxCgD,QAAQ,IAAI3c,KAAKyH,EAAMkS,IAAUvZ,UAAUF,OAAOuH,EAAM+U,OACvD/U,EAAMkS,GACZlS,EAAMmM,GACN1T,OAAOoc,mBAoB5C5b,EA2PkBmc,CAAe3W,EAAW,SAAaA,EAAW,gBAGvD,KACR,wBAAI7K,UAAU,YAI1B,kBAAC,IAAD,CAAUC,GAAIwhB,GAAkBnf,QAIxCmf,GAAkBpf,YAAY,sBAC9Bof,GAAkBnf,KAAK,qBAERmf,UC7nBAY,OAhKf,SAAoC5jB,GAEhC,IAiD4BwjB,EAjDtBrb,EAAQC,cAER+N,EAAanW,EAAMmW,aAAcnW,EAAMmW,aAAa3T,KAAI,SAAC4T,EAAMrM,GAAP,OAC1D,uBAAGxI,UAAU,OAAOmB,IAAKqH,GAAIqM,MAC3B,KAEAC,EAAarW,EAAMsW,eAAiBtW,EAAMuW,cAAevW,EAAMsW,cAAc9T,KAAI,SAACsG,EAAMiB,GAAP,OAClF,yBAAKxI,UAAU,MAAMmB,IAAKqH,GACvB,yBAAKxI,UAAU,YACVuH,GAEL,yBAAKvH,UAAU,SAAf,KAGA,yBAAKA,UAAU,YACVvB,EAAMuW,cAAcxM,QAEpB,KAUb,SAAS0Y,EAA0Be,EAAOK,GAGtC,IAFA,IAAIjd,EAAO,GAEHmD,EAAE8Z,EAAuB,EAAE9Z,GAAIyZ,EAAQ,EAAEzZ,IAC7CnD,EAAO2B,KACF,wBAAI7F,IAAKqH,EAAGxI,UAAU,2BAA2BwI,EAAE,WAI5D,OAAOnD,EAGX,SAASmM,EAA0ByQ,EAAOK,GAEtC,IADA,IAAIjd,EAAO,GACHmD,EAAE8Z,EAAuB,EAAE9Z,GAAIyZ,EAAQ,EAAEzZ,IAC7CnD,EAAO2B,KACF,wBAAI7F,IAAKqH,EAAGxI,UAAU,2BAA2BoE,EAAmBme,EAA0B/Z,MAGvG,OAAOnD,EA4CX,SAASkd,EAA0B3d,GAC/B,IAAMjC,EAAKlE,EAAMkE,KACX4E,EAAM9I,EAAM8I,MACZ7C,EAAK6C,EAAM,GAAGjG,KACdkhB,EAAGjb,EAAM,GAAGjG,KACZmhB,EAAGlb,EAAM,GAAGjG,KAElB,OAAOqB,EAAKsJ,QAAO,SAACjI,EAAEC,GAMlB,IAAMiH,EAAQ,IAAIvG,KAAK,IAAIA,KAAKlG,EAAMyM,SAASlG,cAAc,IAAIL,KAAKlG,EAAMyM,SAASpG,WACrF,IAAIH,KAAKlG,EAAMyM,SAASnG,UAAU,GAC5BuZ,EAAQ,IAAI3Z,KAAK,IAAIA,KAAKV,EAAES,IAAOM,cAAc,IAAIL,KAAKV,EAAES,IAAOI,WACzE,IAAIH,KAAKV,EAAES,IAAOK,UAAU,GAE5B,OAAGuZ,GAAS,IAAI3Z,KAAKuG,EAAQlG,cAAcH,OAAOqG,EAAQpG,YAAY,EAAEF,EAAM,IAC3E0Z,EAAQ,IAAI3Z,KAAKuG,EAAQlG,cAAcH,OAAOqG,EAAQpG,YAAYF,EAAM,GAEnEX,EAAEue,GAAYxe,EAAEC,EAAEue,GACVxe,EAAEC,EAAEwe,GAERze,IACd,GAGN,SAAS0e,EAAmCT,GAGxC,IAFA,IAnGeU,EAAUC,EAmGrBvd,EAAO,EAEHmD,GAAIyZ,EAAQ,EAAEzZ,GArGPma,EAqGmB,IAAIhe,KAAKlG,EAAMokB,oBArGxBD,EAqG2C,IAAIje,KAAKlG,EAAMyM,UApGrEpG,WAAa6d,EAAS7d,WACjC,IAAM8d,EAAO5d,cAAgB2d,EAAS3d,eAmGoD,GAAEwD,IAE3FnD,GAAQkd,EAA0B/Z,GAEtC,OAAOnD,EAAO5G,EAAMqkB,uBAKxB,OACI,yBAAK9iB,UAAU,iBAAiBI,MAAO,CAACgC,SAAS,MAC7C,4BAAQxB,KAAK,QAAQZ,UAAU,sCAC3Ba,QAAS,WACL+G,SAAS+C,cAAc,uBAAuBxC,aAC9C,UAAU,yCACVvB,EAAQI,KAAKvI,EAAMmM,YAJ3B,QAMA,yBAAK5K,UAAU,YAAYI,MAAO,CAACiV,QAAQ,IACvC,wBAAIrV,UAAU,eAAevB,EAAM4D,cAEvC,yBAAKrC,UAAU,MAAMI,MAAO,CAACkV,OAAO,IAChC,yBAAKtV,UAAU,0BAA0BI,MAAO,CAACmV,aAAa,IACzDX,GAEL,yBAAK5U,UAAU,cACV8U,IAGT,6BACCrW,EAAMskB,wBAAuB,GAE9B,wBAAI/iB,UAAU,eAAd,kBAvGoBiiB,EAwGAxjB,EAAMwiB,YArG1B,2BAAOjhB,UAAU,wBACb,+BACI,4BACI,wBAAIA,UAAU,2BAAd,WACWkhB,EAAVe,GAAQ,EAA4BA,EAAoC,EAA7B,GAC3CA,GAAQ,EAAI,wBAAIjiB,UAAU,2BAA2B,KAAKiiB,EAAO,UAAgB,OAG1F,+BACI,4BACI,wBAAIjiB,UAAU,2BAA2BoE,EAAmBme,EAA0B,KAC3E/Q,EAAVyQ,GAAQ,EAA4BA,EAAoC,EAA7B,GAC3CA,GAAQ,EACR,wBAAIjiB,UAAU,2BACVoE,EAAmBse,EAAmCT,KAE1D,OAGT,+BACI,4BACKA,GAAQ,EAAE,KAAKf,EAA0Be,EAAO,GAChDA,GAAQ,EAAE,KAAM,wBAAIjiB,UAAU,2BAA2B,KAAKiiB,EAAO,YAG9E,+BACI,4BACKA,GAAQ,EAAE,KAAKzQ,EAA0ByQ,EAAO,GAChDA,GAAQ,EAAE,KACN,wBAAIjiB,UAAU,2BACVoE,EAAmBse,EAAmCT,WC1EvF,SAASe,GAAsBvkB,GAAQ,IAAD,MACsB8D,EAAS,CAC7DS,IAAI,eACJE,KAAK,CACDoC,OAAO,OACPC,QAAQ,CAAC,eAAe,oBACxBC,KAAKC,KAAKC,UAAU,CAACxE,KAAK,WAC1ByE,YAAY,aAPc,sBACrB8G,EADqB,EAC1B9J,KAA4B+J,EADF,EACJ7J,MADI,EAUmEN,EAAS,MAV5E,0BAUrB0gB,EAVqB,EAU1BtgB,KAAqCugB,EAVX,EAUKrgB,MAAkCsgB,EAVvC,OAYIzkB,mBAAS,MAZb,mBAY3B0O,EAZ2B,KAYhBC,EAZgB,OAaA3O,mBAAS,IAbT,mBAa3BojB,EAb2B,KAalBC,EAbkB,OAcErjB,oBAAS,IAAIiG,MAAOK,cAAc,UAdpC,mBAc3BgG,EAd2B,KAcjB4C,EAdiB,OAeFlP,mBAASmP,GAAiB,IAAIlJ,OAf5B,mBAe3BuG,EAf2B,KAenB4C,EAfmB,OAgBIpP,mBAAS,MAhBb,mBAgB3BmM,EAhB2B,KAgBfkD,EAhBe,KAoB5BqV,EAAe,GApBa,EAqBI1kB,mBAAS,GArBb,mBAqB3BuiB,EArB2B,KAqBfe,EArBe,OAsBatjB,mBAAS,MAtBtB,mBAsB3B2kB,EAtB2B,KAsBXC,GAtBW,QAuBc5kB,mBAAS,MAvBvB,qBAuB3ByP,GAvB2B,MAuBVC,GAvBU,SAwBM1P,mBAAS,IAxBf,qBAwB3B6P,GAxB2B,MAwBdC,GAxBc,SAyBwB9P,oBAAS,GAzBjC,qBAyB3BiQ,GAzB2B,MAyBLC,GAzBK,MA2B3BtM,GAAQuM,cAARvM,KACA1C,GAAcC,qBAAWL,GAAzBI,WACDgH,GAAQC,cA8Dd,SAASgH,GAAiBnJ,GACtB,IAAIoK,EAAS,IAAInK,KAAKD,GAEtB,OAAQoK,EAAS9J,eAAkB8J,EAAShK,WAAa,EAAG,GAAI,MAAOgK,EAAShK,WAAW,GAAG,KAAMgK,EAAShK,WAAW,KAAOgK,EAAS/J,UAAU,GAClJ,KAAK+J,EAAS/J,UAAY,IAAI+J,EAAS/J,WAgB3C,SAASwe,GAAqBvY,EAAUE,GAKpC,OAAI,IAAIvG,KAAKqG,GAAW,IAAIrG,KAAK,IAAIA,KAAKuG,GAASlG,cAAcH,OAAO,IAAIF,KAAKuG,GAASpG,YAAYse,EAAe,GAC1GpY,EAGA6C,GAAiB,IAAIlJ,KAAK,IAAIA,KAAKuG,GAASlG,cAAcH,OAAO,IAAIF,KAAKuG,GAASpG,YAAYse,EAAe,IAG7H,SAAS5B,GAAegC,GACpB,IAAMV,EAAuBjY,EAAW,KAAS,GAAG,GAAGA,EAAW,MAAU,GAAG,GAAGvJ,MAE5EqB,EAAK6gB,EAAQ7f,EAASkH,EAAW,YAAgB,GAAG0D,GAAa,OAAO1D,EAAW,KAAS,GAC5FtD,EAAMsD,EAAW,MAAU,GAC3BnG,EAAK6C,EAAM,GAAGjG,KACdwF,EAAOS,EAAM,GAAGjG,KAChBmiB,EAAIlc,EAAM,GAAGjG,KACbV,EAAK2G,EAAM,GAAGjG,KACdkhB,EAAGjb,EAAM,GAAGjG,KACZmhB,EAAGlb,EAAM,GAAGjG,KAGdoiB,EAAQ/gB,EAAKsJ,QAAO,SAACjI,EAAEC,GACvB,OAAI,IAAIU,KAAKV,EAAES,IAAO,IAAIC,KAAKkG,EAAW,WAClC5G,EAAEue,GAAYxe,EAAEC,EAAEue,GACVxe,EAAEC,EAAEwe,GACNze,IAChB,GAAK8e,EAEP,OACA,6BACI,2BAAO9iB,UAAU,6BACb,+BACI,4BACI,wBAAIA,UAAU,cAAcI,MAAOojB,EAAS,KAAK,CAACxb,OAAO,WAAaC,aAAW,MACjFpH,QAAS,SAAC1B,GACFqkB,IACArkB,EAAE+I,OAAOC,aAAa,aACgB,QAAtChJ,EAAE+I,OAAOE,aAAa,cAAsB,OAAO,OACnDyC,EAAW,KAAS,GAAGlH,EAASkH,EAAW,KAAS,GAAGnG,EAAKvF,EAAE+I,OAAOE,aAAa,eAClF2F,EAAkB,eAAIlD,IAEoB,QAAtC1L,EAAE+I,OAAOE,aAAa,eACtBR,SAASC,eAAe,QAAQQ,UAAUC,OAAO,eACjDV,SAASC,eAAe,QAAQQ,UAAUE,IAAI,mBAG9CX,SAASC,eAAe,QAAQQ,UAAUC,OAAO,iBACjDV,SAASC,eAAe,QAAQQ,UAAUE,IAAI,mBAd1D,OAqBKib,EAAQ,KAAK,uBAAG9iB,GAAG,OAAOV,UAAU,2BAEzC,wBAAIA,UAAU,cAAcI,MAAOojB,EAAQ,KAAK,CAACxb,OAAO,WAAYC,aAAW,MAC/EpH,QAAS,SAAC1B,GACFqkB,IACArkB,EAAE+I,OAAOC,aAAa,aACgB,QAAtChJ,EAAE+I,OAAOE,aAAa,cAAsB,OAAO,OACnDyC,EAAW,KAAS,GAAGlH,EAASkH,EAAW,KAAS,GAAG/D,EAAO3H,EAAE+I,OAAOE,aAAa,eACpF2F,EAAkB,eAAIlD,IAEoB,QAAtC1L,EAAE+I,OAAOE,aAAa,eACtBR,SAASC,eAAe,SAASQ,UAAUC,OAAO,eAClDV,SAASC,eAAe,SAASQ,UAAUE,IAAI,mBAG/CX,SAASC,eAAe,SAASQ,UAAUC,OAAO,iBAClDV,SAASC,eAAe,SAASQ,UAAUE,IAAI,mBAd3D,UAoBKib,EAAQ,KAAK,uBAAG9iB,GAAG,QAAQV,UAAU,2BAE1C,wBAAIA,UAAU,cAAcI,MAAOojB,EAAQ,KAAK,CAACxb,OAAO,WAAaC,aAAW,MAChFpH,QAAS,SAAC1B,GACDqkB,IACDrkB,EAAE+I,OAAOC,aAAa,aACgB,QAAtChJ,EAAE+I,OAAOE,aAAa,cAAsB,OAAO,OACnDyC,EAAW,KAAS,GAAGlH,EAASkH,EAAW,KAAS,GAAG4Y,EAAItkB,EAAE+I,OAAOE,aAAa,eACjF2F,EAAkB,eAAIlD,IAEoB,QAAtC1L,EAAE+I,OAAOE,aAAa,eACtBR,SAASC,eAAe,OAAOQ,UAAUC,OAAO,eAChDV,SAASC,eAAe,OAAOQ,UAAUE,IAAI,mBAG7CX,SAASC,eAAe,OAAOQ,UAAUC,OAAO,iBAChDV,SAASC,eAAe,OAAOQ,UAAUE,IAAI,mBAdzD,OAoBKib,EAAQ,KAAK,uBAAG9iB,GAAG,MAAMV,UAAU,2BAExC,wBAAIA,UAAU,cAAcI,MAAOojB,EAAQ,KAAK,CAACxb,OAAO,WAAaC,aAAW,MAChFpH,QAAS,SAAC1B,GACDqkB,IACDrkB,EAAE+I,OAAOC,aAAa,aACgB,QAAtChJ,EAAE+I,OAAOE,aAAa,cAAsB,OAAO,OACnDyC,EAAW,KAAS,GAAGlH,EAASkH,EAAW,KAAS,GAAGjK,EAAKzB,EAAE+I,OAAOE,aAAa,eAClF2F,EAAkB,eAAIlD,IAEoB,QAAtC1L,EAAE+I,OAAOE,aAAa,eACtBR,SAASC,eAAe,QAAQQ,UAAUC,OAAO,eACjDV,SAASC,eAAe,QAAQQ,UAAUE,IAAI,mBAG9CX,SAASC,eAAe,QAAQQ,UAAUC,OAAO,iBACjDV,SAASC,eAAe,QAAQQ,UAAUE,IAAI,mBAd1D,OAqBKib,EAAQ,KAAK,uBAAG9iB,GAAG,OAAOV,UAAU,2BAEzC,wBAAIA,UAAU,cAAcI,MAAOojB,EAAQ,KAAK,CAACxb,OAAO,WAAaC,aAAW,MAChFpH,QAAS,SAAC1B,GACDqkB,IACDrkB,EAAE+I,OAAOC,aAAa,aACgB,QAAtChJ,EAAE+I,OAAOE,aAAa,cAAsB,OAAO,OACnDyC,EAAW,KAAS,GAAGlH,EAASkH,EAAW,KAAS,GAAG2X,EAAGrjB,EAAE+I,OAAOE,aAAa,eAChF2F,EAAkB,eAAIlD,IAEoB,QAAtC1L,EAAE+I,OAAOE,aAAa,eACtBR,SAASC,eAAe,MAAMQ,UAAUC,OAAO,eAC/CV,SAASC,eAAe,MAAMQ,UAAUE,IAAI,mBAG5CX,SAASC,eAAe,MAAMQ,UAAUC,OAAO,iBAC/CV,SAASC,eAAe,MAAMQ,UAAUE,IAAI,mBAdxD,KAqBKib,EAAQ,KAAK,uBAAG9iB,GAAG,KAAKV,UAAU,2BAEvC,wBAAIA,UAAU,cAAcI,MAAOojB,EAAQ,KAAK,CAACxb,OAAO,WAAaC,aAAW,MAChFpH,QAAS,SAAC1B,GACDqkB,IACDrkB,EAAE+I,OAAOC,aAAa,aACgB,QAAtChJ,EAAE+I,OAAOE,aAAa,cAAsB,OAAO,OACnDyC,EAAW,KAAS,GAAGlH,EAASkH,EAAW,KAAS,GAAG4X,EAAGtjB,EAAE+I,OAAOE,aAAa,eAChF2F,EAAkB,eAAIlD,IAEoB,QAAtC1L,EAAE+I,OAAOE,aAAa,eACtBR,SAASC,eAAe,MAAMQ,UAAUC,OAAO,eAC/CV,SAASC,eAAe,MAAMQ,UAAUE,IAAI,mBAG5CX,SAASC,eAAe,MAAMQ,UAAUC,OAAO,iBAC/CV,SAASC,eAAe,MAAMQ,UAAUE,IAAI,mBAdxD,KAqBKib,EAAQ,KAAK,uBAAG9iB,GAAG,KAAKV,UAAU,2BAEvC,wBAAIA,UAAU,eAAd,aAGR,+BACI,4BACI,wBAAIme,QAAQ,KAAZ,OACA,4BAAK/Z,EAAmBsf,KAE3B/gB,EAAK1B,KAAI,SAACC,EAAKsH,GAEZ,GAAI,IAAI7D,KAAKzD,EAAKwD,KAAQ,IAAIC,KAAKkG,EAAW,YAC3C,IAAIlG,KAAKzD,EAAKwD,KAAQ,IAAIC,KAAKkG,EAAW,SAMzC,OAJQ3J,EAAKshB,KACTkB,GAASxiB,EAAKshB,IACVthB,EAAKuhB,KACTiB,GAASxiB,EAAKuhB,IAElB,wBAAIthB,IAAKqH,EAAGpI,MAAOojB,EAAS,KAAK,CAACxb,OAAO,WAAYnH,QAAS,SAAC1B,GACvDqkB,EAECrkB,EAAEiR,iBADHxJ,GAAQI,KAAK,IA9M7C,SAAoByR,EAAO/X,GACvB,IAAIgY,EAAUD,EAAOE,MAAM,KAS3B,OAJAD,GAHAA,EAAUA,EAAUzX,KAAI,SAAAwX,GACpB,OAAOA,EAAOG,kBAEE3X,KAAI,SAAAwX,GACpB,OAAOA,EAAO,GAAG5F,cAAckD,OAAO0C,EAAOI,OAAO,QAGvCC,KAAK,IAAI,aAAaL,EAAOrX,QAAQ,KAAK,KAAK,OAAO2X,mBAAmBrY,GAoM7CsY,CAAW9X,EAAKN,GAAMgY,cAAc1X,EAAK4F,OAI9D,wBAAI9G,UAAU,eAAeyE,EAAiBvD,EAAKwD,KACnD,wBAAI1E,UAAU,eAAekB,EAAK4F,IAClC,wBAAI9G,UAAU,eAAekB,EAAKuiB,IAClC,wBAAIzjB,UAAU,eAAekB,EAAKN,IAClC,wBAAIZ,UAAU,eAAeoE,EAAmBlD,EAAKshB,KACrD,wBAAIxiB,UAAU,eAAeoE,EAAmBlD,EAAKuhB,KACrD,wBAAIziB,UAAU,eAAeoE,EAAmBsf,UAUnEF,EACG,uBAAGxjB,UAAU,gCACT,mDACA,8BAAOoE,EAAmBsf,KACxB,MAzSlB3kB,qBAAU,WAEF0N,IAA4C,IAAxBA,EAAiBvF,MACjCC,MAAM,iEACNvH,IAAW,IAEV6M,GAAoBA,EAAiB9J,MAAQ8J,EAAiBlF,OACnE8F,EAAiBZ,EAAiB9J,KAAK1B,KAAI,SAAA0B,GAAI,OAC/C,4BAAQxB,IAAKwB,EAAK8J,EAAiBlF,MAAM,GAAGjG,MAAOyG,MAAOpF,EAAK8J,EAAiBlF,MAAM,GAAGjG,OACpFqB,EAAK8J,EAAiBlF,MAAM,GAAGjG,MAAM,KAAKqB,EAAK8J,EAAiBlF,MAAM,GAAGjG,MAAMqB,EAAK8J,EAAiBlF,MAAM,GAAGjG,MAAM,WAI/H,CAACmL,EAAiBC,IAEpB3N,qBAAU,WACN,GAAIkkB,IAA8D,IAAjCA,EAA0B/b,KACnDC,MAAM,iEACNvH,IAAW,QAEd,GAAIqjB,GAA6BA,EAA0BtgB,MAAQsgB,EAA0B1b,MAAO,CACrG,IAAMA,EAAM0b,EAA0B1b,MAAM,GACtC7C,EAAK6C,EAAM,GAAGjG,KACdwF,EAAOS,EAAM,GAAGjG,KAChBmiB,EAAIlc,EAAM,GAAGjG,KACbV,EAAK2G,EAAM,GAAGjG,KACdkhB,EAAGjb,EAAM,GAAGjG,KACZmhB,EAAGlb,EAAM,GAAGjG,KAElByM,EAAkB,CAACpL,KAAKsgB,EAA0BtgB,KAC9CyM,YAAY,YAAI6T,EAA0BtgB,MAAM4E,MAAM0b,EAA0B1b,MACpFyD,YAAUE,UAAQ4W,aAElB1T,GACK,oCACG,4BAAQrG,MAAOrD,GAAf,QACA,4BAAQqD,MAAOjB,GAAf,WACA,4BAAQiB,MAAO0b,GAAf,QACA,4BAAQ1b,MAAOnH,GAAf,QACA,4BAAQmH,MAAOya,GAAf,MACA,4BAAQza,MAAO0a,GAAf,WAMd,CAACQ,EAA0BC,IAE7BnkB,qBAAU,WACN,SAAS4Q,IACL/H,SAAS+C,cAAc,uBAAuBxC,aAC1C,UAAU,yCAIlB,OAFAxJ,OAAOiR,iBAAiB,WAAWD,GAE5B,WACChR,OAAOkR,oBAAoB,WAAWF,MAEhD,IAqPF,IAAII,GAAa,KAkBjB,OAhBKtD,GAAoBA,EAAiB5J,OAAU6J,GAAsBuW,GAA6BA,EAA0BpgB,OAC9HqgB,KACHnT,GACI,yBAAK/P,UAAU,uBACVyM,GAAoBA,EAAiB5J,MAAO,gDAAgD4J,EAAiB5J,MAAM2E,MACnH,UAAUiF,EAAiB5J,MAAM4E,KAAK,aAAagF,EAAiB5J,MAAM6E,WAAW,KACrFgF,EAAmB,yCAAyCA,EAAoB,KACjF,6BACA,6BACCuW,GAA6BA,EAA0BpgB,MAAO,qDAAqDogB,EAA0BpgB,MAAM2E,MACnJ,UAAUyb,EAA0BpgB,MAAM4E,KAAK,aAAawb,EAA0BpgB,MAAM6E,WAAW,KACvGwb,EAA4B,8CAA8CA,EAA6B,OAM5G,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOlT,OAAK,EAAC1N,KAAI,UAAKA,GAAL,aACZuI,EACA,kBAAC,GAAD,CACGD,SAAUoY,GAAsB1gB,KAChCD,YAAY,mBACZuS,aAAY,YAAMyO,EAAgBza,MAAM,EAAE,IAC1CmM,cAAe,CAAC,iBAAiB,eACjCC,cACI,CAACvQ,EAAiBoG,EAAW,WAAe,OAAQpG,EAAiBoG,EAAW,SAC3D,QAArBwY,EAAgB,GAAW,SAASA,EAAgB,GAAG,SAC3DN,uBAAwBvB,GACxB7e,KAAMkI,EAAW,YAAgB,GACjCtD,MAAOsD,EAAW,MAAU,GAC5BK,QAASL,EAAW,QACpBoW,YAAaA,EACb4B,kBAAmBU,GAAqB1Y,EAAW,UAAcA,EAAW,SAC5EiY,uBAAwBjY,EAAW,YAAgB,GAAG,GAAGA,EAAW,MAAU,GAAG,GAAGvJ,QAIpF,kBAAC,IAAD,CAAUrB,GAAI+iB,GAAsB1gB,QAE5C,kBAAC,IAAD,CAAO0N,OAAK,EAAC1N,KAAMA,IACf,kBAAC,EAAD,KACI,yBAAKtC,UAAU,iBAAiBI,MAAO,CAAC6P,YAAY,GAAGC,aAAa,KAChE,4BAAK8S,GAAsB3gB,aAC3B,0BAAMrC,UAAU,OAAOmQ,SAAU,SAAAhR,GACjCA,EAAEiR,iBACFxB,IAA4B,GAC5BuU,EAA2B,CACvBngB,IAAI,eACJE,KAAK,CACDoC,OAAO,OACPC,QAAQ,CAAC,eAAe,oBACxBC,KAAKC,KAAKC,UAAU,CAChBxE,KAAK,mBACLuB,MAAM,CAAC8gB,GAAqBvY,EAAUE,GAASA,EAAQ4W,KAE3Dnc,YAAY,eAIhB,yBAAK3F,UAAU,4BACX,2BAAOA,UAAU,0BAA0BI,MAAO,CAAC6P,YAAY,GAAItG,QAAQ,aAA3E,cACA,8BAAO/I,KAAK,OAAOF,GAAG,YAAY2P,UAAQ,EAAC5H,SAAU,SAACtJ,GAC9C,IAAIwF,KAAKxF,EAAE+I,OAAOH,OAAO,IAAIpD,KAAKuG,IAClC/D,MAAM,4BACNyG,GAAgB,IAAIjJ,MAAOK,cAAc,WAExC4I,EAAgBzO,EAAE+I,OAAOH,QAE9BA,MAAOiD,GAPX,uDAOyC,sCAPzC,IAQA,2BAAOhL,UAAU,sCAAsCI,MAAO,CAAC6P,YAAY,GAAItG,QAAQ,WAAvF,YACA,8BAAO/I,KAAK,OAAOF,GAAG,UAAU2P,UAAQ,EAAC5H,SAAU,SAACtJ,GAC5C,IAAIwF,KAAKxF,EAAE+I,OAAOH,OAAO,IAAIpD,KAAKqG,IAClC7D,MAAM,0BACN2G,EAAcD,GAAiB,IAAIlJ,QAElCmJ,EAAc3O,EAAE+I,OAAOH,QAC7BA,MAAOmD,GANV,uDAMsC,sCANtC,KASJ,yBAAKlL,UAAU,4BACX,2BAAOA,UAAU,0BAA0BI,MAAO,CAAC6P,YAAY,GAAItG,QAAQ,YAA3E,aACA,4BAAQ3J,UAAU,wBAAwBqQ,UAAQ,EAACtI,MAAO+Z,EAAUrZ,SAAU,SAAAtJ,GAC1E,IAAI4Y,EAAW,GACXC,EAAc,GACd0B,EAAwB,GAE5BjN,EAAiB9J,KAAKgF,SAAQ,SAAAhF,GACvBA,EAAK8J,EAAiBlF,MAAM,GAAGjG,QAAQnC,EAAE+I,OAAOH,QAC/CgQ,EAAWpV,EAAK8J,EAAiBlF,MAAM,GAAGjG,MAAMqB,EAAK8J,EAAiBlF,MAAM,GAAGjG,MAAM,GACrF0W,EAAcrV,EAAK8J,EAAiBlF,MAAM,GAAGjG,MAAMqB,EAAK8J,EAAiBlF,MAAM,GAAGjG,MAAM,GACxFoY,EAAwB/W,EAAK8J,EAAiBlF,MAAM,GAAGjG,MAAMqB,EAAK8J,EAAiBlF,MAAM,GAAGjG,MAAM,OAG1GygB,EAAe5iB,EAAE+I,OAAOH,OACxBub,GAAsB,CAACvL,EAAWC,EAAc0B,MAGhD,4BAAQ3R,MAAM,IAAd,wBACCqF,IAIT,8BAAUpN,UAAU,sEAChB,4BAAQA,UAAU,kEACd,gDAEJ,yBAAKA,UAAU,YACX,yBAAKA,UAAU,gCACX,2BAAOA,UAAU,gCAAgC2J,QAAQ,eAAzD,gBAGA,4BAAQjJ,GAAG,cAAcV,UAAU,8BAA8BqQ,UAAQ,EAACtI,MAAOkZ,EAC7ExY,SAAU,SAAAtJ,GAAC,OACP6iB,EAAkB7iB,EAAE+I,OAAOH,SAE/B,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,MAAd,QAIR,yBAAK/H,UAAU,iCACX,2BAAOA,UAAU,gCAAgC2J,QAAQ,QAAzD,QAGA,4BAAQjJ,GAAG,OAAOV,UAAU,8BAA8B+H,MAAOwG,GAAc9F,SAAU,SAAAtJ,GAAC,OACtFqP,GAAmBrP,EAAE+I,OAAOH,SAE5B,4BAAQA,MAAM,IAAd,wBACCoG,OAOjB,4BAAQvN,KAAK,SAASZ,UAAU,wBAAhC,YACA,4BAAQY,KAAK,SAASZ,UAAU,kBAAkBa,QAAS,SAAA1B,GAAC,OACxD4O,EAAkB,QADtB,SAEA,4BAAQnN,KAAK,SAASC,QAAS,SAAC1B,GACvB0L,GAIDjD,SAAS+C,cAAc,uBAAuBxC,aAC9C,UAAU,yCACVvB,GAAQI,KAAK,oCALb4H,IAA4B,IAQpC5O,UAAU,0BAVV,WAWC2O,GACA,yBAAK3O,UAAU,uBAAf,iCAEO,MAGZ,6BACC+P,GAEAlF,EACA,yBAAK7K,UAAU,QACZ,wBAAIA,UAAU,QAAd,UACCwhB,MAEG,KAER,wBAAIxhB,UAAU,YAI1B,kBAAC,IAAD,CAAUC,GAAI+iB,GAAsB1gB,QAIhD0gB,GAAsB3gB,YAAY,0BAClC2gB,GAAsB1gB,KAAK,yBAEZ0gB,UChXAW,OA1Jf,SAA6BllB,GACzB,IAAMmI,EAAQC,cAkGd,OACI,yBAAK7G,UAAU,wBACX,4BAAQY,KAAK,QAAQZ,UAAU,sCAC3Ba,QAAS,WACL+G,SAAS+C,cAAc,uBAAuBxC,aAC9C,UAAU,yCACViC,EAAY,eACZxD,EAAQI,KAAKvI,EAAMmM,YAL3B,QAOA,wBAAI5K,UAAU,oBACTvB,EAAM4D,YAAY,SAAUoC,EAAiBhG,EAAMoM,YAAN,WAC7C,OAAQpG,EAAiBhG,EAAMoM,YAAN,UAE9B,wBAAI7K,UAAU,uBACd,2BAAOA,UAAU,0BACb,+BACI,wBAAIA,UAAU,+BACV,wBAAIA,UAAU,aAAd,cACA,wBAAIA,UAAU,YAAYme,QAAS1f,EAAMmlB,mBAAmB,EAAE,GAA9D,QACA,wBAAI5jB,UAAU,aAAd,mBAEJ,4BACI,wBAAIA,UAAU,aAAd,eACA,wBAAIA,UAAU,aAAd,QACA,wBAAIA,UAAU,aAAd,QACA,wBAAIA,UAAU,aAAd,UACA,wBAAIA,UAAU,YAAYme,QAAS1f,EAAMmlB,mBAAmB,EAAE,MAA9D,kBACA,wBAAI5jB,UAAU,aAAd,WAEHvB,EAAMmlB,mBACN,wBAAI5jB,UAAU,iDACX,wBAAIA,UAAU,uBAAsB,uCACpC,wBAAIA,UAAU,uBAAsB,oCACpC,wBAAIA,UAAU,uBAAsB,wCACpC,wBAAIA,UAAU,uBAAsB,wCACpC,wBAAIA,UAAU,uBAAsB,2CACpC,wBAAIA,UAAU,uBAAsB,0CACpC,wBAAIA,UAAU,uBAAsB,+CACjC,KACNvB,EAAMmlB,mBACN,4BACG,wBAAI5jB,UAAU,iCAAiCme,QAAS,KAE3D,4BACG,wBAAIne,UAAU,4CAA4Cme,QAAS,MA5IvF,WACI,IAAMxb,EAAKlE,EAAMkE,KACX4E,EAAM9I,EAAM8I,MACZmU,EAAUnU,EAAM,GAAGjG,KACnBA,EAAKiG,EAAM,GAAGjG,KACdwF,EAAOS,EAAM,GAAGjG,KAChBgd,EAAQ/W,EAAM,GAAGjG,KACjBV,EAAK2G,EAAM,GAAGjG,KACdgE,EAAOiC,EAAM,GAAGjG,KAChBuiB,EAActc,EAAM,GAAGjG,KACvBiX,EAAOhR,EAAM,GAAGjG,KAEhBwiB,EAAYrlB,EAAMqlB,YAClBC,EAAatlB,EAAMslB,aACnBC,EAAcD,EAAa,GAAGziB,KAC9B2iB,EAAkBF,EAAa,GAAGziB,KAClC4iB,EAAgBH,EAAa,GAAGziB,KAChC6iB,EAAgBJ,EAAa,GAAGziB,KAChC8iB,EAAsBL,EAAa,GAAGziB,KACtC+iB,EAAkBN,EAAa,GAAGziB,KAClCgjB,EAAcP,EAAa,GAAGziB,KAE9B8f,EAAoB,GACpB/b,EAAO,GAsEb,OApEA1C,EAAKgF,SAAQ,SAAAzG,IAC0C,IAAhDkgB,EAAoBzY,QAAQzH,EAAKwa,MAChC0F,EAAoBpa,KAAK9F,EAAKwa,IAC9BrW,EAAO2B,KACN,2BAAO7F,IAAKD,EAAKwa,GAAY1b,UAAU,kCACpC,wBAAIA,UAAU,+BACV,wBAAIA,UAAU,aAAakB,EAAKwa,IAChC,wBAAI1b,UAAU,YAAYme,QAAS1f,EAAMmlB,mBAAmB,EAAE,GAAI1iB,EAAKI,IACvE,wBAAItB,UAAU,aACToE,EAAmBzB,EAAKsJ,QAAO,SAACjI,EAAEC,GAC3B,OAAIA,EAAEyX,KAAaxa,EAAKwa,GACb1X,EAAEC,EAAEsU,GACHvU,IACd,MAIbvF,EAAM+M,WAAWvK,KAAI,SAAAmL,GAClB,GAAIA,EAAMsP,KAAaxa,EAAKwa,GACxB,OACA,kBAAC,IAAM6I,SAAP,KACI,wBAAIpjB,IAAKiL,EAAMtF,IACX,wBAAI9G,UAAU,aAAaoM,EAAMtF,IACjC,wBAAI9G,UAAU,aAAayE,EAAiB2H,EAAMkS,KAClD,wBAAIte,UAAU,aAAaoM,EAAMxL,IACjC,wBAAIZ,UAAU,aAAaoM,EAAM9G,IACjC,wBAAItF,UAAU,YAAYme,QAAS1f,EAAMmlB,mBAAmB,EAAE,MAAOxX,EAAMyX,IAC3E,wBAAI7jB,UAAU,aACToE,EAAmBgI,EAAMmM,MAGjC9Z,EAAMmlB,mBAAoBE,EAAY7iB,KAAI,SAAAujB,GACvC,GAAGA,EAAMR,KAAiB5X,EAAMtF,GAC5B,OACI,wBAAI3F,IAAKqjB,EAAMP,GAAoBjkB,UAAU,kBACzC,wBAAIA,UAAU,uBAAsB,2BAAIwkB,EAAMP,KAC9C,wBAAIjkB,UAAU,uBAAsB,2BAAIwkB,EAAMN,KAC9C,wBAAIlkB,UAAU,uBAAsB,2BAAIyE,EAAiB+f,EAAML,MAC/D,wBAAInkB,UAAU,uBAAsB,2BAChCwkB,EAAMJ,IAAyD,QAA/BI,EAAMJ,GACtC3f,EAAiBhG,EAAMoP,iBACf,IAAIlJ,KAAK,IAAIA,KAAK6f,EAAML,IACvB7C,QAAQ,IAAI3c,KAAK6f,EAAML,IAAkBpf,UACzCF,OAAO2f,EAAMJ,QAChB3f,EAAiB+f,EAAML,MAIjC,wBAAInkB,UAAU,uBAAsB,2BACL,QAA/BwkB,EAAMJ,GAA+B,SAASI,EAAMJ,GAAuB,UAE3E,wBAAIpkB,UAAU,uBAAsB,2BAAIoE,EAAmBogB,EAAMH,MACjE,wBAAIrkB,UAAU,uBAAsB,2BAAIoE,EAAmBogB,EAAMF,UAG9E,eAapBjf,EAkDEkH,IAEL,wBAAIvM,UAAU,uBACd,2BAAOA,UAAU,uBAAjB,mBC3IZ,SAASykB,GAAuBhmB,GAAQ,IAAD,MACqB8D,EAAS,CAC7DS,IAAI,eACJE,KAAK,CACDoC,OAAO,OACPC,QAAQ,CAAC,eAAe,oBACxBC,KAAKC,KAAKC,UAAU,CAACxE,KAAK,WAC1ByE,YAAY,aAPe,sBACtB8G,EADsB,EAC3B9J,KAA4B+J,EADD,EACL7J,MADK,EAUqEN,EAAS,MAV9E,0BAUtBmiB,EAVsB,EAU3B/hB,KAAsCgiB,EAVX,EAUK9hB,MAAmC+hB,EAVxC,OAWGlmB,mBAAS,MAXZ,mBAW5B0O,EAX4B,KAWjBC,EAXiB,OAYD3O,mBAAS,IAZR,mBAY5BojB,EAZ4B,KAYnBC,EAZmB,OAaCrjB,oBAAS,IAAIiG,MAAOK,cAAc,UAbnC,mBAa5BgG,EAb4B,KAalB4C,EAbkB,OAcHlP,mBAASmP,GAAiB,IAAIlJ,OAd3B,mBAc5BuG,EAd4B,KAcpB4C,EAdoB,OAeGpP,mBAAS,MAfZ,mBAe5BmM,EAf4B,KAehBkD,EAfgB,OAgBqBrP,mBAAS,IAhB9B,mBAgB5BsP,EAhB4B,KAgBPC,EAhBO,OAmBiBvP,oBAAS,GAnB1B,mBAmB5BklB,GAnB4B,KAmBTiB,GAnBS,QAoBanmB,mBAAS,MApBtB,qBAoB5ByP,GApB4B,MAoBXC,GApBW,SAqByB1P,mBAAS,MArBlC,qBAqB5B2P,GArB4B,MAqBLC,GArBK,SAsBK5P,mBAAS,IAtBd,qBAsB5B6P,GAtB4B,MAsBfC,GAtBe,SAuBiB9P,mBAAS,IAvB1B,qBAuB5B+P,GAvB4B,MAuBTC,GAvBS,SAwBuBhQ,oBAAS,GAxBhC,qBAwB5BiQ,GAxB4B,MAwBNC,GAxBM,MA0B5BtM,GAAQuM,cAARvM,KACA1C,GAAcC,qBAAWL,GAAzBI,WACDgH,GAAQC,cAERmK,GAAgB,IA0HtB,SAASnD,GAAiBnJ,GACtB,IAAIoK,EAAS,IAAInK,KAAKD,GAEtB,OAAQoK,EAAS9J,eAAkB8J,EAAShK,WAAa,EAAG,GAAI,MAAOgK,EAAShK,WAAW,GAAG,KAAMgK,EAAShK,WAAW,KAAOgK,EAAS/J,UAAU,GAClJ,KAAK+J,EAAS/J,UAAY,IAAI+J,EAAS/J,WAG3C,SAASiU,GAAWP,EAAO/X,GACvB,IAAIgY,EAAUD,EAAOE,MAAM,KAS3B,OAJAD,GAHAA,EAAUA,EAAUzX,KAAI,SAAAwX,GACpB,OAAOA,EAAOG,kBAEE3X,KAAI,SAAAwX,GACpB,OAAOA,EAAO,GAAG5F,cAAckD,OAAO0C,EAAOI,OAAO,QAGvCC,KAAK,IAAI,aAAaL,EAAOrX,QAAQ,KAAK,KAAK,OAAO2X,mBAAmBrY,GAzI9F3B,qBAAU,WAEF0N,IAA4C,IAAxBA,EAAiBvF,MACjCC,MAAM,iEACNvH,IAAW,IAEV6M,GAAoBA,EAAiB9J,MAAQ8J,EAAiBlF,OACnE8F,EAAiBZ,EAAiB9J,KAAK1B,KAAI,SAAA0B,GAAI,OAC/C,4BAAQxB,IAAKwB,EAAK8J,EAAiBlF,MAAM,GAAGjG,MAAOyG,MAAOpF,EAAK8J,EAAiBlF,MAAM,GAAGjG,OACpFqB,EAAK8J,EAAiBlF,MAAM,GAAGjG,MAAM,KAAKqB,EAAK8J,EAAiBlF,MAAM,GAAGjG,MAAMqB,EAAK8J,EAAiBlF,MAAM,GAAGjG,MAAM,WAI/H,CAACmL,EAAiBC,IAEpB3N,qBAAU,WACN,GAAI2lB,IAAgE,IAAlCA,EAA2Bxd,KACrDC,MAAM,iEACNvH,IAAW,QAEd,GAAI8kB,GAA8BA,EAA2B/hB,MAAQ+hB,EAA2Bnd,MAAO,CACxG,IAAM6Z,EAAoB,GACpB0D,EAAqB,GACrBniB,EAAK+hB,EAA2B/hB,KAAK,GACrC4E,EAAMmd,EAA2Bnd,MAAM,GACvCmU,EAAUnU,EAAM,GAAGjG,KACnBA,EAAKiG,EAAM,GAAGjG,KACdwF,EAAOS,EAAM,GAAGjG,KAChBgd,EAAQ/W,EAAM,GAAGjG,KACjBV,EAAK2G,EAAM,GAAGjG,KACdgE,EAAOiC,EAAM,GAAGjG,KAChBuiB,EAActc,EAAM,GAAGjG,KACvBiX,EAAOhR,EAAM,GAAGjG,KAEtByM,GAAkB,SAAAlD,OAElBlI,EAAKgF,SAAQ,SAAAzG,GACT,IAAIgO,EAAU,IACoC,IAAhDkS,EAAoBzY,QAAQzH,EAAKwa,MAC/B0F,EAAoBpa,KAAK9F,EAAKwa,IAC9BxM,EAAUhO,EAAKwa,IAAY/Y,EAAKwM,QAAO,SAAA/C,GAAK,OAAEA,EAAMsP,KAAaxa,EAAKwa,MACtE3N,GAAkB,SAAAlD,GAAW,OAAGzD,OAAOC,OAAO,GAAGwD,EAAYqE,UAIrEnB,GAAkB,SAAAlD,GAAW,sBAAOA,EAAP,CACzBlI,KAAK+hB,EAA2B/hB,KAChCyM,YAAY,YAAIsV,EAA2B/hB,MAC3C4E,MAAMmd,EAA2Bnd,MACjCyD,YACAE,UACA4W,gBAGJ1T,GACK,oCACG,4BAAQrG,MAAO2T,GAAf,cACA,4BAAQ3T,MAAOzG,GAAf,UAGRgN,GACK,oCACG,4BAAQvG,MAAOjB,GAAf,WACA,4BAAQiB,MAAOuW,GAAf,YACA,4BAAQvW,MAAOnH,GAAf,QACA,4BAAQmH,MAAOzC,GAAf,UACA,4BAAQyC,MAAO8b,GAAf,kBACA,4BAAQ9b,MAAOwQ,GAAf,YAGR5V,EAAKgF,SAAQ,SAAAzG,IACwC,IAA9C4jB,EAAqBnc,QAAQzH,EAAK4F,KACpCge,EAAqB9d,KAAK9F,EAAK4F,OAGnCmH,EAA2BmT,EAAoBngB,KAAI,SAAAC,GAAI,OAAEA,EAAKE,QAAQ,aAAa,OAClF2U,OAAO+O,EAAqB7jB,KAAI,SAAAC,GAAI,OAAEA,EAAKE,QAAQ,aAAa,YAGxE,CAACsjB,EAA2BC,IAG9B5lB,qBAAU,WACFiP,GACAA,EAAqBrG,SAAQ,SAAA0H,GACzBC,IAAE,IAAID,GAAIE,GAAG,oBAAmB,SAAApQ,GACzBA,EAAE+I,SAAS/I,EAAEqQ,eAChBF,IAAE,aAAaD,GAAII,YAAY,kBAAkBC,SAAS,sBAE9DJ,IAAE,IAAID,GAAIE,GAAG,oBAAmB,SAAApQ,GACzBA,EAAE+I,SAAS/I,EAAEqQ,eAChBF,IAAE,aAAaD,GAAII,YAAY,mBAAmBC,SAAS,0BAIzE,CAAC7E,IAEH9L,qBAAU,WACN,SAAS4Q,IACL/H,SAAS+C,cAAc,uBAAuBxC,aAC1C,UAAU,yCAIlB,OAFAxJ,OAAOiR,iBAAiB,WAAWD,GAE5B,WACChR,OAAOkR,oBAAoB,WAAWF,MAEhD,IAEF5Q,qBAAU,WACN,SAAS+Q,IACL1F,EAAY,eAIhB,OAFAzL,OAAOiR,iBAAiB,WAAWE,GAE5B,WACCnR,OAAOkR,oBAAoB,WAAWC,MAEhD,IA0WF,IAAIC,GAAa,KAkBjB,OAhBKtD,GAAoBA,EAAiB5J,OAAU6J,GACnDgY,GAA8BA,EAA2B7hB,OAAU8hB,KACpE5U,GACI,yBAAK/P,UAAU,uBACVyM,GAAoBA,EAAiB5J,MAAO,gDAAgD4J,EAAiB5J,MAAM2E,MACnH,UAAUiF,EAAiB5J,MAAM4E,KAAK,aAAagF,EAAiB5J,MAAM6E,WAAW,KACrFgF,EAAmB,yCAAyCA,EAAoB,KACjF,6BACA,6BACCgY,GAA8BA,EAA2B7hB,MAAO,sDAAsD6hB,EAA2B7hB,MAAM2E,MACvJ,UAAUkd,EAA2B7hB,MAAM4E,KAAK,aAAaid,EAA2B7hB,MAAM6E,WAAW,KACzGid,EAA6B,+CAA+CA,EAA8B,OAM/G,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAO3U,OAAK,EAAC1N,KAAI,UAAKA,GAAL,aACZuI,EACA,kBAAC,GAAD,CACGD,SAAU6Z,GAAuBniB,KACjCD,YAAaoiB,GAAuBpiB,YACpCwI,YAAaA,EACb+Y,mBAAoBA,GACpBjhB,KAAMgB,EAASkH,EAAW,YAAgB,GAAG0D,GAAa,OAC1D/C,WAAY7H,EAASkH,EAAW,YAAgB,GAAG4D,GAAmB,OACtElH,MAAOsD,EAAW,MAAU,GAC5BiZ,YAAajZ,EAAW,YAAgB,GACxCkZ,aAAclZ,EAAW,MAAU,GACnCgD,iBAAkBA,KAGlB,kBAAC,IAAD,CAAU5N,GAAIwkB,GAAuBniB,QAG7C,kBAAC,IAAD,CAAO0N,OAAK,EAAC1N,KAAMA,IACf,kBAAC,EAAD,KACI,yBAAKtC,UAAU,iBAAiBI,MAAO,CAAC6P,YAAY,GAAGC,aAAa,KAChE,4BAAKuU,GAAuBpiB,aAC5B,0BAAMrC,UAAU,OAAOmQ,SAAU,SAAAhR,GACjCA,EAAEiR,iBACFxB,IAA4B,GAC5BgW,EAA4B,CACxB5hB,IAAI,eACJE,KAAK,CACDoC,OAAO,OACPC,QAAQ,CAAC,eAAe,oBACxBC,KAAKC,KAAKC,UAAU,CAChBxE,KAAK,oBACLuB,MAAM,CAACuI,EAAUE,EAAQ4W,KAE7Bnc,YAAY,eAKhB,yBAAK3F,UAAU,4BACX,2BAAOA,UAAU,0BAA0BI,MAAO,CAAC6P,YAAY,GAAItG,QAAQ,aAA3E,cACA,8BAAO/I,KAAK,OAAOF,GAAG,YAAY2P,UAAQ,EAAC5H,SAAU,SAACtJ,GAC9C,IAAIwF,KAAKxF,EAAE+I,OAAOH,OAAO,IAAIpD,KAAKuG,IAClC/D,MAAM,4BACNyG,GAAgB,IAAIjJ,MAAOK,cAAc,WAExC4I,EAAgBzO,EAAE+I,OAAOH,QAE9BA,MAAOiD,GAPX,uDAOyC,sCAPzC,IAQA,2BAAOhL,UAAU,sCAAsCI,MAAO,CAAC6P,YAAY,GAAItG,QAAQ,WAAvF,YACA,8BAAO/I,KAAK,OAAOF,GAAG,UAAU2P,UAAQ,EAAC5H,SAAU,SAACtJ,GAC5C,IAAIwF,KAAKxF,EAAE+I,OAAOH,OAAO,IAAIpD,KAAKqG,IAClC7D,MAAM,0BACN2G,EAAcD,GAAiB,IAAIlJ,QAElCmJ,EAAc3O,EAAE+I,OAAOH,QAC7BA,MAAOmD,GANV,uDAMsC,sCANtC,KASJ,yBAAKlL,UAAU,4BACX,2BAAOA,UAAU,0BAA0BI,MAAO,CAAC6P,YAAY,GAAItG,QAAQ,YAA3E,aACA,4BAAQ3J,UAAU,wBAAwBqQ,UAAQ,EAACC,KAAK,IAAIvI,MAAO+Z,EAAUvR,UAAU,EAAM9H,SAAU,SAAAtJ,GACnG,IAAIkG,EAAO,GACXmL,MAAMC,KAAKtR,EAAE+I,OAAOwI,SAASzP,KAAI,SAAA0P,IACP,IAAlBA,EAAOrJ,UACPjC,EAAO2B,KAAK2J,EAAO5I,UAE3Bga,EAAe1c,KAEd+H,IAIT,yBAAKpN,UAAU,4BACX,yBAAKA,UAAU,0BACX,2BAAOY,KAAK,WAAWZ,UAAU,oBAAoBU,GAAG,cAAc+H,SAAU,SAAAtJ,GACxEA,EAAE+I,OAAOJ,QACTia,EAAetV,EAAiB9J,KAAK1B,KAAI,SAAA0B,GAAI,OACzCA,EAAK8J,EAAiBlF,MAAM,GAAGjG,UAElCygB,EAAe,OAExB,2BAAOpY,QAAQ,cAAcvJ,MAAO,CAAC6P,YAAY,GAAIjQ,UAAU,oBAA/D,mBAMR,8BAAUA,UAAU,iEAChB,4BAAQA,UAAU,kEACd,gDAEJ,yBAAKA,UAAU,YACf,yBAAKA,UAAU,iDAAiDI,MAAO,CAAC6P,YAAY,KAChF,2BAAOrP,KAAK,WAAWZ,UAAU,mBAAmBU,GAAG,qBAAqB+H,SAAU,SAAAtJ,GAC9EA,EAAE+I,OAAOJ,QACT+c,IAAyB,GACxBA,IAAyB,IAC3B/c,QAAS8b,KAChB,2BAAOja,QAAQ,qBAAqB3J,UAAU,oBAA9C,yBAGJ,yBAAKA,UAAU,gCACX,2BAAOA,UAAU,0BAA0BI,MAAO,CAAC6P,YAAY,GAAItG,QAAQ,QAA3E,QAGA,4BAAQjJ,GAAG,OAAOV,UAAU,wBAAwB+H,MAAOwG,GAAc9F,SAAU,SAAAtJ,GAAC,OAChFqP,GAAmBrP,EAAE+I,OAAOH,SAE5B,4BAAQA,MAAM,IAAd,wBACCoG,KAIT,yBAAKnO,UAAU,gCACX,2BAAOA,UAAU,0BAA0BI,MAAO,CAAC6P,YAAY,GAAItG,QAAQ,QAA3E,eAGA,4BAAQjJ,GAAG,OAAOV,UAAU,wBAAwB+H,MAAO0G,GAAoBhG,SAAU,SAAAtJ,GAAC,OACtFuP,GAAyBvP,EAAE+I,OAAOH,SAElC,4BAAQA,MAAM,IAAd,wBACCsG,OAOb,4BAAQzN,KAAK,SAASZ,UAAU,wBAAhC,YACA,4BAAQY,KAAK,SAASZ,UAAU,kBAAkBa,QAAS,SAAA1B,GAAC,OACxD4O,EAAkB,QADtB,SAEA,4BAAQnN,KAAK,SAASC,QAAS,SAAC1B,GACvB0L,GAIDjD,SAAS+C,cAAc,uBAAuBxC,aAC9C,UAAU,yCACViC,EAAY,gBACZxD,GAAQI,KAAK,qCANb4H,IAA4B,IASpC5O,UAAU,0BAXV,WAYC2O,GACA,yBAAK3O,UAAU,uBAAf,iCAEO,MAGZ,6BACC+P,GAEAlF,EACA,yBAAK7K,UAAU,QACZ,wBAAIA,UAAU,QAAd,SAEI,4BAAQA,UAAU,oBACda,QAAS,SAAC1B,GAAD,OAAK6O,EAAqBrG,SAAQ,SAAA0H,GAAE,OACzCC,IAAE,IAAID,GAAIwB,SAAS,aACxB,uBAAG7Q,UAAU,sBAHhB,WAIA,4BAAQA,UAAU,gBACda,QAAS,SAAC1B,GAAD,OAAK6O,EAAqBrG,SAAQ,SAAA0H,GAAE,OACzCC,IAAE,IAAID,GAAIwB,SAAS,aAF3B,IAGI,uBAAG7Q,UAAU,uBAHjB,cAzgB5B,WACI,IAAM2C,EAAKkI,EAAW,KAAS,GACzBtD,EAAMsD,EAAW,MAAU,GAC3B6Q,EAAUnU,EAAM,GAAGjG,KACnBA,EAAKiG,EAAM,GAAGjG,KACdwF,EAAOS,EAAM,GAAGjG,KAChBgd,EAAQ/W,EAAM,GAAGjG,KACjBV,EAAK2G,EAAM,GAAGjG,KACdgE,EAAOiC,EAAM,GAAGjG,KAChBuiB,EAActc,EAAM,GAAGjG,KACvBiX,EAAOhR,EAAM,GAAGjG,KAEhBwiB,EAAYjZ,EAAW,KAAS,GAChCkZ,EAAalZ,EAAW,MAAU,GAClCmZ,EAAcD,EAAa,GAAGziB,KAC9B2iB,EAAkBF,EAAa,GAAGziB,KAClC4iB,EAAgBH,EAAa,GAAGziB,KAChC6iB,EAAgBJ,EAAa,GAAGziB,KAChC8iB,EAAsBL,EAAa,GAAGziB,KACtC+iB,EAAkBN,EAAa,GAAGziB,KAClCgjB,EAAcP,EAAa,GAAGziB,KA0QpC,OACI,yBAAKtB,UAAU,0BAA0BI,MAAO,CAAC6Q,UAAU,oBACvD,yBAAK7Q,MAAO,CAACC,MAAM2Q,GAAgBC,UAAU,oBACzC,yBAAKjR,UAAU,oDACfI,MAAO,CAAC8Q,WAAW,EAAEC,YAAY,IAC7B,wBAAI/Q,MAAO,CAAC2Q,KAAK,WAAWd,YAAY,GAAGC,aAAa,MACxD,wBAAI9P,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,GAAGlI,OAAO,WAC/DC,aAAW,MAAMpH,QAAS,SAAC1B,GAC3BA,EAAE+I,OAAOC,aAAa,aACgB,QAAtChJ,EAAE+I,OAAOE,aAAa,cAAsB,OAAO,OACnDyC,EAAW,KAAS,GAAGlH,EAASkH,EAAW,KAAS,GAAG6Q,EAAUvc,EAAE+I,OAAOE,aAAa,eACvF2F,EAAkB,eAAIlD,IACwB,QAAtC1L,EAAE+I,OAAOE,aAAa,eACtBR,SAASC,eAAe,YAAYQ,UAAUC,OAAO,eACrDV,SAASC,eAAe,YAAYQ,UAAUE,IAAI,mBAGlDX,SAASC,eAAe,YAAYQ,UAAUC,OAAO,iBACrDV,SAASC,eAAe,YAAYQ,UAAUE,IAAI,kBAZ9D,aAkBI,uBAAG7H,GAAG,WAAWV,UAAU,2BAE/B,wBAAIA,UAAU,MAAMI,MAAO,CAAC6P,YAAY,GAAGC,aAAa,GAAGlI,OAAO,WAClEC,aAAW,MAAMpH,QAAS,SAAC1B,GACvBA,EAAE+I,OAAOC,aAAa,aACgB,QAAtChJ,EAAE+I,OAAOE,aAAa,cAAsB,OAAO,OACnDyC,EAAW,KAAS,GAAGlH,EAASkH,EAAW,KAAS,GAAGvJ,EAAKnC,EAAE+I,OAAOE,aAAa,eAClF2F,EAAkB,eAAIlD,IACwB,QAAtC1L,EAAE+I,OAAOE,aAAa,eACtBR,SAASC,eAAe,QAAQQ,UAAUC,OAAO,eACjDV,SAASC,eAAe,QAAQQ,UAAUE,IAAI,mBAG9CX,SAASC,eAAe,QAAQQ,UAAUC,OAAO,iBACjDV,SAASC,eAAe,QAAQQ,UAAUE,IAAI,kBAZ1D,OAiBI,uBAAG7H,GAAG,OAAOV,UAAU,2BAE3B,wBAAII,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,KAAzD,mBAEJ,yBAAK9P,MAAO,CAACgR,UAAU,OAAOC,UAAU,SAASrI,UAAU,SAvTvE,WACI,IAAMoY,EAAoB,GACpB/b,EAAO,GAkQb,OAhQA1C,EAAKgF,SAAQ,SAAAzG,IAC0C,IAAhDkgB,EAAoBzY,QAAQzH,EAAKwa,MAChC0F,EAAoBpa,KAAK9F,EAAKwa,IAC9BrW,EAAO2B,KACH,yBAAK7F,IAAKD,EAAKwa,IACX,yBAAK1b,UAAU,SAASI,MAAO,CAAC4H,OAAO,WAAYxH,cAAY,WAAWC,cAAa,IAAIS,EAAKwa,GAAWta,QAAQ,aAAa,KAC5H,uBAAGpB,UAAU,yBAAyBI,MAAO,CAAC2Q,KAAK,WAAWd,YAAY,GAAGC,aAAa,IAC1FxP,GAAI,YAAYQ,EAAKwa,GAAWta,QAAQ,aAAa,MACrD,uBAAGpB,UAAU,OAAOI,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,KAAMhP,EAAKwa,IACpF,uBAAG1b,UAAU,WAAWI,MAAO,CAAC6P,YAAY,GAAGC,aAAa,KAAMhP,EAAKI,IACvE,uBAAGtB,UAAU,OAAOI,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,KACpE9L,EAAmBzB,EAAKsJ,QAAO,SAACjI,EAAEC,GAC/B,OAAIA,EAAEyX,KAAaxa,EAAKwa,GACb1X,EAAEC,EAAEsU,GACHvU,IACd,MAIV,yBAAKhE,UAAU,6CACfU,GAAIQ,EAAKwa,GAAWta,QAAQ,aAAa,KACrC,yBAAKpB,UAAU,oDACXI,MAAO,CAAC8Q,WAAW,EAAEC,YAAY,IACjC,wBAAI/Q,MAAO,CAAC2Q,KAAK,WAAWd,YAAY,GAAGC,aAAa,MACxD,wBAAI9P,MAAO,CAAC2Q,KAAK,WAAWd,YAAY,GAAGC,aAAa,MACxD,wBAAI9P,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,GAAGlI,OAAO,WAC/DC,aAAW,MAAMpH,QAAS,SAAC1B,GAC3B,IAAMuB,EAAG,YAAYQ,EAAKwa,GAAWta,QAAQ,aAAa,IAE1DjC,EAAE+I,OAAOC,aAAa,aACgB,QAAtChJ,EAAE+I,OAAOE,aAAa,cAAsB,OAAO,OAEnD,IAAIkJ,EAAW,GACfA,EAAWpQ,EAAKwa,IAAY/X,EAASkH,EAAY3J,EAAKwa,IAAY5U,EAAO3H,EAAE+I,OAAOE,aAAa,eAE/F2F,EAAkB3G,OAAOC,OAAO,GAAGwD,EAAYyG,IACL,QAAtCnS,EAAE+I,OAAOE,aAAa,eACtBR,SAASC,eAAenH,GAAI2H,UAAUC,OAAO,eAC7CV,SAASC,eAAenH,GAAI2H,UAAUE,IAAI,mBAG1CX,SAASC,eAAenH,GAAI2H,UAAUC,OAAO,iBAC7CV,SAASC,eAAenH,GAAI2H,UAAUE,IAAI,kBAjBlD,cAsBI,uBAAG7H,GAAI,YAAYQ,EAAKwa,GAAWta,QAAQ,aAAa,IACxDpB,UAAU,2BAGd,wBAAII,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,GAAGlI,OAAO,WAC/DC,aAAW,MAAMpH,QAAS,SAAC1B,GAC3B,IAAMuB,EAAG,OAAOQ,EAAKwa,GAAWta,QAAQ,aAAa,IACrDjC,EAAE+I,OAAOC,aAAa,aACgB,QAAtChJ,EAAE+I,OAAOE,aAAa,cAAsB,OAAO,OAEnD,IAAIkJ,EAAW,GACfA,EAAWpQ,EAAKwa,IAAY/X,EAASkH,EAAY3J,EAAKwa,IAAY4C,EAAQnf,EAAE+I,OAAOE,aAAa,eAEhG2F,EAAkB3G,OAAOC,OAAO,GAAGwD,EAAYyG,IACL,QAAtCnS,EAAE+I,OAAOE,aAAa,eACtBR,SAASC,eAAenH,GAAI2H,UAAUC,OAAO,eAC7CV,SAASC,eAAenH,GAAI2H,UAAUE,IAAI,mBAG1CX,SAASC,eAAenH,GAAI2H,UAAUC,OAAO,iBAC7CV,SAASC,eAAenH,GAAI2H,UAAUE,IAAI,kBAhBlD,OAqBI,uBAAG7H,GAAI,OAAOQ,EAAKwa,GAAWta,QAAQ,aAAa,IAAKpB,UAAU,2BAGtE,wBAAII,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,GAAGlI,OAAO,WAC/DC,aAAW,MAAMpH,QAAS,SAAC1B,GAC3B,IAAMuB,EAAG,OAAOQ,EAAKwa,GAAWta,QAAQ,aAAa,IACrDjC,EAAE+I,OAAOC,aAAa,aACgB,QAAtChJ,EAAE+I,OAAOE,aAAa,cAAsB,OAAO,OAEnD,IAAIkJ,EAAW,GACfA,EAAWpQ,EAAKwa,IAAY/X,EAASkH,EAAY3J,EAAKwa,IAAY9a,EAAKzB,EAAE+I,OAAOE,aAAa,eAE7F2F,EAAkB3G,OAAOC,OAAO,GAAGwD,EAAYyG,IACL,QAAtCnS,EAAE+I,OAAOE,aAAa,eACtBR,SAASC,eAAenH,GAAI2H,UAAUC,OAAO,eAC7CV,SAASC,eAAenH,GAAI2H,UAAUE,IAAI,mBAG1CX,SAASC,eAAenH,GAAI2H,UAAUC,OAAO,iBAC7CV,SAASC,eAAenH,GAAI2H,UAAUE,IAAI,kBAhBlD,OAqBI,uBAAG7H,GAAI,OAAOQ,EAAKwa,GAAWta,QAAQ,aAAa,IAAKpB,UAAU,2BAGtE,wBAAII,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,GAAGlI,OAAO,WAC/DC,aAAW,MAAMpH,QAAS,SAAC1B,GAC3B,IAAMuB,EAAG,SAASQ,EAAKwa,GAAWta,QAAQ,aAAa,IACvDjC,EAAE+I,OAAOC,aAAa,aACgB,QAAtChJ,EAAE+I,OAAOE,aAAa,cAAsB,OAAO,OAEnD,IAAIkJ,EAAW,GACfA,EAAWpQ,EAAKwa,IAAY/X,EAASkH,EAAY3J,EAAKwa,IAAYpW,EAAOnG,EAAE+I,OAAOE,aAAa,eAE/F2F,EAAkB3G,OAAOC,OAAO,GAAGwD,EAAYyG,IACL,QAAtCnS,EAAE+I,OAAOE,aAAa,eACtBR,SAASC,eAAenH,GAAI2H,UAAUC,OAAO,eAC7CV,SAASC,eAAenH,GAAI2H,UAAUE,IAAI,mBAG1CX,SAASC,eAAenH,GAAI2H,UAAUC,OAAO,iBAC7CV,SAASC,eAAenH,GAAI2H,UAAUE,IAAI,kBAhBlD,SAqBI,uBAAG7H,GAAI,SAASQ,EAAKwa,GAAWta,QAAQ,aAAa,IAAKpB,UAAU,2BAGxE,wBAAII,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,GAAGlI,OAAO,WAC/DC,aAAW,MAAMpH,QAAS,SAAC1B,GAC3B,IAAMuB,EAAG,gBAAgBQ,EAAKwa,GAAWta,QAAQ,aAAa,IAC9DjC,EAAE+I,OAAOC,aAAa,aACgB,QAAtChJ,EAAE+I,OAAOE,aAAa,cAAsB,OAAO,OAEnD,IAAIkJ,EAAW,GACfA,EAAWpQ,EAAKwa,IAAY/X,EAASkH,EAAY3J,EAAKwa,IAAYmI,EAAc1kB,EAAE+I,OAAOE,aAAa,eAEtG2F,EAAkB3G,OAAOC,OAAO,GAAGwD,EAAYyG,IACL,QAAtCnS,EAAE+I,OAAOE,aAAa,eACtBR,SAASC,eAAenH,GAAI2H,UAAUC,OAAO,eAC7CV,SAASC,eAAenH,GAAI2H,UAAUE,IAAI,mBAG1CX,SAASC,eAAenH,GAAI2H,UAAUC,OAAO,iBAC7CV,SAASC,eAAenH,GAAI2H,UAAUE,IAAI,kBAhBlD,iBAqBI,uBAAG7H,GAAI,gBAAgBQ,EAAKwa,GAAWta,QAAQ,aAAa,IAAKpB,UAAU,2BAG/E,wBAAII,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,GAAGlI,OAAO,WAC/DC,aAAW,MAAMpH,QAAS,SAAC1B,GAC3B,IAAMuB,EAAG,SAASQ,EAAKwa,GAAWta,QAAQ,aAAa,IACvDjC,EAAE+I,OAAOC,aAAa,aACgB,QAAtChJ,EAAE+I,OAAOE,aAAa,cAAsB,OAAO,OAEnD,IAAIkJ,EAAW,GACfA,EAAWpQ,EAAKwa,IAAY/X,EAASkH,EAAY3J,EAAKwa,IAAYnD,EAAOpZ,EAAE+I,OAAOE,aAAa,eAE/F2F,EAAkB3G,OAAOC,OAAO,GAAGwD,EAAYyG,IACL,QAAtCnS,EAAE+I,OAAOE,aAAa,eACtBR,SAASC,eAAenH,GAAI2H,UAAUC,OAAO,eAC7CV,SAASC,eAAenH,GAAI2H,UAAUE,IAAI,mBAG1CX,SAASC,eAAenH,GAAI2H,UAAUC,OAAO,iBAC7CV,SAASC,eAAenH,GAAI2H,UAAUE,IAAI,kBAhBlD,SAqBI,uBAAG7H,GAAI,SAASQ,EAAKwa,GAAWta,QAAQ,aAAa,IAAKpB,UAAU,4BAG3E6K,EAAY3J,EAAKwa,IAAYza,KAAI,SAAAmL,GAC9B,OACI,yBAAKjL,IAAKiL,EAAMtF,IACZ,yBAAK9G,UAAU,SAASI,MAAO,CAAC4H,OAAO,WACvCxH,cAAY,WAAWC,cAAa,IAAI2L,EAAMtF,GAAQ1F,QAAQ,aAAa,KACvE,uBAAGpB,UAAU,yBACbI,MAAO,CAAC2Q,KAAK,WAAWd,YAAY,GAAGC,aAAa,GAAGlI,OAAO,WAC9DtH,GAAI,YAAY0L,EAAMtF,GAAQ1F,QAAQ,aAAa,MACnD,4BAAQpB,UAAU,2BAA2BI,MAAO,CAAC2Q,KAAK,WAAWG,WAAW,GAAGC,YAAY,IAC/FtQ,QAAS,SAAC1B,GAAD,OAAKyH,GAAQI,KAAK,KAAKgS,GAAW5M,EAAMxL,GAAMgY,cAAcxM,EAAMtF,OAD3E,QAGA,uBAAG9G,UAAU,YAAYI,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,KACzE9D,EAAMtF,IAEX,uBAAG9G,UAAU,YAAYI,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,KACzEzL,EAAiB2H,EAAMkS,KAE5B,uBAAGte,UAAU,YAAYI,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,KACzE9D,EAAMxL,IAEX,uBAAGZ,UAAU,YAAYI,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,KACzE9D,EAAM9G,IAEX,uBAAGtF,UAAU,YAAYI,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,KACzE9D,EAAMyX,IAEX,uBAAG7jB,UAAU,YAAYI,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,KACzE9D,EAAMmM,KAIf,yBAAKvY,UAAU,6CACfU,GAAI0L,EAAMtF,GAAQ1F,QAAQ,aAAa,KACnC,2BAAOpB,UAAU,qBACb,+BACI,4BACI,wBAAIA,UAAU,eAAd,WACA,wBAAIA,UAAU,eAAd,QACA,wBAAIA,UAAU,eAAd,YACA,wBAAIA,UAAU,eAAd,YACA,wBAAIA,UAAU,eAAd,eACA,wBAAIA,UAAU,eAAd,cACA,wBAAIA,UAAU,eAAd,oBAGR,+BACK8jB,EAAY7iB,KAAI,SAAAujB,GACb,GAAGA,EAAMR,KAAiB5X,EAAMtF,GAChC,OACI,wBAAI3F,IAAKqjB,EAAMP,GAAoB7jB,MAAO,CAAC4H,OAAO,WAAYnH,QAAS,SAAC1B,GAAD,OACnEyH,GAAQI,KAAK,KAAKgS,GAAWwL,EAAMN,GAAiBtL,cAAc4L,EAAMP,OAExE,wBAAIjkB,UAAU,eAAewkB,EAAMP,IACnC,wBAAIjkB,UAAU,eAAewkB,EAAMN,IACnC,wBAAIlkB,UAAU,eAAeyE,EAAiB+f,EAAML,KACpD,wBAAInkB,UAAU,eACbwkB,EAAMJ,IAAyD,QAA/BI,EAAMJ,GACtC3f,EAAiBoJ,GACT,IAAIlJ,KAAK,IAAIA,KAAK6f,EAAML,IACvB7C,QAAQ,IAAI3c,KAAK6f,EAAML,IAAkBpf,UACzCF,OAAO2f,EAAMJ,QAChB3f,EAAiB+f,EAAML,KAE9B,wBAAInkB,UAAU,eACiB,QAA/BwkB,EAAMJ,GAA+B,SAASI,EAAMJ,GAAuB,SAE3E,wBAAIpkB,UAAU,eAAeoE,EAAmBogB,EAAMH,KACtD,wBAAIrkB,UAAU,eAAeoE,EAAmBogB,EAAMF,uBAkBvGjf,EAoDMmc,MAgMIjV,IAEG,KAER,wBAAIvM,UAAU,YAI1B,kBAAC,IAAD,CAAUC,GAAIwkB,GAAuBniB,QAIjDmiB,GAAuBpiB,YAAY,2BACnCoiB,GAAuBniB,KAAK,0BAEbmiB,UCttBf,SAASM,GAAYtmB,GAEjB,IAAMuE,EAAI,CACN9B,KAAK,IAAIuW,gBAAgBhZ,EAAMiZ,SAAStR,QAAQuR,IAAI,QACpDjX,GAAG,IAAI+W,gBAAgBhZ,EAAMiZ,SAAStR,QAAQuR,IAAI,OAJ9B,EAOYjZ,mBAAS,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,MAAM,GAAG,KAPpD,mBAOjBkV,EAPiB,KAONb,EAPM,KASxB,SAAStK,EAASV,EAAMlE,GACpBkP,EAAiB,GAAD,mBAAKa,EAAWhL,MAAM,EAAE/E,IAAxB,CAA+BkE,GAA/B,YAAwC6L,EAAWhL,MAAM/E,EAAM,EAAE+P,EAAWlS,WAGhG,OACI,kBAAC,EAAD,CAAMkS,WAAYA,EAAYb,iBAAkBA,EAAkB/P,IAAKA,EAAK9B,KAAK,SAASwS,YAAY,uBAElG,gBAAE/B,EAAF,EAAEA,MAAMf,EAAR,EAAQA,SAASgB,EAAjB,EAAiBA,eAAe+B,EAAhC,EAAgCA,SAASE,EAAzC,EAAyCA,SAASC,EAAlD,EAAkDA,SAAS/D,EAA3D,EAA2DA,aAAagE,EAAxE,EAAwEA,kBAAxE,OACC,kBAAC,EAAD,KACG,yBAAK/T,UAAU,0BAIX,wBAAIA,UAAU,SAAiB,WAAR2R,EAAkB,SAAS,UAAY,IAAKoT,GAAW1iB,aAC9E,2BAAOrC,UAAU,gBAAjB,cACC+P,EAKD,0BAAMI,SAAU,SAAChR,GAAKA,EAAEiR,iBAA6B,WAARuB,EAAkBgC,IAAiBE,MAC5E,yBAAK7T,UAAU,uBACX,2BAAOA,UAAU,0BAA0B2J,QAAQ,gBAAnD,iBAAiF,0BAAM3J,UAAU,gBAAhB,MAChF+T,EAAkB,CACftL,SAASA,EACTwL,OAAO,WACPK,SAAS,EACTC,QAAQ,kBAIhB,yBAAKvU,UAAU,uBACX,2BAAOA,UAAU,0BAA0B2J,QAAQ,QAAnD,QAA+D,0BAAM3J,UAAU,gBAAhB,MAC/D,yBAAKA,UAAU,aACX,2BAAOY,KAAK,OAAOF,GAAG,OAAO+H,SAAU,SAACtJ,GAAD,OACvCsJ,EAAStJ,EAAE+I,OAAOH,MAAM,IAAIA,MAAO6L,EAAW,GAAIhD,SAAUA,EAAUP,UAAQ,EAACrQ,UAAU,mBAGjG,yBAAKA,UAAU,uBACX,2BAAOA,UAAU,0BAA0B2J,QAAQ,WAAnD,WAAqE,0BAAM3J,UAAU,gBAAhB,MACrE,yBAAKA,UAAU,aACX,8BAAUU,GAAG,UAAU+H,SAAU,SAACtJ,GAAD,OACjCsJ,EAAStJ,EAAE+I,OAAOH,MAAM,IACxBA,MAAO6L,EAAW,GAAIhD,SAAUA,EAAUP,UAAQ,EAACrQ,UAAU,mBAGrE,yBAAKA,UAAU,uBACX,2BAAOA,UAAU,0BAA0B2J,QAAQ,YAAnD,YAAuE,0BAAM3J,UAAU,gBAAhB,MACvE,yBAAKA,UAAU,YACX,2BAAOY,KAAK,OAAOsT,UAAU,IAAIxT,GAAG,WAAW+H,SAAU,SAACtJ,GAAD,OACzDsJ,EAAStJ,EAAE+I,OAAOH,MAAM,IAAIA,MAAO6L,EAAW,GAAIhD,SAAUA,EAAUP,UAAQ,EAACrQ,UAAU,kBAE7F,2BAAOA,UAAU,yCAAyC2J,QAAQ,SAAlE,SAAgF,0BAAM3J,UAAU,gBAAhB,MAChF,yBAAKA,UAAU,YACX,2BAAOY,KAAK,OAAOF,GAAG,QAAQwT,UAAU,KAAKzL,SAAU,SAACtJ,GAAD,OAAKsJ,EAAStJ,EAAE+I,OAAOH,MAAM,IACpFA,MAAO6L,EAAW,GAAIhD,SAAUA,EAAUP,UAAQ,EAACrQ,UAAU,mBAGrE,yBAAKA,UAAU,uBACX,2BAAOA,UAAU,0BAA0B2J,QAAQ,OAAnD,OACA,yBAAK3J,UAAU,YACX,2BAAOY,KAAK,OAAOF,GAAG,MAAMwT,UAAU,KAAKzL,SAAU,SAACtJ,GAAD,OACrDsJ,EAAStJ,EAAE+I,OAAOH,MAAM,IAAIA,MAAO6L,EAAW,GAAIhD,SAAUA,EAAU5Q,UAAU,kBAEpF,2BAAOA,UAAU,yCAAyC2J,QAAQ,cAAlE,eACA,yBAAK3J,UAAU,YACX,4BAAQU,GAAG,aAAa+H,SAAU,SAACtJ,GAAD,OAAMsJ,EAAStJ,EAAE+I,OAAOH,MAAM,IAAIA,MAAO6L,EAAW,GAAIhD,SAAUA,EACpG5Q,UAAU,gBACN,4BAAQ+H,MAAM,OAAd,UACA,4BAAQA,MAAM,MAAd,WACA,4BAAQA,MAAM,MAAd,WACA,4BAAQA,MAAM,MAAd,WACA,4BAAQA,MAAM,MAAd,cAIZ,yBAAK/H,UAAU,uBACX,2BAAOA,UAAU,0BAA0B2J,QAAQ,aAAnD,qBACA,yBAAK3J,UAAU,aACX,8BAAUU,GAAG,YAAY+H,SAAU,SAACtJ,GAAD,OACnCsJ,EAAStJ,EAAE+I,OAAOH,MAAM,IACxBA,MAAO6L,EAAW,GAAIhD,SAAUA,EAAU5Q,UAAU,mBAI5D,kBAAC,EAAD,CAAY2R,MAAOA,EAAOgC,SAAUA,EAAUE,SAAUA,EAAUC,SAAUA,EAAUlC,eAAgBA,UAY9HmT,GAAW1iB,YAAY,cACvB0iB,GAAWziB,KAAK,cAEDyiB,U,oBC7Gf,SAASC,GAAoBvmB,GACzB,OACQ,kBAAC,EAAD,KACI,kBAAC,EAAD,CAASwI,eAAe,iBAAiB/F,KAAK,WAC9C3B,OAAQ,SAACwK,GACL,OACA,kBAAC,EAAD,eAAe1H,YAAa2iB,GAAoB3iB,YAAawH,SAAU,YAAgBE,QAS3Gib,GAAoB3iB,YAAY,uBAChC2iB,GAAoB1iB,KAAK,uBAEV0iB,UCLf,SAASC,GAAoBxmB,GAAQ,IAAD,IAC4B8D,EAAS,CACjES,IAAI,eACJE,KAAK,CACDoC,OAAO,OACPC,QAAQ,CAAC,eAAe,oBACxBC,KAAKC,KAAKC,UAAU,CAACxE,KAAK,aAC1ByE,YAAY,aAPY,sBACnB0W,EADmB,EACxB1Z,KAA8B2Z,EADN,EACAzZ,MADA,EAW+DN,EAAS,MAXxE,0BAWnB2iB,EAXmB,EAWxBviB,KAAmCwiB,EAXX,EAWKtiB,MAAgCuiB,EAXrC,OAaU1mB,mBAAS,MAbnB,mBAazBge,EAbyB,KAaZC,EAbY,OAeEje,mBAAUmP,GAAiB,IAAIlJ,OAfjC,mBAezBmK,EAfyB,KAehB+S,EAfgB,OAgBMnjB,mBAAS,IAhBf,mBAgBzB2mB,EAhByB,KAgBdC,EAhBc,OAiBM5mB,mBAAS,GAjBf,mBAiBzBuiB,EAjByB,KAiBbe,EAjBa,OAkBMtjB,mBAAS,MAlBf,mBAkBzBmM,EAlByB,KAkBbkD,EAlBa,OAmBwBrP,mBAAS,IAnBjC,mBAmBzBsP,EAnByB,KAmBJC,EAnBI,OAsBMvP,oBAAS,GAtBf,mBAsBzByM,EAtByB,KAsBb+C,GAtBa,QAuBgBxP,mBAAS,MAvBzB,qBAuBzByP,GAvByB,MAuBRC,GAvBQ,SAwB4B1P,mBAAS,MAxBrC,qBAwBzB2P,GAxByB,MAwBFC,GAxBE,SAyBQ5P,mBAAS,IAzBjB,qBAyBzB6P,GAzByB,MAyBZC,GAzBY,SA0BoB9P,mBAAS,IA1B7B,qBA0BzB+P,GA1ByB,MA0BNC,GA1BM,SA2B0BhQ,oBAAS,GA3BnC,qBA2BzBiQ,GA3ByB,MA2BHC,GA3BG,MA6BzBtM,GAAQuM,cAARvM,KACA1C,GAAcC,qBAAWL,GAAzBI,WACDgH,GAAQC,cAERmK,GAAgBnG,GAAeA,EAAW,YAAiB,IAA+B,GAA3BA,EAAW,YAAmB,OAmHnG,SAASgD,GAAiBnJ,GACtB,IAAIoK,EAAS,IAAInK,KAAKD,GAEtB,OAAQoK,EAAS9J,eAAkB8J,EAAShK,WAAa,EAAG,GAAI,MAAOgK,EAAShK,WAAW,GAAG,KAAMgK,EAAShK,WAAW,KAAOgK,EAAS/J,UAAU,GAClJ,KAAK+J,EAAS/J,UAAY,IAAI+J,EAAS/J,WAa3C,SAASoH,GAAqB2C,EAASuW,EAAWpD,EAAOrhB,GASrD,IARA,IAAIyE,EAAO,GACL1C,EAAKkI,EAAW,KAChBtD,EAAMsD,EAAW,MACjBiT,EAAYvW,EAAM,GAAGjG,KACrBgd,EAAQ/W,EAAM,GAAGjG,KACjBiX,EAAOhR,EAAM,GAAGjG,KAChB6f,EAAW5Z,EAAM,GAAGjG,KAPiC,WASnDkH,GACJ,IAAI0Z,EAAYvf,EAAKsJ,QAAO,SAACjI,EAAEC,GAC3B,OAAGA,EAAE6Z,KAAeuH,GAENlD,GACNrT,EACA7K,EAAEkd,IAA+B,QAAhBld,EAAEkd,GACftT,GAAiB,IAAIlJ,KAAK,IAAIA,KAAKV,EAAEqa,IACpCgD,QAAQ,IAAI3c,KAAKV,EAAEqa,IAAUvZ,UAAUF,OAAOZ,EAAEkd,OAC/Cld,EAAEqa,GACRra,EAAEsU,GACF/P,GAIOxE,EAAEC,EAAEsU,GAGPvU,IACd,GAES,UAAPpD,EACAyE,EAAO2B,KACH,uBAAGhH,UAAU,OAAOmB,IAAKqH,EAAGpI,MAAO,CAAC2Q,KAAK,WAAWd,YAAY,GAAGC,aAAa,KAC5EgS,EAAY9d,EAAmB8d,GAAa,KAGnD7c,EAAO2B,KACP,wBAAIhH,UAAU,YAAYmB,IAAKqH,GAC3B0Z,EAAY9d,EAAmB8d,GAAa,MA7BjD1Z,EAAE,EAAEA,GAAIyZ,EAAQ,EAAEzZ,IAAM,EAAxBA,GAiCR,OAAOnD,EAGX,SAAS6b,GAA0Be,GAE/B,IADA,IAAI5c,EAAO,GACHmD,EAAE,EAAEA,GAAIyZ,EAAQ,EAAEzZ,IACtBnD,EAAO2B,KACF,wBAAI7F,IAAKqH,EAAGxI,UAAU,yBAAyBwI,EAAE,WAG1D,OAAOnD,EAGX,SAASmM,GAA0B1C,EAASsT,EAAQ7J,EAAO0J,GAEvD,IADA,IAAI5c,EAAO,GACHmD,EAAE,EAAEA,GAAIyZ,EAAQ,EAAEzZ,IACtBnD,EAAO2B,KACF,wBAAIhH,UAAU,wBAAwBmB,IAAKqH,GACvCpE,EAAmB+d,GAA2BrT,EAASsT,EAAQ7J,EAAO/P,MAInF,OAAOnD,EAGX,SAASgc,GAA4BvS,EAASsT,EAAQ7J,GAMlD,OAFDzJ,EAAS,IAAInK,KAAK,IAAIA,KAAKmK,GAAU9J,cAAc,IAAIL,KAAKmK,GAAUhK,WAAW,IAAIH,KAAKmK,GAAU/J,UAAU,KAE/F,IAAIJ,KAAK,IAAIA,KAAKyd,GAASpd,cAAe,IAAIL,KAAKyd,GAAStd,WAAY,EAAE,GAC7EyT,EAEC,GAGhB,SAAS4J,GAA2BrT,EAASsT,EAAQ7J,EAAO0I,GAGxD,OAFDnS,EAAS,IAAInK,KAAK,IAAIA,KAAKmK,GAAU9J,cAAc,IAAIL,KAAKmK,GAAUhK,WAAW,IAAIH,KAAKmK,GAAU/J,UAAU,KAE/F,IAAIJ,KAAK,IAAIA,KAAKyd,GAASpd,cAAe,IAAIL,KAAKyd,GAAStd,WAAY,EAAEmc,EAAY,IACjGnS,EAAS,IAAInK,KAAK,IAAIA,KAAKyd,GAASpd,cAAe,IAAIL,KAAKyd,GAAStd,WAAYmc,EAAY,GACrF1I,EAEC,GAGhB,SAASgJ,GAA8BzS,EAASsT,EAAQ7J,EAAO0J,GAG3D,OAFDnT,EAAS,IAAInK,KAAK,IAAIA,KAAKmK,GAAU9J,cAAc,IAAIL,KAAKmK,GAAUhK,WAAW,IAAIH,KAAKmK,GAAU/J,UAAU,IAEhG,IAAIJ,KAAK,IAAIA,KAAKyd,GAASpd,cAAe,IAAIL,KAAKyd,GAAStd,WAAYmd,EAAO,EAAE,GACnF1J,EAEC,GAhOhBxZ,qBAAU,WAEFsd,IAAgD,IAA1BA,EAAmBnV,MACrCC,MAAM,iEACNvH,IAAW,IAEVyc,GAAsBA,EAAmB1Z,MAAQ0Z,EAAmB9U,OACzEoV,EAAmBN,EAAmB1Z,KAAK1B,KAAI,SAAA0B,GAAI,OACnD,4BAAQxB,IAAKwB,EAAK0Z,EAAmB9U,MAAM,GAAGjG,MAAOyG,MAAOpF,EAAK0Z,EAAmB9U,MAAM,GAAGjG,OACxFqB,EAAK0Z,EAAmB9U,MAAM,GAAGjG,MAAM,KAAKqB,EAAK0Z,EAAmB9U,MAAM,GAAGjG,MAAMqB,EAAK0Z,EAAmB9U,MAAM,GAAGjG,MAAM,WAIrI,CAAC+a,EAAmBC,IAEtBvd,qBAAU,WACN,GAAImmB,IAA0D,IAA/BA,EAAwBhe,KAC/CC,MAAM,iEACNvH,IAAW,QAEd,GAAIslB,GAA2BA,EAAwBviB,MAAQuiB,EAAwB3d,MAAO,CAC/F,IAAMge,EAAsB,GACtB5iB,EAAKuiB,EAAwBviB,KAC7B4E,EAAM2d,EAAwB3d,MAC9BuW,EAAYvW,EAAM,GAAGjG,KACrBA,EAAKiG,EAAM,GAAGjG,KACdwF,EAAOS,EAAM,GAAGjG,KAChBgd,EAAQ/W,EAAM,GAAGjG,KACjBV,EAAK2G,EAAM,GAAGjG,KAIpByM,GAAkB,SAAAlD,OAIlBlI,EAAKgF,SAAQ,SAAAzG,GACT,IAAIgO,EAAU,IACwC,IAApDqW,EAAsB5c,QAAQzH,EAAK4c,MACjCyH,EAAsBve,KAAK9F,EAAK4c,IAChC5O,EAAUhO,EAAK4c,IAAcnb,EAAKwM,QAAO,SAAA/C,GAAK,OAAEA,EAAM0R,KAAe5c,EAAK4c,MAC1E/P,GAAkB,SAAAlD,GAAW,OAAGzD,OAAOC,OAAO,GAAGwD,EAAYqE,UAIrEnB,GAAkB,SAAAlD,GAAW,sBAAOA,EAAP,CACzBlI,KAAKuiB,EAAwBviB,KAC7ByM,YAAY,YAAI8V,EAAwBviB,MACxC4E,MAAM2d,EAAwB3d,MAC9BuH,WACAmS,mBAGJ7S,GACK,oCACG,4BAAQrG,MAAO+V,GAAf,gBACA,4BAAQ/V,MAAOzG,GAAf,UAGRgN,GACK,oCACG,4BAAQvG,MAAOjB,GAAf,WACA,4BAAQiB,MAAOuW,GAAf,YACA,4BAAQvW,MAAOnH,GAAf,UAGRqN,EAA2BsX,EAAsBtkB,KAAI,SAAAC,GAAI,OAAEA,EAAKE,QAAQ,aAAa,WAE3F,CAAC8jB,EAAwBC,IAG3BpmB,qBAAU,WACFiP,GACAA,EAAqBrG,SAAQ,SAAA0H,GACzBC,IAAE,IAAID,GAAIE,GAAG,oBAAmB,SAAApQ,GACzBA,EAAE+I,SAAS/I,EAAEqQ,eAChBF,IAAE,aAAaD,GAAII,YAAY,kBAAkBC,SAAS,sBAE9DJ,IAAE,IAAID,GAAIE,GAAG,oBAAmB,SAAApQ,GACzBA,EAAE+I,SAAS/I,EAAEqQ,eAChBF,IAAE,aAAaD,GAAII,YAAY,mBAAmBC,SAAS,0BAKzE,CAAC7E,IAEH9L,qBAAU,WACN,SAAS4Q,IACL/H,SAAS+C,cAAc,uBAAuBxC,aAC1C,UAAU,yCAIlB,OAFAxJ,OAAOiR,iBAAiB,WAAWD,GAE5B,WACChR,OAAOkR,oBAAoB,WAAWF,MAEhD,IAEF5Q,qBAAU,WACN,SAAS+Q,IACL1F,EAAY,eAIhB,OAFAzL,OAAOiR,iBAAiB,WAAWE,GAE5B,WACCnR,OAAOkR,oBAAoB,WAAWC,MAEhD,IA6XF,IAAIC,GAAa,KAkBjB,OAhBKsM,GAAsBA,EAAmBxZ,OAAUyZ,GAAwB4I,GAA2BA,EAAwBriB,OAChIsiB,KACHpV,GACI,yBAAK/P,UAAU,uBACVqc,GAAsBA,EAAmBxZ,MAAO,kDAAkDwZ,EAAmBxZ,MAAM2E,MAC3H,UAAU6U,EAAmBxZ,MAAM4E,KAAK,aAAa4U,EAAmBxZ,MAAM6E,WAAW,KACzF4U,EAAqB,2CAA2CA,EAAsB,KACvF,6BACA,6BACC4I,GAA2BA,EAAwBriB,MAAO,mDAAmDqiB,EAAwBriB,MAAM2E,MAC3I,UAAU0d,EAAwBriB,MAAM4E,KAAK,aAAayd,EAAwBriB,MAAM6E,WAAW,KACnGyd,EAA0B,4CAA4CA,EAA2B,OAM1G,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOnV,OAAK,EAAC1N,KAAI,UAAKA,GAAL,aACZuI,EACA,kBAAC,GAAD,CACGD,SAAUqa,GAAoB3iB,KAC9BD,YAAa4iB,GAAoB5iB,YACjCwI,YAAaA,EACbM,YAAaA,EACbxI,KAAMgB,EAASkH,EAAW,YAAgB0D,GAAa,OACvDhH,MAAOsD,EAAW,MAClBW,WAAY7H,EAASkH,EAAW,YAAgB4D,GAAmB,OACnEyS,0BAA2BA,GAC3B1P,0BAA2BA,GAC3B6P,4BAA6BA,GAC7BlV,qBAAsBA,GACtBoV,8BAA+BA,GAC/B1T,iBAAkBA,KAClB,kBAAC,IAAD,CAAU5N,GAAIglB,GAAoB3iB,QAE1C,kBAAC,IAAD,CAAO0N,OAAK,EAAC1N,KAAMA,IACf,kBAAC,EAAD,KACI,yBAAKtC,UAAU,iBAAiBI,MAAO,CAAC6P,YAAY,GAAGC,aAAa,KAChE,4BAAK+U,GAAoB5iB,aACzB,0BAAMrC,UAAU,OAAOmQ,SAAU,SAAAhR,GAC7BA,EAAEiR,iBACFxB,IAA4B,GAC5BwW,EAAyB,CACrBpiB,IAAI,eACJE,KAAK,CACDoC,OAAO,OACPC,QAAQ,CAAC,eAAe,oBACxBC,KAAKC,KAAKC,UAAU,CAChBxE,KAAK,iBACLuB,MAAM,CAAC4iB,EAAWvW,KAEtBnJ,YAAY,eAMhB,yBAAK3F,UAAU,4BACX,2BAAOA,UAAU,0BAA0BI,MAAO,CAAC6P,YAAY,GAAItG,QAAQ,QAA3E,QACA,8BAAO/I,KAAK,OAAOF,GAAG,OAAO2P,UAAQ,EAAC5H,SAAU,SAACtJ,GAAD,OAAK0iB,EAAe1iB,EAAE+I,OAAOH,QAAQA,MAAO+G,GAA5F,uDACU,sCADV,IAEA,2BAAO9O,UAAU,sCAAsCI,MAAO,CAAC6P,YAAY,GAAItG,QAAQ,eAAvF,kBAGA,4BAAQjJ,GAAG,cAAcV,UAAU,wBAAwBqQ,UAAQ,EAACtI,MAAOkZ,EAAaxY,SAAU,SAAAtJ,GAAC,OAC/F6iB,EAAkB7iB,EAAE+I,OAAOH,SAE3B,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,OAIR,yBAAK/H,UAAU,4BACX,2BAAOA,UAAU,0BAA0BI,MAAO,CAAC6P,YAAY,GAAItG,QAAQ,cAA3E,eACA,4BAAQ3J,UAAU,wBAAwBqQ,UAAQ,EAACC,KAAK,IAAIvI,MAAOsd,EAAY9U,UAAU,EAAM9H,SAAU,SAAAtJ,GACrG,IAAIkG,EAAO,GACXmL,MAAMC,KAAKtR,EAAE+I,OAAOwI,SAASzP,KAAI,SAAA0P,IACP,IAAlBA,EAAOrJ,UACPjC,EAAO2B,KAAK2J,EAAO5I,UAE3Bud,EAAiBjgB,KAEhBqX,IAIT,yBAAK1c,UAAU,4BACX,yBAAKA,UAAU,0BACX,2BAAOY,KAAK,WAAWZ,UAAU,oBAAoBU,GAAG,gBAAgB+H,SAAU,SAAAtJ,GAC1EA,EAAE+I,OAAOJ,QACTwd,EAAiBjJ,EAAmB1Z,KAAK1B,KAAI,SAAA0B,GAAI,OAC7CA,EAAK0Z,EAAmB9U,MAAM,GAAGjG,UAEpCgkB,EAAiB,OAE1B,2BAAO3b,QAAQ,gBAAgBvJ,MAAO,CAAC6P,YAAY,GAAIjQ,UAAU,oBAAjE,qBAMR,8BAAUA,UAAU,iEAChB,4BAAQA,UAAU,kEACd,gDAEJ,yBAAKA,UAAU,YACX,yBAAKA,UAAU,iCACX,2BAAOA,UAAU,0BAA0BI,MAAO,CAAC6P,YAAY,GAAItG,QAAQ,QAA3E,QAGA,4BAAQjJ,GAAG,OAAOV,UAAU,wBAAwB+H,MAAOwG,GAAc9F,SAAU,SAAAtJ,GAAC,OAChFqP,GAAmBrP,EAAE+I,OAAOH,SAE5B,4BAAQA,MAAM,IAAd,wBACCoG,KAIT,yBAAKnO,UAAU,gDAAgDI,MAAO,CAAC6P,YAAY,KAC/E,2BAAOrP,KAAK,WAAWZ,UAAU,mBAAmBU,GAAG,cAAc+H,SAAU,SAAAtJ,GACvEA,EAAE+I,OAAOJ,QACToG,IAAkB,GACjBA,IAAkB,IACxBpG,QAASqD,IACZ,2BAAOxB,QAAQ,cAAc3J,UAAU,oBAAvC,iBAGJ,yBAAKA,UAAU,gCACX,2BAAOA,UAAU,0BAA0BI,MAAO,CAAC6P,YAAY,GAAItG,QAAQ,QAA3E,eAGA,4BAAQjJ,GAAG,OAAOV,UAAU,wBAAwB+H,MAAO0G,GAAoBhG,SAAU,SAAAtJ,GAAC,OACtFuP,GAAyBvP,EAAE+I,OAAOH,SAElC,4BAAQA,MAAM,IAAd,wBACCsG,OAMrB,4BAAQzN,KAAK,SAASZ,UAAU,wBAAhC,YACA,4BAAQY,KAAK,SAASZ,UAAU,kBAAkBa,QAAS,SAAA1B,GAAC,OAC5D4O,EAAkB,QADlB,SAEA,4BAAQnN,KAAK,SAASC,QAAS,SAAC1B,GACvB0L,GAIDjD,SAAS+C,cAAc,uBAAuBxC,aAC9C,UAAU,yCACViC,EAAY,gBACZxD,GAAQI,KAAK,kCANb4H,IAA4B,IASpC5O,UAAU,0BAXV,WAYC2O,GACA,yBAAK3O,UAAU,uBAAf,iCAEO,MAGZ,6BACC+P,GAEAlF,EACA,yBAAK7K,UAAU,0BAA0BI,MAAO,CAAC6Q,UAAU,oBACxD,yBAAK7Q,MAAO,CAACC,MAAM2Q,GAAgBC,UAAU,oBACzC,wBAAIjR,UAAU,QAAd,SAEI,4BAAQA,UAAU,oBACda,QAAS,SAAC1B,GAAD,OAAK6O,EAAqBrG,SAAQ,SAAA0H,GAAE,OACzCC,IAAE,IAAID,GAAIwB,SAAS,aACxB,uBAAG7Q,UAAU,sBAHhB,WAIA,4BAAQA,UAAU,gBACda,QAAS,SAAC1B,GAAD,OAAK6O,EAAqBrG,SAAQ,SAAA0H,GAAE,OACzCC,IAAE,IAAID,GAAIwB,SAAS,aAF3B,IAGI,uBAAG7Q,UAAU,uBAHjB,cAKJ,yBAAKA,UAAU,oDACfI,MAAO,CACH8Q,WAAW,EACXC,YAAY,IAIZ,wBAAI/Q,MAAO,CAAC2Q,KAAK,WAAWd,YAAY,GAAGC,aAAa,MACxD,wBAAI9P,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,GAAGlI,OAAO,WACnEC,aAAW,MAAMpH,QAAS,SAAC1B,GACvBA,EAAE+I,OAAOC,aAAa,aACgB,QAAtChJ,EAAE+I,OAAOE,aAAa,cAAsB,OAAO,OACnD2F,EAAkB,eAAIlD,EAAL,CACblI,KAAKgB,EAASkH,EAAW,KAAS,eAAe1L,EAAE+I,OAAOE,aAAa,kBAEjC,QAAtCjJ,EAAE+I,OAAOE,aAAa,eACtBR,SAASC,eAAe,cAAcQ,UAAUC,OAAO,eACvDV,SAASC,eAAe,cAAcQ,UAAUE,IAAI,mBAGpDX,SAASC,eAAe,cAAcQ,UAAUC,OAAO,iBACvDV,SAASC,eAAe,cAAcQ,UAAUE,IAAI,kBAb5D,eAmBI,uBAAG7H,GAAG,aAAaV,UAAU,2BAEjC,wBAAII,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,GAAGlI,OAAO,WACnEC,aAAW,MAAMpH,QAAS,SAAC1B,GACvBA,EAAE+I,OAAOC,aAAa,aACgB,QAAtChJ,EAAE+I,OAAOE,aAAa,cAAsB,OAAO,OACnD2F,EAAkB,eAAIlD,EAAL,CACblI,KAAKgB,EAASkH,EAAW,KAAS,OAAO1L,EAAE+I,OAAOE,aAAa,kBAEzB,QAAtCjJ,EAAE+I,OAAOE,aAAa,eACtBR,SAASC,eAAe,QAAQQ,UAAUC,OAAO,eACjDV,SAASC,eAAe,QAAQQ,UAAUE,IAAI,mBAG9CX,SAASC,eAAe,QAAQQ,UAAUC,OAAO,iBACjDV,SAASC,eAAe,QAAQQ,UAAUE,IAAI,kBAbtD,OAkBI,uBAAG7H,GAAG,OAAOV,UAAU,2BAE3B,wBAAII,MAAO,CAAC2Q,KAAK,WAAWd,YAAY,GAAGC,aAAa,KAAxD,WA7lB5B,SAA8B+R,GAE1B,IADA,IAAI5c,EAAO,GACHmD,EAAE,EAAEA,GAAIyZ,EAAQ,EAAEzZ,IACtBnD,EAAO2B,KACF,wBAAI7F,IAAKqH,EAAGpI,MAAO,CAAC2Q,KAAK,WAAWd,YAAY,GAAGC,aAAa,KAAM1H,EAAE,WAGjF,OAAOnD,EAulBkBgG,CAAqBR,EAAW,aACjC,wBAAIzK,MAAO,CAAC2Q,KAAK,WAAWd,YAAY,GAAGC,aAAa,KACnD,KAAKrF,EAAW,YAAgB,UAErC,wBAAIzK,MAAO,CAAC2Q,KAAK,WAAWd,YAAY,GAAGC,aAAa,KAAxD,iBACA,wBAAI9P,MAAO,CAAC2Q,KAAK,WAAWd,YAAY,GAAGC,aAAa,KAAxD,YAGJ,yBAAK9P,MAAO,CAACgR,UAAU,OAAOC,UAAU,SAASrI,UAAU,SA7enF,SAA0B8F,EAASmS,GAC/B,IAAMte,EAAKkI,EAAW,KAChBtD,EAAMsD,EAAW,MACjBiT,EAAYvW,EAAM,GAAGjG,KACrBA,EAAKiG,EAAM,GAAGjG,KACdwF,EAAOS,EAAM,GAAGjG,KAChBgd,EAAQ/W,EAAM,GAAGjG,KACjBV,EAAK2G,EAAM,GAAGjG,KACdiX,EAAOhR,EAAM,GAAGjG,KAChB6f,EAAW5Z,EAAM,GAAGjG,KAEpBikB,EAAsB,GACtBlgB,EAAO,GAuOb,OArOA1C,EAAKgF,SAAQ,SAAAzG,IAC8C,IAApDqkB,EAAsB5c,QAAQzH,EAAK4c,MAClCyH,EAAsBve,KAAK9F,EAAK4c,IAChCzY,EAAO2B,KACN,yBAAK7F,IAAKD,EAAK4c,IACZ,yBAAK9d,UAAU,SAASI,MAAO,CAAC4H,OAAO,WAAYxH,cAAY,WAAWC,cAAa,IAAIS,EAAK4c,GAAa1c,QAAQ,aAAa,KAC9H,uBAAGpB,UAAU,yBAAyBI,MAAO,CAAC2Q,KAAK,WAAWd,YAAY,GAAGC,aAAa,IAC1FxP,GAAI,YAAYQ,EAAK4c,GAAa1c,QAAQ,aAAa,MACvD,uBAAGpB,UAAU,OAAOI,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,KAAMhP,EAAK4c,IACpF,uBAAG9d,UAAU,OAAOI,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,KAAMhP,EAAKI,IACpF,uBAAGtB,UAAU,OAAOI,MAAO,CAAC2Q,KAAK,WAAWd,YAAY,GAAGC,aAAa,KACnE9L,EAAmBzB,EAAKsJ,QAAO,SAACjI,EAAEC,GACnC,OAAGA,EAAE6Z,KAAe5c,EAAK4c,IACXuD,GACNvS,EACA7K,EAAEkd,IAA+B,QAAhBld,EAAEkd,GACftT,GAAiB,IAAIlJ,KAAK,IAAIA,KAAKV,EAAEqa,IACpCgD,QAAQ,IAAI3c,KAAKV,EAAEqa,IAAUvZ,UAAUF,OAAOZ,EAAEkd,OAC/Cld,EAAEqa,GACRra,EAAEsU,IAIKvU,EAAEC,EAAEsU,GAIPvU,IACd,KAEDmI,GACG2C,EACA5N,EAAK4c,GACLjZ,OAAOoc,IAEX,uBAAGjhB,UAAU,OAAOI,MAAO,CAAC2Q,KAAK,WAAWd,YAAY,GAAGC,aAAa,KACnE9L,EAAmBzB,EAAKsJ,QAAO,SAACjI,EAAEC,GACnC,OAAGA,EAAE6Z,KAAe5c,EAAK4c,IACXyD,GACNzS,EACA7K,EAAEkd,IAA+B,QAAhBld,EAAEkd,GACftT,GAAiB,IAAIlJ,KAAK,IAAIA,KAAKV,EAAEqa,IACpCgD,QAAQ,IAAI3c,KAAKV,EAAEqa,IAAUvZ,UAAUF,OAAOZ,EAAEkd,OAC/Cld,EAAEqa,GACRra,EAAEsU,GACF1T,OAAOoc,IAIAjd,EAAEC,EAAEsU,GAKPvU,IACd,KACF,uBAAGhE,UAAU,OAAOI,MAAO,CAAC2Q,KAAK,WAAWd,YAAY,GAAGC,aAAa,KACnE9L,EACGzB,EAAKsJ,QAAO,SAACjI,EAAEC,GACf,OAAGA,EAAE6Z,KAAe5c,EAAK4c,GACd9Z,EAAEC,EAAEsU,GACHvU,IACV,GACFrB,EAAKsJ,QAAO,SAACjI,EAAEC,GACf,OAAGA,EAAE6Z,KAAe5c,EAAK4c,IACXuD,GACNvS,EACA7K,EAAEkd,IAA+B,QAAhBld,EAAEkd,GACftT,GAAiB,IAAIlJ,KAAK,IAAIA,KAAKV,EAAEqa,IACpCgD,QAAQ,IAAI3c,KAAKV,EAAEqa,IAAUvZ,UAAUF,OAAOZ,EAAEkd,OAC/Cld,EAAEqa,GACRra,EAAEsU,IAIKvU,EAAEC,EAAEsU,GAIPvU,IACd,KAGN,uBAAGhE,UAAU,OAAOI,MAAO,CAAC2Q,KAAK,WAAWd,YAAY,GAAGC,aAAa,KACnE9L,EACGzB,EAAKsJ,QAAO,SAACjI,EAAEC,GACf,OAAGA,EAAE6Z,KAAe5c,EAAK4c,GACd9Z,EAAEC,EAAEsU,GACHvU,IACV,MAGd,yBAAKhE,UAAU,kDACfU,GAAIQ,EAAK4c,GAAa1c,QAAQ,aAAa,KACvC,2BAAOV,GAAG,QAAQV,UAAU,iDACxB,+BACI,4BACI,wBAAIA,UAAU,cAAcI,MAAO,CAAC4H,OAAO,WAAYC,aAAW,MAClEpH,QAAS,SAAC1B,GACNA,EAAE+I,OAAOC,aAAa,aACgB,QAAtChJ,EAAE+I,OAAOE,aAAa,cAAsB,OAAO,OACnD,IAAIkJ,EAAW,GACfA,EAAWpQ,EAAK4c,IAAcna,EAASkH,EAAY3J,EAAK4c,IAAchX,EAAO3H,EAAE+I,OAAOE,aAAa,eACnG2F,EAAkB3G,OAAOC,OAAO,GAAGwD,EAAYyG,IAEL,QAAtCnS,EAAE+I,OAAOE,aAAa,eACtBR,SAASC,eAAe,QAAQ3G,EAAK4c,GAAa1c,QAAQ,aAAa,KAAKiH,UAAUC,OAAO,eAC7FV,SAASC,eAAe,QAAQ3G,EAAK4c,GAAa1c,QAAQ,aAAa,KAAKiH,UAAUE,IAAI,mBAG1FX,SAASC,eAAe,QAAQ3G,EAAK4c,GAAa1c,QAAQ,aAAa,KAAKiH,UAAUC,OAAO,iBAC7FV,SAASC,eAAe,QAAQ3G,EAAK4c,GAAa1c,QAAQ,aAAa,KAAKiH,UAAUE,IAAI,kBAdlG,UAkBI,uBAAG7H,GAAI,QAAQQ,EAAK4c,GAAa1c,QAAQ,aAAa,IAAKpB,UAAU,2BAEzE,wBAAIA,UAAU,cAAcI,MAAO,CAAC4H,OAAO,WAAYC,aAAW,MAClEpH,QAAS,SAAC1B,GACNA,EAAE+I,OAAOC,aAAa,aACgB,QAAtChJ,EAAE+I,OAAOE,aAAa,cAAsB,OAAO,OACnD,IAAIkJ,EAAW,GACfA,EAAWpQ,EAAK4c,IAAcna,EAASkH,EAAY3J,EAAK4c,IAAcQ,EAAQnf,EAAE+I,OAAOE,aAAa,eACpG2F,EAAkB3G,OAAOC,OAAO,GAAGwD,EAAYyG,IAEL,QAAtCnS,EAAE+I,OAAOE,aAAa,eACtBR,SAASC,eAAe,UAAU3G,EAAK4c,GAAa1c,QAAQ,aAAa,KAAKiH,UAAUC,OAAO,eAC/FV,SAASC,eAAe,UAAU3G,EAAK4c,GAAa1c,QAAQ,aAAa,KAAKiH,UAAUE,IAAI,mBAG5FX,SAASC,eAAe,UAAU3G,EAAK4c,GAAa1c,QAAQ,aAAa,KAAKiH,UAAUC,OAAO,iBAC/FV,SAASC,eAAe,UAAU3G,EAAK4c,GAAa1c,QAAQ,aAAa,KAAKiH,UAAUE,IAAI,kBAdpG,WAkBI,uBAAG7H,GAAI,UAAUQ,EAAK4c,GAAa1c,QAAQ,aAAa,IAAKpB,UAAU,2BAE3E,wBAAIA,UAAU,cAAcI,MAAO,CAAC4H,OAAO,WAAYC,aAAW,MAClEpH,QAAS,SAAC1B,GACNA,EAAE+I,OAAOC,aAAa,aACgB,QAAtChJ,EAAE+I,OAAOE,aAAa,cAAsB,OAAO,OACnD,IAAIkJ,EAAW,GACfA,EAAWpQ,EAAK4c,IAAcna,EAASkH,EAAY3J,EAAK4c,IAAcld,EAAKzB,EAAE+I,OAAOE,aAAa,eACjG2F,EAAkB3G,OAAOC,OAAO,GAAGwD,EAAYyG,IAEL,QAAtCnS,EAAE+I,OAAOE,aAAa,eACtBR,SAASC,eAAe,OAAO3G,EAAK4c,GAAa1c,QAAQ,aAAa,KAAKiH,UAAUC,OAAO,eAC5FV,SAASC,eAAe,OAAO3G,EAAK4c,GAAa1c,QAAQ,aAAa,KAAKiH,UAAUE,IAAI,mBAGzFX,SAASC,eAAe,OAAO3G,EAAK4c,GAAa1c,QAAQ,aAAa,KAAKiH,UAAUC,OAAO,iBAC5FV,SAASC,eAAe,OAAO3G,EAAK4c,GAAa1c,QAAQ,aAAa,KAAKiH,UAAUE,IAAI,kBAdjG,OAmBI,uBAAG7H,GAAI,OAAOQ,EAAK4c,GAAa1c,QAAQ,aAAa,IAAKpB,UAAU,2BAExE,wBAAIA,UAAU,eAAd,YACA,wBAAIA,UAAU,eAAd,WACCkhB,GAA0BD,GAC3B,wBAAIjhB,UAAU,eAAe,KAAKihB,EAAc,YAGxD,+BACKpW,EAAY3J,EAAK4c,IAAc7c,KAAI,SAAAmL,GAC5B,OACI,wBAAIjL,IAAKiL,EAAMtF,GAAS1G,MAAO,CAAC4H,OAAO,WAAYnH,QAAS,SAAC1B,GAAD,OACxDyH,GAAQI,KAAK,KAnMzD,SAAoByR,EAAO/X,GACvB,IAAIgY,EAAUD,EAAOE,MAAM,KAS3B,OAJAD,GAHAA,EAAUA,EAAUzX,KAAI,SAAAwX,GACpB,OAAOA,EAAOG,kBAEE3X,KAAI,SAAAwX,GACpB,OAAOA,EAAO,GAAG5F,cAAckD,OAAO0C,EAAOI,OAAO,QAGvCC,KAAK,IAAI,aAAaL,EAAOrX,QAAQ,KAAK,KAAK,OAAO2X,mBAAmBrY,GAyLhCsY,CAAW5M,EAAMxL,GAAMgY,cAAcxM,EAAMtF,OAE7D,wBAAI9G,UAAU,eAAeoM,EAAMtF,IACnC,wBAAI9G,UAAU,eAAeyE,EAAiB2H,EAAMkS,KACpD,wBAAIte,UAAU,eAAeoM,EAAMxL,IACnC,wBAAIZ,UAAU,eACdoM,EAAM+U,IAAmC,QAApB/U,EAAM+U,GAC3B1c,EAAiBoJ,GACT,IAAIlJ,KAAK,IAAIA,KAAKyH,EAAMkS,IACvBgD,QAAQ,IAAI3c,KAAKyH,EAAMkS,IAAUvZ,UAAUF,OAAOuH,EAAM+U,QAC3D1c,EAAiB2H,EAAMkS,KAE7B,wBAAIte,UAAU,eACVoE,EAAmBid,GACfvS,EACA1C,EAAM+U,IAAmC,QAApB/U,EAAM+U,GACvBtT,GAAiB,IAAIlJ,KAAK,IAAIA,KAAKyH,EAAMkS,IACxCgD,QAAQ,IAAI3c,KAAKyH,EAAMkS,IAAUvZ,UAAUF,OAAOuH,EAAM+U,OACvD/U,EAAMkS,GACZlS,EAAMmM,MAKb/G,GACG1C,EACA1C,EAAM+U,IAAmC,QAApB/U,EAAM+U,GACvBtT,GAAiB,IAAIlJ,KAAK,IAAIA,KAAKyH,EAAMkS,IACxCgD,QAAQ,IAAI3c,KAAKyH,EAAMkS,IAAUvZ,UAAUF,OAAOuH,EAAM+U,OACvD/U,EAAMkS,GACZlS,EAAMmM,GACN1T,OAAOoc,IAEX,wBAAIjhB,UAAU,eACdoE,EAAmBmd,GACfzS,EACA1C,EAAM+U,IAAmC,QAApB/U,EAAM+U,GACvBtT,GAAiB,IAAIlJ,KAAK,IAAIA,KAAKyH,EAAMkS,IACxCgD,QAAQ,IAAI3c,KAAKyH,EAAMkS,IAAUvZ,UAAUF,OAAOuH,EAAM+U,OACvD/U,EAAMkS,GACZlS,EAAMmM,GACN1T,OAAOoc,mBAoB5C5b,EA2PkBmgB,CAAiB3a,EAAW,SAAaA,EAAW,gBAGzD,KACR,wBAAI7K,UAAU,YAI1B,kBAAC,IAAD,CAAUC,GAAIglB,GAAoB3iB,QAI1C2iB,GAAoB5iB,YAAY,wBAChC4iB,GAAoB3iB,KAAK,uBAEV2iB,UCnxBf,SAASQ,GAAwBhnB,GAAQ,IAAD,MACwB8D,EAAS,CACjES,IAAI,eACJE,KAAK,CACDoC,OAAO,OACPC,QAAQ,CAAC,eAAe,oBACxBC,KAAKC,KAAKC,UAAU,CAACxE,KAAK,aAC1ByE,YAAY,aAPgB,sBACvB0W,EADuB,EAC5B1Z,KAA8B2Z,EADF,EACJzZ,MADI,EAUuEN,EAAS,MAVhF,0BAUvBmjB,EAVuB,EAU5B/iB,KAAuCgjB,EAVX,EAUK9iB,MAAoC+iB,EAVzC,OAYMlnB,mBAAS,MAZf,mBAY7Bge,EAZ6B,KAYhBC,EAZgB,OAaEje,mBAAS,IAbX,mBAa7B2mB,EAb6B,KAalBC,EAbkB,OAcA5mB,oBAAS,IAAIiG,MAAOK,cAAc,UAdlC,mBAc7BgG,EAd6B,KAcnB4C,EAdmB,OAeJlP,mBAASmP,GAAiB,IAAIlJ,OAf1B,mBAe7BuG,EAf6B,KAerB4C,EAfqB,OAgBEpP,mBAAS,MAhBX,mBAgB7BmM,EAhB6B,KAgBjBkD,EAhBiB,KAoB9BqV,EAAe,GApBe,EAqBE1kB,mBAAS,GArBX,mBAqB7BuiB,EArB6B,KAqBjBe,EArBiB,OAsBetjB,mBAAS,MAtBxB,mBAsB7BmnB,EAtB6B,KAsBXC,GAtBW,QAuBYpnB,mBAAS,MAvBrB,qBAuB7ByP,GAvB6B,MAuBZC,GAvBY,SAwBI1P,mBAAS,IAxBb,qBAwB7B6P,GAxB6B,MAwBhBC,GAxBgB,SAyBsB9P,oBAAS,GAzB/B,qBAyB7BiQ,GAzB6B,MAyBPC,GAzBO,MA2B7BtM,GAAQuM,cAARvM,KACA1C,GAAcC,qBAAWL,GAAzBI,WACDgH,GAAQC,cA8Dd,SAASgH,GAAiBnJ,GACtB,IAAIoK,EAAS,IAAInK,KAAKD,GAEtB,OAAQoK,EAAS9J,eAAkB8J,EAAShK,WAAa,EAAG,GAAI,MAAOgK,EAAShK,WAAW,GAAG,KAAMgK,EAAShK,WAAW,KAAOgK,EAAS/J,UAAU,GAClJ,KAAK+J,EAAS/J,UAAY,IAAI+J,EAAS/J,WAgB3C,SAASwe,GAAqBvY,EAAUE,GAKpC,OAAI,IAAIvG,KAAKqG,GAAW,IAAIrG,KAAK,IAAIA,KAAKuG,GAASlG,cAAcH,OAAO,IAAIF,KAAKuG,GAASpG,YAAYse,EAAe,GAC1GpY,EAGA6C,GAAiB,IAAIlJ,KAAK,IAAIA,KAAKuG,GAASlG,cAAcH,OAAO,IAAIF,KAAKuG,GAASpG,YAAYse,EAAe,IAG7H,SAASoC,GAAiBhC,GACtB,IAAMV,EAAuBjY,EAAW,KAAS,GAAG,GAAGA,EAAW,MAAU,GAAG,GAAGvJ,MAE5EqB,EAAK6gB,EAAQ7f,EAASkH,EAAW,YAAgB,GAAG0D,GAAa,OAAO1D,EAAW,KAAS,GAC5FtD,EAAMsD,EAAW,MAAU,GAC3BnG,EAAK6C,EAAM,GAAGjG,KACdwF,EAAOS,EAAM,GAAGjG,KAChBmiB,EAAIlc,EAAM,GAAGjG,KACbV,EAAK2G,EAAM,GAAGjG,KACdkhB,EAAGjb,EAAM,GAAGjG,KACZmhB,EAAGlb,EAAM,GAAGjG,KAGdoiB,EAAQ/gB,EAAKsJ,QAAO,SAACjI,EAAEC,GACvB,OAAI,IAAIU,KAAKV,EAAES,IAAO,IAAIC,KAAKkG,EAAW,WAClC5G,EAAEue,GAAYxe,EAAEC,EAAEue,GACVxe,EAAEC,EAAEwe,GACNze,IAChB,GAAK8e,EAEP,OACA,6BACI,2BAAO9iB,UAAU,6BACb,+BACI,4BACI,wBAAIA,UAAU,cAAcI,MAAOojB,EAAS,KAAK,CAACxb,OAAO,WAAaC,aAAW,MACjFpH,QAAS,SAAC1B,GACFqkB,IACArkB,EAAE+I,OAAOC,aAAa,aACgB,QAAtChJ,EAAE+I,OAAOE,aAAa,cAAsB,OAAO,OACnDyC,EAAW,KAAS,GAAGlH,EAASkH,EAAW,KAAS,GAAGnG,EAAKvF,EAAE+I,OAAOE,aAAa,eAClF2F,EAAkB,eAAIlD,IAEoB,QAAtC1L,EAAE+I,OAAOE,aAAa,eACtBR,SAASC,eAAe,QAAQQ,UAAUC,OAAO,eACjDV,SAASC,eAAe,QAAQQ,UAAUE,IAAI,mBAG9CX,SAASC,eAAe,QAAQQ,UAAUC,OAAO,iBACjDV,SAASC,eAAe,QAAQQ,UAAUE,IAAI,mBAd1D,OAqBKib,EAAQ,KAAK,uBAAG9iB,GAAG,OAAOV,UAAU,2BAEzC,wBAAIA,UAAU,cAAcI,MAAOojB,EAAQ,KAAK,CAACxb,OAAO,WAAYC,aAAW,MAC/EpH,QAAS,SAAC1B,GACFqkB,IACArkB,EAAE+I,OAAOC,aAAa,aACgB,QAAtChJ,EAAE+I,OAAOE,aAAa,cAAsB,OAAO,OACnDyC,EAAW,KAAS,GAAGlH,EAASkH,EAAW,KAAS,GAAG/D,EAAO3H,EAAE+I,OAAOE,aAAa,eACpF2F,EAAkB,eAAIlD,IAEoB,QAAtC1L,EAAE+I,OAAOE,aAAa,eACtBR,SAASC,eAAe,SAASQ,UAAUC,OAAO,eAClDV,SAASC,eAAe,SAASQ,UAAUE,IAAI,mBAG/CX,SAASC,eAAe,SAASQ,UAAUC,OAAO,iBAClDV,SAASC,eAAe,SAASQ,UAAUE,IAAI,mBAd3D,UAoBKib,EAAQ,KAAK,uBAAG9iB,GAAG,QAAQV,UAAU,2BAE1C,wBAAIA,UAAU,cAAcI,MAAOojB,EAAQ,KAAK,CAACxb,OAAO,WAAaC,aAAW,MAChFpH,QAAS,SAAC1B,GACDqkB,IACDrkB,EAAE+I,OAAOC,aAAa,aACgB,QAAtChJ,EAAE+I,OAAOE,aAAa,cAAsB,OAAO,OACnDyC,EAAW,KAAS,GAAGlH,EAASkH,EAAW,KAAS,GAAG4Y,EAAItkB,EAAE+I,OAAOE,aAAa,eACjF2F,EAAkB,eAAIlD,IAEoB,QAAtC1L,EAAE+I,OAAOE,aAAa,eACtBR,SAASC,eAAe,OAAOQ,UAAUC,OAAO,eAChDV,SAASC,eAAe,OAAOQ,UAAUE,IAAI,mBAG7CX,SAASC,eAAe,OAAOQ,UAAUC,OAAO,iBAChDV,SAASC,eAAe,OAAOQ,UAAUE,IAAI,mBAdzD,OAoBKib,EAAQ,KAAK,uBAAG9iB,GAAG,MAAMV,UAAU,2BAExC,wBAAIA,UAAU,cAAcI,MAAOojB,EAAQ,KAAK,CAACxb,OAAO,WAAaC,aAAW,MAChFpH,QAAS,SAAC1B,GACDqkB,IACDrkB,EAAE+I,OAAOC,aAAa,aACgB,QAAtChJ,EAAE+I,OAAOE,aAAa,cAAsB,OAAO,OACnDyC,EAAW,KAAS,GAAGlH,EAASkH,EAAW,KAAS,GAAGjK,EAAKzB,EAAE+I,OAAOE,aAAa,eAClF2F,EAAkB,eAAIlD,IAEoB,QAAtC1L,EAAE+I,OAAOE,aAAa,eACtBR,SAASC,eAAe,QAAQQ,UAAUC,OAAO,eACjDV,SAASC,eAAe,QAAQQ,UAAUE,IAAI,mBAG9CX,SAASC,eAAe,QAAQQ,UAAUC,OAAO,iBACjDV,SAASC,eAAe,QAAQQ,UAAUE,IAAI,mBAd1D,OAqBKib,EAAQ,KAAK,uBAAG9iB,GAAG,OAAOV,UAAU,2BAEzC,wBAAIA,UAAU,cAAcI,MAAOojB,EAAQ,KAAK,CAACxb,OAAO,WAAaC,aAAW,MAChFpH,QAAS,SAAC1B,GACDqkB,IACDrkB,EAAE+I,OAAOC,aAAa,aACgB,QAAtChJ,EAAE+I,OAAOE,aAAa,cAAsB,OAAO,OACnDyC,EAAW,KAAS,GAAGlH,EAASkH,EAAW,KAAS,GAAG2X,EAAGrjB,EAAE+I,OAAOE,aAAa,eAChF2F,EAAkB,eAAIlD,IAEoB,QAAtC1L,EAAE+I,OAAOE,aAAa,eACtBR,SAASC,eAAe,MAAMQ,UAAUC,OAAO,eAC/CV,SAASC,eAAe,MAAMQ,UAAUE,IAAI,mBAG5CX,SAASC,eAAe,MAAMQ,UAAUC,OAAO,iBAC/CV,SAASC,eAAe,MAAMQ,UAAUE,IAAI,mBAdxD,KAqBKib,EAAQ,KAAK,uBAAG9iB,GAAG,KAAKV,UAAU,2BAEvC,wBAAIA,UAAU,cAAcI,MAAOojB,EAAQ,KAAK,CAACxb,OAAO,WAAaC,aAAW,MAChFpH,QAAS,SAAC1B,GACDqkB,IACDrkB,EAAE+I,OAAOC,aAAa,aACgB,QAAtChJ,EAAE+I,OAAOE,aAAa,cAAsB,OAAO,OACnDyC,EAAW,KAAS,GAAGlH,EAASkH,EAAW,KAAS,GAAG4X,EAAGtjB,EAAE+I,OAAOE,aAAa,eAChF2F,EAAkB,eAAIlD,IAEoB,QAAtC1L,EAAE+I,OAAOE,aAAa,eACtBR,SAASC,eAAe,MAAMQ,UAAUC,OAAO,eAC/CV,SAASC,eAAe,MAAMQ,UAAUE,IAAI,mBAG5CX,SAASC,eAAe,MAAMQ,UAAUC,OAAO,iBAC/CV,SAASC,eAAe,MAAMQ,UAAUE,IAAI,mBAdxD,KAqBKib,EAAQ,KAAK,uBAAG9iB,GAAG,KAAKV,UAAU,2BAEvC,wBAAIA,UAAU,eAAd,aAGR,+BACI,4BACI,wBAAIme,QAAQ,KAAZ,OACA,4BAAK/Z,EAAmBsf,KAE3B/gB,EAAK1B,KAAI,SAACC,EAAKsH,GAEZ,GAAI,IAAI7D,KAAKzD,EAAKwD,KAAQ,IAAIC,KAAKkG,EAAW,YAC3C,IAAIlG,KAAKzD,EAAKwD,KAAQ,IAAIC,KAAKkG,EAAW,SAMzC,OAJQ3J,EAAKshB,KACTkB,GAASxiB,EAAKshB,IACVthB,EAAKuhB,KACTiB,GAASxiB,EAAKuhB,IAElB,wBAAIthB,IAAKqH,EAAGpI,MAAOojB,EAAS,KAAK,CAACxb,OAAO,WAAYnH,QAAS,SAAC1B,GACvDqkB,EAECrkB,EAAEiR,iBADHxJ,GAAQI,KAAK,IA9M7C,SAAoByR,EAAO/X,GACvB,IAAIgY,EAAUD,EAAOE,MAAM,KAS3B,OAJAD,GAHAA,EAAUA,EAAUzX,KAAI,SAAAwX,GACpB,OAAOA,EAAOG,kBAEE3X,KAAI,SAAAwX,GACpB,OAAOA,EAAO,GAAG5F,cAAckD,OAAO0C,EAAOI,OAAO,QAGvCC,KAAK,IAAI,aAAaL,EAAOrX,QAAQ,KAAK,KAAK,OAAO2X,mBAAmBrY,GAoM7CsY,CAAW9X,EAAKN,GAAMgY,cAAc1X,EAAK4F,OAI9D,wBAAI9G,UAAU,eAAeyE,EAAiBvD,EAAKwD,KACnD,wBAAI1E,UAAU,eAAekB,EAAK4F,IAClC,wBAAI9G,UAAU,eAAekB,EAAKuiB,IAClC,wBAAIzjB,UAAU,eAAekB,EAAKN,IAClC,wBAAIZ,UAAU,eAAeoE,EAAmBlD,EAAKshB,KACrD,wBAAIxiB,UAAU,eAAeoE,EAAmBlD,EAAKuhB,KACrD,wBAAIziB,UAAU,eAAeoE,EAAmBsf,UAUnEF,EACG,uBAAGxjB,UAAU,gCACT,mDACA,8BAAOoE,EAAmBsf,KACxB,MAzSlB3kB,qBAAU,WAEFsd,IAAgD,IAA1BA,EAAmBnV,MACrCC,MAAM,iEACNvH,IAAW,IAEVyc,GAAsBA,EAAmB1Z,MAAQ0Z,EAAmB9U,OACzEoV,EAAmBN,EAAmB1Z,KAAK1B,KAAI,SAAA0B,GAAI,OACnD,4BAAQxB,IAAKwB,EAAK0Z,EAAmB9U,MAAM,GAAGjG,MAAOyG,MAAOpF,EAAK0Z,EAAmB9U,MAAM,GAAGjG,OACxFqB,EAAK0Z,EAAmB9U,MAAM,GAAGjG,MAAM,KAAKqB,EAAK0Z,EAAmB9U,MAAM,GAAGjG,MAAMqB,EAAK0Z,EAAmB9U,MAAM,GAAGjG,MAAM,WAIrI,CAAC+a,EAAmBC,IAEtBvd,qBAAU,WACN,GAAI2mB,IAAkE,IAAnCA,EAA4Bxe,KACvDC,MAAM,iEACNvH,IAAW,QAEd,GAAI8lB,GAA+BA,EAA4B/iB,MAAQ+iB,EAA4Bne,MAAO,CAC3G,IAAMA,EAAMme,EAA4Bne,MAAM,GACxC7C,EAAK6C,EAAM,GAAGjG,KACdwF,EAAOS,EAAM,GAAGjG,KAChBmiB,EAAIlc,EAAM,GAAGjG,KACbV,EAAK2G,EAAM,GAAGjG,KACdkhB,EAAGjb,EAAM,GAAGjG,KACZmhB,EAAGlb,EAAM,GAAGjG,KAElByM,EAAkB,CAACpL,KAAK+iB,EAA4B/iB,KAChDyM,YAAY,YAAIsW,EAA4B/iB,MAAM4E,MAAMme,EAA4Bne,MACxFyD,YAAUE,UAAQma,eAElBjX,GACK,oCACG,4BAAQrG,MAAOrD,GAAf,QACA,4BAAQqD,MAAOjB,GAAf,WACA,4BAAQiB,MAAO0b,GAAf,QACA,4BAAQ1b,MAAOnH,GAAf,QACA,4BAAQmH,MAAOya,GAAf,MACA,4BAAQza,MAAO0a,GAAf,WAMd,CAACiD,EAA4BC,IAE/B5mB,qBAAU,WACN,SAAS4Q,IACL/H,SAAS+C,cAAc,uBAAuBxC,aAC1C,UAAU,yCAIlB,OAFAxJ,OAAOiR,iBAAiB,WAAWD,GAE5B,WACChR,OAAOkR,oBAAoB,WAAWF,MAEhD,IAqPF,IAAII,GAAa,KAkBjB,OAhBKsM,GAAsBA,EAAmBxZ,OAAUyZ,GAAwBoJ,GAA+BA,EAA4B7iB,OACxI8iB,KACH5V,GACI,yBAAK/P,UAAU,uBACVqc,GAAsBA,EAAmBxZ,MAAO,kDAAkDwZ,EAAmBxZ,MAAM2E,MAC3H,UAAU6U,EAAmBxZ,MAAM4E,KAAK,aAAa4U,EAAmBxZ,MAAM6E,WAAW,KACzF4U,EAAqB,2CAA2CA,EAAsB,KACvF,6BACA,6BACCoJ,GAA+BA,EAA4B7iB,MAAO,uDAAuD6iB,EAA4B7iB,MAAM2E,MAC3J,UAAUke,EAA4B7iB,MAAM4E,KAAK,aAAaie,EAA4B7iB,MAAM6E,WAAW,KAC3Gie,EAA8B,gDAAgDA,EAA+B,OAMlH,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAO3V,OAAK,EAAC1N,KAAI,UAAKA,GAAL,aACZuI,EACA,kBAAC,GAAD,CACGD,SAAU6a,GAAwBnjB,KAClCD,YAAY,qBACZuS,aAAY,YAAMiR,EAAkBjd,MAAM,EAAE,IAC5CmM,cAAe,CAAC,iBAAiB,eACjCC,cACI,CAACvQ,EAAiBoG,EAAW,WAAe,OAAQpG,EAAiBoG,EAAW,SACzD,QAAvBgb,EAAkB,GAAW,SAASA,EAAkB,GAAG,SAC/D9C,uBAAwByC,GACxB7iB,KAAMkI,EAAW,YAAgB,GACjCtD,MAAOsD,EAAW,MAAU,GAC5BK,QAASL,EAAW,QACpBoW,YAAaA,EACb4B,kBAAmBU,GAAqB1Y,EAAW,UAAcA,EAAW,SAC5EiY,uBAAwBjY,EAAW,YAAgB,GAAG,GAAGA,EAAW,MAAU,GAAG,GAAGvJ,QAIpF,kBAAC,IAAD,CAAUrB,GAAIwlB,GAAwBnjB,QAE9C,kBAAC,IAAD,CAAO0N,OAAK,EAAC1N,KAAMA,IACf,kBAAC,EAAD,KACI,yBAAKtC,UAAU,iBAAiBI,MAAO,CAAC6P,YAAY,GAAGC,aAAa,KAChE,4BAAKuV,GAAwBpjB,aAC7B,0BAAMrC,UAAU,OAAOmQ,SAAU,SAAAhR,GACjCA,EAAEiR,iBACFxB,IAA4B,GAC5BgX,EAA6B,CACzB5iB,IAAI,eACJE,KAAK,CACDoC,OAAO,OACPC,QAAQ,CAAC,eAAe,oBACxBC,KAAKC,KAAKC,UAAU,CAChBxE,KAAK,qBACLuB,MAAM,CAAC8gB,GAAqBvY,EAAUE,GAASA,EAAQma,KAE3D1f,YAAY,eAIhB,yBAAK3F,UAAU,4BACX,2BAAOA,UAAU,0BAA0BI,MAAO,CAAC6P,YAAY,GAAItG,QAAQ,aAA3E,cACA,8BAAO/I,KAAK,OAAOF,GAAG,YAAY2P,UAAQ,EAAC5H,SAAU,SAACtJ,GAC9C,IAAIwF,KAAKxF,EAAE+I,OAAOH,OAAO,IAAIpD,KAAKuG,IAClC/D,MAAM,4BACNyG,GAAgB,IAAIjJ,MAAOK,cAAc,WAExC4I,EAAgBzO,EAAE+I,OAAOH,QAE9BA,MAAOiD,GAPX,uDAOyC,sCAPzC,IAQA,2BAAOhL,UAAU,sCAAsCI,MAAO,CAAC6P,YAAY,GAAItG,QAAQ,WAAvF,YACA,8BAAO/I,KAAK,OAAOF,GAAG,UAAU2P,UAAQ,EAAC5H,SAAU,SAACtJ,GAC5C,IAAIwF,KAAKxF,EAAE+I,OAAOH,OAAO,IAAIpD,KAAKqG,IAClC7D,MAAM,0BACN2G,EAAcD,GAAiB,IAAIlJ,QAElCmJ,EAAc3O,EAAE+I,OAAOH,QAC7BA,MAAOmD,GANV,uDAMsC,sCANtC,KASJ,yBAAKlL,UAAU,4BACX,2BAAOA,UAAU,0BAA0BI,MAAO,CAAC6P,YAAY,GAAItG,QAAQ,cAA3E,eACA,4BAAQ3J,UAAU,wBAAwBqQ,UAAQ,EAACtI,MAAOsd,EAAY5c,SAAU,SAAAtJ,GAC5E,IAAI2d,EAAa,GACbC,EAAgB,GAChBM,EAA0B,GAE9BhB,EAAmB1Z,KAAKgF,SAAQ,SAAAhF,GACzBA,EAAK0Z,EAAmB9U,MAAM,GAAGjG,QAAQnC,EAAE+I,OAAOH,QACjD+U,EAAana,EAAK0Z,EAAmB9U,MAAM,GAAGjG,MAAMqB,EAAK0Z,EAAmB9U,MAAM,GAAGjG,MAAM,GAC3Fyb,EAAgBpa,EAAK0Z,EAAmB9U,MAAM,GAAGjG,MAAMqB,EAAK0Z,EAAmB9U,MAAM,GAAGjG,MAAM,GAC9F+b,EAA0B1a,EAAK0Z,EAAmB9U,MAAM,GAAGjG,MAAMqB,EAAK0Z,EAAmB9U,MAAM,GAAGjG,MAAM,OAGhHgkB,EAAiBnmB,EAAE+I,OAAOH,OAC1B+d,GAAwB,CAAChJ,EAAaC,EAAgBM,MAGtD,4BAAQtV,MAAM,IAAd,wBACC2U,IAIT,8BAAU1c,UAAU,sEAChB,4BAAQA,UAAU,kEACd,gDAEJ,yBAAKA,UAAU,YACX,yBAAKA,UAAU,gCACX,2BAAOA,UAAU,gCAAgC2J,QAAQ,eAAzD,gBAGA,4BAAQjJ,GAAG,cAAcV,UAAU,8BAA8BqQ,UAAQ,EAACtI,MAAOkZ,EAC7ExY,SAAU,SAAAtJ,GAAC,OACP6iB,EAAkB7iB,EAAE+I,OAAOH,SAE/B,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,MAAd,QAIR,yBAAK/H,UAAU,iCACX,2BAAOA,UAAU,gCAAgC2J,QAAQ,QAAzD,QAGA,4BAAQjJ,GAAG,OAAOV,UAAU,8BAA8B+H,MAAOwG,GAAc9F,SAAU,SAAAtJ,GAAC,OACtFqP,GAAmBrP,EAAE+I,OAAOH,SAE5B,4BAAQA,MAAM,IAAd,wBACCoG,OAOjB,4BAAQvN,KAAK,SAASZ,UAAU,wBAAhC,YACA,4BAAQY,KAAK,SAASZ,UAAU,kBAAkBa,QAAS,SAAA1B,GAAC,OACxD4O,EAAkB,QADtB,SAEA,4BAAQnN,KAAK,SAASC,QAAS,SAAC1B,GACvB0L,GAIDjD,SAAS+C,cAAc,uBAAuBxC,aAC9C,UAAU,yCACVvB,GAAQI,KAAK,sCALb4H,IAA4B,IAQpC5O,UAAU,0BAVV,WAWC2O,GACA,yBAAK3O,UAAU,uBAAf,iCAEO,MAGZ,6BACC+P,GAEAlF,EACA,yBAAK7K,UAAU,QACZ,wBAAIA,UAAU,QAAd,UACCwlB,MAEG,KAER,wBAAIxlB,UAAU,YAI1B,kBAAC,IAAD,CAAUC,GAAIwlB,GAAwBnjB,QAIlDmjB,GAAwBpjB,YAAY,4BACpCojB,GAAwBnjB,KAAK,2BAEdmjB,UC7gBf,SAASM,GAActnB,GAEnB,IAAMuE,EAAI,CACN9B,KAAK,IAAIuW,gBAAgBhZ,EAAMiZ,SAAStR,QAAQuR,IAAI,QACpDjX,GAAG,IAAI+W,gBAAgBhZ,EAAMiZ,SAAStR,QAAQuR,IAAI,OAJ5B,EAOUjZ,mBAAS,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,MAAM,GAAG,KAPlD,mBAOnBkV,EAPmB,KAORb,EAPQ,KAS1B,SAAStK,EAASV,EAAMlE,GACpBkP,EAAiB,GAAD,mBAAKa,EAAWhL,MAAM,EAAE/E,IAAxB,CAA+BkE,GAA/B,YAAwC6L,EAAWhL,MAAM/E,EAAM,EAAE+P,EAAWlS,WAGhG,OACI,kBAAC,EAAD,CAAMkS,WAAYA,EAAYb,iBAAkBA,EAAkB/P,IAAKA,EAAK9B,KAAK,WAAWwS,YAAY,yBAEpG,gBAAE/B,EAAF,EAAEA,MAAMf,EAAR,EAAQA,SAASgB,EAAjB,EAAiBA,eAAe+B,EAAhC,EAAgCA,SAASE,EAAzC,EAAyCA,SAASC,EAAlD,EAAkDA,SAAS/D,EAA3D,EAA2DA,aAAagE,EAAxE,EAAwEA,kBAAxE,OACC,kBAAC,EAAD,KACG,yBAAK/T,UAAU,0BAIX,wBAAIA,UAAU,SAAiB,WAAR2R,EAAkB,SAAS,UAAY,IAAKoU,GAAa1jB,aAChF,2BAAOrC,UAAU,gBAAjB,cACC+P,EAKD,0BAAMI,SAAU,SAAChR,GAAKA,EAAEiR,iBAA6B,WAARuB,EAAkBgC,IAAiBE,MAC5E,yBAAK7T,UAAU,uBACX,2BAAOA,UAAU,0BAA0B2J,QAAQ,kBAAnD,mBAAqF,0BAAM3J,UAAU,gBAAhB,MACpF+T,EAAkB,CACftL,SAASA,EACTwL,OAAO,WACPK,SAAS,EACTC,QAAQ,oBAIhB,yBAAKvU,UAAU,uBACX,2BAAOA,UAAU,0BAA0B2J,QAAQ,QAAnD,QAA+D,0BAAM3J,UAAU,gBAAhB,MAC/D,yBAAKA,UAAU,aACX,2BAAOY,KAAK,OAAOF,GAAG,OAAO+H,SAAU,SAACtJ,GAAD,OACvCsJ,EAAStJ,EAAE+I,OAAOH,MAAM,IAAIA,MAAO6L,EAAW,GAAIhD,SAAUA,EAAUP,UAAQ,EAACrQ,UAAU,mBAGjG,yBAAKA,UAAU,uBACX,2BAAOA,UAAU,0BAA0B2J,QAAQ,WAAnD,WAAqE,0BAAM3J,UAAU,gBAAhB,MACrE,yBAAKA,UAAU,aACX,8BAAUU,GAAG,UAAU+H,SAAU,SAACtJ,GAAD,OACjCsJ,EAAStJ,EAAE+I,OAAOH,MAAM,IACxBA,MAAO6L,EAAW,GAAIhD,SAAUA,EAAUP,UAAQ,EAACrQ,UAAU,mBAGrE,yBAAKA,UAAU,uBACX,2BAAOA,UAAU,0BAA0B2J,QAAQ,YAAnD,YAAuE,0BAAM3J,UAAU,gBAAhB,MACvE,yBAAKA,UAAU,YACX,2BAAOY,KAAK,OAAOsT,UAAU,IAAIxT,GAAG,WAAW+H,SAAU,SAACtJ,GAAD,OACzDsJ,EAAStJ,EAAE+I,OAAOH,MAAM,IAAIA,MAAO6L,EAAW,GAAIhD,SAAUA,EAAUP,UAAQ,EAACrQ,UAAU,kBAE7F,2BAAOA,UAAU,yCAAyC2J,QAAQ,SAAlE,SAAgF,0BAAM3J,UAAU,gBAAhB,MAChF,yBAAKA,UAAU,YACX,2BAAOY,KAAK,OAAOF,GAAG,QAAQwT,UAAU,KAAKzL,SAAU,SAACtJ,GAAD,OAAKsJ,EAAStJ,EAAE+I,OAAOH,MAAM,IACpFA,MAAO6L,EAAW,GAAIhD,SAAUA,EAAUP,UAAQ,EAACrQ,UAAU,mBAGrE,yBAAKA,UAAU,uBACX,2BAAOA,UAAU,0BAA0B2J,QAAQ,OAAnD,OACA,yBAAK3J,UAAU,YACX,2BAAOY,KAAK,OAAOF,GAAG,MAAMwT,UAAU,KAAKzL,SAAU,SAACtJ,GAAD,OACrDsJ,EAAStJ,EAAE+I,OAAOH,MAAM,IAAIA,MAAO6L,EAAW,GAAIhD,SAAUA,EAAU5Q,UAAU,kBAEpF,2BAAOA,UAAU,yCAAyC2J,QAAQ,cAAlE,eACA,yBAAK3J,UAAU,YACX,4BAAQU,GAAG,aAAa+H,SAAU,SAACtJ,GAAD,OAAMsJ,EAAStJ,EAAE+I,OAAOH,MAAM,IAAIA,MAAO6L,EAAW,GAAIhD,SAAUA,EACpG5Q,UAAU,gBACN,4BAAQ+H,MAAM,OAAd,UACA,4BAAQA,MAAM,MAAd,WACA,4BAAQA,MAAM,MAAd,WACA,4BAAQA,MAAM,MAAd,WACA,4BAAQA,MAAM,MAAd,cAIZ,yBAAK/H,UAAU,uBACX,2BAAOA,UAAU,0BAA0B2J,QAAQ,aAAnD,qBACA,yBAAK3J,UAAU,aACX,8BAAUU,GAAG,YAAY+H,SAAU,SAACtJ,GAAD,OACnCsJ,EAAStJ,EAAE+I,OAAOH,MAAM,IACxBA,MAAO6L,EAAW,GAAIhD,SAAUA,EAAU5Q,UAAU,mBAI5D,kBAAC,EAAD,CAAY2R,MAAOA,EAAOgC,SAAUA,EAAUE,SAAUA,EAAUC,SAAUA,EAAUlC,eAAgBA,UAY9HmU,GAAa1jB,YAAY,gBACzB0jB,GAAazjB,KAAK,gBAEHyjB,U,oBC5Gf,SAASC,GAAmBvnB,GAAQ,IAAD,IACoD8D,EAAS,CACxFS,IAAI,eACJE,KAAK,CACDoC,OAAO,OACPC,QAAQ,CAAC,eAAe,oBACxBC,KAAKC,KAAKC,UAAU,CAACxE,KAAK,YAC1ByE,YAAY,aAPW,0BAClBsgB,EADkB,EACvBtjB,KAA6BujB,EADN,EACArjB,MAA0BsjB,EAD1B,OAUeznB,mBAAS,MAVxB,mBAUxB0nB,EAVwB,KAUTC,EAVS,OAWa3nB,mBAAS,MAXtB,mBAWxB4nB,EAXwB,KAWVC,EAXU,OAYe7nB,mBAAS,MAZxB,mBAYxB8nB,EAZwB,KAYTC,EAZS,OAaiB/nB,mBAAS,CAAC,GAAG,GAAG,KAbjC,mBAaxBgoB,EAbwB,KAaPC,EAbO,OAciBjoB,mBAAS,CAAC,GAAG,GAAG,GAAG,KAdpC,mBAcxBkoB,EAdwB,KAcPC,EAdO,OAeGnoB,mBAAS,MAfZ,mBAexBooB,EAfwB,KAefC,EAfe,OAgByBroB,mBAAS,IAhBlC,mBAgBxBsP,EAhBwB,KAgBHC,EAhBG,OAkB+B1L,EAAS,MAlBxC,0BAkBlBwP,EAlBkB,EAkBvBpP,KAAsBqP,EAlBC,EAkBPnP,MAAmBoP,EAlBZ,OAmB+B1P,EAAS,MAnBxC,0BAmBlBwD,GAnBkB,EAmBvBpD,KAAsBqD,GAnBC,EAmBPnD,MAAmBoD,GAnBZ,QAoB+B1D,EAAS,MApBxC,8BAoBlB2P,GApBkB,GAoBvBvP,KAAsBwP,GApBC,GAoBPtP,MAAmBuP,GApBZ,MAsBxBxS,GAAcC,qBAAWL,GAAzBI,WAyKP,SAASonB,GAAejf,EAAMlE,GAC1B8iB,EAAuB,GAAD,mBAAKD,EAAiB9d,MAAM,EAAE/E,IAA9B,CAAqCkE,GAArC,YAA8C2e,EAAiB9d,MAAM/E,EAAM,MAErG,SAASojB,GAAelf,EAAMlE,GAC1BgjB,EAAuB,GAAD,mBAAKD,EAAiBhe,MAAM,EAAE/E,IAA9B,CAAqCkE,GAArC,YAA8C6e,EAAiBhe,MAAM/E,EAAM,MAzKrG9E,qBAAU,WAGFknB,IAA8C,IAAzBA,EAAkB/e,MACpCC,MAAM,iEACNvH,IAAW,IAETqmB,GAAqBA,EAAkBtjB,MAAQsjB,EAAkB1e,OACtEwf,EAqFR,SAAyBpkB,EAAK4E,GAC1B,IAAM2f,EAAW3f,EAAM,GAAGjG,KACpB6lB,EAAU5f,EAAM,GAAGjG,KACnB8lB,EAAO7f,EAAM,GAAGjG,KAChB+lB,EAAS9f,EAAM,GAAGjG,KAElBgmB,EAAwB,GACxBjiB,EAAO,GA8Db,OA5DA1C,EAAKgF,SAAQ,SAAAzG,IACgD,IAArDomB,EAAwB3e,QAAQzH,EAAKgmB,MACrCI,EAAwBtgB,KAAK9F,EAAKgmB,IAClC7hB,EAAO2B,KACF,yBAAK7F,IAAKD,EAAKgmB,IACZ,yBAAKlnB,UAAU,8BAA8BI,MAAO,CAAC4H,OAAO,WAAYxH,cAAY,WAAWC,cAAa,IAAIS,EAAKgmB,GAAY9lB,QAAQ,WAAW,KAChJ,uBAAGpB,UAAU,SAAQ,uBAAGU,GAAI,YAAYQ,EAAKgmB,GAAY9lB,QAAQ,WAAW,IAAKpB,UAAU,uCAC3F,uBAAGA,UAAU,OAAOkB,EAAKgmB,KAE7B,yBAAKlnB,UAAU,wCAAwCI,MAAO,CAAC8Q,WAAW,QAAQC,YAAY,SAAUzQ,GAAIQ,EAAKgmB,GAAY9lB,QAAQ,WAAW,KAC3IuB,EAAK1B,KAAI,SAACmL,EAAM5D,GACb,GAAI4D,EAAM8a,KAAchmB,EAAKgmB,GACzB,OACA,yBAAKlnB,UAAU,iDAAiDI,MAAO,CAACkV,OAAO,GAAInU,IAAKiL,EAAM+a,IAC1F,yBAAKnnB,UAAU,2BAA2BoM,EAAMgb,IAChD,uBAAGpnB,UAAU,kBAAkBoM,EAAM+a,IAClB,WAAlB/a,EAAMib,GACF,yBAAKrnB,UAAU,kBACZ,4BAAQA,UAAU,eAAea,QAAS,SAAC1B,GACvC8G,GAAkB,CACdjD,IAAI,eACJE,KAAK,CACDoC,OAAO,OACPC,QAAQ,CAAC,eAAe,oBACxBC,KAAKC,KAAKC,UAAU,CAChBxE,KAAK,UACLR,GAAG0L,EAAM+a,KAEbxhB,YAAY,eAVxB,QAcI,gBAc5C0gB,EAAqBiB,EAAwBrmB,KAAI,SAAAsmB,GAAQ,OACpD,4BAAQpmB,IAAKomB,EAAUxf,MAAOwf,GAC1BA,OAEThB,EAAoB5jB,EAAK1B,KAAI,SAAAC,GACzB,GAAoB,WAAjBA,EAAKmmB,GACH,OAAQ,4BAAQlmB,IAAKD,EAAKimB,GAAWjmB,EAAKimB,GAAWte,KAAKC,SAAUf,MAAO7G,EAAKimB,IAC5EjmB,EAAKimB,GAAW,MAAMjmB,EAAKkmB,QAKxCnZ,EAA2BqZ,EAAwBrmB,KAAI,SAAAsmB,GAAQ,OAAEA,EAASnmB,QAAQ,WAAW,QAC7FqlB,EAAqB9jB,EAAK1B,KAAI,SAAAC,GAAI,OAAEA,EAAKimB,GAAW,OAC7C9hB,EA1JYmiB,CAAgBvB,EAAkBtjB,KAAK,GAAGsjB,EAAkB1e,MAAM,OAGvF,CAAC0e,EAAkBC,IAErBnnB,qBAAU,WACFgT,IAAgC,IAAlBA,EAAW7K,MACzBC,MAAM,iEACNvH,IAAW,IAENmS,IAAeA,EAAWlP,QAC/BsE,MAAM,sBACNwf,EAAuB,CAAC,GAAG,GAAG,KAC9BR,EAAyB,CACrBnjB,IAAI,eACJE,KAAK,CACDoC,OAAO,OACPC,QAAQ,CAAC,eAAe,oBACxBC,KAAKC,KAAKC,UAAU,CAACxE,KAAK,YAC1ByE,YAAY,gBAK1B,CAACoM,EAAWC,IAEdjT,qBAAU,WACFmT,KAAgC,IAAlBA,GAAWhL,MACzBC,MAAM,iEACNvH,IAAW,IAENsS,KAAeA,GAAWrP,QAC/BsE,MAAM,sBACN0f,EAAuB,CAAC,GAAG,GAAG,GAAG,KACjCV,EAAyB,CACrBnjB,IAAI,eACJE,KAAK,CACDoC,OAAO,OACPC,QAAQ,CAAC,eAAe,oBACxBC,KAAKC,KAAKC,UAAU,CAACxE,KAAK,YAC1ByE,YAAY,gBAI1B,CAACuM,GAAWC,KAEdpT,qBAAU,WACFgH,KAAgC,IAAlBA,GAAWmB,MACzBC,MAAM,iEACNvH,IAAW,IAENmG,KAAeA,GAAWlD,QAC/BsE,MAAM,sBACNgf,EAAyB,CACrBnjB,IAAI,eACJE,KAAK,CACDoC,OAAO,OACPC,QAAQ,CAAC,eAAe,oBACxBC,KAAKC,KAAKC,UAAU,CAACxE,KAAK,YAC1ByE,YAAY,gBAI1B,CAACI,GAAWC,KAGdjH,qBAAU,WAEFiP,GAAwB8Y,GACxB9Y,EAAqBrG,SAAQ,SAAA0H,GACzBC,IAAE,IAAID,GAAIE,GAAG,oBAAmB,SAAApQ,GACzBA,EAAE+I,SAAS/I,EAAEqQ,eAChBF,IAAE,aAAaD,GAAII,YAAY,kBAAkBC,SAAS,sBAG9DJ,IAAE,IAAID,GAAIE,GAAG,oBAAmB,SAAApQ,GACzBA,EAAE+I,SAAS/I,EAAEqQ,eAChBF,IAAE,aAAaD,GAAII,YAAY,mBAAmBC,SAAS,0BAMzE,CAACoX,IAiFH,IAAI/W,GAAa,KAoBjB,OAlBKkW,GAAqBA,EAAkBpjB,OAAUqjB,GAAsBnU,GAAcA,EAAWlP,OAAUmP,GAC9GE,IAAcA,GAAWrP,OAAUsP,IAAgBpM,IAAcA,GAAWlD,OAAUmD,MACvF+J,GACI,yBAAK/P,UAAU,uBACVimB,GAAqBA,EAAkBpjB,MAAO,iDAAiDojB,EAAkBpjB,MAAM2E,MACvH,UAAUye,EAAkBpjB,MAAM4E,KAAK,aAAawe,EAAkBpjB,MAAM6E,WAAW,KACvFwe,EAAoB,0CAA0CA,EAAqB,KAEnFnU,GAAcA,EAAWlP,MAAO,sCAAsCkP,EAAWlP,MAAM2E,MAAM,UAAUuK,EAAWlP,MAAM4E,KAAK,aAAasK,EAAWlP,MAAM6E,WAAW,KACtKsK,EAAa,+BAA+BA,EAAc,KAE1DE,IAAcA,GAAWrP,MAAO,sCAAsCqP,GAAWrP,MAAM2E,MAAM,UAAU0K,GAAWrP,MAAM4E,KAAK,aAAayK,GAAWrP,MAAM6E,WAAW,KACtKyK,GAAa,+BAA+BA,GAAc,KAE1DpM,IAAcA,GAAWlD,MAAO,sCAAsCkD,GAAWlD,MAAM2E,MAAM,UAAUzB,GAAWlD,MAAM4E,KAAK,aAAa1B,GAAWlD,MAAM6E,WAAW,KACtK1B,GAAa,+BAA+BA,GAAc,OAI3D,kBAAC,EAAD,KACI,yBAAKhG,UAAU,kBACX,mDACC+P,GACD,6BAAS/P,UAAU,kBACf,yBAAKA,UAAU,OACX,0BAAMA,UAAU,WAAWmQ,SAAU,SAAChR,GAClCA,EAAEiR,kBACiD,IAA/CoW,EAAe7d,QAAQ+d,EAAiB,KACxCvf,MAAM,4CAEV8K,EAAkB,CACdjP,IAAI,eACJE,KAAK,CACDoC,OAAO,OACPC,QAAQ,CAAC,eAAe,oBACxBC,KAAKC,KAAKC,UAAU,CACZxE,KAAK,UACLuB,MAAMikB,IAEd/gB,YAAY,eAKpB,8BAAU3F,UAAU,wDAChB,4BAAQA,UAAU,6CAA6C,+CAC/D,2BAAOA,UAAU,OAAO2J,QAAQ,oBAAhC,eACA,4BAAQjJ,GAAG,mBAAmB2P,UAAQ,EAACrQ,UAAU,eAAeyI,SAAU,SAACtJ,GAC3E6nB,GAAe7nB,EAAE+I,OAAOH,MAAM,KAG1B,4BAAQA,MAAM,IAAd,wBACCqe,GAEL,2BAAOzc,QAAQ,cAAc3J,UAAU,QAAvC,gBACA,2BAAOU,GAAG,cAAcE,KAAK,SAASyP,UAAQ,EAACoE,IAAI,MAAMD,IAAI,MAAMxU,UAAU,eAC7E+H,MAAO2e,EAAiB,GAAIje,SAAU,SAACtJ,GAAD,OAAK6nB,GAAe7nB,EAAE+I,OAAOH,MAAM,MACzE,2BAAO4B,QAAQ,oBAAoB3J,UAAU,QAA7C,eACA,8BAAOU,GAAG,oBAAoBE,KAAK,OAAOyP,UAAQ,EAAC6D,UAAU,MAA7D,uDAAqF,gBAArF,sBACOwS,EAAiB,IADxB,0BACsC,SAACvnB,GAAD,OAAK6nB,GAAe7nB,EAAE+I,OAAOH,MAAM,MADzE,IAEA,4BAAQnH,KAAK,SAASZ,UAAU,mCAAhC,YAKR,0BAAMA,UAAU,WAAWmQ,SAAU,SAAChR,GAClCA,EAAEiR,kBACiD,IAA/CoW,EAAe7d,QAAQie,EAAiB,KAAYA,EAAiB,KAAKA,EAAiB,IAC3Fzf,MAAM,4CAEViL,GAAkB,CACdpP,IAAI,eACJE,KAAK,CACDoC,OAAO,OACPC,QAAQ,CAAC,eAAe,oBACxBC,KAAKC,KAAKC,UAAU,CACZxE,KAAK,UACLuB,MAAMmkB,IAEdjhB,YAAY,eAKpB,8BAAU3F,UAAU,wDAChB,4BAAQA,UAAU,6CAA6C,+CAC/D,2BAAOA,UAAU,OAAO2J,QAAQ,kBAAhC,oBACA,4BAAQjJ,GAAG,iBAAiB2P,UAAQ,EAACrQ,UAAU,eAAe+H,MAAO6e,EAAiB,GAAIne,SAAU,SAACtJ,GACjG,IAAIsoB,EAAW,GACXC,EAAO,GACXzB,EAAkBtjB,KAAK,GAAGgF,SAAQ,SAAAhF,GAC3BA,EAAKsjB,EAAkB1e,MAAM,GAAG,GAAGjG,MAAM,KAAKnC,EAAE+I,OAAOH,QACtD0f,EAAW9kB,EAAKsjB,EAAkB1e,MAAM,GAAG,GAAGjG,MAAMqB,EAAKsjB,EAAkB1e,MAAM,GAAG,GAAGjG,MAAM,GAC7FomB,EAAO/kB,EAAKsjB,EAAkB1e,MAAM,GAAG,GAAGjG,MAAMqB,EAAKsjB,EAAkB1e,MAAM,GAAG,GAAGjG,MAAM,OAGjGulB,EAAuB,CAAC1nB,EAAE+I,OAAOH,MAAM0f,EAAWtoB,EAAE+I,OAAOH,MAAM2f,MAGjE,4BAAQ3f,MAAM,IAAd,wBACCue,GAEL,2BAAOtmB,UAAU,OAAO2J,QAAQ,oBAAhC,eACA,4BAAQjJ,GAAG,mBAAmB2P,UAAQ,EAACrQ,UAAU,eAAe+H,MAAO6e,EAAiB,GAAIne,SAAU,SAACtJ,GACnG8nB,GAAe9nB,EAAE+I,OAAOH,MAAM,KAE9B,4BAAQA,MAAM,IAAd,wBACCqe,GAEL,2BAAOzc,QAAQ,iBAAiB3J,UAAU,QAA1C,oBACA,2BAAOU,GAAG,iBAAiBE,KAAK,SAASyP,UAAQ,EAACoE,IAAI,MAAMD,IAAI,MAAMxU,UAAU,eAChF+H,MAAO6e,EAAiB,GAAIne,SAAU,SAACtJ,GACnC8nB,GAAe9nB,EAAE+I,OAAOH,MAAM,MAElC,2BAAO4B,QAAQ,oBAAoB3J,UAAU,QAA7C,eACA,2BAAOU,GAAG,oBAAoBE,KAAK,OAAOyP,UAAQ,EAAC6D,UAAU,KAAKlU,UAAU,eAC5E+H,MAAO6e,EAAiB,GAAIne,SAAU,SAACtJ,GACnC8nB,GAAe9nB,EAAE+I,OAAOH,MAAM,MAGlC,4BAAQnH,KAAK,SAASZ,UAAU,mCAAhC,cAOhB,6BAASA,UAAU,kBACf,yBAAKA,UAAU,2CACX,4BAAQA,UAAU,qBAAqBa,QAAS,SAAC1B,GAAD,OAAK6O,EAAqBrG,SAAQ,SAAA0H,GAAE,OAChFC,IAAE,IAAID,GAAIwB,SAAS,aACpB,uBAAG7Q,UAAU,mCAChB,wBAAIA,UAAU,uBAAd,eACA,wBAAIA,UAAU,uBAAd,gBACA,wBAAIA,UAAU,uBAAd,YAEH8mB,KAazBd,GAAmB3jB,YAAY,sBAC/B2jB,GAAmB1jB,KAAK,sBAET0jB,UCjWf,SAAS2B,GAAalpB,GAClB,OACQ,kBAAC,EAAD,KACI,kBAAC,EAAD,CAASwI,eAAe,gBAAgB/F,KAAK,UAC7C3B,OAAQ,SAACwK,GACL,OACA,kBAAC,EAAD,eAAe1H,YAAaslB,GAAatlB,YAAawH,SAAU,WAAeE,QASnG4d,GAAatlB,YAAY,gBACzBslB,GAAarlB,KAAK,gBAEHqlB,UCnBf,SAASC,GAAcnpB,GAAQ,IAAD,EACAC,mBAI1B,WACI,IAAIoQ,EAAS,IAAInK,KAEjB,OAAQmK,EAAS9J,eAAkB8J,EAAShK,WAAa,EAAG,GAAI,MAAOgK,EAAShK,WAAW,GAAG,KAAMgK,EAAShK,WAAW,KAAOgK,EAAS/J,UAAU,GAClJ,KAAK+J,EAAS/J,UAAY,IAAI+J,EAAS/J,WARP8iB,IADV,mBACnBnjB,EADmB,KACdojB,EADc,OAEgBppB,mBAAS,IAFzB,mBAEnBqpB,EAFmB,KAENC,EAFM,KAGpBphB,EAAQC,cAad,OACQ,kBAAC,EAAD,KACI,yBAAK7G,UAAU,kBACX,yDACA,2BAAOA,UAAU,gBAAjB,cACA,0BAAMmQ,SAAU,SAAChR,GAAKA,EAAEiR,iBARpCxJ,EAAQI,KAAK,4BAA4BtC,EAAK,iBAAiBqjB,KAS/C,yBAAK/nB,UAAU,4BACX,2BAAOA,UAAU,0BAA0B2J,QAAQ,QAAnD,QAA+D,0BAAM3J,UAAU,gBAAhB,MAC/D,yBAAKA,UAAU,YACX,2BAAOY,KAAK,OAAOF,GAAG,OAAO+H,SAAU,SAACtJ,GAAD,OAAK2oB,EAAW3oB,EAAE+I,OAAOH,QAAQA,MAAOrD,EAAM2L,UAAQ,EAC7FrQ,UAAU,mBAGlB,yBAAKA,UAAU,uBACX,2BAAOA,UAAU,0BAA0B2J,QAAQ,gBAAnD,iBACA,yBAAK3J,UAAU,YACX,2BAAOY,KAAK,OAAOF,GAAG,eAAe+H,SAAU,SAACtJ,GAAD,OAAK6oB,EAAmB7oB,EAAE+I,OAAOH,QAChFA,MAAOggB,EAAc/nB,UAAU,mBAGvC,4BAAQY,KAAK,SAASZ,UAAU,mBAAhC,cAYxB4nB,GAAcvlB,YAAY,kBAC1BulB,GAActlB,KAAK,iBAEJslB,UCnDf,SAASK,GAAaxpB,GAAQ,IAAD,EACCC,mBAI1B,WACI,IAAIoQ,EAAS,IAAInK,KAEjB,OAAQmK,EAAS9J,eAAkB8J,EAAShK,WAAa,EAAG,GAAI,MAAOgK,EAAShK,WAAW,GAAG,KAAMgK,EAAShK,WAAW,KAAOgK,EAAS/J,UAAU,GAClJ,KAAK+J,EAAS/J,UAAY,IAAI+J,EAAS/J,WARP8iB,IADX,mBAClBnjB,EADkB,KACbojB,EADa,OAEiBppB,mBAAS,IAF1B,mBAElBqpB,EAFkB,KAELC,EAFK,KAGnBphB,EAAQC,cAad,OACQ,kBAAC,EAAD,KACI,yBAAK7G,UAAU,kBACX,uDACA,2BAAOA,UAAU,gBAAjB,cACA,0BAAMmQ,SAAU,SAAChR,GAAKA,EAAEiR,iBARpCxJ,EAAQI,KAAK,2BAA2BtC,EAAK,iBAAiBqjB,KAS9C,yBAAK/nB,UAAU,4BACX,2BAAOA,UAAU,0BAA0B2J,QAAQ,QAAnD,QAA+D,0BAAM3J,UAAU,gBAAhB,MAC/D,yBAAKA,UAAU,YACX,2BAAOY,KAAK,OAAOF,GAAG,OAAO+H,SAAU,SAACtJ,GAAD,OAAK2oB,EAAW3oB,EAAE+I,OAAOH,QAAQA,MAAOrD,EAAM2L,UAAQ,EAC7FrQ,UAAU,mBAIlB,yBAAKA,UAAU,uBACX,2BAAOA,UAAU,0BAA0B2J,QAAQ,gBAAnD,iBACA,yBAAK3J,UAAU,YACX,2BAAOY,KAAK,OAAOF,GAAG,eAAe+H,SAAU,SAACtJ,GAAD,OAAK6oB,EAAmB7oB,EAAE+I,OAAOH,QAChFA,MAAOggB,EAAc/nB,UAAU,mBAGvC,4BAAQY,KAAK,SAASZ,UAAU,mBAAhC,cAYxBioB,GAAa5lB,YAAY,gBACzB4lB,GAAa3lB,KAAK,gBAEH2lB,UC/Cf,SAASC,GAAazpB,GAClB,IAAMuE,EAAI,CACN9B,KAAK,IAAIuW,gBAAgBhZ,EAAMiZ,SAAStR,QAAQuR,IAAI,QACpDjX,GAAG,IAAI+W,gBAAgBhZ,EAAMiZ,SAAStR,QAAQuR,IAAI,OAH7B,EAM+BpV,EAAS,CAC7DS,IAAI,yBACJE,KAAK,CACDoC,OAAO,OACPC,QAAQ,CAAC,eAAe,oBACxBC,KAAKC,KAAKC,UAAU,CAACxE,KAAK,YAC1ByE,YAAY,aAZK,sBAMZwT,EANY,EAMjBxW,KAA4ByW,EANX,EAMKvW,MAWxB8T,EAAa,EAjBM,EAmBajY,mBAAS,MAnBtB,mBAmBlB6a,EAnBkB,KAmBPC,EAnBO,OAoBW9a,mBAAS,CAAC,GAAG,GAAG,GAAG,GAAG,KApBjC,mBAoBlBkV,EApBkB,KAoBPb,EApBO,OAsBarU,oBAAS,GAtBtB,mBAsBlBypB,EAtBkB,KAsBNC,EAtBM,KAuBlBxoB,EAAcC,qBAAWL,GAAzBI,WAmBP,SAAS6I,EAASV,EAAMlE,GACpBkP,EAAiB,GAAD,mBAAKa,EAAWhL,MAAM,EAAE/E,IAAxB,CAA+BkE,GAA/B,YAAwC6L,EAAWhL,MAAM/E,EAAM,MAEnF,SAASwkB,EAAyBlpB,EAAE0E,EAAMgS,EAAWC,GACjD/C,EAAiBa,EAAWhL,MAAM,EAAE/E,GACnCkS,OAAO,CAACnC,EAAW/P,GAAO+E,MAAM,EAAEiN,GAClCE,OAAO,CAACnC,EAAW/P,GAAOgS,GAAYjN,MAAM,EAAEkN,GAC9CC,OAAO5W,GACP4W,OAAOnC,EAAW/P,GAAOgS,GAAYjN,MAAMkN,EAAW,MACtDC,OAAOnC,EAAW/P,GAAO+E,MAAMiN,EAAW,MAC1CE,OAAOnC,EAAWhL,MAAM/E,EAAM,KAGnC,SAASykB,IACL,IAAI/c,EAAM,EAKV,OAJAqI,EAAW+C,GAAchP,SAAQ,SAAC4gB,EAAe/f,GAC1CoL,EAAW+C,GAAcnO,GAAG,KAC9B+C,GAAOkO,WAAW7F,EAAW+C,GAAcnO,GAAG,QAE5C+C,EAGX,SAASid,IACL,IAAIjd,EAAM,EAMV,OALAqI,EAAW+C,GAAchP,SAAQ,SAAC4gB,EAAe/f,GAC1CoL,EAAW+C,GAAcnO,GAAG,KAC9B+C,GAAOkO,WAAW7F,EAAW+C,GAAcnO,GAAG,QAG5C+C,EA9CXxM,qBAAU,WAEFoa,IAA4C,IAAxBA,EAAiBjS,MACjCC,MAAM,iEACNvH,GAAW,IAEVuZ,GAAoBA,EAAiBxW,MAAQwW,EAAiB5R,OACnEiS,EAAiBL,EAAiBxW,KAAK1B,KAAI,SAAA0B,GAAI,OAC/C,4BAAQxB,IAAKwB,EAAKwW,EAAiB5R,MAAM,GAAGjG,MAAOyG,MAAOpF,EAAKwW,EAAiB5R,MAAM,GAAGjG,QACnFqB,EAAKwW,EAAiB5R,MAAM,GAAGjG,MAAMqB,EAAKwW,EAAiB5R,MAAM,GAAGjG,MAAM,IAC3E,OAAOqB,EAAKwW,EAAiB5R,MAAM,GAAGjG,MAAMqB,EAAKwW,EAAiB5R,MAAM,GAAGjG,MAAM,WAK5F,CAAC6X,EAAiBC,IAqGpB,IAAItB,EAAsB,KAY1B,OATKqB,GAAoBA,EAAiBtW,OAAUuW,KACpDtB,EACI,yBAAK9X,UAAU,uBACVmZ,GAAoBA,EAAiBtW,MAAO,iDAAiDsW,EAAiBtW,MAAM2E,MACpH,UAAU2R,EAAiBtW,MAAM4E,KAAK,aAAa0R,EAAiBtW,MAAM6E,WAAW,KACrF0R,EAAmB,0CAA0CA,EAAoB,OAKtF,kBAAC,EAAD,CAAMxF,WAAYA,EAAYb,iBAAkBA,EAAkB/P,IAAKA,EAAK9B,KAAK,UAAUwS,YAAY,kBAEnG,gBAAE/B,EAAF,EAAEA,MAAMf,EAAR,EAAQA,SAASgB,EAAjB,EAAiBA,eAAe+B,EAAhC,EAAgCA,SAASE,EAAzC,EAAyCA,SAASC,EAAlD,EAAkDA,SAAS/D,EAA3D,EAA2DA,aAAagE,EAAxE,EAAwEA,kBAAxE,OACC,kBAAC,EAAD,KACG,yBAAK/T,UAAU,0BAIX,wBAAIA,UAAU,SAAiB,WAAR2R,EAAkB,SAAS,UAAY,IAAKuW,GAAY7lB,aAC/E,2BAAOrC,UAAU,gBAAjB,cACC+P,EACA+H,EAID,0BAAM3H,SAAU,SAAChR,GAAKA,EAAEiR,iBAA6B,WAARuB,EAAkBgC,IAAiBE,MAC5E,yBAAK7T,UAAU,uBACX,2BAAOA,UAAU,0BAA0B2J,QAAQ,iBAAnD,kBAAmF,0BAAM3J,UAAU,gBAAhB,MAClF+T,EAAkB,CACftL,SAASA,EACTwL,OAAO,WACPK,SAAS,EACTC,QAAQ,mBAIhB,yBAAKvU,UAAU,uBACX,2BAAOA,UAAU,0BAA0B2J,QAAQ,QAAnD,QAA+D,0BAAM3J,UAAU,gBAAhB,MAC/D,yBAAKA,UAAU,YACX,2BAAOY,KAAK,OAAOF,GAAG,OAAO+H,SAAU,SAACtJ,GAAD,OACvCsJ,EAAStJ,EAAE+I,OAAOH,MAAM,IAAIA,MAAO6L,EAAW,GAAIhD,SAAUA,EAAUP,UAAQ,EAACrQ,UAAU,mBAGjG,yBAAKA,UAAU,uBACX,2BAAOA,UAAU,0BAA0B2J,QAAQ,eAAnD,eACA,yBAAK3J,UAAU,aACX,8BAAUU,GAAG,cAAc+H,SAAU,SAACtJ,GAAD,OACrCsJ,EAAStJ,EAAE+I,OAAOH,MAAM,IACxBA,MAAO6L,EAAW,GAAIhD,SAAUA,EAAU5Q,UAAU,mBAI5D,8BAAUA,UAAU,wDAChB,4BAAQA,UAAU,kEACd,4BAAQY,KAAK,SAASZ,UAAU,kBAAkB4Q,SAAUA,EAC5D/P,QAAS,kBACLkS,EACIa,EAAWhL,MAAM,EAAE+N,GAClBZ,OAAO,CAACnC,EAAW+C,GAAc/N,MAAM,GACnCmN,OACG,CAAC,CAACnC,EAAW+C,GAAcjV,OAAO,EAAE,GAAG,GAAG,GAAG,IAAI,SACxDqU,OAAOnC,EAAWhL,MAAM+N,EAAa,OAP9C,KAWA,wBAAI3W,UAAU,+BAAd,gBACA,4BAAQY,KAAK,SAASZ,UAAU,oBAAoB4Q,SAAUA,EAC9D/P,QAAS,kBACLkS,EACIa,EAAWhL,MAAM,EAAE+N,GAClBZ,OAAO,CAACnC,EAAW+C,GAAc/N,MAAM,EAAEgL,EAAW+C,GAAcjV,OAAO,KACzEqU,OAAOnC,EAAWhL,MAAM+N,EAAa,OAL9C,MASJ,yBAAK3W,UAAU,iBAEX,yBAAKA,UAAU,kBAAkBI,MAAO,CAAC8Q,WAAW,EAAEC,YAAY,IAC9D,wBAAInR,UAAU,MAAMI,MAAO,CAAC2Q,KAAK,WAAWd,YAAY,GAAGC,aAAa,KAAxE,eACA,wBAAIlQ,UAAU,MAAMI,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,KAAzE,WACA,wBAAIlQ,UAAU,MAAMI,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,KAAzE,WACA,wBAAIlQ,UAAU,MAAMI,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,KAAzE,qBACA,wBAAIlQ,UAAU,MAAMI,MAAO,CAAC2Q,KAAK,WAAWd,YAAY,GAAGC,aAAa,KAAxE,SACA,wBAAIlQ,UAAU,MAAMI,MAAO,CAAC2Q,KAAK,WAAWd,YAAY,GAAGC,aAAa,KAAxE,WAzJhC,SAA+BU,GAC/B,OACIgD,EAAW+C,GAAc1V,KAAI,SAACsnB,EAAe/f,GAAhB,OAC7B,yBAAKxI,UAAU,kBAAkBI,MAAO,CAAC8Q,WAAW,EAAEC,YAAY,GAAIhQ,IAAKqH,GAEvE,2BAAOmB,QAAQ,aAAa3J,UAAU,YACtC,2BAAOY,KAAK,SAASF,GAAG,aAAaV,UAAU,yCAAyC+H,MAAO6L,EAAW+C,GAAcnO,GAAG,GAC3HoL,EAAW+C,GAAcnO,GAAG,GAAG,GAC/BC,SAAU,SAACtJ,GAAD,OAAKA,GAAGiB,MAAO,CAAC2Q,KAAK,WAAWd,YAAY,GAAGC,aAAa,GAAIU,SAAUA,IAEpF,yBAAK5Q,UAAU,kBAAkBI,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,EAAEC,aAAa,IACjF,2BAAOvG,QAAQ,SAAS3J,UAAU,YAClC,2BAAOY,KAAK,OAAOF,GAAI,SAAS2P,UAAQ,EAACrQ,UAAU,yBAAyB4Q,SAAUA,EACtFxQ,MAAO,CAAC6P,YAAY,IACpBlI,MAAO6L,EAAW+C,GAAcnO,GAAG,GAAGoL,EAAW+C,GAAcnO,GAAG,GAAG,GAAIC,SAAU,SAACtJ,GAAD,OAAKA,KACxF,4BAAQa,UAAU,yBAAyBI,MAAO,CAAC2Q,KAAK,SAAUH,SAAUA,EAAUnI,SAAU,SAACtJ,GACzF,IAAIspB,EAAc,GAClBtP,EAAiBxW,KAAKgF,SAAQ,SAAAhF,GAGvBA,EAAKwW,EAAiB5R,MAAM,GAAGjG,OAAOnC,EAAE+I,OAAOH,QAC9C0gB,EAAc9lB,EAAKwW,EAAiB5R,MAAM,GAAGjG,MAAMqB,EAAKwW,EAAiB5R,MAAM,GAAGjG,MAAM,OAGhGyR,EAAiBa,EAAWhL,MAAM,EAAE+N,GACnCZ,OAAO,CAACnC,EAAW+C,GAAc/N,MAAM,EAAEJ,GACzCuN,OAAO,CAACnC,EAAW+C,GAAcnO,GAAGI,MAAM,EAAE,GAC5CmN,OAAO5W,EAAE+I,OAAOH,OAAOgO,OAAO0S,GAC9B1S,OAAOnC,EAAW+C,GAAcnO,GAAGI,MAAM,MACzCmN,OAAOnC,EAAW+C,GAAc/N,MAAMJ,EAAE,MACxCuN,OAAOnC,EAAWhL,MAAM+N,EAAa,OAG1C,4BAAQ5O,MAAM,IAAd,uBACCwR,IAGT,2BAAO5P,QAAQ,gBAAgB3J,UAAU,YACzC,2BAAOY,KAAK,OAAOF,GAAG,gBAAgB2P,UAAQ,EAACrQ,UAAU,6BAA6B+H,MAAO6L,EAAW+C,GAAcnO,GAAG,GACzHoL,EAAW+C,GAAcnO,GAAG,GAAG,GAC/BC,SAAU,SAACtJ,GAAD,OAAKA,GAAGyR,SAAUA,EAC5BxQ,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,KAErD,2BAAOvG,QAAQ,mBAAmB3J,UAAU,YAC5C,2BAAOY,KAAK,OAAOF,GAAG,mBAAmBV,UAAU,6BAA6B+H,MAAO6L,EAAW+C,GAAcnO,GAAG,GACnHoL,EAAW+C,GAAcnO,GAAG,GAAG,GAC/BC,SAAU,SAACtJ,GAAD,OAAKkpB,EAAyBlpB,EAAE+I,OAAOH,MAAM4O,EAAanO,EAAE,IAAIoI,SAAUA,EACpFxQ,MAAO,CAAC2Q,KAAK,YAAYd,YAAY,GAAGC,aAAa,KAErD,2BAAOvG,QAAQ,QAAQ3J,UAAU,YACjC,2BAAOY,KAAK,SAAS6T,IAAI,IAAI0C,KAAK,MAAMzW,GAAG,QAAQV,UAAU,yCAAyC+H,MAAO6L,EAAW+C,GAAcnO,GAAG,GACzIoL,EAAW+C,GAAcnO,GAAG,GAAG,GAC/BC,SAAU,SAACtJ,GAAD,OAAKkpB,EAAyBlpB,EAAE+I,OAAOH,MAAM4O,EAAanO,EAAE,IAAIoI,SAAUA,EACpFxQ,MAAO,CAAC2Q,KAAK,WAAWd,YAAY,GAAGC,aAAa,KAEpD,2BAAOvG,QAAQ,SAAS3J,UAAU,YAClC,2BAAOY,KAAK,SAAS6T,IAAI,IAAI0C,KAAK,MAAMzW,GAAG,SAASV,UAAU,yCAAyC+H,MAAO6L,EAAW+C,GAAcnO,GAAG,GAC1IoL,EAAW+C,GAAcnO,GAAG,GAAG,GAC/BC,SAAU,SAACtJ,GAAD,OAAKkpB,EAAyBlpB,EAAE+I,OAAOH,MAAM4O,EAAanO,EAAE,IAAIoI,SAAUA,EACpFxQ,MAAO,CAAC2Q,KAAK,WAAWd,YAAY,GAAGC,aAAa,SAgG/BwY,CAAsB9X,IAG1BuX,EACG,yBAAKnoB,UAAU,2BAAf,kDAGF,KACF,wBAAIA,UAAU,mBACT,gBAAgBoE,EAAmBkkB,MAExC,wBAAItoB,UAAU,mBACT,iBAAiBoE,EAAmBokB,OAI7C,6BACI,4BAAQ5nB,KAAK,SAASC,QAAS,SAAA1B,GACxBmpB,MAAwBE,MACvBrpB,EAAEiR,iBACFgY,GAAkB,KAEvBpoB,UAAU,6BALb,UAOS,kBAAR2R,EACG,4BAAQ/Q,KAAK,SAASC,QAAS,SAAC1B,GAAKyS,GAAe,IAAS5R,UAAU,qCAAvE,QACE,KACG,kBAAR2R,EACG,4BAAQ/Q,KAAK,SAASC,QAAS,SAAC1B,GAAK2U,KAAa9T,UAAU,4BAA5D,UACE,YAUlCkoB,GAAY7lB,YAAY,UACxB6lB,GAAY5lB,KAAK,eAEF4lB,UC9Qf,SAASS,GAAmBlqB,GAExB,IAAMuE,EAAI,CACN0B,KAAK,IAAI+S,gBAAgBhZ,EAAMiZ,SAAStR,QAAQuR,IAAI,QACpDoQ,aAAa,IAAItQ,gBAAgBhZ,EAAMiZ,SAAStR,QAAQuR,IAAI,iBAJjC,EAMuCpV,EAAS,CAC3ES,IAAI,eACJE,KAAK,CACDoC,OAAO,OACPC,QAAQ,CAAC,eAAe,oBACxBC,KAAKC,KAAKC,UAAU,CAACxE,KAAK,oBAC1ByE,YAAY,aAZW,sBAMlBijB,EANkB,EAMvBjmB,KAAmCkmB,EANZ,EAMMhmB,MANN,EAeKnE,mBAAS,MAfd,mBAexB4S,EAfwB,KAebwX,EAfa,OAgBOpqB,mBAAS,MAhBhB,mBAgBxBqqB,EAhBwB,KAgBZC,EAhBY,OAiBiBtqB,mBAAS,GAjB1B,mBAiBxBuqB,EAjBwB,KAiBPC,EAjBO,OAkBCxqB,mBAAS,MAlBV,mBAkBxByqB,EAlBwB,KAkBfC,EAlBe,OAmBW1qB,mBAAS,GAnBpB,mBAmBxB2qB,EAnBwB,KAmBVC,EAnBU,OAoBG5qB,mBAAS,GApBZ,mBAoBxB6qB,EApBwB,KAoBdC,EApBc,OAqByB9qB,mBAAS,IArBlC,mBAqBxBsP,EArBwB,KAqBHC,EArBG,OAsBOvP,oBAAS,GAtBhB,mBAsBxB+qB,EAtBwB,KAsBZC,EAtBY,KAwBxB9pB,EAAcC,qBAAWL,GAAzBI,WACDgH,EAAQC,cAqEd,SAAS8iB,IAAgD,IAAzBpC,EAAwB,uDAAf,GAAG5kB,EAAY,uCAAP4E,EAAO,uCAE9C2f,EAAW3f,EAAM,GAAGjG,KACpB0K,EAASzE,EAAM,GAAGjG,KAClBsoB,EAAUriB,EAAM,GAAGjG,KACnBuoB,EAAWtiB,EAAM,GAAGjG,KAE1B,OAAOqB,EAAKsJ,QAAO,SAACjI,EAAEC,GAClB,OAAI,IAAIU,KAAKV,EAAE+H,KAAY,IAAIrH,KAAK3B,EAAI0B,OACpC,IAAIC,KAAKV,EAAE+H,KAAY,IAAIrH,KAAK,IAAIA,KAAK3B,EAAI0B,MAAMM,cAAc,YAC/B,IAAnCuiB,EAAS5e,QAAQ1E,EAAEijB,IACXljB,EAAEC,EAAE4lB,GAAY5lB,EAAE2lB,GACjB5lB,IACd,GAgBN,SAAS8lB,IAAsD,IAArCvC,EAAoC,uDAA3B,GAAG5kB,EAAwB,uCAAnBonB,EAAmB,uCAAPxiB,EAAO,uCAC1D,OACIggB,EAAStmB,KAAI,SAAAsmB,GACT,IAAIT,EAahB,SAAyBS,EAAS5kB,EAAKonB,EAAYxiB,GAC/C,IAAM2f,EAAW3f,EAAM,GAAGjG,KACpB6lB,EAAU5f,EAAM,GAAGjG,KACnB8lB,EAAO7f,EAAM,GAAGjG,KAChB0K,EAASzE,EAAM,GAAGjG,KAClB0oB,EAASziB,EAAM,GAAGjG,KAClB2oB,EAAW1iB,EAAM,GAAGjG,KACpBsoB,EAAUriB,EAAM,GAAGjG,KACnBuoB,EAAWtiB,EAAM,GAAGjG,KAEpB4oB,EAAuB,GACvB7kB,EAAO,GA0Kb,OAxKA1C,EAAKgF,SAAQ,SAAAzG,GACLA,EAAKgmB,KAAcK,IACmC,IAAnD2C,EAAuBvhB,QAAQzH,EAAKimB,KACnC,IAAIxiB,KAAKzD,EAAK8K,KAAY,IAAIrH,KAAK,IAAIA,KAAK3B,EAAI0B,MAAMM,cAAc,WACpE,IAAIL,KAAKzD,EAAK8K,KAAY,IAAIrH,KAAK3B,EAAI0B,QAE3CwlB,EAAuBljB,KAAK9F,EAAKimB,IACjC9hB,EAAO2B,KACF,yBAAK7F,IAAKD,EAAKimB,IACZ,yBAAKnnB,UAAU,MAAMI,MAAO,CAAC4H,OAAO,WAAYxH,cAAY,WAAWC,cAAa,IAAIS,EAAKkmB,GAAQhmB,QAAQ,WAAW,KACpH,uBAAGpB,UAAU,4CAA4CU,GAAI,YAAYQ,EAAKkmB,GAAQhmB,QAAQ,WAAW,MACzG,uBAAGpB,UAAU,cAAckB,EAAKimB,IAChC,uBAAGnnB,UAAU,cAAckB,EAAKkmB,IAChC,uBAAGpnB,UAAU,+BACb,uBAAGA,UAAU,yBAAyBoE,EAAmBzB,EAAKsJ,QAC1D,SAACjI,EAAEC,GACC,OAAIA,EAAEkjB,KAAajmB,EAAKimB,IAChB,IAAIxiB,KAAKV,EAAE+H,KAAa,IAAIrH,KAAK3B,EAAI0B,OACrC,IAAIC,KAAKV,EAAE+H,KAAY,IAAIrH,KAAK,IAAIA,KAAK3B,EAAI0B,MAAMM,cAAc,UAE9DhB,EAAEC,EAAE4lB,GAAY5lB,EAAE2lB,GACjB5lB,IACd,MAIV,yBAAKhE,UAAU,kDAAkDU,GAAIQ,EAAKkmB,GAAQhmB,QAAQ,WAAW,KACjG,yBAAKhB,MAAOqpB,EAAY,KAAK,CAACrY,UAAU,OAAOC,UAAU,SAASrI,UAAU,SACxE,2BAAOtI,GAAG,QAAQV,UAAWypB,EAAY,oBAAoB,yCACzD,+BACI,4BACI,wBAAIzpB,UAAU,cAAcI,MAAO,CAAC4H,OAAO,WAAYC,aAAW,MAClEpH,QAAS,SAAC1B,GACN,IAAMuB,EAAG,OAAOQ,EAAKkmB,GAAQhmB,QAAQ,aAAa,IAClDjC,EAAE+I,OAAOC,aAAa,aACgB,QAAtChJ,EAAE+I,OAAOE,aAAa,cAAsB,OAAO,OAEnDkJ,EAAWpQ,EAAKkmB,IAASzjB,EAAS2N,EAAWpQ,EAAKkmB,IAASpb,EAAS7M,EAAE+I,OAAOE,aAAa,eAC1F0gB,EAAiB,eAAIxX,IAEqB,QAAtCnS,EAAE+I,OAAOE,aAAa,eACtBR,SAASC,eAAenH,GAAI2H,UAAUC,OAAO,eAC7CV,SAASC,eAAenH,GAAI2H,UAAUE,IAAI,mBAG1CX,SAASC,eAAenH,GAAI2H,UAAUC,OAAO,iBAC7CV,SAASC,eAAenH,GAAI2H,UAAUE,IAAI,kBAflD,OAmBI,uBAAG7H,GAAI,OAAOQ,EAAKkmB,GAAQhmB,QAAQ,aAAa,IAAKpB,UAAU,wCAEnE,wBAAIA,UAAU,cAAcI,MAAO,CAAC4H,OAAO,WAAYC,aAAW,MAClEpH,QAAS,SAAC1B,GACN,IAAMuB,EAAG,OAAOQ,EAAKkmB,GAAQhmB,QAAQ,aAAa,IAClDjC,EAAE+I,OAAOC,aAAa,aACgB,QAAtChJ,EAAE+I,OAAOE,aAAa,cAAsB,OAAO,OAEnDkJ,EAAWpQ,EAAKkmB,IAASzjB,EAAS2N,EAAWpQ,EAAKkmB,IAAS4C,EAAS7qB,EAAE+I,OAAOE,aAAa,eAC1F0gB,EAAiB,eAAIxX,IAEqB,QAAtCnS,EAAE+I,OAAOE,aAAa,eACtBR,SAASC,eAAenH,GAAI2H,UAAUC,OAAO,eAC7CV,SAASC,eAAenH,GAAI2H,UAAUE,IAAI,mBAG1CX,SAASC,eAAenH,GAAI2H,UAAUC,OAAO,iBAC7CV,SAASC,eAAenH,GAAI2H,UAAUE,IAAI,kBAflD,YAmBI,uBAAG7H,GAAI,OAAOQ,EAAKkmB,GAAQhmB,QAAQ,aAAa,IAAKpB,UAAU,wCAEnE,wBAAIA,UAAU,cAAcI,MAAO,CAAC4H,OAAO,WAAYC,aAAW,MAClEpH,QAAS,SAAC1B,GACN,IAAMuB,EAAG,SAASQ,EAAKkmB,GAAQhmB,QAAQ,aAAa,IACpDjC,EAAE+I,OAAOC,aAAa,aACgB,QAAtChJ,EAAE+I,OAAOE,aAAa,cAAsB,OAAO,OAEnDkJ,EAAWpQ,EAAKkmB,IAASzjB,EAAS2N,EAAWpQ,EAAKkmB,IAAS6C,EAAW9qB,EAAE+I,OAAOE,aAAa,eAC5F0gB,EAAiB,eAAIxX,IAEqB,QAAtCnS,EAAE+I,OAAOE,aAAa,eACtBR,SAASC,eAAenH,GAAI2H,UAAUC,OAAO,eAC7CV,SAASC,eAAenH,GAAI2H,UAAUE,IAAI,mBAG1CX,SAASC,eAAenH,GAAI2H,UAAUC,OAAO,iBAC7CV,SAASC,eAAenH,GAAI2H,UAAUE,IAAI,kBAflD,cAmBI,uBAAG7H,GAAI,SAASQ,EAAKkmB,GAAQhmB,QAAQ,aAAa,IAAKpB,UAAU,wCAErE,wBAAIA,UAAU,cAAcI,MAAO,CAAC4H,OAAO,WAAYC,aAAW,MAClEpH,QAAS,SAAC1B,GACN,IAAMuB,EAAG,QAAQQ,EAAKkmB,GAAQhmB,QAAQ,aAAa,IACnDjC,EAAE+I,OAAOC,aAAa,aACgB,QAAtChJ,EAAE+I,OAAOE,aAAa,cAAsB,OAAO,OAEnDkJ,EAAWpQ,EAAKkmB,IAASzjB,EAAS2N,EAAWpQ,EAAKkmB,IAASwC,EAAUzqB,EAAE+I,OAAOE,aAAa,eAC3F0gB,EAAiB,eAAIxX,IAEqB,QAAtCnS,EAAE+I,OAAOE,aAAa,eACtBR,SAASC,eAAenH,GAAI2H,UAAUC,OAAO,eAC7CV,SAASC,eAAenH,GAAI2H,UAAUE,IAAI,mBAG1CX,SAASC,eAAenH,GAAI2H,UAAUC,OAAO,iBAC7CV,SAASC,eAAenH,GAAI2H,UAAUE,IAAI,kBAflD,KAmBI,uBAAG7H,GAAI,QAAQQ,EAAKkmB,GAAQhmB,QAAQ,aAAa,IAAKpB,UAAU,wCAEpE,wBAAIA,UAAU,cAAcI,MAAO,CAAC4H,OAAO,WAAYC,aAAW,MAClEpH,QAAS,SAAC1B,GACN,IAAMuB,EAAG,SAASQ,EAAKkmB,GAAQhmB,QAAQ,aAAa,IACpDjC,EAAE+I,OAAOC,aAAa,aACgB,QAAtChJ,EAAE+I,OAAOE,aAAa,cAAsB,OAAO,OAEnDkJ,EAAWpQ,EAAKkmB,IAASzjB,EAAS2N,EAAWpQ,EAAKkmB,IAASyC,EAAW1qB,EAAE+I,OAAOE,aAAa,eAC5F0gB,EAAiB,eAAIxX,IAEqB,QAAtCnS,EAAE+I,OAAOE,aAAa,eACtBR,SAASC,eAAenH,GAAI2H,UAAUC,OAAO,eAC7CV,SAASC,eAAenH,GAAI2H,UAAUE,IAAI,mBAG1CX,SAASC,eAAenH,GAAI2H,UAAUC,OAAO,iBAC7CV,SAASC,eAAenH,GAAI2H,UAAUE,IAAI,kBAflD,KAmBI,uBAAG7H,GAAI,SAASQ,EAAKkmB,GAAQhmB,QAAQ,aAAa,IAAKpB,UAAU,0CAI7E,+BACK+pB,EAAY7oB,EAAKkmB,IAASnmB,KAAI,SAACmL,EAAM5D,GAClC,OAAI4D,EAAM+a,KAAajmB,EAAKimB,IACpB,IAAIxiB,KAAKyH,EAAMJ,KAAY,IAAIrH,KAAK,IAAIA,KAAK3B,EAAI0B,MAAMM,cAAc,WACrE,IAAIL,KAAKyH,EAAMJ,KAAY,IAAIrH,KAAK3B,EAAI0B,MAGxC,wBAAIvD,IAAKqH,EAAGpI,MAAO,CAAC4H,OAAO,WAAYnH,QAAS,SAAC1B,GAAD,OAC5CyH,EAAQI,KAAK,KA5LjE,SAAoByR,EAAO/X,GACvB,IAAIgY,EAAUD,EAAOE,MAAM,KAS3B,OAJAD,GAHAA,EAAUA,EAAUzX,KAAI,SAAAwX,GACpB,OAAOA,EAAOG,kBAEE3X,KAAI,SAAAwX,GACpB,OAAOA,EAAO,GAAG5F,cAAckD,OAAO0C,EAAOI,OAAO,QAGvCC,KAAK,IAAI,aAAaL,EAAOrX,QAAQ,KAAK,KAAK,OAAO2X,mBAAmBrY,GAkLxBsY,CAAW5M,EAAM4d,GAAUpR,cAAcxM,EAAM6d,OAEjE,wBAAIjqB,UAAU,eAAeyE,EAAiB2H,EAAMJ,KACpD,wBAAIhM,UAAU,eAAeoM,EAAM4d,IACnC,wBAAIhqB,UAAU,eAAeoM,EAAM6d,IACnC,wBAAIjqB,UAAU,eAAeoE,EAAmBgI,EAAMwd,KACtD,wBAAI5pB,UAAU,eAAeoE,EAAmBgI,EAAMyd,MAGtD,kBAazCxkB,EAlMcmiB,CAAgBD,EAAS5kB,EAAKonB,EAAYxiB,GACvD,GAAIuf,EAASplB,OAAO,EAChB,OACA,6BAASP,IAAKomB,GACV,4BAAI,2BAAIA,IACHT,EACL,uBAAG9mB,UAAU,kBAAiB,2BAAI,WAAWoE,EAAmBulB,EAAuB,CAACpC,GAAU5kB,EAAK4E,UAzG3HxI,qBAAU,WACL,GAAI6pB,IAA0D,IAA/BA,EAAwB1hB,KAChDC,MAAM,iEACNvH,GAAW,QAGd,GAAIgpB,GAA2BA,EAAwBjmB,MAAQimB,EAAwBrhB,MAAO,CAC/F,IAAI4iB,EAAoB,GAClBxnB,EAAKimB,EAAwBjmB,KAAK,GAElCykB,EADMwB,EAAwBrhB,MAAM,GACvB,GAAGjG,KAClB+N,EAAG,GAGP1M,EAAKgF,SAAQ,SAAAzG,GACT,IAAIgO,EAAU,IACkC,IAA7Cib,EAAoBxhB,QAAQzH,EAAKkmB,MAChC+C,EAAoBnjB,KAAK9F,EAAKkmB,IAC9BlY,EAAUhO,EAAKkmB,IAASzkB,EAAKwM,QAAO,SAAA/C,GAAK,OAAEA,EAAMgb,KAAUlmB,EAAKkmB,MAChE0B,GAAiB,SAAAxX,GAAU,OAAGlK,OAAOC,OAAO,GAAdD,OAAA,IAAAA,CAAA,GAAqBkK,GAAYpC,UAIvEvM,EAAKgF,SAAQ,SAAAzG,IAC6C,IAAnDmO,EAAG1G,QAAQzH,EAAKkmB,GAAQhmB,QAAQ,WAAW,MAC1CiO,EAAGrI,KAAK9F,EAAKkmB,GAAQhmB,QAAQ,WAAW,QAEhD6M,EAA2BoB,MAGjC,CAACuZ,EAAwBC,IAE3B9pB,qBAAU,WACN,GAAGuS,EAAY,CACX,IAAMiW,EAASqB,EAAwBjmB,KAAK,GAAG1B,KAAI,SAAAsmB,GAAQ,OAAEA,EAASqB,EAAwBrhB,MAAM,GAAG,GAAGjG,SAE1G0nB,EAAkBc,EAAiBvC,EAAS3e,MAAM,EAAE,GAAGggB,EAAwBjmB,KAAK,GAAG2O,EAAWsX,EAAwBrhB,MAAM,KAChI2hB,EAAuB9kB,EAAmBulB,EAAuBpC,EAAS3e,MAAM,EAAE,GAAGggB,EAAwBjmB,KAAK,GAAGimB,EAAwBrhB,MAAM,MAEnJ6hB,EAAeU,EAAiBvC,EAAS3e,MAAM,GAAGggB,EAAwBjmB,KAAK,GAAG2O,EAAWsX,EAAwBrhB,MAAM,KAC3H+hB,EAAoBllB,EAAmBulB,EAAuBpC,EAAS3e,MAAM,GAAGggB,EAAwBjmB,KAAK,GAAGimB,EAAwBrhB,MAAM,MAC9IiiB,EAAgBplB,EAAmBulB,EAAuBpC,EAASqB,EAAwBjmB,KAAK,GAAGimB,EAAwBrhB,MAAM,SAIvI,CAAC+J,EAAWmY,IAGd1qB,qBAAU,WAEFiP,GAAwB+a,GAAeI,GACvCnb,EAAqBrG,SAAQ,SAAA0H,GACzBC,IAAE,IAAID,GAAIE,GAAG,oBAAmB,SAAApQ,GACzBA,EAAE+I,SAAS/I,EAAEqQ,eAChBF,IAAE,aAAaD,GAAII,YAAY,kBAAkBC,SAAS,sBAE9DJ,IAAE,IAAID,GAAIE,GAAG,oBAAmB,SAAApQ,GACzBA,EAAE+I,SAAS/I,EAAEqQ,eAChBF,IAAE,aAAaD,GAAII,YAAY,mBAAmBC,SAAS,0BAMzE,CAACqZ,EAAYI,IAyOf,IAAIpZ,GAAa,KASjB,OARK6Y,GAA2BA,EAAwB/lB,OAAUgmB,KAClE9Y,GACI,yBAAK/P,UAAU,uBACV4oB,GAA2BA,EAAwB/lB,MAAO,gDAAgD+lB,EAAwB/lB,MAAM2E,MACxI,UAAUohB,EAAwB/lB,MAAM4E,KAAK,aAAamhB,EAAwB/lB,MAAM6E,WAAW,KACnGmhB,EAA0B,yCAAyCA,EAA2B,OAInG,kBAAC,EAAD,KACI,yBAAK7oB,UAAU,oDACX,wBAAIA,UAAU,eAAegD,EAAI+kB,cACjC,wBAAI/nB,UAAU,oBACT,yBAA2ByE,EAAiBzB,EAAI0B,OAEpDqL,GACD,yBAAK/P,UAAU,gCACX,yBAAKA,UAAU,gCACX,2BAAOA,UAAU,mBAAmBY,KAAK,WAAWF,GAAG,cAAcoH,QAAS2hB,EAC9EhhB,SAAU,SAACtJ,GACHA,EAAE+I,OAAOJ,QACT4hB,GAAkB,GACjBA,GAAkB,MAE3B,2BAAO1pB,UAAU,mBAAmB2J,QAAQ,eAA5C,kBAEJ,4BAAQ3J,UAAU,4BACda,QAAS,SAAC1B,GAAD,OAAK6O,EAAqBrG,SAAQ,SAAA0H,GAAE,OACzCC,IAAE,IAAID,GAAIwB,SAAS,aAF3B,IAGQ,uBAAG7Q,UAAU,sBAHrB,WAIA,4BAAQA,UAAU,gBAClBa,QAAS,SAAC1B,GAAD,OAAK6O,EAAqBrG,SAAQ,SAAA0H,GAAE,OACzCC,IAAE,IAAID,GAAIwB,SAAS,aAFvB,IAGI,uBAAG7Q,UAAU,uBAHjB,cAKH+oB,EACD,yBAAK/oB,UAAU,mBAAmBI,MAAO,CAACiB,gBAAgB,0BACtD,uBAAGrB,UAAU,yBAAb,sBACA,uBAAGA,UAAU,0BAA0BipB,IAG1CE,EACD,yBAAKnpB,UAAU,mBAAmBI,MAAO,CAACiB,gBAAgB,0BACtD,uBAAGrB,UAAU,yBAAb,kBACA,uBAAGA,UAAU,0BAA0BqpB,IAE3C,yBAAKrpB,UAAU,mBAAmBI,MAAO,CAACiB,gBAAgB,0BACtD,uBAAGrB,UAAU,yBAAb,cACA,uBAAGA,UAAU,0BAA0BupB,MAS3DZ,GAAkBtmB,YAAY,kBAC9BsmB,GAAkBrmB,KAAK,qBAERqmB,UCjYf,SAASyB,GAAkB3rB,GAEvB,IAAMuE,EAAI,CACN0B,KAAK,IAAI+S,gBAAgBhZ,EAAMiZ,SAAStR,QAAQuR,IAAI,QACpDoQ,aAAa,IAAItQ,gBAAgBhZ,EAAMiZ,SAAStR,QAAQuR,IAAI,iBAJlC,EAMsCpV,EAAS,CACzES,IAAI,eACJE,KAAK,CACDoC,OAAO,OACPC,QAAQ,CAAC,eAAe,oBACxBC,KAAKC,KAAKC,UAAU,CAACxE,KAAK,kBAC1ByE,YAAY,aAZU,sBAMjB0kB,EANiB,EAMtB1nB,KAAkC2nB,EANZ,EAMMznB,MANN,EAeMnE,mBAAS,MAff,mBAevB4S,EAfuB,KAeZwX,EAfY,OAgBIpqB,mBAAS,MAhBb,mBAgBvB6rB,EAhBuB,KAgBbC,EAhBa,OAiBc9rB,mBAAS,GAjBvB,mBAiBvB+rB,EAjBuB,KAiBRC,EAjBQ,OAkBIhsB,mBAAS,MAlBb,mBAkBvBisB,EAlBuB,KAkBbC,EAlBa,OAmBclsB,mBAAS,GAnBvB,mBAmBvBmsB,EAnBuB,KAmBRC,EAnBQ,OAoB0BpsB,mBAAS,GApBnC,mBAoBvBqsB,EApBuB,KAoBFC,EApBE,OAqBkBtsB,mBAAS,GArB3B,mBAqBvBusB,EArBuB,KAqBNC,EArBM,OAsB0BxsB,mBAAS,IAtBnC,mBAsBvBsP,EAtBuB,KAsBFC,EAtBE,OAuBQvP,oBAAS,GAvBjB,mBAuBvB+qB,EAvBuB,KAuBXC,EAvBW,KAyBvB9pB,GAAcC,qBAAWL,GAAzBI,WACDgH,GAAQC,cAwFd,SAAS8iB,KAAoE,IAA7CpC,EAA4C,uDAAnC,GAAG5kB,EAAgC,uCAA3B4E,EAA2B,uCAArB4jB,EAAqB,uCAElEjE,EAAW3f,EAAM,GAAGjG,KACpB0K,EAASzE,EAAM,GAAGjG,KAClBsoB,EAAUriB,EAAM,GAAGjG,KACnBuoB,EAAWtiB,EAAM,GAAGjG,KAE1B,OAAOqB,EAAKsJ,QAAO,SAACjI,EAAEC,GAClB,OAAI,IAAIU,KAAKV,EAAE+H,KAAY,IAAIrH,KAAK3B,EAAI0B,QAA4C,IAAnC6iB,EAAS5e,QAAQ1E,EAAEijB,IAC5DiE,EACOnnB,EAAEC,EAAE4lB,GAAY5lB,EAAE2lB,GACjB5lB,EAAEC,EAAE2lB,GAAW3lB,EAAE4lB,GAErB7lB,IACd,GA8BN,SAASgV,GAAWP,EAAO/X,GACvB,IAAIgY,EAAUD,EAAOE,MAAM,KAS3B,OAJAD,GAHAA,EAAUA,EAAUzX,KAAI,SAAAwX,GACpB,OAAOA,EAAOG,kBAEE3X,KAAI,SAAAwX,GACpB,OAAOA,EAAO,GAAG5F,cAAckD,OAAO0C,EAAOI,OAAO,QAGvCC,KAAK,IAAI,aAAaL,EAAOrX,QAAQ,KAAK,KAAK,OAAO2X,mBAAmBrY,GAG9F,SAASopB,KAA0E,IAAzDvC,EAAwD,uDAA/C,GAAG5kB,EAA4C,uCAAvConB,EAAuC,uCAA3BxiB,EAA2B,uCAArB4jB,EAAqB,uCAC9E,OACI5D,EAAStmB,KAAI,SAAAsmB,GACT,IAAIT,EAahB,SAAyBS,EAAS5kB,EAAKonB,EAAYxiB,EAAM4jB,GACrD,IAAMjE,EAAW3f,EAAM,GAAGjG,KACpB6lB,EAAU5f,EAAM,GAAGjG,KACnB8lB,EAAO7f,EAAM,GAAGjG,KAChB8pB,EAAS7jB,EAAM,GAAGjG,KAClB0K,EAASzE,EAAM,GAAGjG,KAClB0oB,EAASziB,EAAM,GAAGjG,KAClB2oB,EAAW1iB,EAAM,GAAGjG,KACpBsoB,EAAUriB,EAAM,GAAGjG,KACnBuoB,EAAWtiB,EAAM,GAAGjG,KAEpB4oB,EAAuB,GACvB7kB,EAAO,GAEb,SAASgmB,EAAwBnqB,GAC7B,OAAOyB,EAAKsJ,QAAO,SAACjI,EAAEC,GAClB,OAAI/C,EAAKkqB,IAAcnnB,EAAEmnB,KAAYlqB,EAAKkqB,IAAe,IAAIzmB,KAAKV,EAAE+H,IAAW,IAAIrH,KAAK,IAAIA,KAAK3B,EAAI0B,MAAMM,cAAc,UAC9GhB,EAAEC,EAAE2lB,GAAW3lB,EAAE4lB,IAClB3oB,EAAKkqB,IAAannB,EAAEkjB,KAAajmB,EAAKimB,IAC3C,IAAIxiB,KAAKV,EAAE+H,IAAW,IAAIrH,KAAK,IAAIA,KAAK3B,EAAI0B,MAAMM,cAAc,UACtDhB,EAAEC,EAAE2lB,GAAW3lB,EAAE4lB,GACpB7lB,IACd,GA4WN,OAhLArB,EAAKgF,SAAQ,SAAAzG,GACLA,EAAKgmB,KAAcK,IAA+D,IAAnD2C,EAAuBvhB,QAAQzH,EAAKimB,MACnE+C,EAAuBljB,KAAK9F,EAAKimB,IACjC9hB,EAAO2B,KACF,yBAAK7F,IAAKD,EAAKimB,IACZ,yBAAKnnB,UAAU,iBAAiBI,MAAO,CAAC4H,OAAO,WAAYxH,cAAY,WAAWC,cAAa,IAAIS,EAAKkmB,GAAQhmB,QAAQ,WAAW,KAC/H,uBAAGpB,UAAU,4CAA4CU,GAAI,YAAYQ,EAAKkmB,GAAQhmB,QAAQ,WAAW,MACzG,uBAAGpB,UAAU,cAAckB,EAAKimB,IAChC,uBAAGnnB,UAAU,cAAckB,EAAKkmB,IAChC,uBAAGpnB,UAAU,uBAAuBoE,EAAmBzB,EAAKsJ,QACxD,SAACjI,EAAEC,GACC,OAAIA,EAAEkjB,KAAajmB,EAAKimB,IAAe,IAAIxiB,KAAKV,EAAE+H,KAAa,IAAIrH,KAAK3B,EAAI0B,MACpEymB,EACOnnB,EAAEC,EAAE4lB,GAAY5lB,EAAE2lB,GACjB5lB,EAAEC,EAAE2lB,GAAW3lB,EAAE4lB,GAErB7lB,IACd,MAIV,yBAAKhE,UAAU,kDAAkDU,GAAIQ,EAAKkmB,GAAQhmB,QAAQ,WAAW,KAChGF,EAAKkqB,GA9M1B,SAA0BE,GACtB,IAAIC,EAAsB,GAC1B,OACI5oB,EAAK1B,KAAI,SAAAC,GACL,OAAIA,EAAKimB,KAAamE,EAAWnE,KAA+D,IAAjDoE,EAAsB5iB,QAAQzH,EAAKkqB,KAC9EG,EAAsBvkB,KAAK9F,EAAKkqB,IAEhC,yBAAKjqB,IAAKD,EAAKkqB,IACX,yBAAKprB,UAAU,gDAAgDI,MAAO,CAAC4H,OAAO,WAAYxH,cAAY,WAAWC,cAAa,IAAIS,EAAKkqB,GAAUhqB,QAAQ,WAAW,KAChK,uBAAGpB,UAAU,SAAQ,uBAAGA,UAAU,sCAAsCU,GAAI,YAAYQ,EAAKkqB,GAAUhqB,QAAQ,WAAW,OAC1H,uBAAGpB,UAAU,iBAAiBkB,EAAKkqB,IACnC,uBAAGprB,UAAU,0BAA0BoE,EAAmBzB,EAAKsJ,QAC3D,SAACjI,EAAEC,GACC,OAAGA,EAAEmnB,KAAYlqB,EAAKkqB,IAAc,IAAIzmB,KAAKV,EAAE+H,KAAY,IAAIrH,KAAK3B,EAAI0B,MAChEymB,EACOnnB,EAAEC,EAAE4lB,GAAY5lB,EAAE2lB,GACjB5lB,EAAEC,EAAE2lB,GAAW3lB,EAAE4lB,GAIrB7lB,IACd,MAIV,yBAAKhE,UAAU,sDAAsDU,GAAIQ,EAAKkqB,GAAUhqB,QAAQ,WAAW,KACvG,yBAAKhB,MAAOqpB,EACR,CAACppB,MAAM,QAAQ,CAACA,MAAM,OAAO+Q,UAAU,OAAOC,UAAU,SAASrI,UAAU,SAC/E,2BAAOtI,GAAG,QAAQV,UAAWypB,EAAY,oBAAoB,yCACzD,+BACI,4BACI,wBAAIzpB,UAAU,cAAcI,MAAO,CAAC4H,OAAO,WAAYC,aAAW,MAClEpH,QAAS,SAAC1B,GACN,IAAMuB,EAAG,OAAOQ,EAAKkqB,GAAUhqB,QAAQ,aAAa,IACpDjC,EAAE+I,OAAOC,aAAa,aACgB,QAAtChJ,EAAE+I,OAAOE,aAAa,cAAsB,OAAO,OAEnDkJ,EAAWpQ,EAAKkqB,IAAWznB,EAAS2N,EAAWpQ,EAAKkqB,IAAWpf,EAAS7M,EAAE+I,OAAOE,aAAa,eAC9F0gB,EAAiB,eAAIxX,IAEqB,QAAtCnS,EAAE+I,OAAOE,aAAa,eACtBR,SAASC,eAAenH,GAAI2H,UAAUC,OAAO,eAC7CV,SAASC,eAAenH,GAAI2H,UAAUE,IAAI,mBAG1CX,SAASC,eAAenH,GAAI2H,UAAUC,OAAO,iBAC7CV,SAASC,eAAenH,GAAI2H,UAAUE,IAAI,kBAflD,OAoBI,uBAAG7H,GAAI,OAAOQ,EAAKkqB,GAAUhqB,QAAQ,aAAa,IAAKpB,UAAU,wCAErE,wBAAIA,UAAU,cAAcI,MAAO,CAAC4H,OAAO,WAAYC,aAAW,MAClEpH,QAAS,SAAC1B,GACN,IAAMuB,EAAG,OAAOQ,EAAKkqB,GAAUhqB,QAAQ,aAAa,IACpDjC,EAAE+I,OAAOC,aAAa,aACgB,QAAtChJ,EAAE+I,OAAOE,aAAa,cAAsB,OAAO,OAEnDkJ,EAAWpQ,EAAKkqB,IAAWznB,EAAS2N,EAAWpQ,EAAKkqB,IAAWpB,EAAS7qB,EAAE+I,OAAOE,aAAa,eAC9F0gB,EAAiB,eAAIxX,IAEqB,QAAtCnS,EAAE+I,OAAOE,aAAa,eACtBR,SAASC,eAAenH,GAAI2H,UAAUC,OAAO,eAC7CV,SAASC,eAAenH,GAAI2H,UAAUE,IAAI,mBAG1CX,SAASC,eAAenH,GAAI2H,UAAUC,OAAO,iBAC7CV,SAASC,eAAenH,GAAI2H,UAAUE,IAAI,kBAflD,YAoBI,uBAAG7H,GAAI,OAAOQ,EAAKkqB,GAAUhqB,QAAQ,aAAa,IAAKpB,UAAU,wCAErE,wBAAIA,UAAU,cAAcI,MAAO,CAAC4H,OAAO,WAAYC,aAAW,MAClEpH,QAAS,SAAC1B,GACN,IAAMuB,EAAG,SAASQ,EAAKkqB,GAAUhqB,QAAQ,aAAa,IACtDjC,EAAE+I,OAAOC,aAAa,aACgB,QAAtChJ,EAAE+I,OAAOE,aAAa,cAAsB,OAAO,OAEnDkJ,EAAWpQ,EAAKkqB,IAAWznB,EAAS2N,EAAWpQ,EAAKkqB,IAAWnB,EAAW9qB,EAAE+I,OAAOE,aAAa,eAChG0gB,EAAiB,eAAIxX,IAEqB,QAAtCnS,EAAE+I,OAAOE,aAAa,eACtBR,SAASC,eAAenH,GAAI2H,UAAUC,OAAO,eAC7CV,SAASC,eAAenH,GAAI2H,UAAUE,IAAI,mBAG1CX,SAASC,eAAenH,GAAI2H,UAAUC,OAAO,iBAC7CV,SAASC,eAAenH,GAAI2H,UAAUE,IAAI,kBAflD,cAoBI,uBAAG7H,GAAI,SAASQ,EAAKkqB,GAAUhqB,QAAQ,aAAa,IAAKpB,UAAU,wCAEvE,wBAAIA,UAAU,cAAcI,MAAO,CAAC4H,OAAO,WAAYC,aAAW,MAClEpH,QAAS,SAAC1B,GACN,IAAMuB,EAAG,KAAKQ,EAAKkqB,GAAUhqB,QAAQ,aAAa,IAClDjC,EAAE+I,OAAOC,aAAa,aACgB,QAAtChJ,EAAE+I,OAAOE,aAAa,cAAsB,OAAO,OAEnDkJ,EAAWpQ,EAAKkqB,IAAWznB,EAAS2N,EAAWpQ,EAAKkqB,IAAWxB,EAAUzqB,EAAE+I,OAAOE,aAAa,eAC/F0gB,EAAiB,eAAIxX,IAEqB,QAAtCnS,EAAE+I,OAAOE,aAAa,eACtBR,SAASC,eAAenH,GAAI2H,UAAUC,OAAO,eAC7CV,SAASC,eAAenH,GAAI2H,UAAUE,IAAI,mBAG1CX,SAASC,eAAenH,GAAI2H,UAAUC,OAAO,iBAC7CV,SAASC,eAAenH,GAAI2H,UAAUE,IAAI,kBAflD,KAoBI,uBAAG7H,GAAI,KAAKQ,EAAKkqB,GAAUhqB,QAAQ,aAAa,IAAKpB,UAAU,wCAEnE,wBAAIA,UAAU,cAAcI,MAAO,CAAC4H,OAAO,WAAYC,aAAW,MAClEpH,QAAS,SAAC1B,GACN,IAAMuB,EAAG,KAAKQ,EAAKkqB,GAAUhqB,QAAQ,aAAa,IAClDjC,EAAE+I,OAAOC,aAAa,aACgB,QAAtChJ,EAAE+I,OAAOE,aAAa,cAAsB,OAAO,OAEnDkJ,EAAWpQ,EAAKkqB,IAAWznB,EAAS2N,EAAWpQ,EAAKkqB,IAAWvB,EAAW1qB,EAAE+I,OAAOE,aAAa,eAChG0gB,EAAiB,eAAIxX,IAEqB,QAAtCnS,EAAE+I,OAAOE,aAAa,eACtBR,SAASC,eAAenH,GAAI2H,UAAUC,OAAO,eAC7CV,SAASC,eAAenH,GAAI2H,UAAUE,IAAI,mBAG1CX,SAASC,eAAenH,GAAI2H,UAAUC,OAAO,iBAC7CV,SAASC,eAAenH,GAAI2H,UAAUE,IAAI,kBAflD,KAoBI,uBAAG7H,GAAI,KAAKQ,EAAKkqB,GAAUhqB,QAAQ,aAAa,IAAKpB,UAAU,0CAI3E,+BACKqrB,EAAwBnqB,IAAO,EAC3B,4BACG,wBAAIid,QAAQ,KAAZ,OACA,wBAAIA,QAAQ,KAAK/Z,EAAmBinB,EAAwBnqB,MAE/D,4BACG,wBAAIid,QAAQ,KAAZ,OACA,wBAAIA,QAAQ,KAAK/Z,GAAoBinB,EAAwBnqB,MAGxE6oB,EAAY7oB,EAAKkqB,IAAWnqB,KAAI,SAACmL,EAAM5D,GACpC,OAAI4D,EAAM+a,KAAamE,EAAWnE,IAAc/a,EAAMgf,KAAYlqB,EAAKkqB,IAC/D,IAAIzmB,KAAKyH,EAAMJ,KAAY,IAAIrH,KAAK,IAAIA,KAAK3B,EAAI0B,MAAMM,cAAc,WACrE,IAAIL,KAAKyH,EAAMJ,KAAY,IAAIrH,KAAK3B,EAAI0B,MAGxC,wBAAIvD,IAAKqH,EAAGpI,MAAO,CAAC4H,OAAO,WAAYnH,QAAS,SAAC1B,GAAD,OAC5CyH,GAAQI,KAAK,KAAKgS,GAAW5M,EAAM4d,GAAUpR,cAAcxM,EAAM6d,OAEjE,wBAAIjqB,UAAU,eAAeyE,EAAiB2H,EAAMJ,KACpD,wBAAIhM,UAAU,eAAeoM,EAAM4d,IACnC,wBAAIhqB,UAAU,eAAeoM,EAAM6d,IACnC,wBAAIjqB,UAAU,eAAeoE,EAAmBgI,EAAMwd,KACtD,wBAAI5pB,UAAU,eAAeoE,EAAmBgI,EAAMyd,MAGtD,cAQjB,QA4BS2B,CAAiBtqB,GACjC,yBAAKd,MAAOqpB,EAAY,KAAK,CAACrY,UAAU,OAAOC,UAAU,SAASrI,UAAU,SACxE,2BAAOtI,GAAG,QAAQV,UAAWypB,EAAY,oBAAoB,yCACzD,+BACI,4BACI,wBAAIzpB,UAAU,cAAcI,MAAO,CAAC4H,OAAO,WAAYC,aAAW,MAClEpH,QAAS,SAAC1B,GACN,IAAMuB,EAAG,OAAOQ,EAAKkmB,GAAQhmB,QAAQ,aAAa,IAClDjC,EAAE+I,OAAOC,aAAa,aACgB,QAAtChJ,EAAE+I,OAAOE,aAAa,cAAsB,OAAO,OAEnDkJ,EAAWpQ,EAAKkmB,IAASzjB,EAAS2N,EAAWpQ,EAAKkmB,IAASpb,EAAS7M,EAAE+I,OAAOE,aAAa,eAC1F0gB,EAAiB,eAAIxX,IAEqB,QAAtCnS,EAAE+I,OAAOE,aAAa,eACtBR,SAASC,eAAenH,GAAI2H,UAAUC,OAAO,eAC7CV,SAASC,eAAenH,GAAI2H,UAAUE,IAAI,mBAG1CX,SAASC,eAAenH,GAAI2H,UAAUC,OAAO,iBAC7CV,SAASC,eAAenH,GAAI2H,UAAUE,IAAI,kBAflD,OAoBI,uBAAG7H,GAAI,OAAOQ,EAAKkmB,GAAQhmB,QAAQ,aAAa,IAAKpB,UAAU,wCAEnE,wBAAIA,UAAU,cAAcI,MAAO,CAAC4H,OAAO,WAAYC,aAAW,MAClEpH,QAAS,SAAC1B,GACN,IAAMuB,EAAG,OAAOQ,EAAKkmB,GAAQhmB,QAAQ,aAAa,IAClDjC,EAAE+I,OAAOC,aAAa,aACgB,QAAtChJ,EAAE+I,OAAOE,aAAa,cAAsB,OAAO,OAEnDkJ,EAAWpQ,EAAKkmB,IAASzjB,EAAS2N,EAAWpQ,EAAKkmB,IAAS4C,EAAS7qB,EAAE+I,OAAOE,aAAa,eAC1F0gB,EAAiB,eAAIxX,IAEqB,QAAtCnS,EAAE+I,OAAOE,aAAa,eACtBR,SAASC,eAAenH,GAAI2H,UAAUC,OAAO,eAC7CV,SAASC,eAAenH,GAAI2H,UAAUE,IAAI,mBAG1CX,SAASC,eAAenH,GAAI2H,UAAUC,OAAO,iBAC7CV,SAASC,eAAenH,GAAI2H,UAAUE,IAAI,kBAflD,YAmBI,uBAAG7H,GAAI,OAAOQ,EAAKkmB,GAAQhmB,QAAQ,aAAa,IAAKpB,UAAU,wCAEnE,wBAAIA,UAAU,cAAcI,MAAO,CAAC4H,OAAO,WAAYC,aAAW,MAClEpH,QAAS,SAAC1B,GACN,IAAMuB,EAAG,SAASQ,EAAKkmB,GAAQhmB,QAAQ,aAAa,IACpDjC,EAAE+I,OAAOC,aAAa,aACgB,QAAtChJ,EAAE+I,OAAOE,aAAa,cAAsB,OAAO,OAEnDkJ,EAAWpQ,EAAKkmB,IAASzjB,EAAS2N,EAAWpQ,EAAKkmB,IAAS6C,EAAW9qB,EAAE+I,OAAOE,aAAa,eAC5F0gB,EAAiB,eAAIxX,IAEqB,QAAtCnS,EAAE+I,OAAOE,aAAa,eACtBR,SAASC,eAAenH,GAAI2H,UAAUC,OAAO,eAC7CV,SAASC,eAAenH,GAAI2H,UAAUE,IAAI,mBAG1CX,SAASC,eAAenH,GAAI2H,UAAUC,OAAO,iBAC7CV,SAASC,eAAenH,GAAI2H,UAAUE,IAAI,kBAflD,cAmBI,uBAAG7H,GAAI,SAASQ,EAAKkmB,GAAQhmB,QAAQ,aAAa,IAAKpB,UAAU,wCAErE,wBAAIA,UAAU,cAAcI,MAAO,CAAC4H,OAAO,WAAYC,aAAW,MAClEpH,QAAS,SAAC1B,GACN,IAAMuB,EAAG,KAAKQ,EAAKkmB,GAAQhmB,QAAQ,aAAa,IAChDjC,EAAE+I,OAAOC,aAAa,aACgB,QAAtChJ,EAAE+I,OAAOE,aAAa,cAAsB,OAAO,OAEnDkJ,EAAWpQ,EAAKkmB,IAASzjB,EAAS2N,EAAWpQ,EAAKkmB,IAASwC,EAAUzqB,EAAE+I,OAAOE,aAAa,eAC3F0gB,EAAiB,eAAIxX,IAEqB,QAAtCnS,EAAE+I,OAAOE,aAAa,eACtBR,SAASC,eAAenH,GAAI2H,UAAUC,OAAO,eAC7CV,SAASC,eAAenH,GAAI2H,UAAUE,IAAI,mBAG1CX,SAASC,eAAenH,GAAI2H,UAAUC,OAAO,iBAC7CV,SAASC,eAAenH,GAAI2H,UAAUE,IAAI,kBAflD,KAmBI,uBAAG7H,GAAI,KAAKQ,EAAKkmB,GAAQhmB,QAAQ,aAAa,IAAKpB,UAAU,wCAEjE,wBAAIA,UAAU,cAAcI,MAAO,CAAC4H,OAAO,WAAYC,aAAW,MAClEpH,QAAS,SAAC1B,GACN,IAAMuB,EAAG,KAAKQ,EAAKkmB,GAAQhmB,QAAQ,aAAa,IAChDjC,EAAE+I,OAAOC,aAAa,aACgB,QAAtChJ,EAAE+I,OAAOE,aAAa,cAAsB,OAAO,OAEnDkJ,EAAWpQ,EAAKkmB,IAASzjB,EAAS2N,EAAWpQ,EAAKkmB,IAASyC,EAAW1qB,EAAE+I,OAAOE,aAAa,eAC5F0gB,EAAiB,eAAIxX,IAEqB,QAAtCnS,EAAE+I,OAAOE,aAAa,eACtBR,SAASC,eAAenH,GAAI2H,UAAUC,OAAO,eAC7CV,SAASC,eAAenH,GAAI2H,UAAUE,IAAI,mBAG1CX,SAASC,eAAenH,GAAI2H,UAAUC,OAAO,iBAC7CV,SAASC,eAAenH,GAAI2H,UAAUE,IAAI,kBAflD,KAmBI,uBAAG7H,GAAI,KAAKQ,EAAKkmB,GAAQhmB,QAAQ,aAAa,IAAKpB,UAAU,0CAIzE,+BACKqrB,EAAwBnqB,IAAO,EAC3B,4BACG,wBAAIid,QAAQ,KAAZ,OACA,wBAAIA,QAAQ,KAAK/Z,EAAmBinB,EAAwBnqB,MAE/D,4BACG,wBAAIid,QAAQ,KAAZ,OACA,wBAAIA,QAAQ,KAAK/Z,GAAoBinB,EAAwBnqB,MAGpE6oB,EAAY7oB,EAAKkmB,IAASnmB,KAAI,SAACmL,EAAM5D,GAClC,OAAI4D,EAAM+a,KAAajmB,EAAKimB,IACpB,IAAIxiB,KAAKyH,EAAMJ,KAAY,IAAIrH,KAAK,IAAIA,KAAK3B,EAAI0B,MAAMM,cAAc,WACrE,IAAIL,KAAKyH,EAAMJ,KAAY,IAAIrH,KAAK3B,EAAI0B,MAGxC,wBAAIvD,IAAKqH,EAAGpI,MAAO,CAAC4H,OAAO,WAAYnH,QAAS,SAAC1B,GAAD,OAC5CyH,GAAQI,KAAK,KAAKgS,GAAW5M,EAAM4d,GAAUpR,cAAcxM,EAAM6d,OAEjE,wBAAIjqB,UAAU,eAAeyE,EAAiB2H,EAAMJ,KACpD,wBAAIhM,UAAU,eAAeoM,EAAM4d,IACnC,wBAAIhqB,UAAU,eAAeoM,EAAM6d,IACnC,wBAAIjqB,UAAU,eAAeoE,EAAmBgI,EAAMwd,KACtD,wBAAI5pB,UAAU,eAAeoE,EAAmBgI,EAAMyd,MAGtD,kBAczCxkB,EA/YcmiB,CAAgBD,EAAS5kB,EAAKonB,EAAYxiB,EAAM4jB,GAC7D,GAAIrE,EAASplB,OAAO,EAChB,OACA,6BAASP,IAAKomB,GACV,4BAAI,2BAAIA,IACHT,EACL,uBAAG9mB,UAAU,sBAAqB,2BAAI,WAAWoE,EAAmBulB,GAAuB,CAACpC,GAAU5kB,EAAK4E,EAAM4jB,UAxJrIpsB,qBAAU,WACL,GAAIsrB,IAAwD,IAA9BA,EAAuBnjB,KAC9CC,MAAM,iEACNvH,IAAW,QAGd,GAAIyqB,GAA0BA,EAAuB1nB,MAAQ0nB,EAAuB9iB,MAAO,CAC5F,IAAI4iB,EAAoB,GACpBoB,EAAsB,GACpB5oB,EAAK0nB,EAAuB1nB,KAAK,GACjC4E,EAAM8iB,EAAuB9iB,MAAM,GACnC6f,EAAO7f,EAAM,GAAGjG,KAChB8pB,EAAS7jB,EAAM,GAAGjG,KAEpB+N,EAAG,GAEP1M,EAAKgF,SAAQ,SAAAzG,GACT,IAAIgO,EAAU,IACkC,IAA7Cib,EAAoBxhB,QAAQzH,EAAKkmB,MAChC+C,EAAoBnjB,KAAK9F,EAAKkmB,IAC9BlY,EAAUhO,EAAKkmB,IAASzkB,EAAKwM,QAAO,SAAA/C,GAAK,OAAEA,EAAMgb,KAAUlmB,EAAKkmB,MAChE0B,GAAiB,SAAAxX,GAAU,OAAGlK,OAAOC,OAAO,GAAdD,OAAA,IAAAA,CAAA,GAAqBkK,GAAYpC,UAIvEvM,EAAKgF,SAAQ,SAAAzG,GACT,IAAIgO,EAAU,IACsC,IAAjDqc,EAAsB5iB,QAAQzH,EAAKkqB,KAAoC,OAAjBlqB,EAAKkqB,KAC1DG,EAAsBvkB,KAAK9F,EAAKkqB,IAChClc,EAAUhO,EAAKkqB,IAAWzoB,EAAKwM,QAAO,SAAA/C,GAAK,OAAEA,EAAMgf,KAAYlqB,EAAKkqB,MACpEtC,GAAiB,SAAAxX,GAAU,OAAGlK,OAAOC,OAAO,GAAdD,OAAA,IAAAA,CAAA,GAAqBkK,GAAYpC,UAIvEmb,EAAuB1nB,KAAK,GAAGgF,SAAQ,SAAAzG,IACmB,IAAnDmO,EAAG1G,QAAQzH,EAAKkmB,GAAQhmB,QAAQ,WAAW,KAC1CiO,EAAGrI,KAAK9F,EAAKkmB,GAAQhmB,QAAQ,WAAW,KACnCF,EAAKkqB,KAAkE,IAArD/b,EAAG1G,QAAQzH,EAAKkqB,GAAUhqB,QAAQ,WAAW,MACpEiO,EAAGrI,KAAK9F,EAAKkqB,GAAUhqB,QAAQ,WAAW,QAGlD6M,EAA2BoB,MAEjC,CAACgb,EAAuBC,IAE1BvrB,qBAAU,WACN,GAAGuS,EAAY,CACX,IAAMiW,EAAS8C,EAAuB1nB,KAAK,GAAG1B,KAAI,SAAAsmB,GAAQ,OAAEA,EAAS8C,EAAuB9iB,MAAM,GAAG,GAAGjG,SAClGypB,EAuDd,SAAuCpoB,EAAK4E,GACxC,IAAMyE,EAASzE,EAAM,GAAGjG,KAClBsoB,EAAUriB,EAAM,GAAGjG,KACnBuoB,EAAWtiB,EAAM,GAAGjG,KAE1B,OAAOqB,EAAKsJ,QAAO,SAACjI,EAAEC,GAClB,OAAI,IAAIU,KAAKV,EAAE+H,KAAY,IAAIrH,KAAK3B,EAAI0B,OACpC,IAAIC,KAAKV,EAAE+H,KAAY,IAAIrH,KAAK,IAAIA,KAAK3B,EAAI0B,MAAMM,cAAc,UAG1DhB,EAAEC,EAAE4lB,GAAY5lB,EAAE2lB,GACjB5lB,IACd,GAnE6BynB,CAA8BpB,EAAuB1nB,KAAK,GAAG0nB,EAAuB9iB,MAAM,IAC/G0jB,EAqEd,SAAmCtoB,EAAK4E,GACpC,IAAMyE,EAASzE,EAAM,GAAGjG,KAClBsoB,EAAUriB,EAAM,GAAGjG,KACnBuoB,EAAWtiB,EAAM,GAAGjG,KAE1B,OAAOqB,EAAKsJ,QAAO,SAACjI,EAAEC,GAClB,OAAI,IAAIU,KAAKV,EAAE+H,IAAW,IAAIrH,KAAK,IAAIA,KAAK3B,EAAI0B,MAAMM,cAAc,UACzDhB,EAAEC,EAAE4lB,GAAY5lB,EAAE2lB,GACjB5lB,IACd,GA9EyB0nB,CAA0BrB,EAAuB1nB,KAAK,GAAG0nB,EAAuB9iB,MAAM,IAE7GijB,EAAgBV,GAAiBvC,EAAS3e,MAAM,EAAE,GAAGyhB,EAAuB1nB,KAAK,GAAG2O,EAAW+Y,EAAuB9iB,MAAM,IAAG,IAC/HmjB,EAAqBtmB,EAAmBulB,GAAuBpC,EAAS3e,MAAM,EAAE,GAAGyhB,EAAuB1nB,KAAK,GAAG0nB,EAAuB9iB,MAAM,IAAG,KAElJqjB,EAAgBd,GAAiBvC,EAAS3e,MAAM,GAAGyhB,EAAuB1nB,KAAK,GAAG2O,EAAW+Y,EAAuB9iB,MAAM,IAAG,IAE7HyjB,EAA2B5mB,EAAmB2mB,IAC9CG,EAAuB9mB,EAAmB6mB,IAE1CH,EAAqB1mB,EAAmBulB,GAAuBpC,EAAS3e,MAAM,GAAGyhB,EAAuB1nB,KAAK,GAAG0nB,EAAuB9iB,MAAM,IAAG,GAC/IwjB,EAAqBE,OAI5B,CAAC3Z,EAAWmY,IAGd1qB,qBAAU,WAEFiP,GAAwBuc,GAAaI,GACrC3c,EAAqBrG,SAAQ,SAAA0H,GACzBC,IAAE,IAAID,GAAIE,GAAG,oBAAmB,SAAApQ,GACzBA,EAAE+I,SAAS/I,EAAEqQ,eAChBF,IAAE,aAAaD,GAAII,YAAY,kBAAkBC,SAAS,sBAE9DJ,IAAE,IAAID,GAAIE,GAAG,oBAAmB,SAAApQ,GACzBA,EAAE+I,SAAS/I,EAAEqQ,eAChBF,IAAE,aAAaD,GAAII,YAAY,mBAAmBC,SAAS,0BAMzE,CAAC6a,EAAUI,IAidb,IAAI5a,GAAa,KASjB,OARKsa,GAA0BA,EAAuBxnB,OAAUynB,KAChEva,GACI,yBAAK/P,UAAU,uBACVqqB,GAA0BA,EAAuBxnB,MAAO,8CAA8CwnB,EAAuBxnB,MAAM2E,MACnI,UAAU6iB,EAAuBxnB,MAAM4E,KAAK,aAAa4iB,EAAuBxnB,MAAM6E,WAAW,KACjG4iB,EAAyB,uCAAuCA,EAA0B,OAI/F,kBAAC,EAAD,KACI,yBAAKtqB,UAAU,oDACX,wBAAIA,UAAU,eAAegD,EAAI+kB,cACjC,wBAAI/nB,UAAU,oBAAoB,uBAAyByE,EAAiBzB,EAAI0B,OAC/EqL,GACD,yBAAK/P,UAAU,gCACX,yBAAKA,UAAU,gCACX,2BAAOA,UAAU,mBAAmBY,KAAK,WAAWF,GAAG,cAAcoH,QAAS2hB,EAC9EhhB,SAAU,SAACtJ,GACHA,EAAE+I,OAAOJ,QACT4hB,GAAkB,GACjBA,GAAkB,MAE3B,2BAAO1pB,UAAU,mBAAmB2J,QAAQ,eAA5C,kBAEJ,4BAAQ3J,UAAU,4BAClBa,QAAS,SAAC1B,GAAD,OAAK6O,EAAqBrG,SAAQ,SAAA0H,GAAE,OACzCC,IAAE,IAAID,GAAIwB,SAAS,aACpB,uBAAG7Q,UAAU,sBAHhB,WAIA,4BAAQA,UAAU,gBAClBa,QAAS,SAAC1B,GAAD,OAAK6O,EAAqBrG,SAAQ,SAAA0H,GAAE,OACzCC,IAAE,IAAID,GAAIwB,SAAS,aAFvB,IAGI,uBAAG7Q,UAAU,uBAHjB,cAKHuqB,EACD,yBAAKvqB,UAAU,mBAAmBI,MAAO,CAACiB,gBAAgB,0BACtD,uBAAGrB,UAAU,yBAAb,oBACA,uBAAGA,UAAU,0BAA0ByqB,IAG1CE,EACD,yBAAK3qB,UAAU,OACX,uBAAGA,UAAU,YAAb,mBACA,uBAAGA,UAAU,uBAAuB+qB,IAExC,yBAAK/qB,UAAU,OACX,uBAAGA,UAAU,YAAb,qBACA,uBAAGA,UAAU,uBAAuBirB,IAExC,yBAAKjrB,UAAU,mBAAmBI,MAAO,CAACiB,gBAAgB,0BACtD,uBAAGrB,UAAU,yBAAb,oBACA,uBAAGA,UAAU,0BAA0B6qB,MAO3DT,GAAiB/nB,YAAY,gBAC7B+nB,GAAiB9nB,KAAK,oBAEP8nB,U,oBC7hBAuB,GAXU,CACrB,CAACrqB,KAAK,YAAYsqB,IAAIC,IAAcC,QAAQ,CAAC3pB,GAAYjB,KAAK,GAAI6qB,OAAO,IACzE,CAACzqB,KAAK,QAAQsqB,IAAII,KAAUF,QAAQ,CAAChiB,EAAcE,EAAeC,EAAaC,EAAUC,GAAajJ,KAAK,CAACsW,EAAkBS,GAAmBiB,GAAiBW,GAAcqB,IAAiB6Q,OAAO,CAACvf,IACzM,CAAClL,KAAK,WAAWsqB,IAAIK,KAAaH,QAAQ,CAAChQ,GAAkBC,GAAeC,GAAgBC,GAAkBC,IAAqBhb,KAAK,CAAC0b,GAAsBI,GAAmBE,GAAoBI,GAAsBC,IAAyBwO,OAAO,CAAC3P,KAC7P,CAAC9a,KAAK,YAAYsqB,IAAIM,KAAcJ,QAAQ,CAAC9N,GAAqBC,IAAkB/c,KAAK,CAACie,GAAUC,IAAsB2M,OAAO,CAACnN,KAClI,CAACtd,KAAK,gBAAgBsqB,IAAIO,KAAgBL,QAAQ,CAACrM,GAAgBC,GAAYC,GAAYC,GAAYC,IAAc3e,KAAK,CAAC4e,GAASC,GAAgBU,GAAgBI,GAAgBC,IAAkBiL,OAAO,IAC7M,CAACzqB,KAAK,sBAAsBsqB,IAAIQ,KAAuBN,QAAQ,CAAC/K,IAAoB7f,KAAK,CAAC6jB,IAAagH,OAAO,CAACtK,GAAkBuB,GAAsByB,KACvJ,CAACnjB,KAAK,mBAAmBsqB,IAAIS,KAAoBP,QAAQ,CAAC9G,IAAsB9jB,KAAK,CAAC6kB,IAAegG,OAAO,CAAC9G,GAAoBQ,KACjI,CAACnkB,KAAK,iBAAiBsqB,IAAIU,KAAkBR,QAAQ,CAAC9F,GAAmB2B,GAAaC,GAAcK,IAAe/mB,KAAK,CAACgnB,GAAYS,GAAkByB,IAAmB2B,OAAO,KCpEtKQ,OA9Bf,SAAmB9tB,GAEf,IACM+tB,EAAab,GAAiB1qB,KAAI,SAAAsmB,GACpC,IAAIkF,EAAkB,GAClBC,EAAwB,GAQ5B,OANAnF,EAASuE,QAAQnkB,SAAQ,SAAAglB,GAAS,OAC9BF,EAAkBzlB,KAAK2lB,EAAUtqB,gBAErCklB,EAASwE,OAAOpkB,SAAQ,SAAAglB,GAAS,OAC7BD,EAAwB1lB,KAAK2lB,EAAUtqB,gBAGvC,kBAAC,EAAD,CAAUlB,IAAKomB,EAASjmB,KAAMA,KAAMimB,EAASjmB,KAAMC,IAAKgmB,EAASqE,IAAKnqB,OAZjE,YAaLV,MAAO0rB,EAAmBzrB,YAAa0rB,OAK/C,OACI,2BAAOhsB,GAnBE,YAmBUV,UAAW,cAAevB,EAAMyD,iBAAkB,SAAU,WAAa,wBAAyBzD,EAAMyD,iBAAkB,uCAAuC,IAAK9B,MAAO,CAAC0B,IAAI,MACjM,wBAAI9B,UAAU,kCAAkCI,MAAO,CAACiV,QAAQ,oBAAhE,cAA+F,0BAAMrV,UAAU,aAAhB,aAA4C,2BAAOA,UAAU,qBAAqBI,MAAO,CAACwsB,SAAS,QAAvD,qBAC3I,wBAAI5sB,UAAU,yBAAyBI,MAAO,CAACiV,QAAQ,oBAAvD,cAAsF,0BAAMrV,UAAU,aAAhB,aAA4C,2BAAOA,UAAU,qBAAqBI,MAAO,CAACwsB,SAAS,QAAvD,qBACjIJ,ICVEK,OAff,SAAcpuB,GACV,OACQ,yBAAKuB,UAAU,mBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,+BACX,kBAAC,EAAD,OAEJ,yBAAKA,UAAU,gCACX,kBAAC,GAAD,UCqDT8sB,OA3Df,SAAeruB,GAAQ,IAAD,EACiB8D,EAAS,MAD1B,0BACVI,EADU,EACVA,KAAKE,EADK,EACLA,MAAOH,EADF,KAEX9C,EAAYC,qBAAWL,GAAvBI,WACAiC,EAAahC,qBAAW8B,GAAxBE,UAHW,EAIcnD,mBAAS,IAJvB,mBAIXquB,EAJW,KAIFC,EAJE,OAKctuB,mBAAS,IALvB,mBAKXuuB,EALW,KAKFC,EALE,KAelB,OANAnuB,qBAAU,WACF4D,IAAoB,IAAZA,EAAKuE,MACbtH,GAAW,KAEjB,CAAC+C,EAAKE,IAGJ,6BAAS7C,UAAU,aACf,yBAAKA,UAAU,OACV6B,EACD,yBAAK7B,UAAU,gFACfI,MAAO,CAAC0B,IAAI,EAAEC,KAAK,EAAGC,OAAO,SAASX,gBAAgB,yBAClD,yBAAKrB,UAAU,eAAeI,MAAO,CAACC,MAAM,OAAOC,OAAO,SAAS,0BAAMN,UAAU,cAChF,KACP,yBAAKA,UAAU,6DACX,yBAAKA,UAAU,uBAAuBI,MAAO,CAACmV,aAAa,IACvD,wBAAIvV,UAAU,QAAd,QAEI,yBAAKE,IAAKC,IAAMI,IAAI,OAAOH,MAAO,CAACC,MAAM,OAAOC,OAAO,QAASN,UAAU,yBAE5E2C,IAAoB,IAAZA,EAAKuE,MAAerE,EAAQ,yBAAK7C,UAAU,uBAChC2C,GAAQA,EAAKE,MAAOF,EAAKE,MAAM4E,KAAK9E,EAAKE,MAAMjC,KAAO,KACtD+B,GAAQA,EAAKoG,QAASpG,EAAKoG,QAAU,KACrClG,EAAOA,EAAMvB,KAAM,IAAIuB,EAAMkG,QAAS,MACvC,KAEpB,0BAAMoH,SAAU,SAAChR,GAAKA,EAAEiR,iBAAiB1N,EAAY,CACjDM,IAAI,aACJE,KAAK,CACDoC,OAAO,OACPC,QAAQ,CAAC,eAAe,oBACxBC,KAAKC,KAAKC,UAAU,CAACqnB,SAASA,EAASE,SAASA,IAChDtnB,YAAY,eAIhB,2BAAOgE,QAAQ,YAAf,aACA,2BAAO/I,KAAK,OAAOF,GAAG,WAAWqH,MAAOglB,EAAUtkB,SAAU,SAACtJ,GAAD,OAAK6tB,EAAe7tB,EAAE+I,OAAOH,QAAQsI,UAAQ,EAACrQ,UAAU,iBACpH,2BAAO2J,QAAQ,YAAf,aACA,2BAAO/I,KAAK,WAAWF,GAAG,WAAWqH,MAAOklB,EAAUxkB,SAAU,SAACtJ,GAAD,OAAK+tB,EAAe/tB,EAAE+I,OAAOH,QAAQsI,UAAQ,EAACrQ,UAAU,iBACxH,4BAAQY,KAAK,SAASZ,UAAU,wBAAhC,gBCabmtB,OAtDf,WAAe,MAEazuB,oBAAS,GAFtB,mBAEJwI,EAFI,KAECtH,EAFD,OAKuBlB,oBAAS,GALhC,mBAKJmD,EALI,KAKMkB,EALN,KAQPqqB,EAAU,GAoBd,OAnBAzB,GAAiBhkB,SAAQ,SAAA4f,GACrBA,EAASuE,QAAQnkB,SAAQ,SAAAglB,GAAS,OAC1BS,EAAUpmB,KACT,kBAAC,IAAD,CAAO7F,IAAKwrB,EAAUrqB,KAAMA,KAAMqqB,EAAUrqB,KAAMqqB,UAAWA,QAGtEpF,EAASrmB,KAAKyG,SAAQ,SAAAglB,GAAS,OACvBS,EAAUpmB,KACT,kBAAC,IAAD,CAAO7F,IAAKwrB,EAAUrqB,KAAMA,KAAMqqB,EAAUrqB,KAAMqqB,UAAWA,QAGtEpF,EAASwE,OAAOpkB,SAAQ,SAAAglB,GAAS,OACzBS,EAAUpmB,KACT,kBAAC,IAAD,CAAO7F,IAAKwrB,EAAUrqB,KAAMA,KAAMqqB,EAAUrqB,KAAMqqB,UAAWA,WAO1E,kBAAC,IAAD,KAEI,kBAAC,EAAYU,SAAb,CAAsBtlB,MAAO,CAACb,OAAKtH,eACnC,kBAAC,EAAiBytB,SAAlB,CAA2BtlB,MAAO,CAAClG,YAAUkB,oBACzC,kBAAC,EAAD,CAAOxD,OAAQ,SAAAV,GACX,OACI,kBAAC,IAAD,KAEKqI,EAAK,KACN,kBAAC,IAAD,CAAO5E,KAAK,UACR,kBAAC,GAAD,OAEH4E,EAAK,KAAK,kBAAC,IAAD,CAAUjH,GAAG,WAEvBmtB,EACAvuB,EAAgB,kBAAC,IAAD,CAAOyD,KAAK,IAAI/C,OAAQstB,KAAU,kBAAC,IAAD,CAAU5sB,GAAG,uB,kBCnDxFqtB,IAAS/tB,OAAO,kBAAC,GAAD,MAAQqI,SAASC,eAAe,W","file":"static/js/main.0d2634ba.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/accounting.6c69fc79.svg\";","module.exports = __webpack_public_path__ + \"static/media/030-presentation.9ad5731f.svg\";","module.exports = __webpack_public_path__ + \"static/media/006-call.9c57f732.svg\";","module.exports = __webpack_public_path__ + \"static/media/009-conversation.ffa9f5dd.svg\";","module.exports = __webpack_public_path__ + \"static/media/020-folders.f1018bc0.svg\";","module.exports = __webpack_public_path__ + \"static/media/027-money.dbb6986e.svg\";","module.exports = __webpack_public_path__ + \"static/media/011-calendar.870b8a62.svg\";","module.exports = __webpack_public_path__ + \"static/media/017-send.af12eb54.svg\";","module.exports = __webpack_public_path__ + \"static/media/015-contact.b34b750a.svg\";","import {useEffect,useState} from 'react';\r\n\r\n/*Media component for setting screenIsSmall state during initial mounting and also attach matchMedia listener that fires when screen width \r\n<768px or >768px and changes state when that happens. */\r\n\r\nfunction Media (props) {\r\n    const [screenIsSmall,changeMedia]=useState(window.innerWidth<768? true:false)\r\n\r\n    useEffect(()=>{\r\n        \r\n        const x=window.matchMedia('(max-width: 768px)');\r\n        const handler=(e)=>{\r\n            if (e.matches) changeMedia(true) \r\n            else changeMedia(false)\r\n        }\r\n        x.addListener((e)=>handler(e))\r\n            \r\n        \r\n        return x.removeListener((e)=>handler(e))\r\n    },[])\r\n    \r\n    return props.render(screenIsSmall);\r\n}\r\nexport default Media;","import React from 'react';\r\n\r\nconst authContext=React.createContext();\r\n\r\nexport default authContext;","import React,{useContext} from 'react';\r\nimport logo from './accounting.svg';\r\nimport authContext from './authContext';\r\nimport {Link} from 'react-router-dom'\r\n\r\nfunction Navbar(props) {\r\n    const {changeAuth} = useContext(authContext);\r\n    let modify=' navbar-light bg-light';\r\n    if (props.theme==='dark') \r\n      modify=' navbar-dark bg-dark'\r\n\r\n    return (\r\n    <nav className={'navbar navbar-expand-md'+modify}>\r\n      <Link className='navbar-brand' to='/'>\r\n        <img src={logo} style={{width:'35px',height:'35px'}} alt='logo' className='d-inline-block' />\r\n        ProtoCount\r\n      </Link>\r\n      <button className='navbar-toggler' data-toggle='collapse' data-target='#navbarText'>\r\n        <span className='navbar-toggler-icon'></span>\r\n      </button>\r\n      <div className='collapse navbar-collapse' id='navbarText'>\r\n        <ul className='navbar-nav mr-auto'>\r\n          <li className='nav-item dropdown'>\r\n            <a href='#' className='nav-link dropdown-toggle' data-toggle='dropdown'>File</a>\r\n            <div className='dropdown-menu'>\r\n              <a href='#' className='dropdown-item'>Exit and Logout</a>\r\n            </div>\r\n          </li>\r\n          <li className='nav-item dropdown'>\r\n            <a href='#' className='nav-link dropdown-toggle' data-toggle='dropdown'>General Maintenance</a>\r\n            <div className='dropdown-menu'>\r\n              <a href='#' className='dropdown-item'>Company Profile</a>\r\n              <a href='#' className='dropdown-item'>User Maintenance</a>\r\n              <div className='dropdown-divider'></div>\r\n              <a href='#' className='dropdown-item'>Credit Term Maintenance</a>\r\n              <a href='#' className='dropdown-item'>Currency Maintenance</a>\r\n            </div>\r\n          </li>\r\n          <li className='nav-item dropdown'>\r\n            <a href='#' className='nav-link dropdown-toggle' data-toggle='dropdown'>Tools</a>\r\n            <div className='dropdown-menu'>\r\n              <a href='#' className='dropdown-item'>Backup</a>\r\n              <a href='#' className='dropdown-item'>Restore</a>\r\n            </div>\r\n          </li>\r\n          <li className='nav-item dropdown'>\r\n            <a href='#' className='nav-link dropdown-toggle' data-toggle='dropdown'>Help</a>\r\n            <div className='dropdown-menu'>\r\n              <a href='#' className='dropdown-item'>About ProtoCount Accounting</a>\r\n            </div>\r\n          </li>\r\n          \r\n          \r\n        </ul>\r\n        <button type='button' className='btn btn-dark' onClick={()=>changeAuth(false)}>Log Out</button>\r\n      </div>\r\n      \r\n    </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom'\r\n\r\nfunction SubPanel (props) {\r\n    let items;\r\n    let reportItems;\r\n    \r\n    items = props.items.map(item=> (\r\n        <Link className='list-group-item list-group-item-action list-group-item-dark' key={item} to={item.replace(/[ _]/g,'')}>{item}</Link>\r\n    ))\r\n    reportItems = props.reportItems.map(item=>(\r\n        <Link className='list-group-item list-group-item-action list-group-item-dark' key={item} to={item.replace(/[ _]/g,'')}>{item}</Link>\r\n    ))\r\n\r\n    return (\r\n    <div className='card border-0 bg-dark text-light rounded-0'>\r\n        <div className='card-header' style={{backgroundColor:'rgba(0,0,0,0)'}}>\r\n            <a href={'#'+props.name.replace(/[ ]/g,'-')/*replace nonalphanumeric strings for links to work*/} data-toggle='collapse' className='text-decoration-none text-reset'>\r\n                <h6>\r\n                    {props.name}<img src={props.img} className='ml-3' style={{width:'25px'}} alt={props.name}/>\r\n                </h6>\r\n            </a>\r\n        </div>\r\n        \r\n        <div className='list-group list-group-flush collapse' id={props.name.replace(/[ ]/g,'-')/*replace nonalphanumeric strings for links to work*/ } data-parent={\"#\"+props.parent}>\r\n            {items}\r\n            {reportItems.length>0? \r\n                (<a href={'#'+props.name.replace(/[ ]/g,'-')+'-report'} data-toggle='collapse' className='list-group-item bg-secondary text-decoration-none text-reset'>\r\n                    <h6>Report</h6>\r\n                </a>) : null\r\n            }\r\n            <div className='list-group collapse' id={props.name.replace(/[ ]/g,'-')+'-report'}>\r\n                {reportItems}\r\n            </div>\r\n        </div>\r\n        \r\n        \r\n    </div>\r\n    \r\n    )\r\n}\r\n\r\nexport default SubPanel","import React from 'react';\r\n\r\nconst isLoadingContext=React.createContext();\r\n\r\nexport default isLoadingContext;","import React,{useContext} from 'react';\r\nimport Navbar from './Navbar';\r\nimport SidePanel from './SidePanel';\r\nimport isLoadingContext from './isLoadingContext'\r\n\r\nfunction AppLayout(props) {\r\n    const {isLoading} = useContext(isLoadingContext);\r\n\r\n    return (\r\n            <div className='container-fluid'>\r\n                <div className='row'>\r\n                    {isLoading?\r\n                    <div className='position-fixed d-flex justify-content-center align-items-center vh-100 vw-100' \r\n                    style={{top:0,left:0,zIndex:'100000',backgroundColor:'rgba(255,255,255,0.6'}}>\r\n                        <div className='spinner-grow' style={{width:'4rem',height:'4rem'}}><span className='sr-only'></span></div>\r\n                    </div>:null}\r\n                    <div className='col-md-9 order-md-last px-0'>\r\n                        <Navbar/>\r\n                        \r\n                        <div>{props.children}</div>\r\n                        \r\n                    </div>\r\n                    <div className='col-md-3 order-md-first px-0 d-print-none' >\r\n                        <SidePanel largeScreenStyle={true}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default AppLayout;","import React from 'react';\r\nimport AppLayout from '../Shared/AppLayout';\r\nimport logo from '../Shared/accounting.svg';\r\n\r\nfunction Dashboard(props) {\r\n    return (\r\n            <AppLayout>\r\n                <div className='container' >\r\n                    \r\n                    <div className='row flex-column align-items-center justify-content-center' style={{height:'80vh'}}>\r\n                        <div >\r\n                            <img src={logo} alt='logo' style={{maxWidth:'50%'}} className='d-block mx-auto' />\r\n                        </div>\r\n                        \r\n                        <h1 className='text-center d-none d-md-block'>ProtoCount Accounting Software</h1>\r\n                        <h3 className='text-center d-md-none'>ProtoCount Accounting Software</h3>\r\n                        <p className='lead text-info text-center m-0'>Fully functional accounting app.</p>\r\n                        <p className='lead text-info text-center m-0'>Blazing Fast with Client-Side routing.</p>\r\n                        <p className='lead text-info text-center m-0'>Functionality easily extended.</p>\r\n                        <p className='lead text-info text-center m-0'>Responsive interface (incl. Mobile).</p>\r\n                    </div>\r\n                    \r\n                    \r\n\r\n                </div>\r\n            </AppLayout>\r\n    )\r\n}\r\n\r\nDashboard.description='Dashboard';\r\nDashboard.path='/Dashboard';\r\n\r\nexport default Dashboard;","import {useState,useEffect,useContext} from 'react'\r\nimport isLoadingContext from './isLoadingContext'\r\n\r\n/*a generic fetch hook for fetching all types of data. All known ERRORS occuring in APP, ExpressJS server and DB is handled and stored in \r\ndata and error state below.  Handle the data and error response in the originating component itself. */\r\nfunction useFetch(fetchParam) {\r\n    const [param,changeParam]=useState(fetchParam);\r\n    const [data,changeData] = useState(null);\r\n    const [error,changeError]=useState(null);\r\n    const {isLoading,changeIsLoading} = useContext(isLoadingContext);\r\n    \r\n\r\n    \r\n    useEffect(()=>{\r\n        if(param && param.url) {\r\n            changeIsLoading(true)\r\n            fetch(param.url,param.init).then(\r\n                (response)=>{\r\n                    if (!response.ok) {\r\n                        //http error will be caught below in catch()\r\n                        throw new Error('HTTP Error, status code = '+response.status + ',status = '+response.statusText)\r\n                    } else {\r\n                        //make sure all ExpressJS response is in object(application/json) and not text or any other format\r\n                        return response.json();\r\n                    }\r\n                }\r\n            ).then(\r\n                response=>{\r\n                    changeData(response);//DB related errors will be included in the response as response.error\r\n                    \r\n                    changeError(null)/* ***data and error state is mutually exclusive, reset the error state to null when resolved because\r\n                    useFetch can be used multiple times within a component for different url and usage*/\r\n                    changeIsLoading(false)\r\n                }\r\n            ).catch(\r\n                \r\n                /*catch for 1) network error (as per fetch API spec which will resolve as reject) such as unresolved URL and\r\n                ExpressJS server instance failure(can be caused by Async error in ExpressJS not caught by default error handlers in ExpressJS)\r\n                2) above HTTP status errors. This will include synchronous errors caught and handled by default error handler in ExpressJS \r\n                (response status set to 500) and 3)catch all for internal logic error within fetch promise chain.\r\n                DOESN'T INCLUDE DB RETURNED ERRORS-this is included in data above. */\r\n                error=>{\r\n                    changeError(error);\r\n                    changeData(null)//reset data state to null when error happen. See above for reason***. \r\n                    changeIsLoading(false)\r\n                }\r\n            )\r\n            }\r\n    },[param])\r\n\r\nreturn [{data,error},changeParam];\r\n}\r\n\r\nexport default useFetch;","function sortData(data,property,order) {\r\n    let sort_order = 1;\r\n    if(order === \"desc\") \r\n        sort_order = -1;\r\n    \r\n    return [...data].sort((a,b)=>\r\n        sort_order*(a[property]+'').localeCompare((b[property]+''),'en',{numeric:true})\r\n   )\r\n}\r\n\r\n/*\r\nfunction sortDate(data,property,order) {\r\n    let sort_order = 1;\r\n    if(order === \"desc\") \r\n        sort_order = -1;\r\n\r\n    return [...data].sort((a, b)=>{\r\n        if(Date(a[property]) < Date(b[property]))\r\n                return -1 * sort_order;\r\n        \r\n        else if( Date(a[property]) > Date(b[property]))\r\n                return 1 * sort_order;\r\n        \r\n        else\r\n                return 0 * sort_order;\r\n        \r\n    })\r\n}\r\n*/\r\n\r\n\r\n\r\nexport default sortData;\r\n\r\n\r\n","function numberFormatParser(num){\r\n  if(num)\r\n    return ('' + num).replace(\r\n      /(\\d)(?=(?:\\d{3})+(?:\\.|$))|(\\.\\d\\d?)\\d*$/g, \r\n      function(m, s1, s2){\r\n        return s2 || (s1 + ',');\r\n      }\r\n    )\r\n    else return '';\r\n  }\r\n\r\n  export default numberFormatParser;\r\n\r\n","function dateFormatParser(date){\r\n    if (date) {\r\n        date=new Date(date)\r\n        const month = Number(date.getMonth()) + 1 <10 ? \r\n        '0'+ (Number(date.getMonth()) + 1) : Number(date.getMonth()) + 1; \r\n                   \r\n        const day = date.getDate() < 10? \r\n        '0' + date.getDate() : date.getDate();\r\n        const year = date.getFullYear();\r\n        return day+'-'+month+'-'+year;\r\n    }\r\n    else return '';\r\n}\r\n  \r\n    export default dateFormatParser;\r\n  \r\n  ","import React,{useState,useEffect,useContext} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport useFetch from './useFetch'\r\nimport authContext from './authContext';\r\nimport sortData from './sort';\r\nimport numberFormatParser from '../Shared/numberFormatParser';\r\nimport dateFormatParser from '../Shared/dateFormatParser';\r\n\r\n\r\n\r\nfunction Process(props) {\r\n    /*this is a reusable component for all process components (i.e. StockItemMaintenance.js,DeliveryOrder.js). Contains state logic \r\n    for fetching DB select data usinguseFetch hook) and filtering the fetched data*/\r\n        const [{data:dataSelect,error:errorSelect},changeParamSelect]=useFetch({\r\n            url:'./SelectItem',\r\n            init:{\r\n                method:'POST',\r\n                headers:{'Content-Type':'application/json'},\r\n                body:JSON.stringify({item:props.item}),\r\n                credentials:'include'\r\n                }\r\n            });\r\n        const [{data:dataDelete,error:errorDelete},changeParamDelete]=useFetch(null);\r\n        const [filteredData,changeFilteredData] = useState(null)\r\n        const {changeAuth} = useContext(authContext);\r\n        const [search,changeSearch] = useState('');\r\n        const [searchCriteria,changeSearchCriteria] = useState('');\r\n        const [itemsToBeDeleted,changeItemsToBeDeleted] = useState([]);\r\n        const [errorDeleteDisplay,changeErrorDeleteDisplay] = useState(null);\r\n        \r\n        const history=useHistory();\r\n        /*hardcoded 'NUM' instead of using field position because positions might be diff for each process*/\r\n        const docNum='NUM'\r\n        \r\n    //sanitize and filter initial DB dataSelect.data and dataSelect.field returned from fetch\r\n    useEffect(()=>{\r\n        if (dataSelect && dataSelect.auth===false) {\r\n                alert('Cookies Expired or Authorisation invalid. Please Login again!')\r\n                changeAuth(false)\r\n            }\r\n        else if (dataSelect)\r\n            changeFilteredData({\r\n                data:dataSelect.data? dataSelect.data.map(data=>Object.assign({},data,{selected:true})):null,\r\n                field: dataSelect.field? dataSelect.field.map(field=>field.name):null,\r\n                error:dataSelect.error\r\n            })\r\n        \r\n        },[dataSelect,errorSelect])\r\n    \r\n    useEffect(()=>{\r\n        if (dataDelete && dataDelete.auth===false) {\r\n            alert('Cookies Expired or Authorisation invalid. Please Login again!');\r\n            changeAuth(false);\r\n        }\r\n        else if (dataDelete && !dataDelete.error && !errorDelete) {\r\n            alert('Delete Successful!');\r\n            changeErrorDeleteDisplay(null)\r\n            changeItemsToBeDeleted([]);\r\n            filteredData.data.forEach(data=>{\r\n                document.getElementById(data[docNum]).checked=false;\r\n            });\r\n            document.getElementById('mainCheckBox').checked=false;\r\n            changeParamSelect({\r\n                url:'./SelectItem',\r\n                init:{\r\n                    method:'POST',\r\n                    headers:{'Content-Type':'application/json'},\r\n                    body:JSON.stringify({item:props.item}),\r\n                    credentials:'include'\r\n                    }\r\n                })\r\n        }\r\n        else if ((dataDelete && dataDelete.error) || errorDelete) {\r\n            changeErrorDeleteDisplay(\r\n                (<div className=\"alert alert-warning\">\r\n                    {dataDelete && dataDelete.error? 'DELETE failed errno: '+dataDelete.error.errno+' code: '\r\n                     +dataDelete.error.code+' message: '+dataDelete.error.sqlMessage:null}\r\n                    {errorDelete? 'DELETE failed: '+errorDelete : null} \r\n                </div>)\r\n            )\r\n            \r\n        }\r\n    },[dataDelete,errorDelete])\r\n\r\n    function searchCriteriaChange(e) {\r\n        changeSearchCriteria(e.target.value);\r\n    }\r\n    function searchChange(e) {\r\n        if (filteredData && filteredData.data) {\r\n        const newData=filteredData.data.map(data=>{\r\n            if (e.target.value!=='') {\r\n                if (new RegExp(e.target.value,'g').test(data[searchCriteria])) {\r\n                    return Object.assign({},data,{selected:true})\r\n                }\r\n                else {\r\n                    return Object.assign({},data,{selected:false})\r\n                } \r\n            } else return Object.assign({},data,{selected:true})\r\n        })\r\n        changeFilteredData({\r\n            data:newData,\r\n            field:filteredData.field,\r\n            error:filteredData.error\r\n        });\r\n        }\r\n        changeSearch(e.target.value);\r\n    }\r\n    \r\n    function refresh() {\r\n        changeErrorDeleteDisplay(null);\r\n        changeItemsToBeDeleted([]);\r\n            filteredData.data.forEach(data=>{\r\n                document.getElementById(data[docNum]).checked=false;\r\n            });\r\n        document.getElementById('mainCheckBox').checked=false;\r\n        changeParamSelect({\r\n            url:'./SelectItem',\r\n            init:{\r\n                method:'POST',\r\n                headers:{'Content-Type':'application/json'},\r\n                body:JSON.stringify({item:props.item}),\r\n                credentials:'include'\r\n                }\r\n            })\r\n        }\r\n\r\n    function deleteList() {\r\n        if(window.confirm('Confirm Delete?'))  \r\n        changeParamDelete({\r\n            url:'./DeleteItem',\r\n            init:{\r\n                method:'POST',\r\n                headers:{'Content-Type':'application/json'},\r\n                body:JSON.stringify({\r\n                    item:props.item,\r\n                    id:itemsToBeDeleted\r\n                }),\r\n                credentials:'include'\r\n            }\r\n        })\r\n    \r\n    }\r\n    \r\n    function onItemClick(data){\r\n        if(data)   \r\n            history.push('./'+props.createItemPath+'?item='+props.item+'&id='+data[docNum])\r\n        else \r\n            history.push('./'+props.createItemPath)\r\n    }\r\n\r\n        let searchCriteriaList;\r\n        let fieldList;\r\n        let dataList;\r\n        let result;\r\n        if (filteredData && filteredData.field) {\r\n            searchCriteriaList=filteredData.field.map(field=>(\r\n                <option key={field} value={field}>{field.replace(/_/g,' ')}</option>\r\n                )\r\n            )\r\n            fieldList=filteredData.field.map(field=>(\r\n                <th key={field} style={{cursor:'pointer'}} className='text-nowrap' data-order='asc'\r\n                onClick={(e)=>{\r\n                    e.target.setAttribute('data-order',e.target.getAttribute('data-order')==='asc'?'desc':'asc')\r\n                    changeFilteredData({...filteredData,\r\n                        data:sortData(filteredData.data,field,e.target.getAttribute('data-order'))\r\n                    })\r\n\r\n                    if (e.target.getAttribute('data-order')==='asc') {\r\n                        document.getElementById(field.replace(/_/g,' ')).classList.remove('fa-caret-up');\r\n                        document.getElementById(field.replace(/_/g,' ')).classList.add('fa-caret-down')\r\n                    }\r\n                    else {\r\n                        document.getElementById(field.replace(/_/g,' ')).classList.remove('fa-caret-down');\r\n                        document.getElementById(field.replace(/_/g,' ')).classList.add('fa-caret-up')\r\n                    }\r\n                        \r\n                    }}>\r\n                    {field.replace(/_/g,' ')}<i id={field.replace(/_/g,' ')} className='fa fa-caret-down ml-2'></i>\r\n                </th>\r\n            ))\r\n        }\r\n        \r\n\r\n        if (filteredData && filteredData.data) {\r\n        dataList=filteredData.data.map((data,i)=>{\r\n            if(data.selected) {\r\n                return (\r\n                    <tr key={data[docNum]}>\r\n                        <td className='align-baseline py-2'>\r\n                            <input type='checkbox' id={data[docNum]} onChange={(e)=>{\r\n                                const targetPosition = itemsToBeDeleted.indexOf(data[docNum])\r\n                                if (e.target.checked) \r\n                                    changeItemsToBeDeleted(\r\n                                        [...itemsToBeDeleted,data[docNum]]\r\n                                    )\r\n                                else {\r\n                                    if(targetPosition!==-1) \r\n                                        changeItemsToBeDeleted(\r\n                                            [...itemsToBeDeleted.slice(0,targetPosition),\r\n                                                ...itemsToBeDeleted.slice(targetPosition+1)])\r\n                                }\r\n                            }}/>\r\n                            \r\n                        </td>\r\n                        <td className='align-baseline py-2'>\r\n                            <button className='btn btn-dark btn-sm' \r\n                                onClick={()=>/*closure in effect here*/onItemClick(data)}>\r\n                                VIEW\r\n                            </button>\r\n                        </td>\r\n                        {filteredData && filteredData.field? filteredData.field.map(field=>{\r\n                            {/*use Math.random cos filteredData.data[field] might have repeated null values or same cell value in same tr \r\n                            and hence duplicate keys*/}\r\n                            return (<td className='text-nowrap align-baseline py-2' key={Math.random()}>\r\n                                {field.indexOf('DATE')!==-1? \r\n                                    dateFormatParser(data[field]):\r\n                                        typeof data[field]==='number'? numberFormatParser(data[field]):data[field]}\r\n                                    \r\n                                </td>)\r\n                        }):null}\r\n                    </tr>)\r\n                    }\r\n                    \r\n                return null;\r\n            });\r\n        }\r\n        \r\n        \r\n        if (filteredData && !filteredData.error && !errorSelect) \r\n            result=\r\n            (\r\n            <div className='overflow-auto'style={{maxHeight:'50vh'}}>\r\n                <table id='table' className='table table-bordered table-hover' >\r\n                        <thead>\r\n                            <tr>\r\n                                <th className='text-nowrap'><input type='checkbox' id='mainCheckBox' onChange={(e)=>{\r\n                                    if (e.target.checked) {\r\n                                        let array=[]\r\n                                        filteredData.data.forEach(data=>{\r\n                                            document.getElementById(data[docNum]).checked=true;\r\n                                            array.push(data[docNum])\r\n                                        })\r\n                                        changeItemsToBeDeleted(array)\r\n                                    }\r\n                                    else {\r\n                                        filteredData.data.forEach(data=>{\r\n                                            document.getElementById(data[docNum]).checked=false;\r\n                                        })\r\n                                        changeItemsToBeDeleted([]);\r\n                                    }\r\n                                    \r\n                                }}/></th>\r\n                                <th></th>\r\n                                {fieldList}\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {dataList}\r\n                        </tbody>\r\n                    </table>\r\n                    </div>)\r\n        \r\n        else if ((filteredData && filteredData.error) || errorSelect) \r\n                result= (<div className=\"alert alert-warning\">\r\n                            {filteredData && filteredData.error? '<DATABASE ERROR> errno: '+filteredData.error.errno+' code: '\r\n                            +filteredData.error.code+' message: '+filteredData.error.sqlMessage:null}\r\n                            {errorSelect? 'OTHER ERROR '+errorSelect.name+' '+errorSelect.message:null}\r\n                        </div>)\r\n        \r\n        else result=null;\r\n        \r\n\r\n        return props.render({searchCriteriaList,result,onItemClick,refresh,search,searchChange,\r\n            searchCriteria,searchCriteriaChange,deleteList,errorDeleteDisplay,itemsToBeDeleted})\r\n}\r\n\r\nexport default Process;","import React from 'react';\r\n\r\nfunction ProcessLayout(props) {\r\n    return (\r\n                <div className='container py-2'>\r\n                    <h3>{props.description}</h3>\r\n                    <button className='btn btn-primary mr-3' onClick={()=>props.onItemClick()}>Create New Item</button>\r\n                    <form className='form-inline my-3'>\r\n                            <label htmlFor='search'>Find Item</label>\r\n                            <input type='text' onChange={(e)=>props.searchChange(e)} id='search' placeholder='Search...' className='form-control mx-sm-3' value={props.search}/>\r\n                            <label htmlFor='search-criteria' className='mt-2 mt-md-0'>Search Criteria</label>\r\n                            <select className='form-control mx-sm-3' value={props.searchCriteria} onChange={props.searchCriteriaChange}>\r\n                                <option value=''> -select an option- </option>\r\n                                {props.searchCriteriaList}\r\n                            </select>\r\n                            <small className='text-muted form-text mt-3 mt-md-0'>Search is CASE SENSITIVE</small>\r\n                    </form>\r\n                    <h5>{'List of '+props.listname}\r\n                    </h5>\r\n                    <div className='mb-3'>\r\n                        <button className='btn btn-outline-info mr-2' onClick={props.refresh}>Refresh</button>\r\n                        <button className='btn btn-danger' onClick={(e)=>{\r\n                        if(!props.itemsToBeDeleted.length)\r\n                            alert('No items selected!')\r\n                        else \r\n                            props.deleteList()\r\n                        }}>Delete\r\n                        </button>\r\n                    </div>\r\n                    \r\n                    {props.errorDeleteDisplay}\r\n                    {props.result}\r\n                </div>\r\n    )\r\n}\r\n\r\nexport default ProcessLayout;","import React from 'react';\r\nimport AppLayout from '../Shared/AppLayout';\r\nimport Process from '../Shared/Process';\r\nimport ProcessLayout from '../Shared/ProcessLayout';\r\n\r\nfunction DeliveryOrder(props) {\r\n    return (\r\n            <AppLayout>\r\n                <Process createItemPath='./DeliveryOrderItem' item='delivery_order'\r\n                render={(list)=>{\r\n                    return (\r\n                    <ProcessLayout description={DeliveryOrder.description} listname={DeliveryOrder.description} {...list}/>\r\n                    )}\r\n                }/>\r\n            </AppLayout>\r\n    )\r\n}\r\n                \r\n            \r\n\r\nDeliveryOrder.description='Delivery Order';\r\nDeliveryOrder.path='/DeliveryOrder';\r\n\r\nexport default DeliveryOrder;","import React from 'react';\r\nimport AppLayout from '../Shared/AppLayout';\r\nimport Process from '../Shared/Process';\r\nimport ProcessLayout from '../Shared/ProcessLayout';\r\n\r\nfunction DeliveryReturn(props) {\r\n    return (\r\n            <AppLayout>\r\n                <Process createItemPath='./DeliveryReturnItem' item='delivery_return'\r\n                render={(list)=>{\r\n                    return (\r\n                    <ProcessLayout description={DeliveryReturn.description} listname={DeliveryReturn.description} {...list}/>\r\n                    )}\r\n                }/>\r\n            </AppLayout>\r\n    )\r\n}\r\n                \r\n            \r\n\r\nDeliveryReturn.description='Delivery Return';\r\nDeliveryReturn.path='/DeliveryReturn';\r\n\r\nexport default DeliveryReturn;","import React from 'react';\r\nimport AppLayout from '../Shared/AppLayout';\r\nimport Process from '../Shared/Process';\r\nimport ProcessLayout from '../Shared/ProcessLayout';\r\n\r\nfunction SalesInvoice(props) {\r\n    return (\r\n            <AppLayout>\r\n                <Process createItemPath='./SalesInvoiceItem' item='sales_invoice'\r\n                render={(list)=>{\r\n                    return (\r\n                    <ProcessLayout description={SalesInvoice.description} listname={SalesInvoice.description} {...list}/>\r\n                    )}\r\n                }/>\r\n            </AppLayout>\r\n    )\r\n}\r\n                \r\n            \r\n\r\nSalesInvoice.description='Sales Invoice';\r\nSalesInvoice.path='/SalesInvoice';\r\n\r\nexport default SalesInvoice;","import React from 'react';\r\nimport AppLayout from '../Shared/AppLayout';\r\nimport Process from '../Shared/Process';\r\nimport ProcessLayout from '../Shared/ProcessLayout';\r\n\r\nfunction DebitNote(props) {\r\n    return (\r\n            <AppLayout>\r\n                <Process createItemPath='./DebitNoteItem' item='debit_note'\r\n                render={(list)=>{\r\n                    return (\r\n                    <ProcessLayout description={DebitNote.description} listname={DebitNote.description} {...list}/>\r\n                    )}\r\n                }/>\r\n            </AppLayout>\r\n    )\r\n}\r\n                \r\n            \r\n\r\nDebitNote.description='Debit Note';\r\nDebitNote.path='/DebitNote';\r\n\r\nexport default DebitNote;","import React from 'react';\r\nimport AppLayout from '../Shared/AppLayout';\r\nimport Process from '../Shared/Process';\r\nimport ProcessLayout from '../Shared/ProcessLayout';\r\n\r\nfunction CreditNote(props) {\r\n    return (\r\n            <AppLayout>\r\n                <Process createItemPath='./CreditNoteItem' item='credit_note'\r\n                render={(list)=>{\r\n                    return (\r\n                    <ProcessLayout description={CreditNote.description} listname={CreditNote.description} {...list}/>\r\n                    )}\r\n                }/>\r\n            </AppLayout>\r\n    )\r\n}\r\n                \r\n            \r\n\r\nCreditNote.description='Credit Note';\r\nCreditNote.path='/CreditNote';\r\n\r\nexport default CreditNote;","function setPageSize(cssPageSize) {\r\n    if (document.getElementById('pageStyle')) \r\n        document.getElementById('pageStyle').innerHTML = `@media print {@page {size: ${cssPageSize}}}`;\r\n\r\n    else {\r\n        const style = document.createElement('style')\r\n        style.setAttribute('id','pageStyle');\r\n        document.head.appendChild(style);\r\n        document.getElementById('pageStyle').innerHTML = `@media print {@page {size: ${cssPageSize}}}`;\r\n    }\r\n    \r\n}\r\n\r\nexport default setPageSize;","import React from 'react';\r\nimport numberFormatParser from '../numberFormatParser';\r\nimport dateFormatParser from '../dateFormatParser';\r\nimport {useHistory} from 'react-router-dom';\r\nimport setPageSize from '../setPageSize';\r\n\r\n/*Layout for Sales Report*/\r\n\r\nfunction SalesReportOne(props) {\r\n    const history=useHistory();\r\n\r\n    function populateMonthsHeader() {\r\n        const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n            \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n        ];\r\n        const result=[]\r\n        \r\n        const parsedDateStart=new Date(new Date(props.resultInput.dateStart).getFullYear(),new Date(props.resultInput.dateStart).getMonth(),new Date(props.resultInput.dateStart).getDate(),0)\r\n        const parsedDateEnd=new Date(new Date(props.resultInput.dateEnd).getFullYear(),new Date(props.resultInput.dateEnd).getMonth(),new Date(props.resultInput.dateEnd).getDate(),0)\r\n        \r\n        if (parsedDateEnd<=new Date(new Date(parsedDateStart).getFullYear(),(new Date(parsedDateStart).getMonth())+1,0)) {\r\n            if (props.resultInput['groupOne']==='itemCode' || (props.resultInput['groupOne']==='debtorCode' && props.resultInput['groupTwo']==='itemCode' && props.withDetails))\r\n            result.push(<th key={monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()+' Qty'}\r\n            className='align-top'>\r\n                {monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()+' Qty'}\r\n            </th>)\r\n\r\n            result.push(<th key={props.resultInput['groupOne']==='itemCode' || (props.resultInput['groupOne']==='debtorCode' && props.resultInput['groupTwo']==='itemCode' && props.withDetails)?\r\n            monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()+' Total'\r\n            :monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()}\r\n            className='align-top'>\r\n                {props.resultInput['groupOne']==='itemCode' || (props.resultInput['groupOne']==='debtorCode' && props.resultInput['groupTwo']==='itemCode' && props.withDetails)? \r\n                monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()+' Total'\r\n                :monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()}\r\n            </th>)\r\n        }\r\n        else {\r\n            let date=new Date(parsedDateStart)\r\n            if (props.resultInput['groupOne']==='itemCode' || (props.resultInput['groupOne']==='debtorCode' && props.resultInput['groupTwo']==='itemCode' && props.withDetails))\r\n            result.push(<th key={monthNames[parsedDateStart.getMonth()]+' '+parsedDateStart.getFullYear()+' Qty'}\r\n            className='align-top'>\r\n                {monthNames[parsedDateStart.getMonth()]+' '+parsedDateStart.getFullYear()+' Qty'}\r\n            </th>)\r\n\r\n            result.push(<th key={props.resultInput['groupOne']==='itemCode' || (props.resultInput['groupOne']==='debtorCode' && props.resultInput['groupTwo']==='itemCode' && props.withDetails)?\r\n            monthNames[parsedDateStart.getMonth()]+' '+parsedDateStart.getFullYear()+' Total'\r\n            :monthNames[parsedDateStart.getMonth()]+' '+parsedDateStart.getFullYear()}\r\n            className='align-top'>\r\n                {props.resultInput['groupOne']==='itemCode' || (props.resultInput['groupOne']==='debtorCode' && props.resultInput['groupTwo']==='itemCode' && props.withDetails)? \r\n                monthNames[parsedDateStart.getMonth()]+' '+parsedDateStart.getFullYear()+' Total'\r\n                :monthNames[parsedDateStart.getMonth()]+' '+parsedDateStart.getFullYear()}\r\n            </th>)\r\n            \r\n            while(parsedDateEnd>new Date(new Date(date).getFullYear(),(new Date(date).getMonth())+1+1,0)) {\r\n                date.setMonth(date.getMonth()+1,1)\r\n                if (props.resultInput['groupOne']==='itemCode' || (props.resultInput['groupOne']==='debtorCode' && props.resultInput['groupTwo']==='itemCode' && props.withDetails))\r\n                result.push(<th key={monthNames[date.getMonth()]+' '+date.getFullYear()+' Qty'}\r\n                className='align-top'>\r\n                    {monthNames[date.getMonth()]+' '+date.getFullYear()+' Qty'}\r\n                </th>)\r\n\r\n                result.push(<th key={props.resultInput['groupOne']==='itemCode' || (props.resultInput['groupOne']==='debtorCode' && props.resultInput['groupTwo']==='itemCode' && props.withDetails)?\r\n                monthNames[date.getMonth()]+' '+date.getFullYear()+' Total'\r\n                :monthNames[date.getMonth()]+' '+date.getFullYear()}\r\n                className='align-top'>\r\n                    {props.resultInput['groupOne']==='itemCode' || (props.resultInput['groupOne']==='debtorCode' && props.resultInput['groupTwo']==='itemCode' && props.withDetails)? \r\n                    monthNames[date.getMonth()]+' '+date.getFullYear()+' Total'\r\n                    :monthNames[date.getMonth()]+' '+date.getFullYear()}\r\n                </th>)\r\n            }\r\n            if (props.resultInput['groupOne']==='itemCode' || (props.resultInput['groupOne']==='debtorCode' && props.resultInput['groupTwo']==='itemCode' && props.withDetails))\r\n            result.push(<th key={monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()+' Qty'}\r\n            className='align-top'>\r\n                {monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()+ ' Qty'}\r\n            </th>)\r\n\r\n            result.push(<th key={props.resultInput['groupOne']==='itemCode' || (props.resultInput['groupOne']==='debtorCode' && props.resultInput['groupTwo']==='itemCode' && props.withDetails)?\r\n            monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()+' Total'\r\n            :monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()}\r\n            className='align-top'>\r\n                {props.resultInput['groupOne']==='itemCode' || (props.resultInput['groupOne']==='debtorCode' && props.resultInput['groupTwo']==='itemCode' && props.withDetails)?\r\n                monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()+' Total'\r\n                :monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()}\r\n            </th>)\r\n        }\r\n        return result;\r\n    }\r\n\r\n    \r\n    function populateMonthsAmount(item,data,field) {\r\n        const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n            \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n        ];\r\n        const result=[]\r\n\r\n        const num=field[0].name;\r\n        const itemDate=field[2].name;\r\n        const qty=props.resultInput['groupOne']==='debtorCode'?null:field[3].name;\r\n        const total=props.resultInput['groupOne']==='debtorCode'?field[3].name:field[4].name;\r\n        \r\n        const parsedDateStart=new Date(new Date(props.resultInput.dateStart).getFullYear(),new Date(props.resultInput.dateStart).getMonth(),new Date(props.resultInput.dateStart).getDate(),0)\r\n        const parsedDateEnd=new Date(new Date(props.resultInput.dateEnd).getFullYear(),new Date(props.resultInput.dateEnd).getMonth(),new Date(props.resultInput.dateEnd).getDate(),0)\r\n        if (parsedDateEnd<=new Date(new Date(parsedDateStart).getFullYear(),(new Date(parsedDateStart).getMonth())+1,0)) {\r\n            if (props.resultInput['groupOne']==='itemCode' || (props.resultInput['groupOne']==='debtorCode' && props.resultInput['groupTwo']==='itemCode' && props.withDetails))\r\n            result.push(\r\n                <th key={monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()+' Qty'}\r\n                className='align-top'>\r\n                    {numberFormatParser(data.reduce((a,b)=>{\r\n                        if (b[num]===item[num])\r\n                            return a+b[qty]\r\n                        else return a\r\n                    },0))}\r\n                </th>\r\n            )\r\n            \r\n            result.push(\r\n                <th key={props.resultInput['groupOne']==='itemCode'? \r\n                monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()+' Total'\r\n                :monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()}\r\n                className='align-top'>\r\n                    {numberFormatParser(data.reduce((a,b)=>{\r\n                        if (b[num]===item[num])\r\n                            return a+b[total]\r\n                        else return a\r\n                    },0))}\r\n                </th>\r\n            )\r\n            \r\n        }\r\n        else {\r\n            let date=new Date(parsedDateStart)\r\n            \r\n            if (props.resultInput['groupOne']==='itemCode' || (props.resultInput['groupOne']==='debtorCode' && props.resultInput['groupTwo']==='itemCode' && props.withDetails))\r\n            result.push(\r\n                <th key={monthNames[parsedDateStart.getMonth()]+' '+parsedDateStart.getFullYear()+' Qty'}\r\n                className='align-top'>\r\n                    {numberFormatParser(data.reduce((a,b)=>{\r\n                        const innerParsedDate=new Date(new Date(b[itemDate]).getFullYear(),new Date(b[itemDate]).getMonth(),new Date(b[itemDate]).getDate(),0)\r\n                        \r\n                    if (b[num]===item[num] \r\n                        && innerParsedDate<=new Date(new Date(parsedDateStart).getFullYear(),(new Date(parsedDateStart).getMonth())+1,0))                            \r\n                            return a+b[qty]\r\n                    else return a\r\n                    },0)\r\n                    )}\r\n                </th>)\r\n\r\n            result.push(\r\n                <th key={props.resultInput['groupOne']==='itemCode'?\r\n                monthNames[parsedDateStart.getMonth()]+' '+parsedDateStart.getFullYear()+' Total'\r\n                :monthNames[parsedDateStart.getMonth()]+' '+parsedDateStart.getFullYear()}\r\n                className='align-top'>\r\n                    {numberFormatParser(data.reduce((a,b)=>{\r\n                        const innerParsedDate=new Date(new Date(b[itemDate]).getFullYear(),new Date(b[itemDate]).getMonth(),new Date(b[itemDate]).getDate(),0)\r\n                        \r\n                    if (b[num]===item[num] \r\n                        && innerParsedDate<=new Date(new Date(parsedDateStart).getFullYear(),(new Date(parsedDateStart).getMonth())+1,0))                            \r\n                            return a+b[total]\r\n                    else return a\r\n                    },0)\r\n                    )}\r\n                </th>)\r\n            \r\n            while(parsedDateEnd>new Date(new Date(date).getFullYear(),(new Date(date).getMonth())+1+1,0)) {\r\n                date.setMonth(date.getMonth()+1,1)\r\n                if (props.resultInput['groupOne']==='itemCode' || (props.resultInput['groupOne']==='debtorCode' && props.resultInput['groupTwo']==='itemCode' && props.withDetails))\r\n                result.push(\r\n                    <th key={monthNames[date.getMonth()]+' '+date.getFullYear()+' Qty'}\r\n                    className='align-top'>\r\n                        {numberFormatParser(data.reduce((a,b)=>{\r\n                        const innerParsedDate=new Date(new Date(b[itemDate]).getFullYear(),new Date(b[itemDate]).getMonth(),new Date(b[itemDate]).getDate(),0)\r\n                        if (b[num]===item[num] \r\n                            && innerParsedDate>new Date(new Date(date).getFullYear(),(new Date(date).getMonth()),0)\r\n                            && innerParsedDate<=new Date(new Date(date).getFullYear(),(new Date(date).getMonth())+1,0))\r\n                                return a+b[qty]\r\n                        else return a\r\n                        },0)\r\n                        )}\r\n                    </th>\r\n                )\r\n\r\n                result.push(\r\n                    <th key={props.resultInput['groupOne']==='itemCode'?\r\n                    monthNames[date.getMonth()]+' '+date.getFullYear()+' Total'\r\n                    :monthNames[date.getMonth()]+' '+date.getFullYear()}\r\n                    className='align-top'>\r\n                        {numberFormatParser(data.reduce((a,b)=>{\r\n                        const innerParsedDate=new Date(new Date(b[itemDate]).getFullYear(),new Date(b[itemDate]).getMonth(),new Date(b[itemDate]).getDate(),0)\r\n                        if (b[num]===item[num] \r\n                            && innerParsedDate>new Date(new Date(date).getFullYear(),(new Date(date).getMonth()),0)\r\n                            && innerParsedDate<=new Date(new Date(date).getFullYear(),(new Date(date).getMonth())+1,0))\r\n                                return a+b[total]\r\n                        else return a\r\n                        },0)\r\n                        )}\r\n                    </th>\r\n                )\r\n            }\r\n            if (props.resultInput['groupOne']==='itemCode' || (props.resultInput['groupOne']==='debtorCode' && props.resultInput['groupTwo']==='itemCode' && props.withDetails))\r\n            result.push(\r\n                <th key={monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()+' Qty'}\r\n                className='align-top'>\r\n                    {numberFormatParser(data.reduce((a,b)=>{\r\n                        const innerParsedDate=new Date(new Date(b[itemDate]).getFullYear(),new Date(b[itemDate]).getMonth(),new Date(b[itemDate]).getDate(),0)\r\n                        if (b[num]===item[num] \r\n                            && innerParsedDate>new Date(new Date(parsedDateEnd).getFullYear(),(new Date(parsedDateEnd).getMonth()),0)\r\n                            && innerParsedDate<=parsedDateEnd)\r\n                            return a+b[qty]\r\n                        else return a\r\n                    },0)\r\n                    )}\r\n                </th>\r\n            )\r\n\r\n            result.push(\r\n                <th key={props.resultInput['groupOne']==='itemCode'?\r\n                monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()+' Total'\r\n                :monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()}\r\n                className='align-top'>\r\n                    {numberFormatParser(data.reduce((a,b)=>{\r\n                        const innerParsedDate=new Date(new Date(b[itemDate]).getFullYear(),new Date(b[itemDate]).getMonth(),new Date(b[itemDate]).getDate(),0)\r\n                        if (b[num]===item[num] \r\n                            && innerParsedDate>new Date(new Date(parsedDateEnd).getFullYear(),(new Date(parsedDateEnd).getMonth()),0)\r\n                            && innerParsedDate<=parsedDateEnd)\r\n                            return a+b[total]\r\n                        else return a\r\n                    },0)\r\n                    )}\r\n                </th>\r\n            )\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function populateDetailMonthsAmount(item,item2,data,field) {\r\n        const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n            \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n        ];\r\n        const result=[]\r\n        const num=field[0].name\r\n        const subNum=field[1].name;\r\n        const subDate=field[3].name;\r\n        const subQty=field[4].name;\r\n        const subTotal=field[5].name;\r\n        \r\n        const parsedDateStart=new Date(new Date(props.resultInput.dateStart).getFullYear(),new Date(props.resultInput.dateStart).getMonth(),new Date(props.resultInput.dateStart).getDate(),0)\r\n        const parsedDateEnd=new Date(new Date(props.resultInput.dateEnd).getFullYear(),new Date(props.resultInput.dateEnd).getMonth(),new Date(props.resultInput.dateEnd).getDate(),0)\r\n        if (parsedDateEnd<=new Date(new Date(parsedDateStart).getFullYear(),(new Date(parsedDateStart).getMonth())+1,0)) {\r\n            result.push(\r\n                <td key={monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()+' Qty'}\r\n                className='align-top'>\r\n                    {numberFormatParser(data.reduce((a,b)=>{\r\n                        if (b[num]===item[num] && b[subNum]===item2[subNum])\r\n                            return a+b[subQty]\r\n                        else return a\r\n                    },0))}\r\n                </td>\r\n            )\r\n\r\n            result.push(\r\n                <td key={monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear() +' Total'}\r\n                className='align-top'>\r\n                    {numberFormatParser(data.reduce((a,b)=>{\r\n                        if (b[num]===item[num] && b[subNum]===item2[subNum])\r\n                            return a+b[subTotal]\r\n                        else return a\r\n                    },0))}\r\n                </td>\r\n            )\r\n        }\r\n        else {\r\n            let date=new Date(parsedDateStart)\r\n            \r\n            result.push(\r\n                <td key={monthNames[parsedDateStart.getMonth()]+' '+parsedDateStart.getFullYear()+' Qty'} \r\n                className='align-top'>\r\n                    {numberFormatParser(data.reduce((a,b)=>{\r\n                        const innerParsedDate=new Date(new Date(b[subDate]).getFullYear(),new Date(b[subDate]).getMonth(),new Date(b[subDate]).getDate(),0)\r\n                        \r\n                    if (b[num]===item[num] && b[subNum]===item2[subNum] \r\n                        && innerParsedDate<=new Date(new Date(parsedDateStart).getFullYear(),(new Date(parsedDateStart).getMonth())+1,0))                            \r\n                            return a+b[subQty]\r\n                    else return a\r\n                    },0)\r\n                    )}\r\n                </td>)\r\n\r\n                result.push(\r\n                <td key={monthNames[parsedDateStart.getMonth()]+' '+parsedDateStart.getFullYear()+' Total'} \r\n                className='align-top'>\r\n                    {numberFormatParser(data.reduce((a,b)=>{\r\n                        const innerParsedDate=new Date(new Date(b[subDate]).getFullYear(),new Date(b[subDate]).getMonth(),new Date(b[subDate]).getDate(),0)\r\n                        \r\n                    if (b[num]===item[num] && b[subNum]===item2[subNum] \r\n                        && innerParsedDate<=new Date(new Date(parsedDateStart).getFullYear(),(new Date(parsedDateStart).getMonth())+1,0))                            \r\n                            return a+b[subTotal]\r\n                    else return a\r\n                    },0)\r\n                    )}\r\n                </td>)\r\n            \r\n            while(parsedDateEnd>new Date(new Date(date).getFullYear(),(new Date(date).getMonth())+1+1,0)) {\r\n                date.setMonth(date.getMonth()+1,1)\r\n\r\n                result.push(\r\n                    <td key={monthNames[date.getMonth()]+' '+date.getFullYear()+' Qty'}\r\n                    className='align-top'>\r\n                        {numberFormatParser(data.reduce((a,b)=>{\r\n                        const innerParsedDate=new Date(new Date(b[subDate]).getFullYear(),new Date(b[subDate]).getMonth(),new Date(b[subDate]).getDate(),0)\r\n                        if (b[num]===item[num] && b[subNum]===item2[subNum] \r\n                            && innerParsedDate>new Date(new Date(date).getFullYear(),(new Date(date).getMonth()),0)\r\n                            && innerParsedDate<=new Date(new Date(date).getFullYear(),(new Date(date).getMonth())+1,0))\r\n                                return a+b[subQty]\r\n                        else return a\r\n                        },0)\r\n                        )}\r\n                    </td>\r\n                )\r\n\r\n                result.push(\r\n                    <td key={monthNames[date.getMonth()]+' '+date.getFullYear()+' Total'}\r\n                    className='align-top'>\r\n                        {numberFormatParser(data.reduce((a,b)=>{\r\n                        const innerParsedDate=new Date(new Date(b[subDate]).getFullYear(),new Date(b[subDate]).getMonth(),new Date(b[subDate]).getDate(),0)\r\n                        if (b[num]===item[num] && b[subNum]===item2[subNum] \r\n                            && innerParsedDate>new Date(new Date(date).getFullYear(),(new Date(date).getMonth()),0)\r\n                            && innerParsedDate<=new Date(new Date(date).getFullYear(),(new Date(date).getMonth())+1,0))\r\n                                return a+b[subTotal]\r\n                        else return a\r\n                        },0)\r\n                        )}\r\n                    </td>\r\n                )\r\n            }\r\n\r\n            result.push(\r\n                <td key={monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()+' Qty'}\r\n                className='align-top'>\r\n                    {numberFormatParser(data.reduce((a,b)=>{\r\n                        const innerParsedDate=new Date(new Date(b[subDate]).getFullYear(),new Date(b[subDate]).getMonth(),new Date(b[subDate]).getDate(),0)\r\n                        if (b[num]===item[num] && b[subNum]===item2[subNum] \r\n                            && innerParsedDate>new Date(new Date(parsedDateEnd).getFullYear(),(new Date(parsedDateEnd).getMonth()),0)\r\n                            && innerParsedDate<=parsedDateEnd)\r\n                            return a+b[subQty]\r\n                        else return a\r\n                    },0)\r\n                    )}\r\n                </td>\r\n            )\r\n\r\n            result.push(\r\n                <td key={monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()+' Total'}\r\n                className='align-top'>\r\n                    {numberFormatParser(data.reduce((a,b)=>{\r\n                        const innerParsedDate=new Date(new Date(b[subDate]).getFullYear(),new Date(b[subDate]).getMonth(),new Date(b[subDate]).getDate(),0)\r\n                        if (b[num]===item[num] && b[subNum]===item2[subNum] \r\n                            && innerParsedDate>new Date(new Date(parsedDateEnd).getFullYear(),(new Date(parsedDateEnd).getMonth()),0)\r\n                            && innerParsedDate<=parsedDateEnd)\r\n                            return a+b[subTotal]\r\n                        else return a\r\n                    },0)\r\n                    )}\r\n                </td>\r\n            )\r\n        }\r\n        return result;\r\n\r\n    }\r\n    \r\n\r\n    function populateResult() {\r\n        const data=props.data;\r\n        const field=props.field[0];\r\n        const num=field[0].name;\r\n        const name=field[1].name;\r\n        const qty=props.resultInput['groupOne']==='debtorCode'?null:field[3].name;\r\n        const total=props.resultInput['groupOne']==='debtorCode'?field[3].name:field[4].name;\r\n\r\n        const dataDetail=props.dataDetail;\r\n        const subField=props.field[1];\r\n        const subNum=subField[1].name;\r\n        const subName=subField[2].name;\r\n        const subQty=subField[4].name;\r\n        const subTotal=subField[5].name;\r\n\r\n        const itemAlreadyParsed=[];\r\n        const result=[];\r\n\r\n        data.forEach(item=>{\r\n            const subItemAlreadyParsed=[];\r\n            if(itemAlreadyParsed.indexOf(item[num])===-1)  {\r\n                itemAlreadyParsed.push(item[num]);\r\n                result.push(\r\n                <tbody key={item[num]} className='border-bottom border-secondary'>\r\n                    <tr className='border-top border-secondary'>\r\n                        <th className='align-top'>{item[num]}</th>\r\n                        <th className='align-top'>{item[name]}</th>\r\n                        {populateMonthsAmount(item,data,field)}\r\n                        {props.resultInput['groupOne']==='itemCode' || (props.resultInput['groupOne']==='debtorCode' && props.resultInput['groupTwo']==='itemCode' && props.withDetails)?\r\n                        (<th className='align-top'>\r\n                            {numberFormatParser(data.reduce((a,b)=>{\r\n                                if(b[num]===item[num])\r\n                                    return a+b[qty]\r\n                                else return a\r\n                            },0))}\r\n                        </th>):null}\r\n                        <th className='align-top'>\r\n                            {numberFormatParser(data.reduce((a,b)=>{\r\n                                if(b[num]===item[num])\r\n                                    return a+b[total]\r\n                                else return a\r\n                            },0))}\r\n                        </th>\r\n                    </tr>\r\n                    {props.resultInput['groupTwo'] && props.withDetails? dataDetail.map(item2=>{\r\n                        if (subItemAlreadyParsed.indexOf(item2[subNum])===-1) {\r\n                            subItemAlreadyParsed.push(item2[subNum])\r\n                            return (\r\n                                <tr key={item2[subNum]}>\r\n                                    <td className='align-top'>{item2[subNum]}</td>\r\n                                    <td className='align-top'>{item2[subName]}</td>\r\n                                    {populateDetailMonthsAmount(item,item2,dataDetail,subField)}\r\n                                    <td className='align-top'>\r\n                                        {dataDetail.reduce((a,b)=>{\r\n                                            if (b[subNum]===item2[subNum] && b[num]===item[num]) \r\n                                                return a+b[subQty]\r\n                                            else return a\r\n                                        },0)}\r\n                                    </td>\r\n                                    <td className='align-top'>\r\n                                        {numberFormatParser(dataDetail.reduce((a,b)=>{\r\n                                            if (b[subNum]===item2[subNum] && b[num]===item[num]) \r\n                                                return a+b[subTotal]\r\n                                            else return a\r\n                                        },0)\r\n                                        )}\r\n                                    </td>\r\n                                </tr>\r\n                            )\r\n                    }}):null}\r\n                </tbody>)\r\n            }\r\n        })\r\n        return result;\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className='container-fluid py-1'>\r\n            <button type='click' className='btn btn-secondary d-print-none mb-2' \r\n                onClick={()=>{\r\n                    document.querySelector(\"meta[name=viewport]\").setAttribute(\r\n                    'content','width=device-width, initial-scale=1.0');\r\n                    setPageSize('a4 portrait');\r\n                    history.push(props.backPath)\r\n            }}>Back</button>\r\n            <h2 className='text-center mb-3'>\r\n                {props.description+' from '+ dateFormatParser(props.resultInput['dateStart'])\r\n                +' to '+ dateFormatParser(props.resultInput['dateEnd'])}\r\n            </h2>\r\n            \r\n            <table className='table table-borderless'>\r\n                <thead className='border-top border-bottom border-secondary'>\r\n                    <tr>\r\n                        <th className='align-top'>\r\n                            {props.resultInput['groupOne']==='debtorCode'? 'Debtor No.':'Item Code'}\r\n                        </th>\r\n                        <th className='align-top'>Name</th>\r\n                        {populateMonthsHeader()}\r\n                        {props.resultInput['groupOne']==='itemCode' || (props.resultInput['groupOne']==='debtorCode' && props.resultInput['groupTwo']==='itemCode' && props.withDetails)?\r\n                            (<th className='align-top'>Qty</th>):null}\r\n                        <th className='align-top'>Total</th>\r\n                    </tr>\r\n                    {props.withDetails && props.resultInput['groupTwo']?\r\n                    (<tr>\r\n                        <th className='align-top'>\r\n                            {props.resultInput['groupTwo']==='debtorCode'? 'Debtor No.':'Item Code'}\r\n                        </th>\r\n                        <th className='align-top'>Name</th>\r\n                    </tr>):null}\r\n                    \r\n                </thead>\r\n                {populateResult()}\r\n            </table>\r\n            \r\n            <small className='d-block text-center'>End of Report</small>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SalesReportOne;","import React,{useState,useContext,useEffect} from 'react';\r\nimport AppLayout from '../Shared/AppLayout'\r\nimport {\r\n    Switch,\r\n    Route,\r\n    useRouteMatch,\r\n    Redirect\r\n} from 'react-router-dom';\r\nimport useFetch from '../Shared/useFetch';\r\nimport authContext from '../Shared/authContext';\r\nimport {useHistory} from 'react-router-dom';\r\nimport $ from 'jquery'\r\nimport numberFormatParser from '../Shared/numberFormatParser';\r\nimport sortData from '../Shared/sort';\r\nimport setPageSize from '../Shared/setPageSize';\r\nimport SalesReportOne from '../Shared/preview/SalesReportOne';\r\n\r\nfunction SalesReport(props) {\r\n    const [{data:dataSelectDebtor,error:errorSelectDebtor}]=useFetch({\r\n        url:'./SelectItem',\r\n        init:{\r\n            method:'POST',\r\n            headers:{'Content-Type':'application/json'},\r\n            body:JSON.stringify({item:'debtor'}),\r\n            credentials:'include'\r\n        }\r\n    });//extension of Item component\r\n\r\n    const [{data:dataSelectStock,error:errorSelectStock}]=useFetch({\r\n        url:'./SelectItem',\r\n        init:{\r\n            method:'POST',\r\n            headers:{'Content-Type':'application/json'},\r\n            body:JSON.stringify({item:'stock'}),\r\n            credentials:'include'\r\n        }\r\n    });\r\n    const [{data:dataSelectSalesAnalysis,error:errorSelectSalesAnalysis},changeParamSalesAnalysis]=useFetch(null);\r\n    const [groupOne,changeGroupOne] = useState('debtorCode')\r\n    const [groupTwo,changeGroupTwo] = useState('')\r\n    const [debtorList,changeDebtorList] = useState(null);\r\n    const [stockList,changeStockList] = useState(null);\r\n    const [groupOneID,changeGroupOneID] = useState([]);\r\n    const [groupTwoID,changeGroupTwoID] = useState([]);\r\n    const [dateStart,changeDateStart] = useState(new Date().getFullYear()+'-01-01');\r\n    const [dateEnd,changeDateEnd] = useState(getFormattedDate(new Date()));\r\n    const [resultInput,changeResultInput]=useState(null);\r\n    const [collapsibleElementID,changeCollapsibleElementID]=useState([])\r\n\r\n    /*Preview states*/\r\n    const [withDetails,changeWithDetails]=useState(false);\r\n    const [sortCriteriaList,changeSortCriteriaList]=useState(null);\r\n    const [detailSortCriteriaList,changeDetailSortCriteriaList]=useState(null);\r\n    const [sortCriteria,changeSortCriteria]=useState('');\r\n    const [detailSortCriteria,changeDetailSortCriteria]=useState('');\r\n    const [generateReportWarning,changeGenerateReportWarning]=useState(false);\r\n\r\n    const {path} = useRouteMatch();\r\n    const {changeAuth} = useContext(authContext);\r\n    const history=useHistory();\r\n\r\n    useEffect(()=>{\r\n        \r\n        if (dataSelectDebtor && dataSelectDebtor.auth===false) {\r\n                    alert('Cookies Expired or Authorisation invalid. Please Login again!');\r\n                    changeAuth(false);\r\n                }\r\n        else if (dataSelectDebtor && dataSelectDebtor.data && dataSelectDebtor.field) \r\n            changeDebtorList(dataSelectDebtor.data.map(data=>(\r\n            <option key={data[dataSelectDebtor.field[0].name]} value={data[dataSelectDebtor.field[0].name]}>\r\n                {data[dataSelectDebtor.field[0].name]+' | '+(data[dataSelectDebtor.field[1].name]?data[dataSelectDebtor.field[1].name]:'')}\r\n            </option>)\r\n            )\r\n        )\r\n\r\n        if (dataSelectStock && dataSelectStock.auth===false) {\r\n                    alert('Cookies Expired or Authorisation invalid. Please Login again!');\r\n                    changeAuth(false);\r\n                }\r\n        else if (dataSelectStock && dataSelectStock.data && dataSelectStock.field) {\r\n            const stockNum=dataSelectStock.field[0].name;\r\n            const stockDesc=dataSelectStock.field[1].name;\r\n            \r\n            changeStockList(dataSelectStock.data.map(data=>(\r\n                <option key={data[stockNum]} value={data[stockNum]}>\r\n                    {data[stockNum]+' | '\r\n                    + (data[stockDesc]?data[stockDesc]:'')}\r\n                </option>)\r\n                )\r\n            )\r\n        }\r\n\r\n    },[dataSelectDebtor,errorSelectDebtor,dataSelectStock,errorSelectStock])\r\n\r\n    useEffect(()=>{\r\n        if (dataSelectSalesAnalysis && dataSelectSalesAnalysis.auth===false) {\r\n                alert('Cookies Expired or Authorisation invalid. Please Login again!');\r\n                changeAuth(false);\r\n            }\r\n        else if (dataSelectSalesAnalysis && dataSelectSalesAnalysis.data && dataSelectSalesAnalysis.field) {\r\n            const data=dataSelectSalesAnalysis.data[0];\r\n            const field=dataSelectSalesAnalysis.field[0];\r\n            const num=field[0].name;\r\n            const name=field[1].name;\r\n\r\n            const itemAlreadyParsed=[];\r\n            const subData=dataSelectSalesAnalysis.data[1];\r\n            const subField=dataSelectSalesAnalysis.field[1];\r\n            const subNum=subField[1].name;\r\n            const subName=subField[2].name;\r\n            \r\n            changeResultInput(resultInput=>{})\r\n\r\n            data.forEach(item=>{\r\n                let newObject={}\r\n               if(itemAlreadyParsed.indexOf(item[num])===-1) {\r\n                    itemAlreadyParsed.push(item[num])\r\n                    newObject[item[num]]=subData.filter(item2=>item2[num]===item[num])\r\n                    changeResultInput(resultInput=>(Object.assign({},resultInput,newObject)))\r\n               }\r\n            })\r\n\r\n            changeResultInput(resultInput=>({...resultInput,\r\n                data:dataSelectSalesAnalysis.data,\r\n                dataPreview:[...dataSelectSalesAnalysis.data],\r\n                field:dataSelectSalesAnalysis.field,\r\n                dateStart,\r\n                dateEnd,\r\n                groupOne,\r\n                groupTwo\r\n            }))\r\n            changeSortCriteriaList(\r\n                (<>\r\n                    <option value={num}>{groupOne==='debtorCode'?'Debtor No.':'Stock No.'}</option>\r\n                    <option value={name}>Name</option>\r\n                </>)\r\n            )\r\n            if (groupTwo)\r\n            changeDetailSortCriteriaList(\r\n                (<>\r\n                    <option value={subNum}>{groupTwo==='debtorCode'?'Debtor No.':'Stock No.'}</option>\r\n                    <option value={subName}>Name</option>\r\n                    \r\n                </>)\r\n            )\r\n            else changeDetailSortCriteriaList(null)\r\n\r\n            changeCollapsibleElementID(itemAlreadyParsed.map(item=>item.replace(/[ ._\\-()]/g,'')))\r\n\r\n        }\r\n    },[dataSelectSalesAnalysis,errorSelectSalesAnalysis])\r\n\r\n//attach bootstrap/jquery eventlisteners and callbacks\r\n    useEffect(()=>{\r\n        if (collapsibleElementID) {\r\n            collapsibleElementID.forEach(ID=>{\r\n                $('#'+ID).on('show.bs.collapse',e=>{\r\n                    if(e.target===e.currentTarget)\r\n                    $('#plusminus'+ID).removeClass('fa-plus-square').addClass('fa-minus-square');\r\n                })\r\n                $('#'+ID).on('hide.bs.collapse',e=>{\r\n                    if(e.target===e.currentTarget)\r\n                    $('#plusminus'+ID).removeClass('fa-minus-square').addClass('fa-plus-square');\r\n                })\r\n        })\r\n    }\r\n    },[resultInput])\r\n\r\n    useEffect(()=>{\r\n        function setScale() {\r\n            document.querySelector(\"meta[name=viewport]\").setAttribute(\r\n                'content','width=device-width, initial-scale=1.0');\r\n        }\r\n        window.addEventListener('popstate',setScale)\r\n        \r\n        return function unattach() {\r\n                window.removeEventListener('popstate',setScale)\r\n            }\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        function setPage() {\r\n            setPageSize(\"a4 portrait\");\r\n        }\r\n        window.addEventListener('popstate',setPage);\r\n\r\n        return function unattach() {\r\n                window.removeEventListener('popstate',setPage)\r\n            }\r\n    },[])\r\n\r\n    function getFormattedDate(date) {\r\n        let currDate=new Date(date)\r\n        \r\n        return (currDate.getFullYear()) + (currDate.getMonth() + 1 <10? '-0'+ (currDate.getMonth()+1):'-'+ (currDate.getMonth()+1)) + (currDate.getDate()<10?\r\n        '-0'+currDate.getDate() : '-'+currDate.getDate());\r\n    }\r\n\r\n    function populateMonthsHeader() {\r\n        const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n            \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n        ];\r\n        const result=[]\r\n        \r\n        /*date string from input type date is slightly diff from string date and produce diff result when both string are \r\n        called with Date() object. Hence perform the following to ensure date objects produced from both string are the same.\r\n        Same with all the calculate methods below*/\r\n        const parsedDateStart=new Date(new Date(resultInput.dateStart).getFullYear(),new Date(resultInput.dateStart).getMonth(),new Date(resultInput.dateStart).getDate(),0)\r\n        const parsedDateEnd=new Date(new Date(resultInput.dateEnd).getFullYear(),new Date(resultInput.dateEnd).getMonth(),new Date(resultInput.dateEnd).getDate(),0)\r\n        \r\n        if (parsedDateEnd<=new Date(new Date(parsedDateStart).getFullYear(),(new Date(parsedDateStart).getMonth())+1,0)) {\r\n            if (resultInput['groupOne']==='itemCode')\r\n            result.push(<h6 key={monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()+' Qty'}\r\n            style={{flex:'0 0 100px',paddingLeft:10,paddingRight:10}}>\r\n                {monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()+' Qty'}\r\n            </h6>)\r\n\r\n            result.push(<h6 key={resultInput['groupOne']==='itemCode'?\r\n            monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()+' Total'\r\n            :monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()}\r\n            style={resultInput['groupOne']==='itemCode'?\r\n            {flex:'0 0 100px',paddingLeft:10,paddingRight:10}\r\n            :{flex:'0 0 150px',paddingLeft:10,paddingRight:10}}>\r\n                {resultInput['groupOne']==='itemCode'? \r\n                monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()+' Total'\r\n                :monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()}\r\n            </h6>)\r\n        }\r\n        else {\r\n            let date=new Date(parsedDateStart)\r\n            if (resultInput['groupOne']==='itemCode')\r\n            result.push(<h6 key={monthNames[parsedDateStart.getMonth()]+' '+parsedDateStart.getFullYear()+' Qty'} \r\n            style={{flex:'0 0 100px',paddingLeft:10,paddingRight:10}}>\r\n                {monthNames[parsedDateStart.getMonth()]+' '+parsedDateStart.getFullYear()+' Qty'}\r\n            </h6>)\r\n\r\n            result.push(<h6 key={resultInput['groupOne']==='itemCode'?\r\n            monthNames[parsedDateStart.getMonth()]+' '+parsedDateStart.getFullYear()+' Total'\r\n            :monthNames[parsedDateStart.getMonth()]+' '+parsedDateStart.getFullYear()} \r\n            style={resultInput['groupOne']==='itemCode'?\r\n            {flex:'0 0 100px',paddingLeft:10,paddingRight:10}\r\n            :{flex:'0 0 150px',paddingLeft:10,paddingRight:10}}>\r\n                {resultInput['groupOne']==='itemCode'? \r\n                monthNames[parsedDateStart.getMonth()]+' '+parsedDateStart.getFullYear()+' Total'\r\n                :monthNames[parsedDateStart.getMonth()]+' '+parsedDateStart.getFullYear()}\r\n            </h6>)\r\n            \r\n            while(parsedDateEnd>new Date(new Date(date).getFullYear(),(new Date(date).getMonth())+1+1,0)) {\r\n                date.setMonth(date.getMonth()+1,1)\r\n                if (resultInput['groupOne']==='itemCode')\r\n                result.push(<h6 key={monthNames[date.getMonth()]+' '+date.getFullYear()+' Qty'} \r\n                style={{flex:'0 0 100px',paddingLeft:10,paddingRight:10}}>\r\n                    {monthNames[date.getMonth()]+' '+date.getFullYear()+' Qty'}\r\n                </h6>)\r\n\r\n                result.push(<h6 key={resultInput['groupOne']==='itemCode'?\r\n                monthNames[date.getMonth()]+' '+date.getFullYear()+' Total'\r\n                :monthNames[date.getMonth()]+' '+date.getFullYear()} \r\n                style={resultInput['groupOne']==='itemCode'?\r\n                {flex:'0 0 100px',paddingLeft:10,paddingRight:10}\r\n                :{flex:'0 0 150px',paddingLeft:10,paddingRight:10}}>\r\n                    {resultInput['groupOne']==='itemCode'? \r\n                    monthNames[date.getMonth()]+' '+date.getFullYear()+' Total'\r\n                    :monthNames[date.getMonth()]+' '+date.getFullYear()}\r\n                </h6>)\r\n            }\r\n            if (resultInput['groupOne']==='itemCode')\r\n            result.push(<h6 key={monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()+' Qty'} \r\n            style={{flex:'0 0 100px',paddingLeft:10,paddingRight:10}}>\r\n                {monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()+ ' Qty'}\r\n            </h6>)\r\n\r\n            result.push(<h6 key={resultInput['groupOne']==='itemCode'?\r\n            monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()+' Total'\r\n            :monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()} \r\n            style={resultInput['groupOne']==='itemCode'?\r\n            {flex:'0 0 100px',paddingLeft:10,paddingRight:10}\r\n            :{flex:'0 0 150px',paddingLeft:10,paddingRight:10}}>\r\n                {resultInput['groupOne']==='itemCode'?\r\n                monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()+' Total'\r\n                :monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()}\r\n            </h6>)\r\n        }\r\n        \r\n        return result;\r\n        \r\n    }\r\n\r\n    function populateMonthsAmount(item,data,field) {\r\n        const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n            \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n        ];\r\n        const result=[]\r\n\r\n        const num=field[0].name;\r\n        const itemDate=field[2].name;\r\n        const qty=resultInput['groupOne']==='debtorCode'?null:field[3].name;\r\n        const total=resultInput['groupOne']==='debtorCode'?field[3].name:field[4].name;\r\n        \r\n        /*date string from input type date is slightly diff from string date and produce diff result when both string are \r\n        called with Date() object. Hence perform the following to ensure date objects produced from both string are the same.\r\n        Same with all the calculate methods below*/\r\n        const parsedDateStart=new Date(new Date(resultInput.dateStart).getFullYear(),new Date(resultInput.dateStart).getMonth(),new Date(resultInput.dateStart).getDate(),0)\r\n        const parsedDateEnd=new Date(new Date(resultInput.dateEnd).getFullYear(),new Date(resultInput.dateEnd).getMonth(),new Date(resultInput.dateEnd).getDate(),0)\r\n        if (parsedDateEnd<=new Date(new Date(parsedDateStart).getFullYear(),(new Date(parsedDateStart).getMonth())+1,0)) {\r\n            if (resultInput['groupOne']==='itemCode')\r\n            result.push(\r\n                <p key={monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()+' Qty'}\r\n                className='mb-0' \r\n                style={{flex:'0 0 100px',paddingLeft:10,paddingRight:10}}>\r\n                    {numberFormatParser(data.reduce((a,b)=>{\r\n                        if (b[num]===item[num])\r\n                            return a+b[qty]\r\n                        else return a\r\n                    },0))}\r\n                </p>\r\n            )\r\n            \r\n            result.push(\r\n                <p key={resultInput['groupOne']==='itemCode'? \r\n                monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()+' Total'\r\n                :monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()}\r\n                className='mb-0' \r\n                style={resultInput['groupOne']==='itemCode'?\r\n                {flex:'0 0 100px',paddingLeft:10,paddingRight:10}\r\n                :{flex:'0 0 150px',paddingLeft:10,paddingRight:10}}>\r\n                    {numberFormatParser(data.reduce((a,b)=>{\r\n                        if (b[num]===item[num])\r\n                            return a+b[total]\r\n                        else return a\r\n                    },0))}\r\n                </p>\r\n            )\r\n            \r\n        }\r\n        else {\r\n            let date=new Date(parsedDateStart)\r\n            \r\n            if (resultInput['groupOne']==='itemCode')\r\n            result.push(\r\n                <p key={monthNames[parsedDateStart.getMonth()]+' '+parsedDateStart.getFullYear()+' Qty'} \r\n                className='mb-0' style={{flex:'0 0 100px',paddingLeft:10,paddingRight:10}}>\r\n                    {numberFormatParser(data.reduce((a,b)=>{\r\n                        const innerParsedDate=new Date(new Date(b[itemDate]).getFullYear(),new Date(b[itemDate]).getMonth(),new Date(b[itemDate]).getDate(),0)\r\n                        \r\n                    if (b[num]===item[num] \r\n                        && innerParsedDate<=new Date(new Date(parsedDateStart).getFullYear(),(new Date(parsedDateStart).getMonth())+1,0))                            \r\n                            return a+b[qty]\r\n                    else return a\r\n                    },0)\r\n                    )}\r\n                </p>)\r\n\r\n            result.push(\r\n                <p key={resultInput['groupOne']==='itemCode'?\r\n                monthNames[parsedDateStart.getMonth()]+' '+parsedDateStart.getFullYear()+' Total'\r\n                :monthNames[parsedDateStart.getMonth()]+' '+parsedDateStart.getFullYear()} \r\n                className='mb-0' \r\n                style={resultInput['groupOne']==='itemCode'?\r\n                    {flex:'0 0 100px',paddingLeft:10,paddingRight:10}\r\n                    :{flex:'0 0 150px',paddingLeft:10,paddingRight:10}}>\r\n                    {numberFormatParser(data.reduce((a,b)=>{\r\n                        const innerParsedDate=new Date(new Date(b[itemDate]).getFullYear(),new Date(b[itemDate]).getMonth(),new Date(b[itemDate]).getDate(),0)\r\n                        \r\n                    if (b[num]===item[num] \r\n                        && innerParsedDate<=new Date(new Date(parsedDateStart).getFullYear(),(new Date(parsedDateStart).getMonth())+1,0))                            \r\n                            return a+b[total]\r\n                    else return a\r\n                    },0)\r\n                    )}\r\n                </p>)\r\n            \r\n            while(parsedDateEnd>new Date(new Date(date).getFullYear(),(new Date(date).getMonth())+1+1,0)) {\r\n                date.setMonth(date.getMonth()+1,1)\r\n                if (resultInput['groupOne']==='itemCode')\r\n                result.push(\r\n                    <p key={monthNames[date.getMonth()]+' '+date.getFullYear()+' Qty'}\r\n                    className='mb-0' style={{flex:'0 0 100px',paddingLeft:10,paddingRight:10}}>\r\n                        {numberFormatParser(data.reduce((a,b)=>{\r\n                        const innerParsedDate=new Date(new Date(b[itemDate]).getFullYear(),new Date(b[itemDate]).getMonth(),new Date(b[itemDate]).getDate(),0)\r\n                        if (b[num]===item[num] \r\n                            && innerParsedDate>new Date(new Date(date).getFullYear(),(new Date(date).getMonth()),0)\r\n                            && innerParsedDate<=new Date(new Date(date).getFullYear(),(new Date(date).getMonth())+1,0))\r\n                                return a+b[qty]\r\n                        else return a\r\n                        },0)\r\n                        )}\r\n                    </p>\r\n                )\r\n\r\n                result.push(\r\n                    <p key={resultInput['groupOne']==='itemCode'?\r\n                    monthNames[date.getMonth()]+' '+date.getFullYear()+' Total'\r\n                    :monthNames[date.getMonth()]+' '+date.getFullYear()}\r\n                    className='mb-0' \r\n                    style={resultInput['groupOne']==='itemCode'?\r\n                    {flex:'0 0 100px',paddingLeft:10,paddingRight:10}\r\n                    :{flex:'0 0 150px',paddingLeft:10,paddingRight:10}}>\r\n                        {numberFormatParser(data.reduce((a,b)=>{\r\n                        const innerParsedDate=new Date(new Date(b[itemDate]).getFullYear(),new Date(b[itemDate]).getMonth(),new Date(b[itemDate]).getDate(),0)\r\n                        if (b[num]===item[num] \r\n                            && innerParsedDate>new Date(new Date(date).getFullYear(),(new Date(date).getMonth()),0)\r\n                            && innerParsedDate<=new Date(new Date(date).getFullYear(),(new Date(date).getMonth())+1,0))\r\n                                return a+b[total]\r\n                        else return a\r\n                        },0)\r\n                        )}\r\n                    </p>\r\n                )\r\n            }\r\n            if (resultInput['groupOne']==='itemCode')\r\n            result.push(\r\n                <p key={monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()+' Qty'}\r\n                className='mb-0' style={{flex:'0 0 100px',paddingLeft:10,paddingRight:10}}>\r\n                    {numberFormatParser(data.reduce((a,b)=>{\r\n                        const innerParsedDate=new Date(new Date(b[itemDate]).getFullYear(),new Date(b[itemDate]).getMonth(),new Date(b[itemDate]).getDate(),0)\r\n                        if (b[num]===item[num] \r\n                            && innerParsedDate>new Date(new Date(parsedDateEnd).getFullYear(),(new Date(parsedDateEnd).getMonth()),0)\r\n                            && innerParsedDate<=parsedDateEnd)\r\n                            return a+b[qty]\r\n                        else return a\r\n                    },0)\r\n                    )}\r\n                </p>\r\n            )\r\n\r\n            result.push(\r\n                <p key={resultInput['groupOne']==='itemCode'?\r\n                monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()+' Total'\r\n                :monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()}\r\n                className='mb-0' \r\n                style={resultInput['groupOne']==='itemCode'?\r\n                {flex:'0 0 100px',paddingLeft:10,paddingRight:10}\r\n                :{flex:'0 0 150px',paddingLeft:10,paddingRight:10}}>\r\n                    {numberFormatParser(data.reduce((a,b)=>{\r\n                        const innerParsedDate=new Date(new Date(b[itemDate]).getFullYear(),new Date(b[itemDate]).getMonth(),new Date(b[itemDate]).getDate(),0)\r\n                        if (b[num]===item[num] \r\n                            && innerParsedDate>new Date(new Date(parsedDateEnd).getFullYear(),(new Date(parsedDateEnd).getMonth()),0)\r\n                            && innerParsedDate<=parsedDateEnd)\r\n                            return a+b[total]\r\n                        else return a\r\n                    },0)\r\n                    )}\r\n                </p>\r\n            )\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function populateTableHeader() {\r\n        const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n            \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n        ];\r\n        const result=[]\r\n        \r\n        /*date string from input type date is slightly diff from string date and produce diff result when both string are \r\n        called with Date() object. Hence perform the following to ensure date objects produced from both string are the same.\r\n        Same with all the calculate methods below*/\r\n        const parsedDateStart=new Date(new Date(resultInput.dateStart).getFullYear(),new Date(resultInput.dateStart).getMonth(),new Date(resultInput.dateStart).getDate(),0)\r\n        const parsedDateEnd=new Date(new Date(resultInput.dateEnd).getFullYear(),new Date(resultInput.dateEnd).getMonth(),new Date(resultInput.dateEnd).getDate(),0)\r\n        \r\n        if (parsedDateEnd<=new Date(new Date(parsedDateStart).getFullYear(),(new Date(parsedDateStart).getMonth())+1,0)) {\r\n            result.push(\r\n            <th key={monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()+' Qty'}\r\n            className='align-top'>\r\n                {monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()+' Qty'}\r\n            </th>)\r\n\r\n            result.push(\r\n            <th key={monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()+' Total'}\r\n            className='align-top'>\r\n                {monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()+' Total'}\r\n            </th>)\r\n        }\r\n        else {\r\n            let date=new Date(parsedDateStart)\r\n            result.push(\r\n            <th key={monthNames[parsedDateStart.getMonth()]+' '+parsedDateStart.getFullYear()+' Qty'}\r\n            className='align-top'>\r\n                {monthNames[parsedDateStart.getMonth()]+' '+parsedDateStart.getFullYear()+' Qty'}\r\n            </th>)\r\n            result.push(\r\n                <th key={monthNames[parsedDateStart.getMonth()]+' '+parsedDateStart.getFullYear()+' Total'}\r\n                className='align-top'>\r\n                    {monthNames[parsedDateStart.getMonth()]+' '+parsedDateStart.getFullYear()+' Total'}\r\n                </th>)\r\n            \r\n            while(parsedDateEnd>new Date(new Date(date).getFullYear(),(new Date(date).getMonth())+1+1,0)) {\r\n                date.setMonth(date.getMonth()+1,1)\r\n\r\n                result.push(\r\n                <th key={monthNames[date.getMonth()]+' '+date.getFullYear()+' Qty'}\r\n                className='align-top'>\r\n                    {monthNames[date.getMonth()]+' '+date.getFullYear()+' Qty'}\r\n                </th>)\r\n\r\n                result.push(\r\n                <th key={monthNames[date.getMonth()]+' '+date.getFullYear()+' Total'}\r\n                className='align-top'>\r\n                    {monthNames[date.getMonth()]+' '+date.getFullYear()+' Total'}\r\n                </th>)\r\n            }\r\n\r\n            result.push(\r\n            <th key={monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()+' Qty'}\r\n            className='align-top'>\r\n                {monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()+' Qty'}\r\n            </th>)\r\n\r\n            result.push(\r\n            <th key={monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()+' Total'}\r\n            className='align-top'>\r\n                {monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()+' Total'}\r\n            </th>)\r\n        }\r\n        \r\n        return result;\r\n        \r\n    }\r\n\r\n    function populateTableMonthsAmount(item,data,field) {\r\n        const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n            \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n        ];\r\n        const result=[]\r\n        \r\n        const subNum=field[1].name;\r\n        const subDate=field[3].name;\r\n        const subQty=field[4].name;\r\n        const subTotal=field[5].name;\r\n        \r\n        /*date string from input type date is slightly diff from string date and produce diff result when both string are \r\n        called with Date() object. Hence perform the following to ensure date objects produced from both string are the same.\r\n        Same with all the calculate methods below*/\r\n        const parsedDateStart=new Date(new Date(resultInput.dateStart).getFullYear(),new Date(resultInput.dateStart).getMonth(),new Date(resultInput.dateStart).getDate(),0)\r\n        const parsedDateEnd=new Date(new Date(resultInput.dateEnd).getFullYear(),new Date(resultInput.dateEnd).getMonth(),new Date(resultInput.dateEnd).getDate(),0)\r\n        if (parsedDateEnd<=new Date(new Date(parsedDateStart).getFullYear(),(new Date(parsedDateStart).getMonth())+1,0)) {\r\n            result.push(\r\n                <td key={monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()+' Qty'}\r\n                className='align-top'>\r\n                    {numberFormatParser(data.reduce((a,b)=>{\r\n                        if (b[subNum]===item[subNum])\r\n                            return a+b[subQty]\r\n                        else return a\r\n                    },0))}\r\n                </td>\r\n            )\r\n\r\n            result.push(\r\n                <td key={monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear() +' Total'}\r\n                className='align-top'>\r\n                    {numberFormatParser(data.reduce((a,b)=>{\r\n                        if (b[subNum]===item[subNum])\r\n                            return a+b[subTotal]\r\n                        else return a\r\n                    },0))}\r\n                </td>\r\n            )\r\n        }\r\n        else {\r\n            let date=new Date(parsedDateStart)\r\n            \r\n            result.push(\r\n                <td key={monthNames[parsedDateStart.getMonth()]+' '+parsedDateStart.getFullYear()+' Qty'} \r\n                className='align-top'>\r\n                    {numberFormatParser(data.reduce((a,b)=>{\r\n                        const innerParsedDate=new Date(new Date(b[subDate]).getFullYear(),new Date(b[subDate]).getMonth(),new Date(b[subDate]).getDate(),0)\r\n                        \r\n                    if (b[subNum]===item[subNum] \r\n                        && innerParsedDate<=new Date(new Date(parsedDateStart).getFullYear(),(new Date(parsedDateStart).getMonth())+1,0))                            \r\n                            return a+b[subQty]\r\n                    else return a\r\n                    },0)\r\n                    )}\r\n                </td>)\r\n\r\n                result.push(\r\n                <td key={monthNames[parsedDateStart.getMonth()]+' '+parsedDateStart.getFullYear()+' Total'} \r\n                className='align-top'>\r\n                    {numberFormatParser(data.reduce((a,b)=>{\r\n                        const innerParsedDate=new Date(new Date(b[subDate]).getFullYear(),new Date(b[subDate]).getMonth(),new Date(b[subDate]).getDate(),0)\r\n                        \r\n                    if (b[subNum]===item[subNum] \r\n                        && innerParsedDate<=new Date(new Date(parsedDateStart).getFullYear(),(new Date(parsedDateStart).getMonth())+1,0))                            \r\n                            return a+b[subTotal]\r\n                    else return a\r\n                    },0)\r\n                    )}\r\n                </td>)\r\n            \r\n            while(parsedDateEnd>new Date(new Date(date).getFullYear(),(new Date(date).getMonth())+1+1,0)) {\r\n                date.setMonth(date.getMonth()+1,1)\r\n\r\n                result.push(\r\n                    <td key={monthNames[date.getMonth()]+' '+date.getFullYear()+' Qty'}\r\n                    className='align-top'>\r\n                        {numberFormatParser(data.reduce((a,b)=>{\r\n                        const innerParsedDate=new Date(new Date(b[subDate]).getFullYear(),new Date(b[subDate]).getMonth(),new Date(b[subDate]).getDate(),0)\r\n                        if (b[subNum]===item[subNum] \r\n                            && innerParsedDate>new Date(new Date(date).getFullYear(),(new Date(date).getMonth()),0)\r\n                            && innerParsedDate<=new Date(new Date(date).getFullYear(),(new Date(date).getMonth())+1,0))\r\n                                return a+b[subQty]\r\n                        else return a\r\n                        },0)\r\n                        )}\r\n                    </td>\r\n                )\r\n\r\n                result.push(\r\n                    <td key={monthNames[date.getMonth()]+' '+date.getFullYear()+' Total'}\r\n                    className='align-top'>\r\n                        {numberFormatParser(data.reduce((a,b)=>{\r\n                        const innerParsedDate=new Date(new Date(b[subDate]).getFullYear(),new Date(b[subDate]).getMonth(),new Date(b[subDate]).getDate(),0)\r\n                        if (b[subNum]===item[subNum] \r\n                            && innerParsedDate>new Date(new Date(date).getFullYear(),(new Date(date).getMonth()),0)\r\n                            && innerParsedDate<=new Date(new Date(date).getFullYear(),(new Date(date).getMonth())+1,0))\r\n                                return a+b[subTotal]\r\n                        else return a\r\n                        },0)\r\n                        )}\r\n                    </td>\r\n                )\r\n            }\r\n\r\n            result.push(\r\n                <td key={monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()+' Qty'}\r\n                className='align-top'>\r\n                    {numberFormatParser(data.reduce((a,b)=>{\r\n                        const innerParsedDate=new Date(new Date(b[subDate]).getFullYear(),new Date(b[subDate]).getMonth(),new Date(b[subDate]).getDate(),0)\r\n                        if (b[subNum]===item[subNum] \r\n                            && innerParsedDate>new Date(new Date(parsedDateEnd).getFullYear(),(new Date(parsedDateEnd).getMonth()),0)\r\n                            && innerParsedDate<=parsedDateEnd)\r\n                            return a+b[subQty]\r\n                        else return a\r\n                    },0)\r\n                    )}\r\n                </td>\r\n            )\r\n\r\n            result.push(\r\n                <td key={monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()+' Total'}\r\n                className='align-top'>\r\n                    {numberFormatParser(data.reduce((a,b)=>{\r\n                        const innerParsedDate=new Date(new Date(b[subDate]).getFullYear(),new Date(b[subDate]).getMonth(),new Date(b[subDate]).getDate(),0)\r\n                        if (b[subNum]===item[subNum] \r\n                            && innerParsedDate>new Date(new Date(parsedDateEnd).getFullYear(),(new Date(parsedDateEnd).getMonth()),0)\r\n                            && innerParsedDate<=parsedDateEnd)\r\n                            return a+b[subTotal]\r\n                        else return a\r\n                    },0)\r\n                    )}\r\n                </td>\r\n            )\r\n        }\r\n        return result;\r\n\r\n    }\r\n\r\n    function populateResult() {\r\n        const data=resultInput['data'][0];\r\n        const field=resultInput['field'][0];\r\n        const num=field[0].name;\r\n        const name=field[1].name;\r\n        const qty=resultInput['groupOne']==='debtorCode'?null:field[3].name;\r\n        const total=resultInput['groupOne']==='debtorCode'?field[3].name:field[4].name;\r\n\r\n        const subData=resultInput['data'][1];\r\n        const subField=resultInput['field'][1];\r\n        const subNum=subField[1].name;\r\n        const subName=subField[2].name;\r\n        const subQty=subField[4].name;\r\n        const subTotal=subField[5].name;\r\n        \r\n        const header=populateMonthsHeader();\r\n        const calculatedWidth=resultInput['groupOne']==='debtorCode'? 34+120+225+(header.length*150)+100:34+120+225+(header.length*100)+100+100;\r\n\r\n        function populateItem() {\r\n            const itemAlreadyParsed=[];\r\n            const result=[];\r\n\r\n            data.forEach(item=>{\r\n                const subItemAlreadyParsed=[];\r\n                if(itemAlreadyParsed.indexOf(item[num])===-1)  {\r\n                    itemAlreadyParsed.push(item[num]);\r\n                    result.push(\r\n                        <div key={item[num]}>\r\n                            <div className='d-flex' style={resultInput['groupTwo']?{cursor:'pointer'}:null} data-toggle='collapse' data-target={'#'+item[num].replace(/[ ._\\-()]/g,'')}>\r\n                                <i className={resultInput['groupTwo']?'fa fa-plus-square mt-1':''} \r\n                                style={resultInput['groupTwo']? {flex:'0 0 14px',paddingLeft:10,paddingRight:10}:{flex:'0 0 34px'}}\r\n                                id={'plusminus'+item[num].replace(/[ ._\\-()]/g,'')}></i>\r\n                                <p className='mb-0' style={{flex:'0 0 120px',paddingLeft:10,paddingRight:10}}>{item[num]}</p>\r\n                                <p className='mb-0' style={{flex:'0 0 225px',paddingLeft:10,paddingRight:10}}>{item[name]}</p>\r\n                                {populateMonthsAmount(item,data,field)}\r\n                                {resultInput['groupOne']==='itemCode'?\r\n                                <p className='mb-0' style={{flex:'0 0 100px',paddingLeft:10,paddingRight:10}}>\r\n                                    {numberFormatParser(data.reduce((a,b)=>{\r\n                                        if(b[num]===item[num])\r\n                                            return a+b[qty]\r\n                                        else return a\r\n                                    },0))}\r\n                                </p>:null}\r\n                                <p className='mb-0' style={{flex:'0 0 100px',paddingLeft:10,paddingRight:10}}>\r\n                                    {numberFormatParser(data.reduce((a,b)=>{\r\n                                        if(b[num]===item[num])\r\n                                            return a+b[total]\r\n                                        else return a\r\n                                    },0))}\r\n                                </p>\r\n                            </div>\r\n                            {resultInput['groupTwo']?\r\n                            (<div className='collapse navbar-collapse my-2 pl-3 pl-md-5' \r\n                            id={item[num].replace(/[ ._\\-()]/g,'')}>\r\n                                <table className='table table-hover'>\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th className='align-top' style={{cursor:'pointer'}} data-order='asc'\r\n                                            onClick={(e)=>{\r\n                                            if (resultInput[item[num]]) {\r\n                                                const id='subNum'+item[num].replace(/[ ._\\-()]/g,'');   \r\n                                                e.target.setAttribute('data-order',\r\n                                                e.target.getAttribute('data-order')==='asc'?'desc':'asc')\r\n                                                let sortedData={}\r\n                                                sortedData[item[num]]=sortData(resultInput[item[num]],subNum,e.target.getAttribute('data-order'))\r\n                                                changeResultInput(Object.assign({},resultInput,sortedData))\r\n                            \r\n                                                if (e.target.getAttribute('data-order')==='asc') {\r\n                                                    document.getElementById(id).classList.remove('fa-caret-up');\r\n                                                    document.getElementById(id).classList.add('fa-caret-down')\r\n                                                }\r\n                                                else {\r\n                                                    document.getElementById(id).classList.remove('fa-caret-down');\r\n                                                    document.getElementById(id).classList.add('fa-caret-up')\r\n                                                }\r\n                                            }\r\n                                            }}>\r\n                                                {resultInput['groupTwo']==='itemCode'?'Stock No.':'Debtor No.'}\r\n                                                <i id={'subNum'+item[num].replace(/[ ._\\-()]/g,'')} className='fa fa-caret-down ml-2'></i>\r\n                                            </th>\r\n                                            <th className='align-top' style={{cursor:'pointer'}} data-order='asc'\r\n                                            onClick={(e)=>{\r\n                                            if (resultInput[item[num]]) {\r\n                                                const id='subName'+item[num].replace(/[ ._\\-()]/g,'');   \r\n                                                e.target.setAttribute('data-order',\r\n                                                e.target.getAttribute('data-order')==='asc'?'desc':'asc')\r\n                                                let sortedData={}\r\n                                                sortedData[item[num]]=sortData(resultInput[item[num]],subName,e.target.getAttribute('data-order'))\r\n                                                changeResultInput(Object.assign({},resultInput,sortedData))\r\n                            \r\n                                                if (e.target.getAttribute('data-order')==='asc') {\r\n                                                    document.getElementById(id).classList.remove('fa-caret-up');\r\n                                                    document.getElementById(id).classList.add('fa-caret-down')\r\n                                                }\r\n                                                else {\r\n                                                    document.getElementById(id).classList.remove('fa-caret-down');\r\n                                                    document.getElementById(id).classList.add('fa-caret-up')\r\n                                                }\r\n                                            }\r\n                                            }}>\r\n                                                    Name\r\n                                                    <i id={'subName'+item[num].replace(/[ ._\\-()]/g,'')} className='fa fa-caret-down ml-2'></i>\r\n                                                </th>\r\n                                            {populateTableHeader()}\r\n                                            <th className='align-top'>Total Qty</th>\r\n                                            <th className='align-top'>Total</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {resultInput[item[num]]? resultInput[item[num]].map(item2=>{\r\n                                            if (subItemAlreadyParsed.indexOf(item2[subNum])===-1) {\r\n                                                subItemAlreadyParsed.push(item2[subNum])\r\n                                                return (\r\n                                                    <tr key={item2[subNum]}>\r\n                                                        <td className='align-top'>{item2[subNum]}</td>\r\n                                                        <td className='align-top'>{item2[subName]}</td>\r\n                                                        {populateTableMonthsAmount(item2,resultInput[item[num]],subField)}\r\n                                                        <td className='align-top'>\r\n                                                            {resultInput[item[num]].reduce((a,b)=>{\r\n                                                                if (b[subNum]===item2[subNum]) \r\n                                                                    return a+b[subQty]\r\n                                                                else return a\r\n                                                            },0)}\r\n                                                        </td>\r\n                                                        <td className='align-top'>\r\n                                                            {numberFormatParser(resultInput[item[num]].reduce((a,b)=>{\r\n                                                                if (b[subNum]===item2[subNum]) \r\n                                                                    return a+b[subTotal]\r\n                                                                else return a\r\n                                                            },0)\r\n                                                            )}\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                )\r\n                                            }\r\n                                            \r\n                                        })\r\n                                        :null}\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>):null}\r\n                        </div>\r\n                    )}\r\n            })\r\n            return result;\r\n        }\r\n\r\n        return (\r\n            <div className=\"overflow-auto mb-5 pt-3\" style={{transform:'rotateX(180deg)'}}>\r\n                <div style={{width:calculatedWidth,transform:'rotateX(180deg)'}}>\r\n                    <div className='row flex-nowrap text-white bg-secondary pt-2 pb-1' \r\n                    style={{marginLeft:0,marginRight:0,}}>\r\n                        <h6 style={{flex:'0 0 34px',paddingLeft:10,paddingRight:10}}></h6>\r\n                        <h6 style={{flex:'0 0 120px',paddingLeft:10,paddingRight:10,cursor:'pointer'}}\r\n                            data-order='asc' onClick={(e)=>{\r\n                            e.target.setAttribute('data-order',\r\n                            e.target.getAttribute('data-order')==='asc'?'desc':'asc')\r\n                            resultInput['data'][0]=sortData(resultInput['data'][0],num,e.target.getAttribute('data-order'))\r\n                            changeResultInput({...resultInput})\r\n                                if (e.target.getAttribute('data-order')==='asc') {\r\n                                    document.getElementById('num').classList.remove('fa-caret-up');\r\n                                    document.getElementById('num').classList.add('fa-caret-down')\r\n                                }\r\n                                else {\r\n                                    document.getElementById('num').classList.remove('fa-caret-down');\r\n                                    document.getElementById('num').classList.add('fa-caret-up')\r\n                                }\r\n                            }\r\n                                    \r\n                            }>\r\n                            {resultInput['groupOne']==='debtorCode'?'Debtor No.':'Stock No.'}\r\n                            <i id='num' className='fa fa-caret-down ml-2'></i>\r\n                        </h6>\r\n                        <h6 style={{flex:'0 0 225px',paddingLeft:10,paddingRight:10,cursor:'pointer'}}\r\n                        data-order='asc' onClick={(e)=>{\r\n                            e.target.setAttribute('data-order',\r\n                            e.target.getAttribute('data-order')==='asc'?'desc':'asc')\r\n                            resultInput['data'][0]=sortData(resultInput['data'][0],name,e.target.getAttribute('data-order'))\r\n                            changeResultInput({...resultInput})\r\n                                if (e.target.getAttribute('data-order')==='asc') {\r\n                                    document.getElementById('name').classList.remove('fa-caret-up');\r\n                                    document.getElementById('name').classList.add('fa-caret-down')\r\n                                }\r\n                                else {\r\n                                    document.getElementById('name').classList.remove('fa-caret-down');\r\n                                    document.getElementById('name').classList.add('fa-caret-up')\r\n                                }\r\n                            }\r\n                            }>\r\n                            Name\r\n                            <i id='name' className='fa fa-caret-down ml-2'></i>\r\n                        </h6>\r\n                        {header}\r\n                        {resultInput['groupOne']==='debtorCode'?null:\r\n                        <h6 style={{flex:'0 0 100px',paddingLeft:10,paddingRight:10}}>Qty</h6>}\r\n                        <h6 style={{flex:'0 0 100px',paddingLeft:10,paddingRight:10}}>Total</h6>\r\n                    </div>\r\n                    <div style={{overflowY:'auto',overflowX:'hidden',maxHeight:'60vh'}}>\r\n                        {populateItem()}\r\n                    </div>\r\n                </div>\r\n            </div>)\r\n    }\r\n\r\n    let errorDisplay=null;\r\n\r\n    if ((dataSelectDebtor && dataSelectDebtor.error) || errorSelectDebtor || (dataSelectStock && dataSelectStock.error) || errorSelectStock \r\n    || (dataSelectSalesAnalysis && dataSelectSalesAnalysis.error) || errorSelectSalesAnalysis )\r\n    errorDisplay=(\r\n        <div className=\"alert alert-warning\">\r\n            {dataSelectDebtor && dataSelectDebtor.error? 'Debtor List RETRIEVAL for item failed errno: '+dataSelectDebtor.error.errno\r\n            +' code: '+dataSelectDebtor.error.code+' message: '+dataSelectDebtor.error.sqlMessage:null}\r\n            {errorSelectDebtor? 'Debtor List RETRIEVAL for item failed '+errorSelectDebtor : null}\r\n            <br/>\r\n            <br/>\r\n            {dataSelectStock && dataSelectStock.error? 'Stock List RETRIEVAL for item failed errno: '+dataSelectStock.error.errno\r\n            +' code: '+dataSelectStock.error.code+' message: '+dataSelectStock.error.sqlMessage:null}\r\n            {errorSelectStock? 'Stock List RETRIEVAL for item failed '+errorSelectStock : null}\r\n            <br/>\r\n            <br/>\r\n            {dataSelectSalesAnalysis && dataSelectSalesAnalysis.error? 'Sales Report RETRIEVAL for item failed errno: '+dataSelectSalesAnalysis.error.errno\r\n            +' code: '+dataSelectSalesAnalysis.error.code+' message: '+dataSelectSalesAnalysis.error.sqlMessage:null}\r\n            {errorSelectSalesAnalysis? 'Sales Report RETRIEVAL for item failed '+errorSelectSalesAnalysis : null}\r\n\r\n        </div>\r\n    )\r\n    \r\n    return (\r\n        <Switch>\r\n            <Route exact path={`${path}/Preview`}>\r\n                {resultInput? \r\n                (<SalesReportOne\r\n                    backPath={SalesReport.path}\r\n                    description={SalesReport.description}\r\n                    resultInput={resultInput}\r\n                    withDetails={withDetails}\r\n                    data={sortData(resultInput['dataPreview'][0],sortCriteria,'asc')}\r\n                    dataDetail={sortData(resultInput['dataPreview'][1],detailSortCriteria,'asc')}\r\n                    field={resultInput['field']}\r\n                    getFormattedDate={getFormattedDate}\r\n                   \r\n                    \r\n                />):<Redirect to={SalesReport.path}/>}\r\n            </Route>\r\n\r\n            <Route exact path={path}>\r\n                <AppLayout>\r\n                    <div className='container pt-3' style={{paddingLeft:20,paddingRight:20}}>\r\n                        <h3>{SalesReport.description}</h3>\r\n                        <form className='mt-3' onSubmit={e=>{\r\n                        e.preventDefault();\r\n                        changeGenerateReportWarning(false);\r\n                        if (groupOne==='debtorCode')\r\n                        changeParamSalesAnalysis({\r\n                            url:'./ReportItem',\r\n                            init:{\r\n                                method:'POST',\r\n                                headers:{'Content-Type':'application/json'},\r\n                                body:JSON.stringify({\r\n                                    item:'sales_analysis_debtor_stock',\r\n                                    param:[dateStart,dateEnd,groupOneID,groupTwoID]\r\n                                }),\r\n                                credentials:'include'\r\n                            }\r\n                        })\r\n                        else \r\n                        changeParamSalesAnalysis({\r\n                            url:'./ReportItem',\r\n                            init:{\r\n                                method:'POST',\r\n                                headers:{'Content-Type':'application/json'},\r\n                                body:JSON.stringify({\r\n                                    item:'sales_analysis_stock_debtor',\r\n                                    param:[dateStart,dateEnd,groupOneID,groupTwoID]\r\n                                }),\r\n                                credentials:'include'\r\n                            }\r\n                        })\r\n                        \r\n                        \r\n                        }}>\r\n                        <div className='form-row'>\r\n                            <div className='form-group form-row mx-0 col-12'>\r\n                                <label className='col-md-2 col-form-label' style={{paddingLeft:0}} htmlFor='dateStart'>Date Start</label>\r\n                                <input type='date' id='dateStart' required onChange={(e)=>{\r\n                                    if (new Date(e.target.value)>new Date(dateEnd)) {\r\n                                        alert('Invalid Date Start Entry')\r\n                                        changeDateStart(new Date().getFullYear()+'-01-01')\r\n                                    }\r\n                                    else changeDateStart(e.target.value)\r\n                                }} \r\n                                    value={dateStart} required className='form-control col-md-3 mb-3 mb-md-0'/>\r\n                                <label className='offset-md-1 col-md-2 col-form-label' style={{paddingLeft:0}} htmlFor='dateEnd'>Date End</label>\r\n                                <input type='date' id='dateEnd' required onChange={(e)=>{\r\n                                    if (new Date(e.target.value)<new Date(dateStart)) {\r\n                                        alert('Invalid Date End Entry')\r\n                                        changeDateEnd(getFormattedDate(new Date()))\r\n                                    }\r\n                                    else changeDateEnd(e.target.value)\r\n                                }} value={dateEnd} required className='form-control col-md-3 mb-3 mb-md-0'/>\r\n                            </div>\r\n                            \r\n                            <fieldset className='form-group border py-3 px-4 border-secondary rounded col-md-7'>\r\n                                <legend className='col-form-label col-4 offset-4 text-center'>\r\n                                    <h6>Options</h6>\r\n                                </legend>\r\n\r\n                                <div className='form-group form-row'>\r\n                                    <label className='col-md-2 col-form-label' htmlFor='groupOne'>Group One</label>\r\n                                    <select className='form-control col-md-2' required id='groupOne' \r\n                                    value={groupOne} onChange={e=>{\r\n                                        changeGroupOne(e.target.value)\r\n                                        changeGroupTwo('')\r\n                                        changeGroupOneID([])\r\n                                        changeGroupTwoID([])\r\n                                    }}>\r\n                                        <option value='debtorCode'>Debtor Code</option>\r\n                                        <option value='itemCode'>Item Code</option>\r\n                                    </select>\r\n                                    <label className='col-md-2 col-form-label pl-3' htmlFor='groupOneID'>\r\n                                        {groupOne==='debtorCode'?'Debtor ID':'Stock ID'}\r\n                                    </label>\r\n                                    <select className='form-control col-md-6' required size='3' id='groupOneID' \r\n                                    value={groupOneID} multiple={true} onChange={e=>{\r\n                                        let result=[];\r\n                                        Array.from(e.target.options).map(option=>{\r\n                                            if (option.selected===true) \r\n                                                result.push(option.value) \r\n                                        })\r\n                                        changeGroupOneID(result)\r\n                                    }}>\r\n                                        {groupOne==='debtorCode'?debtorList:stockList}\r\n                                    </select>\r\n                                </div>\r\n\r\n                                <div className='form-group form-row'>\r\n                                    <div className='form-check offset-md-6'>\r\n                                        <input type='checkbox' className=' form-check-input' id='groupOneAllID' \r\n                                        checked={groupOne==='debtorCode'? (dataSelectDebtor && dataSelectDebtor.data.length===groupOneID.length?\r\n                                            true:false):(dataSelectStock && dataSelectStock.data.length===groupOneID.length?\r\n                                                true:false)}\r\n                                        onChange={e=>{\r\n                                            if (e.target.checked) \r\n                                                changeGroupOneID(groupOne==='debtorCode'?\r\n                                                dataSelectDebtor.data.map(data=>\r\n                                                    data[dataSelectDebtor.field[0].name])\r\n                                                :dataSelectStock.data.map(data=>\r\n                                                    data[dataSelectStock.field[0].name])\r\n                                                )\r\n                                            else changeGroupOneID([])\r\n                                        }}/>\r\n                                        <label htmlFor='groupOneAllID' style={{paddingLeft:0}} className='form-check-label'>\r\n                                            {groupOne==='debtorCode'?'All Debtor ID':'All Stock ID'}\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className='form-group form-row'>\r\n                                    <label className='col-md-2 col-form-label' htmlFor='groupTwo'>Group Two</label>\r\n                                    <select className='form-control col-md-2' id='groupTwo' \r\n                                    value={groupTwo} onChange={e=>{\r\n                                        changeGroupTwo(e.target.value)\r\n                                        changeGroupTwoID([])\r\n                                    }}>\r\n                                        <option value=''> -select an option- </option>\r\n                                        <option value={groupOne==='debtorCode'?'itemCode':'debtorCode'}>{groupOne==='debtorCode'?'Item Code':'Debtor Code'}</option>\r\n                                    </select>\r\n                                    {groupTwo? (<label className='col-md-2 col-form-label pl-3' htmlFor='groupTwoID'>\r\n                                        {groupTwo==='debtorCode'?'Debtor ID':'Stock ID'}\r\n                                    </label>):null}\r\n                                    {groupTwo? (<select className='form-control col-md-6' required size='3' id='groupTwoID'\r\n                                    disabled={groupTwo?false:true}\r\n                                    value={groupTwoID} multiple={true} onChange={e=>{\r\n                                        let result=[];\r\n                                        Array.from(e.target.options).map(option=>{\r\n                                            if (option.selected===true) \r\n                                                result.push(option.value) \r\n                                        })\r\n                                        changeGroupTwoID(result);\r\n                                    }}>\r\n                                        {groupTwo==='debtorCode'?debtorList:stockList}\r\n                                    </select>):null}\r\n                                </div>\r\n\r\n                                {groupTwo? (<div className='form-group form-row'>\r\n                                    <div className='form-check offset-md-6'>\r\n                                        <input type='checkbox' className=' form-check-input' id='groupTwoAllID' \r\n                                        checked={groupTwo==='debtorCode'? (dataSelectDebtor && dataSelectDebtor.data.length===groupTwoID.length?\r\n                                        true:false):(dataSelectStock && dataSelectStock.data.length===groupTwoID.length?\r\n                                            true:false)}\r\n                                        onChange={e=>{\r\n                                            if (e.target.checked) \r\n                                                changeGroupTwoID(groupTwo==='debtorCode'?\r\n                                                dataSelectDebtor.data.map(data=>\r\n                                                    data[dataSelectDebtor.field[0].name])\r\n                                                :dataSelectStock.data.map(data=>\r\n                                                    data[dataSelectStock.field[0].name])\r\n                                                )\r\n                                            else changeGroupTwoID([])\r\n                                        }}/>\r\n                                        <label htmlFor='groupTwoAllID' style={{paddingLeft:0}} className='form-check-label'>\r\n                                            {groupTwo==='debtorCode'?'All Debtor ID':'All Stock ID'}\r\n                                        </label>\r\n                                    </div>\r\n                                </div>):null}\r\n\r\n                            </fieldset>\r\n\r\n                            <fieldset className='form-group py-2 px-4 border border-secondary rounded col-md-3 offset-md-1'>\r\n                                <legend className='col-form-label col-md-6 offset-md-3 col-8 offset-2 text-center'>\r\n                                    <h6>Preview Options</h6>\r\n                                </legend>\r\n                                <div className='form-row'>\r\n                                <div className='form-check col-md-12 form-group col-form-label' style={{paddingLeft:20}}>\r\n                                    <input type='checkbox' className='form-check-input' id='withDetails' onChange={e=>{\r\n                                        if (e.target.checked) \r\n                                            changeWithDetails(true)\r\n                                        else changeWithDetails(false)\r\n                                        }} checked={withDetails}/>\r\n                                    <label htmlFor='withDetails' className='form-check-label'>With Details</label>\r\n                                </div>\r\n\r\n                                <div className='form-group form-row col-md-12'>\r\n                                    <label className='col-md-4 col-form-label' style={{paddingLeft:0}} htmlFor='sort'>\r\n                                        Sort\r\n                                    </label>\r\n                                    <select id='sort' className='form-control col-md-8' value={sortCriteria} onChange={e=>\r\n                                        changeSortCriteria(e.target.value)\r\n                                    }>\r\n                                        <option value=''> -select an option- </option>\r\n                                        {sortCriteriaList}\r\n                                    </select>\r\n                                </div>\r\n\r\n                                <div className='form-group col-md-12 form-row'>\r\n                                    <label className='col-md-6 col-form-label ' style={{paddingLeft:0}} htmlFor='sort'>\r\n                                        Detail Sort\r\n                                    </label>\r\n                                    <select id='sort' className='form-control col-md-6' value={detailSortCriteria} onChange={e=>\r\n                                        changeDetailSortCriteria(e.target.value)\r\n                                    }>\r\n                                        <option value=''> -select an option- </option> \r\n                                        {detailSortCriteriaList}\r\n                                    </select>\r\n                                </div>\r\n                                </div>\r\n                            </fieldset>\r\n                            <div className='col-md-12'>\r\n                                <button type='submit' className='btn btn-primary mx-2'>Generate</button>\r\n                                <button type='button' className='btn btn-warning' onClick={e=>\r\n                                    changeResultInput(null)}>Clear</button>\r\n                                <button type='button' onClick={(e)=>{\r\n                                    if (!resultInput) {\r\n                                        changeGenerateReportWarning(true)\r\n                                    }\r\n                                    else {\r\n                                        document.querySelector(\"meta[name=viewport]\").setAttribute(\r\n                                        'content','width=device-width, initial-scale=0.4');\r\n                                        setPageSize('a4 landscape')\r\n                                        history.push('./SalesReport/Preview')\r\n                                    }}\r\n                                } \r\n                                className='btn btn-info mx-1 my-1'>Preview</button>\r\n                                {generateReportWarning? \r\n                                (<div className=\"alert alert-warning\">\r\n                                    Please generate report first!\r\n                                </div>):null}\r\n                            </div>\r\n                        </div>\r\n                        </form>\r\n                        <hr/>\r\n                        {errorDisplay}\r\n\r\n                        {resultInput? \r\n                        (<div className='mb-5'>\r\n                            <h5 className='py-2'>\r\n                                Result\r\n                                <button className='btn btn-dark mx-2' \r\n                                    onClick={(e)=>collapsibleElementID.forEach(ID=>\r\n                                        $('#'+ID).collapse('show')\r\n                                )}><i className='fa fa-plus-square'></i> Expand</button>\r\n                                <button className='btn btn-light'  \r\n                                    onClick={(e)=>collapsibleElementID.forEach(ID=>\r\n                                        $('#'+ID).collapse('hide')\r\n                                )}> <i className='fa fa-minus-square'></i> Collapse</button>\r\n                            </h5>\r\n                            {populateResult()}\r\n                            \r\n                        </div>):null\r\n                        }\r\n                        <hr className='pb-3'/>\r\n                    </div>\r\n                </AppLayout>\r\n            </Route>\r\n            <Redirect to={SalesReport.path}/>\r\n        </Switch>\r\n    )\r\n}\r\nSalesReport.description='Sales Report';\r\nSalesReport.path='/SalesReport';\r\n\r\nexport default SalesReport;","import React,{useState,useEffect,useContext} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport useFetch from '../Shared/useFetch';\r\nimport authContext from '../Shared/authContext';\r\n\r\n\r\nfunction Item(props) {\r\n    /*this is a reusable component for all item components (i.e. StockItem.js,DeliveryOrderItem.js) and contains state logic for performing\r\n    (SELECT,UPDATE,INSERT,DELETE) SQL DB operations on form data using useFetch hook.\r\n\r\n    /*If item component accessed from previous page using fetched and filtered items, URL will have parameters starting with ?item=... \r\n    If accessed using 'Create New Item' button from previous page, will have no URL parameters. Existence of URL parameters (have to be \r\n    passed in from parent component in props.URL due to props.location.search only accessible in the component immediately after <Route> in \r\n    react-router) will be used to set initial state to 'INSERT' or 'UPDATE/DELETE' and component will render appropriately */\r\n    \r\n    \r\n    const [usage] = useState(props.url.item && props.url.id?'UPDATE/DELETE':'INSERT');/*if there are URL parameters, state is 'UPDATE/DELETE' \r\n    and vice versa*/\r\n    const [disabled,changeDisabled] = useState(usage==='UPDATE/DELETE'?true:false);/*If state is 'UPDATE/DELETE', all input fields will be \r\n    pre-populated with existing item form data using useFetch hook below and disabled until 'Edit' button is clicked which will re-enable \r\n    editing (certain input fields remain disabled even after 'Edit' is clicked for DB operation purpose). Delete button will also render\r\n    in 'UPDATE/DELETE' state. For 'INSERT' state, none of input fields are disabled and no Edit and Delete button will render*/\r\n    \r\n    /*5 instances of useFetch hook to fetch 5 types of data:1) dataSelect (for initial fetch to pre-populate input field for 'UPDATE/DELETE' \r\n    state) 2) dataInsert (for results of submission of new form data for 'INSERT' state) 3) dataIDList (for list of ID) 4) dataDelete (for results of deletion of existing form data for 'UPDATE/DELETE' state) 5) dataUpdate (for results of update of \r\n    existing form data for 'UPDATE/DELETE' state)*/\r\n\r\n    const [{data:dataSelect,error:errorSelect}]=useFetch(usage==='UPDATE/DELETE'?{\r\n        url:'./SelectItem',\r\n        init:{\r\n            method:'POST',\r\n            headers:{'Content-Type':'application/json'},\r\n            body:JSON.stringify({item:props.url.item,id:props.url.id}),\r\n            credentials:'include'\r\n        }\r\n    }:null)\r\n    const [{data:dataIDList,error:errorIDList}]=useFetch({\r\n        url:'./getIDList',\r\n        init:{\r\n            method:'POST',\r\n            headers:{'Content-Type':'application/json'},\r\n            body:JSON.stringify({item:props.item}),\r\n            credentials:'include'\r\n        }\r\n    })\r\n    const [{data:dataInsert,error:errorInsert},changeParamInsert]=useFetch(null);\r\n    const [{data:dataDelete,error:errorDelete},changeParamDelete]=useFetch(null);\r\n    const [{data:dataUpdate,error:errorUpdate},changeParamUpdate]=useFetch(null);\r\n\r\n    const [IDInfo,changeIDInfo]=useState({\r\n        IDPrefix:[],\r\n        IDPrefixLatestNumber:[],\r\n        currentIDPrefix:'',\r\n        minIDNumber:1,\r\n    })\r\n    \r\n    const {changeAuth} = useContext(authContext)\r\n    const history=useHistory();\r\n    \r\n    /*The below useEffect logic conditions to handle each type of data fetched using the useFetch hooks*/\r\n\r\n    useEffect(()=>{        \r\n\r\n        /* 1) For 'UPDATE/DELETE' state, pre-populate input state with fetched data. Input state are set at parent component (ie. StockItem.js,\r\n        DeliveryOrderItem.js) and changeState functions for each input state are passed as prop (props.changeInputState) \r\n        to this component for initial pre-population once dataSelect is resolved*/ \r\n\r\n        if (dataSelect && dataSelect.auth===false) {\r\n            /*if server sends object.auth===false due to failed cookie validation, will auto-redirect to /Login page after alert.\r\n            Same for all types of data fetch*/\r\n                alert('Cookies Expired or Authorisation invalid. Please Login again!')\r\n                changeAuth(false)\r\n            }\r\n            \r\n        else if (dataSelect && dataSelect.field && dataSelect.data[0]) {\r\n                /*In order for correct pre-population of input state, make sure that in the parent component, order of inputState\r\n                array elements correspond to field order in DB (ie if STOCK_NUM is first field column in DB, inputState[0] will be \r\n                populated with fetched data from DB for field STOCK_NUM) */\r\n                let inputStateToBePrePopulated=[];\r\n                dataSelect.field.forEach((field,i)=>{\r\n                    inputStateToBePrePopulated=\r\n                    [...inputStateToBePrePopulated.slice(0,i),(dataSelect.data[0][field.name]?dataSelect.data[0][field.name]:''),\r\n                    ...inputStateToBePrePopulated.slice(i+1,inputStateToBePrePopulated.length)];\r\n                })\r\n                \r\n                \r\n                changeIDInfo(state=>({\r\n                    ...state,\r\n                    currentIDPrefix:dataSelect.data[0][props.item.toUpperCase()+'_NUM'].substring(0,dataSelect.data[0][props.item.toUpperCase()+'_NUM'].indexOf(\"-\")),\r\n                }))\r\n                props.changeInputState(inputStateToBePrePopulated)\r\n                \r\n                if(props.changeParamOutstanding)\r\n                    props.changeParamOutstanding(\r\n                        props.paramOutstanding(\r\n                            inputStateToBePrePopulated[props.debtorCreditorNumPosition],\r\n                            inputStateToBePrePopulated[props.oldNumPosition]\r\n                            )\r\n                        )\r\n            }\r\n                \r\n        },[dataSelect,errorSelect])\r\n\r\n    useEffect(()=>{\r\n            /*2) obtain latest primary list key from DB for this item*/\r\n            if (dataIDList && dataIDList.auth===false) {\r\n                    alert('Cookies Expired or Authorisation invalid. Please Login again!');\r\n                    changeAuth(false);\r\n                }\r\n            else if (dataIDList && dataIDList.data && dataIDList.field) {\r\n                let prefixList=[];\r\n                let prefixLatestNumberList=[];\r\n\r\n                dataIDList.data.forEach(ID=>{\r\n                    let parsedPrefix=ID[dataIDList.field[0].name].match(/[^-]+/)[0];\r\n                    let parsedPrefixNumber=parseInt(ID[dataIDList.field[0].name].substring(ID[dataIDList.field[0].name].indexOf(\"-\")+1));\r\n                    if(prefixList.indexOf(parsedPrefix)===-1) {\r\n                        prefixList.push(parsedPrefix)\r\n                        prefixLatestNumberList.push(parsedPrefixNumber)\r\n                    }\r\n                    else if (parsedPrefixNumber && parsedPrefixNumber>prefixLatestNumberList[prefixList.indexOf(parsedPrefix)]) {\r\n                        prefixLatestNumberList[prefixList.indexOf(parsedPrefix)]=parsedPrefixNumber\r\n                    }\r\n                    })\r\n                changeIDInfo(state=>({\r\n                    ...state,\r\n                    IDPrefix:prefixList,\r\n                    IDPrefixLatestNumber:prefixLatestNumberList\r\n                })) \r\n            }\r\n           \r\n            \r\n            /*3) For dataInsert,if successful direct to the associated Process component. Otherwise display error \r\n            and retain current component state*/\r\n            if (dataInsert && dataInsert.auth===false) {\r\n                alert('Cookies Expired or Authorisation invalid. Please Login again!');\r\n                changeAuth(false);\r\n            }\r\n            else if (dataInsert && !dataInsert.error) {\r\n                alert('Insert Successful!')\r\n                history.push(props.successPath)\r\n            }\r\n            /*4) For dataUpdate,if successful direct to the associated Process component. Otherwise display error \r\n            and retain current component state*/\r\n            if (dataUpdate && dataUpdate.auth===false) {\r\n                alert('Cookies Expired or Authorisation invalid. Please Login again!');\r\n                changeAuth(false);\r\n            }\r\n            else if (dataUpdate && !dataUpdate.error) {\r\n                alert('Update Successful!')\r\n                history.push(props.successPath)\r\n            }\r\n            /*5) For dataDelete,if successful direct to the associated Process component. Otherwise display error \r\n            and retain current component state*/\r\n            if (dataDelete && dataDelete.auth===false) {\r\n                alert('Cookies Expired or Authorisation invalid. Please Login again!');\r\n                changeAuth(false);\r\n            }\r\n            else if (dataDelete && !dataDelete.error) {\r\n                alert('Delete Successful!')\r\n                history.push(props.successPath)\r\n            }\r\n\r\n            \r\n    },[dataIDList,errorIDList,dataInsert,errorInsert,dataUpdate,errorUpdate,dataDelete,errorDelete])\r\n\r\n    \r\n\r\n    function onInsert() {\r\n        changeParamInsert({\r\n            url:'./InsertItem',\r\n            init:{\r\n                method:'POST',\r\n                headers:{'Content-Type':'application/json'},\r\n                body:JSON.stringify({\r\n                    item:props.item,\r\n                    param:props.inputState\r\n                }),\r\n                credentials:'include'\r\n            }\r\n        })\r\n    }\r\n\r\n    function onUpdate() {\r\n        changeParamUpdate({\r\n            url:'./UpdateItem',\r\n            init:{\r\n                method:'POST',\r\n                headers:{'Content-Type':'application/json'},\r\n                body:JSON.stringify({\r\n                    item:props.item,\r\n                    param:props.inputState\r\n                }),\r\n                credentials:'include'\r\n            }\r\n        })\r\n    }\r\n\r\n    function onDelete() {\r\n        if(window.confirm('Confirm Delete?'))\r\n        changeParamDelete({\r\n            url:'./DeleteItem',\r\n            init:{\r\n                method:'POST',\r\n                headers:{'Content-Type':'application/json'},\r\n                body:JSON.stringify({\r\n                    item:props.item,\r\n                    id:[props.url.id]\r\n                }),\r\n                credentials:'include'\r\n            }\r\n        })\r\n    }\r\n\r\n    function inputNumberRender(inputNumberProps) {\r\n        return (\r\n            <div className={inputNumberProps.layout+ ' input-group'}>\r\n                <input type='text' maxLength={10} value={IDInfo.currentIDPrefix} required className='form-control \r\n                col-5 col-md-4' pattern='[A-Za-z]+' title='Use Alphabets only (Max 4)' disabled={disabled} \r\n                onChange={(e)=>{\r\n                    let matchedIndex=IDInfo.IDPrefix.indexOf(e.target.value);\r\n                    if (matchedIndex!==-1) {\r\n                        changeIDInfo({\r\n                            ...IDInfo,\r\n                            currentIDPrefix:e.target.value,\r\n                            minIDNumber:IDInfo.IDPrefixLatestNumber[matchedIndex]+1\r\n                        });\r\n                        inputNumberProps.onChange('',inputNumberProps.position);\r\n                    }\r\n                    else {\r\n                        changeIDInfo ({\r\n                            ...IDInfo,\r\n                            currentIDPrefix:e.target.value,\r\n                            minIDNumber:1\r\n                        });\r\n                        inputNumberProps.onChange('',inputNumberProps.position);\r\n                    }\r\n                }\r\n                }/>\r\n                <select className='form-control' style={{flex:'0 1 0'}} disabled={disabled} onChange={(e)=>{\r\n                    let matchedIndex=IDInfo.IDPrefix.indexOf(e.target.value);\r\n                    if (matchedIndex!==-1) {\r\n                        changeIDInfo({\r\n                            ...IDInfo,\r\n                            currentIDPrefix:e.target.value,\r\n                            minIDNumber:IDInfo.IDPrefixLatestNumber[matchedIndex]+1\r\n                        })\r\n                        inputNumberProps.onChange('',inputNumberProps.position);\r\n                    }\r\n                    else {\r\n                        changeIDInfo ({\r\n                            ...IDInfo,\r\n                            currentIDPrefix:e.target.value,\r\n                            minIDNumber:1\r\n                        })\r\n                        inputNumberProps.onChange('',inputNumberProps.position);\r\n                    }\r\n                }\r\n                }>\r\n                    <option value=''>-select an option- </option>\r\n                    {IDInfo.IDPrefix.map((ID,i)=>(\r\n                        <option key={ID} value={ID}>\r\n                            {ID +' | Latest Number: '+ IDInfo.IDPrefixLatestNumber[i]}\r\n                        </option>)\r\n                    )}\r\n                </select>\r\n                <input type='number' id={inputNumberProps.labelID} max='999999999'\r\n                value={props.inputState[inputNumberProps.position].substring(props.inputState[inputNumberProps.position].indexOf(\"-\")+1)} \r\n                onChange={(e)=>inputNumberProps.onChange(IDInfo.currentIDPrefix+'-'+e.target.value,inputNumberProps.position)} \r\n                disabled={disabled} required className='form-control' placeholder={'Next Number : '+(IDInfo.minIDNumber)} \r\n                min={IDInfo.minIDNumber}/>\r\n                                \r\n            </div>\r\n        )\r\n    }\r\n    \r\n    //error summary component\r\n    let errorDisplay=null;\r\n    if ((dataSelect && dataSelect.error) || errorSelect || (dataIDList && dataIDList.error) || errorIDList || (dataInsert && dataInsert.error) || errorInsert\r\n        || (dataDelete && dataDelete.error) || errorDelete || (dataUpdate && dataUpdate.error) || errorUpdate)\r\n        errorDisplay=(\r\n        <div className=\"alert alert-warning\">\r\n            {dataSelect && dataSelect.error? 'Data RETRIEVAL for item failed errno: '+dataSelect.error.errno+' code: '+dataSelect.error.code+' message: '+dataSelect.error.sqlMessage:null}\r\n            {errorSelect? 'Data RETRIEVAL for item failed '+errorSelect : null}\r\n            \r\n            {dataInsert && dataInsert.error? 'Data INSERT for item failed errno: '+dataInsert.error.errno+' code: '+dataInsert.error.code+' message: '+dataInsert.error.sqlMessage:null}\r\n            {errorInsert? 'Data INSERT for item failed '+errorInsert : null}\r\n            \r\n            {dataUpdate && dataUpdate.error? 'Data UPDATE for item failed errno: '+dataUpdate.error.errno+' code: '+dataUpdate.error.code+' message: '+dataUpdate.error.sqlMessage:null}\r\n            {errorUpdate? 'Data UPDATE for item failed '+errorUpdate : null}\r\n            \r\n            {dataDelete && dataDelete.error? 'Data DELETE for item failed errno: '+dataDelete.error.errno+' code: '+dataDelete.error.code+' message: '+dataDelete.error.sqlMessage:null}\r\n            {errorDelete? 'Data DELETE for item failed '+errorDelete : null}\r\n            <br/>\r\n            <br/>\r\n            {dataIDList && dataIDList.error? 'ID RETRIEVAL for item failed errno: '+dataIDList.error.errno+' code: '+dataIDList.error.code+' message: '+dataIDList.error.sqlMessage:null}\r\n            {errorIDList? 'ID RETRIEVAL for item failed '+errorIDList:null}\r\n        </div>\r\n    )\r\n    \r\n\r\n    \r\n    return props.children({usage,disabled,changeDisabled,onInsert,onUpdate,onDelete,errorDisplay,inputNumberRender})\r\n}\r\n\r\n\r\nexport default Item;\r\n","import React from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nfunction ItemButton(props) {\r\n    const history=useHistory();\r\n\r\n    return (\r\n        <div>\r\n            <button type='submit' className='btn btn-primary mx-1 my-1'>Submit</button>\r\n            {/*If state is 'INSERT', no Edit button & Delete button*/}\r\n            {props.usage==='UPDATE/DELETE'?(\r\n                <button type='button' onClick={(e)=>{props.changeDisabled(false)}} className='btn btn-outline-primary mx-1 my-1'>Edit</button>\r\n            ):null}\r\n            {props.usage==='UPDATE/DELETE'?(\r\n                <button type='button' onClick={(e)=>{props.onDelete()}} className='btn btn-danger mx-1 my-1'>Delete</button>\r\n            ):null}\r\n            {props.path? (\r\n                <button type='button' onClick={(e)=>{\r\n                    document.querySelector(\"meta[name=viewport]\").setAttribute(\r\n                        'content','width=device-width, initial-scale=0.5');\r\n                    history.push(props.path)\r\n                }} className='btn btn-info mx-1 my-1'>Preview</button>\r\n            ):null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ItemButton;","import React from 'react';\r\nimport numberFormatParser from '../numberFormatParser';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\n\r\n/*Layout for SALES INVOICE,PURCHASE INVOICE,DEBIT NOTE,CREDIT NOTE*/\r\n\r\nfunction DocumentOne(props) {\r\n    const history=useHistory();\r\n\r\n    const topLeftInput=props.topLeftInput? props.topLeftInput.map((input,i)=>\r\n        <p className='my-2' key={i}>{input}</p>\r\n        ):null;\r\n\r\n    const topRightArea=props.topRightField && props.topRightInput? props.topRightField.map((field,i)=>\r\n        (<div className='row' key={i}>\r\n            <div className='col-6 h6'>\r\n                {field}\r\n            </div>\r\n            <div className='col-1'>\r\n                :\r\n            </div>\r\n            <div className='col-4 h6'>\r\n                {props.topRightInput[i]}\r\n            </div>\r\n        </div>)):null;\r\n\r\n    const bottomField=props.bottomField? props.bottomField.map(field=>\r\n        <th className='text-nowrap' key={field}>{field}</th>\r\n        ):null;\r\n\r\n    const bottomInput=props.bottomInput? props.bottomInput.map((itemline,i)=>\r\n        \r\n         <tr key={i}>\r\n            {itemline.map((input,i)=>(\r\n                <td key={i}>{input}</td>\r\n                )\r\n            )}\r\n            {props.calculateSubtotal? <td>{numberFormatParser(props.calculateSubtotal(i))}</td>:null}\r\n        </tr>\r\n    \r\n        ):null;\r\n    \r\n    return (\r\n        <div className='container py-5' style={{maxWidth:'800px'}}>\r\n            <button type='click' className='btn btn-secondary d-print-none mb-2' \r\n            onClick={()=>{\r\n                document.querySelector(\"meta[name=viewport]\").setAttribute(\r\n                    'content','width=device-width, initial-scale=1.0');\r\n                history.push(props.backPath)\r\n                }}>Back</button>\r\n            <div className='jumbotron' style={{padding:0}}>\r\n                <h1 className='text-center'>{props.description}</h1>\r\n            </div>\r\n            <div className='row' style={{margin:0}}>\r\n                <div className='col-6 jumbotron h5' style={{marginBottom:0}}>\r\n                    {topLeftInput}\r\n                </div>\r\n                <div className='col-6 py-5'>\r\n                    {topRightArea}\r\n                </div>\r\n            </div>\r\n            <hr className='border border-secondary my-3'/>\r\n            <table className='table table-bordered'>\r\n                <thead>\r\n                    <tr>\r\n                        {bottomField}\r\n                    </tr>\r\n                </thead>\r\n                    \r\n                <tbody>\r\n                    {bottomInput}\r\n                </tbody>\r\n            </table>\r\n            \r\n            <h3 className='text-right px-3'>\r\n                {'Total: '+numberFormatParser(props.calculateTotal())}\r\n            </h3>\r\n            <hr className='border border-secondary'/>\r\n            <p className='text-center'>{props.footer}</p>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default DocumentOne;","import React,{useState} from 'react';\r\n\r\n\r\nfunction LineRenderQtyOnly(props) {\r\n    const minWidth=575;\r\n    const stockNum=props.dataSelectStock?props.dataSelectStock.field[0].name:null;\r\n    const stockDesc=props.dataSelectStock?props.dataSelectStock.field[1].name:null;\r\n    const stockBalQty=props.dataSelectStock?props.dataSelectStock.field[8].name:null;\r\n\r\n    function onChangeLineInput(e,order,lineNumber,innerOrder) {\r\n        props.changeInputState(inputState=>inputState.slice(0,order)\r\n        .concat([inputState[order].slice(0,lineNumber)\r\n        .concat([inputState[order][lineNumber].slice(0,innerOrder)\r\n        .concat(e)\r\n        .concat(inputState[order][lineNumber].slice(innerOrder+1))])\r\n        .concat(inputState[order].slice(lineNumber+1))])\r\n        .concat(inputState.slice(order+1)))\r\n    }\r\n\r\n    function addStockControlItem(i,itemCode,Qty) {\r\n        let targetPosition=props.inputState[props.stockControlPosition].findIndex(item=>item[0]-1===i)\r\n        \r\n        if (targetPosition>=0)\r\n                props.changeInputState(inputState=>\r\n                [...inputState.slice(0,props.stockControlPosition),\r\n                [...inputState[props.stockControlPosition].slice(0,targetPosition),\r\n                    [i+1,itemCode,Qty],\r\n                ...inputState[props.stockControlPosition].slice(targetPosition+1)],\r\n                ...inputState.slice(props.stockControlPosition+1)]\r\n                )\r\n            else\r\n                props.changeInputState(inputState=>\r\n                [...inputState.slice(0,props.stockControlPosition),\r\n                [...inputState[props.stockControlPosition],\r\n                    [i+1,itemCode,Qty]\r\n                ],\r\n                ...inputState.slice(props.stockControlPosition+1)]\r\n                )\r\n    }\r\n\r\n    function removeStockControlItem(i) {\r\n        let targetPosition=props.inputState[props.stockControlPosition].findIndex(item=>item[0]-1===i)\r\n        \r\n        if (targetPosition>=0)\r\n            props.changeInputState(inputState=>\r\n                [...inputState.slice(0,props.stockControlPosition),\r\n                [...inputState[props.stockControlPosition].slice(0,targetPosition),\r\n                ...inputState[props.stockControlPosition].slice(targetPosition+1)],\r\n                ...inputState.slice(props.stockControlPosition+1)]\r\n            )\r\n    }\r\n\r\n    function isNegativeStockBalance() {\r\n        if (props.dataSelectStock) \r\n            return props.inputState[props.stockControlPosition].some(item=>\r\n                calculateFinalQty(item) < 0\r\n            )\r\n        else return false;\r\n    }\r\n\r\n    function calculateFinalQty(item) {\r\n        if (props.stockDirection==='out')\r\n            return props.dataSelectStock.data.find(item2=>item2[stockNum]===item[1])[stockBalQty]-\r\n                props.inputState[props.stockControlPosition].reduce((a,b)=>{\r\n                    if(b[1]===item[1])\r\n                        return a+Number(b[2])\r\n                    else return a\r\n                },0)\r\n        else if (props.stockDirection==='in')\r\n            return props.dataSelectStock.data.find(item2=>item2[stockNum]===item[1])[stockBalQty]+\r\n                props.inputState[props.stockControlPosition].reduce((a,b)=>{\r\n                    if(b[1]===item[1])\r\n                        return a+Number(b[2])\r\n                    else return a\r\n                },0)\r\n    }\r\n    \r\n\r\n    function populateNegativeStockBalanceTable () {\r\n        const lineAlreadyFiltered=[]\r\n\r\n        if (props.dataSelectStock) {\r\n            props.inputState[props.stockControlPosition].forEach(item=>{\r\n                if(calculateFinalQty(item)<0 && lineAlreadyFiltered.indexOf(item[1])===-1)\r\n                    lineAlreadyFiltered.push(item[1])\r\n            })\r\n            \r\n            return lineAlreadyFiltered.map(stockNum1=>\r\n                (<tr key={stockNum1}>\r\n                    <td>{stockNum1}</td>\r\n                    <td>\r\n                        {props.dataSelectStock.data.find(item2=>\r\n                        item2[stockNum]===stockNum1)[stockDesc]}\r\n                    </td>\r\n                    <td>\r\n                        {props.dataSelectStock.data.find(item2=>\r\n                        item2[stockNum]===stockNum1)[stockBalQty]}\r\n                    </td>\r\n                    <td>\r\n                        {props.inputState[props.stockControlPosition].reduce((a,b)=>{\r\n                            if(b[1]===stockNum1)\r\n                                return a+Number(b[2])\r\n                            else return a\r\n                        },0)}\r\n                    </td>\r\n                    <td>\r\n                        {calculateFinalQty(props.inputState[props.stockControlPosition].find(item=>\r\n                            item[1]===stockNum1))}\r\n                    </td>\r\n                </tr>)\r\n            )\r\n        }\r\n        else return null\r\n    }\r\n\r\n    \r\nconsole.log(props.inputState)\r\n    return (\r\n        <fieldset className='form-group col-md-12 mx-3 border border-secondary pb-4 rounded'>\r\n            <legend className='col-form-label col-12 col-md-6 offset-md-3 text-center' >\r\n                <button type='button' className='btn btn-primary' disabled={props.disabled}\r\n                onClick={()=>\r\n                    props.changeInputState(\r\n                        props.inputState.slice(0,props.linePosition)\r\n                        .concat([props.inputState[props.linePosition].slice(0)\r\n                            .concat(\r\n                                [[props.inputState[props.linePosition].length+1,'','','']])])\r\n                        .concat(props.inputState.slice(props.linePosition+1))\r\n                    )\r\n                }>+</button>\r\n\r\n                <h6 className='d-inline-block mx-2 mx-md-4'>{props.lineDescription}</h6>\r\n\r\n                <button type='button' className='btn btn-secondary' disabled={props.disabled}\r\n                onClick={()=>{\r\n                    removeStockControlItem(props.inputState[props.linePosition].length-1)\r\n\r\n                    props.changeInputState(inputState=>\r\n                        inputState.slice(0,props.linePosition)\r\n                        .concat([inputState[props.linePosition].slice(0,inputState[props.linePosition].length-1)])\r\n                        .concat(inputState.slice(props.linePosition+1))\r\n                    )\r\n                }}>-</button>\r\n            </legend>\r\n            <div className=\"overflow-auto\">\r\n                {/*flex nowrap and overflow auto for mobile view*/}\r\n                <div className='row flex-nowrap' style={{marginLeft:0,marginRight:0}}>\r\n                    <h6 className='col text-nowrap' style={{flex:'1 0 80px',paddingLeft:10,paddingRight:10}}>Line No.</h6>\r\n                    <h6 className='col text-nowrap' style={{flex:'1 0 120px',paddingLeft:10,paddingRight:10}}>Item Code</h6>\r\n                    <h6 className='col' style={{flex:'1 0 75px',paddingLeft:10,paddingRight:10}}>Stock Control</h6>\r\n                    <h6 className='col text-nowrap' style={{flex:'1 0 225px',paddingLeft:10,paddingRight:10}}>Description</h6>\r\n                    <h6 className='col text-nowrap' style={{flex:'1 0 75px',paddingLeft:10,paddingRight:10}}>Qty</h6>\r\n                </div>\r\n\r\n                {props.inputState[props.linePosition].map((lineSet,i)=>\r\n                <div className='row flex-nowrap' style={{marginLeft:0,marginRight:0}} key={i}>\r\n                    {/*set fixed flex basis so layout is consistent with h6 header as well*/}\r\n                    <label htmlFor='lineNo' className='sr-only'/>\r\n                    <input type='number' id='lineNo' className='col form-control rounded-0' \r\n                    value={props.inputState[props.linePosition][i][0]} \r\n                    onChange={(e)=>e} style={{flex:'1 0 80px',paddingLeft:10,paddingRight:0}} disabled={props.disabled}/>\r\n\r\n                    <div className='col input-group' style={{flex:'1 0 120px',paddingLeft:0,paddingRight:0}}>\r\n                        <label htmlFor='itemCode' className='sr-only'/>\r\n                        <input type='text' id ='itemCode' className='form-control rounded-0' disabled={props.disabled}\r\n                        style={{paddingLeft:10}}\r\n                        value={props.inputState[props.linePosition][i][1]?props.inputState[props.linePosition][i][1]:''} \r\n                        onChange={(e)=>{\r\n                            onChangeLineInput(e.target.value,props.linePosition,i,1)\r\n                            if(props.dataSelectStock.data.some(item=>{\r\n                                const stockNum=props.dataSelectStock.field[0].name;\r\n                                return item[stockNum]===e.target.value\r\n                            }))\r\n                                addStockControlItem(i,e.target.value,props.inputState[props.linePosition][i][3])\r\n                            else\r\n                                removeStockControlItem(i)\r\n                        }}/>\r\n                        <select className='form-control rounded-0' style={{flex:'0 1 0'}} disabled={props.disabled} \r\n                        onChange={(e)=>{\r\n                            let stockDescription='';\r\n                            let itemCode=e.target.value\r\n                        \r\n                            props.dataSelectStock.data.forEach(data=>{        \r\n                                if(data[props.dataSelectStock.field[0].name]===e.target.value) {\r\n                                    stockDescription=data[props.dataSelectStock.field[1].name]?\r\n                                        data[props.dataSelectStock.field[1].name]:'';\r\n                                }\r\n                            })\r\n                        \r\n                            props.changeInputState(inputState=>inputState.slice(0,props.linePosition)\r\n                            .concat([inputState[props.linePosition].slice(0,i)\r\n                            .concat([inputState[props.linePosition][i].slice(0,1)\r\n                            .concat(itemCode).concat(stockDescription)\r\n                            .concat(inputState[props.linePosition][i].slice(3))])\r\n                            .concat(inputState[props.linePosition].slice(i+1))])\r\n                            .concat(inputState.slice(props.linePosition+1))\r\n                            )\r\n                            if (e.target.value!=='')\r\n                                addStockControlItem(i,e.target.value,props.inputState[props.linePosition][i][3])\r\n                            else\r\n                                removeStockControlItem(i)\r\n\r\n                                }}>\r\n                            <option value=''>-select an option- </option>\r\n                            {props.stockList}\r\n                        </select>\r\n                    </div>\r\n            \r\n                    <div className='text-center' style={{flex:'1 0 75px',paddingLeft:10,paddingRight:10,paddingTop:7,\r\n                        border:'1px solid #ced4da',\r\n                        backgroundColor:props.disabled? '#e9ecef': \r\n                        (props.dataSelectStock && props.dataSelectStock.data.every(item=>{\r\n                            const stockNum=props.dataSelectStock.field[0].name;\r\n                            return item[stockNum]!==props.inputState[props.linePosition][i][1]\r\n                        })? '#e9ecef': 'transparent')\r\n                    }}>\r\n                        <label htmlFor='stockControl' className='sr-only'/>\r\n                        <input id='stockControl' type='checkbox' \r\n                        disabled={props.disabled? true: \r\n                            (props.dataSelectStock && props.dataSelectStock.data.every(item=>{\r\n                            const stockNum=props.dataSelectStock.field[0].name;\r\n                            return item[stockNum]!==props.inputState[props.linePosition][i][1]\r\n                        })? true: false)} checked={props.inputState[props.stockControlPosition].some(item=>item[0]-1===i)} \r\n                \r\n                        onChange={e=>{\r\n                        if (e.target.checked) \r\n                            addStockControlItem(i,props.inputState[props.linePosition][i][1],props.inputState[props.linePosition][i][3]);\r\n                        else \r\n                            removeStockControlItem(i);\r\n                        }}/>\r\n                    </div>\r\n            \r\n                    <label htmlFor='description' className='sr-only'/>\r\n                    <input type='text' id='description' required className='col form-control rounded-0' \r\n                    value={props.inputState[props.linePosition][i][2]} \r\n                    onChange={(e)=>onChangeLineInput(e.target.value,props.linePosition,i,2)} disabled={props.disabled}\r\n                    style={{flex:'1 0 225px',paddingLeft:10,paddingRight:0}}/>\r\n\r\n                    <label htmlFor='qty' className='sr-only'/>\r\n                    <input type='number' required min='0' step='1' id='qty' className='col form-control rounded-0' \r\n                    value={props.inputState[props.linePosition][i][3]} disabled={props.disabled}\r\n                    style={{flex:'1 0 75px',paddingLeft:10,paddingRight:0}}\r\n                    onChange={(e)=>{\r\n                        onChangeLineInput(e.target.value,props.linePosition,i,3);\r\n                        if(props.inputState[props.stockControlPosition].some(item=>item[0]-1===i))\r\n                            addStockControlItem(i,props.inputState[props.linePosition][i][1],e.target.value)\r\n                    }}/>\r\n                </div>)}\r\n                {isNegativeStockBalance() && !props.disabled?\r\n                (<div style={{minWidth:minWidth}}> \r\n                    <div className='alert alert-warning mt-3' style={{cursor:'pointer'}} data-toggle='collapse'\r\n                    data-target='#negativeStockBal'>\r\n                        Negative Stock Balance\r\n                    </div>\r\n                    <div className='collapse navbar-collapse pl-3 pl-md-5' id='negativeStockBal'>\r\n                        <table className='table table-responsive-md'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th className='text-nowrap'>Item Code</th>\r\n                                    <th className='text-nowrap'>Description</th>\r\n                                    <th className='text-nowrap'>Bal Qty</th>\r\n                                    <th className='text-nowrap'>{props.stockDirection==='out'?'Out':'In'}</th>\r\n                                    <th className='text-nowrap'>Final Qty</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {populateNegativeStockBalanceTable()}\r\n                            </tbody>\r\n\r\n                        </table>\r\n                    </div>\r\n                </div>):null}\r\n            </div>\r\n        </fieldset>\r\n    )\r\n}\r\n\r\n\r\nexport default LineRenderQtyOnly;","import React,{useState,useEffect,useContext} from 'react';\r\nimport Item from '../Shared/Item';\r\nimport ItemButton from '../Shared/ItemButton';\r\nimport AppLayout from '../Shared/AppLayout';\r\nimport {\r\n    Switch,\r\n    Route,\r\n    useRouteMatch,\r\n    Redirect\r\n} from 'react-router-dom';\r\nimport DocumentOne from '../Shared/preview/DocumentOne';\r\nimport numberFormatParser from '../Shared/numberFormatParser';\r\nimport dateFormatParser from '../Shared/dateFormatParser';\r\nimport useFetch from '../Shared/useFetch';\r\nimport authContext from '../Shared/authContext';\r\nimport LineRenderQtyOnly from '../Shared/LineRenderQtyOnly';\r\n\r\n\r\n\r\nfunction DeliveryOrderItem (props) {\r\n    const url={\r\n        item:new URLSearchParams(props.location.search).get('item'),\r\n        id:new URLSearchParams(props.location.search).get('id'),\r\n    }\r\n    const [{data:dataSelectDebtor,error:errorSelectDebtor}]=useFetch({\r\n        url:'./SelectItem',\r\n        init:{\r\n            method:'POST',\r\n            headers:{'Content-Type':'application/json'},\r\n            body:JSON.stringify({item:'debtor'}),\r\n            credentials:'include'\r\n        }\r\n    });//extension of Item component\r\n\r\n    const [{data:dataSelectStock,error:errorSelectStock}]=useFetch({\r\n        url:'./SelectItem',\r\n        init:{\r\n            method:'POST',\r\n            headers:{'Content-Type':'application/json'},\r\n            body:JSON.stringify({\r\n                item:'stock',\r\n                param:url.id?[url.id]:null\r\n            }),\r\n            credentials:'include'\r\n        }\r\n    });//extension of Item component\r\n\r\n\r\n    const linePosition=7;\r\n    const stockControlPosition=8;\r\n\r\n    const [debtorList,changeDebtorList] = useState(null);\r\n    const [stockList,changeStockList] = useState(null);\r\n    const [inputState,changeInputState]=useState(['','','','','','','',[],[]]) \r\n    \r\n    const {path} = useRouteMatch();\r\n    const {changeAuth} = useContext(authContext);\r\n\r\n    useEffect(()=>{\r\n        \r\n        if (dataSelectDebtor && dataSelectDebtor.auth===false) {\r\n                    alert('Cookies Expired or Authorisation invalid. Please Login again!');\r\n                    changeAuth(false);\r\n                }\r\n        else if (dataSelectDebtor && dataSelectDebtor.data && dataSelectDebtor.field) \r\n            changeDebtorList(dataSelectDebtor.data.map(data=>(\r\n            <option key={data[dataSelectDebtor.field[0].name]} value={data[dataSelectDebtor.field[0].name]}>\r\n                {data[dataSelectDebtor.field[0].name]+' | '+(data[dataSelectDebtor.field[1].name]?data[dataSelectDebtor.field[1].name]:'')}\r\n            </option>)\r\n            )\r\n        )\r\n\r\n        if (dataSelectStock && dataSelectStock.auth===false) {\r\n                    alert('Cookies Expired or Authorisation invalid. Please Login again!');\r\n                    changeAuth(false);\r\n                }\r\n        else if (dataSelectStock && dataSelectStock.data && dataSelectStock.field) {\r\n            const stockNum=dataSelectStock.field[0].name;\r\n            const stockDesc=dataSelectStock.field[1].name;\r\n            const stockPrice=dataSelectStock.field[2].name;\r\n            const stockBalQty=dataSelectStock.field[8].name;\r\n            \r\n            changeStockList(dataSelectStock.data.map(data=>(\r\n                <option key={data[stockNum]} value={data[stockNum]}>\r\n                    {data[stockNum]+' | '\r\n                    + (data[stockDesc]?data[stockDesc]:'')+' | Price = '\r\n                    + (data[stockPrice]?data[stockPrice]:'')+' | Bal Qty = '\r\n                    + (data[stockBalQty]?data[stockBalQty]:'0')}\r\n                </option>)\r\n                )\r\n            )\r\n        }\r\n    },[dataSelectDebtor,errorSelectDebtor,dataSelectStock,errorSelectStock])\r\n\r\n    useEffect(()=>{\r\n        function setScale() {\r\n            document.querySelector(\"meta[name=viewport]\").setAttribute(\r\n                'content','width=device-width, initial-scale=1.0');\r\n        }\r\n        window.addEventListener('popstate',setScale)\r\n            \r\n        return function unattach() {\r\n                window.removeEventListener('popstate',setScale)\r\n            }\r\n        },[])\r\n\r\n    function onChange(value,order) {\r\n        changeInputState([...inputState.slice(0,order),value,...inputState.slice(order+1)])\r\n    }\r\n    \r\n    function calculateTotal() {\r\n        let total=0\r\n        inputState[linePosition].forEach((deliveryorderlineSet,i)=>{\r\n\r\n            if(inputState[linePosition][i][3]!=='')\r\n             total=total+(parseInt(inputState[linePosition][i][3]))\r\n        })\r\n        return total;\r\n    }\r\n\r\n    /*error display extension from error display already provided by Item Component*/\r\n    let errorDisplayExtension=null;\r\n    \r\n    \r\n    if ((dataSelectDebtor && dataSelectDebtor.error) || errorSelectDebtor ||(dataSelectStock && dataSelectStock.error) || errorSelectStock ) \r\n    errorDisplayExtension=(\r\n        <div className=\"alert alert-warning\">\r\n            {dataSelectDebtor && dataSelectDebtor.error? 'Debtor List RETRIEVAL for item failed errno: '+dataSelectDebtor.error.errno\r\n            +' code: '+dataSelectDebtor.error.code+' message: '+dataSelectDebtor.error.sqlMessage:null}\r\n            {errorSelectDebtor? 'Debtor List RETRIEVAL for item failed '+errorSelectDebtor : null}\r\n            <br/>\r\n            <br/>\r\n            {dataSelectStock && dataSelectStock.error? 'Stock List RETRIEVAL for item failed errno: '+dataSelectStock.error.errno\r\n            +' code: '+dataSelectStock.error.code+' message: '+dataSelectStock.error.sqlMessage:null}\r\n            {errorSelectStock? 'Stock List RETRIEVAL for item failed '+errorSelectStock : null}\r\n\r\n        </div>)\r\n\r\n    \r\n    return (\r\n        <Item inputState={inputState} changeInputState={changeInputState} url={url} item='delivery_order' successPath='/DeliveryOrder'>\r\n            {\r\n            ({usage,disabled,changeDisabled,onInsert,onUpdate,onDelete,errorDisplay,inputNumberRender})=> \r\n            (<Switch>\r\n                <Route exact path={`${path}/Preview`}>\r\n                    <DocumentOne description={DeliveryOrderItem.description} \r\n                        backPath={DeliveryOrderItem.path} \r\n                        topLeftInput={[inputState[1],inputState[2]]}\r\n                        topRightField={[DeliveryOrderItem.description+' No','Date','Other Description']}\r\n                        topRightInput={[inputState[3],dateFormatParser(inputState[4])]}\r\n                        bottomField={['','Item Code','Description','Qty']}\r\n                        bottomInput={inputState[linePosition]}\r\n                        calculateTotal={calculateTotal}\r\n                        footer='Goods sold are neither returnable or refundable. Otherwise a cancellation fee of 20% on purchase price will be imposed.'\r\n                    />\r\n                </Route>\r\n                <Route exact path={path}>\r\n                <AppLayout >\r\n                <div className='container pb-5 px-md-5'>\r\n\r\n                    {/*Heading renders depending on INSERT or UPDATE/DELETE state*/}\r\n\r\n                    <h3 className='my-3'>{(usage==='INSERT'? 'Create':'Update') + ' '+ DeliveryOrderItem.description}</h3>\r\n                    <small className='text-warning'>* required</small>\r\n                    {errorDisplay}\r\n                    {errorDisplayExtension}\r\n\r\n                    {/*onInsert and onUpdate needs to be attached to HTML form onSubmit eventhandler since native HTML form \r\n                    validation only works if submit event is handled here*/}\r\n                    <form onSubmit={(e)=>{e.preventDefault(); if(usage==='INSERT') onInsert(); else onUpdate()}}>\r\n                        <div className='row'>\r\n                            <fieldset className='form-group form-row col-md-5 mx-3 border border-secondary pb-4 rounded' disabled={disabled}>\r\n                                <legend className='col-form-label col-4 offset-4 text-center' ><h6>Debtor <span className='text-warning'>*</span></h6></legend>\r\n                                <label className='mt-3' htmlFor='debtorID' >Debtor ID</label>\r\n                                <div className='input-group'>\r\n                                    {/*if input is disabled, browser does not validate entry (and hence problem if option from dropdown \r\n                                    not chosen).Hence to prevent user altering input content(other than using those in dropdown) AND \r\n                                    to ensure a value is chosen set required attribute and a onChange event handler that does nothing*/}\r\n                                    <input type='text' id='debtorID' value={inputState[0]} onChange={(e)=>e} required className='form-control' />\r\n                                    <select className='form-control' style={{flex:'0 1 0'}} onChange={(e)=>{\r\n                                        let debtorName='';\r\n                                        let debtorAddress='';\r\n                                    \r\n                                        dataSelectDebtor.data.forEach(data=>{\r\n                                            \r\n                                            if(data[dataSelectDebtor.field[0].name]===e.target.value) {\r\n                                                debtorName=data[dataSelectDebtor.field[1].name]?data[dataSelectDebtor.field[1].name]:'';\r\n                                                debtorAddress=data[dataSelectDebtor.field[2].name]?data[dataSelectDebtor.field[2].name]:'';\r\n                                            }\r\n                                            \r\n                                        })\r\n                                    \r\n                                    changeInputState([e.target.value,debtorName,debtorAddress,...inputState.slice(3,inputState.length)])\r\n                                    }}>\r\n                                        <option value=''> -select an option- </option>\r\n                                        {debtorList}\r\n                                    </select>\r\n                                </div>\r\n                                <label className='mt-3' htmlFor='debtorName'>Debtor Name</label>\r\n                                <input id='debtorName' value={inputState[1]} onChange={(e)=>e} required className='form-control'/>\r\n                                <label className='mt-3' htmlFor='debtorAddress'>Debtor Address</label>\r\n                                <textarea id='debtorAddress' value={inputState[2]} onChange={(e)=>e} required className='form-control'/>\r\n                                \r\n                            </fieldset>\r\n\r\n                            <div className='form-group col-md-5 mx-3'>\r\n                                <label htmlFor='deliveryOrderNumber' className='mt-3'>Delivery Order Number <span className='text-warning'>*</span></label>\r\n                                {inputNumberRender({\r\n                                    onChange:onChange,\r\n                                    layout:'',\r\n                                    position:3,\r\n                                    labelID:'deliveryOrderNumber'\r\n                                })\r\n                                }\r\n                                \r\n                                <label htmlFor='date' className='mt-3'>Date <span className='text-warning'>*</span></label>\r\n                                <input type='date' disabled={disabled} required value={inputState[4]} onChange={(e)=>onChange(e.target.value,4)} \r\n                                className='form-control'/>\r\n                                \r\n                                <label htmlFor='description' className='mt-3'>Description</label>\r\n                                <textarea id='description' onChange={(e)=>onChange(e.target.value,5)} value={inputState[5]} \r\n                                disabled={disabled} className='form-control'/>\r\n                                \r\n                            </div>\r\n\r\n                            <LineRenderQtyOnly linePosition={linePosition} stockControlPosition={stockControlPosition} \r\n                            disabled={disabled} inputState={inputState} changeInputState={changeInputState} \r\n                            dataSelectStock={dataSelectStock} stockList={stockList} stockDirection='out'\r\n                            lineDescription={'Delivery Order Line'}\r\n                            />\r\n                                \r\n                            <h5 className='text-right my-3 col-12'>\r\n                                {'Total: '+numberFormatParser(calculateTotal())}\r\n                            </h5>\r\n\r\n                        </div>\r\n                        <ItemButton usage={usage} onInsert={onInsert} onUpdate={onUpdate} onDelete={onDelete} \r\n                        changeDisabled={changeDisabled} path={`${path}/Preview`}/>\r\n                    </form>\r\n                </div>\r\n            </AppLayout>\r\n            </Route>\r\n            <Redirect to={DeliveryOrderItem.path}/>\r\n        </Switch>)}\r\n        \r\n        </Item>\r\n    )\r\n}\r\nDeliveryOrderItem.description='Delivery Order';\r\nDeliveryOrderItem.path='/DeliveryOrderItem';\r\n\r\nexport default DeliveryOrderItem;\r\n\r\n","import React,{useState,useEffect,useContext} from 'react';\r\nimport Item from '../Shared/Item';\r\nimport ItemButton from '../Shared/ItemButton';\r\nimport AppLayout from '../Shared/AppLayout';\r\nimport {\r\n    Switch,\r\n    Route,\r\n    useRouteMatch,\r\n    Redirect\r\n} from 'react-router-dom';\r\nimport DocumentOne from '../Shared/preview/DocumentOne';\r\nimport numberFormatParser from '../Shared/numberFormatParser';\r\nimport dateFormatParser from '../Shared/dateFormatParser';\r\nimport useFetch from '../Shared/useFetch';\r\nimport authContext from '../Shared/authContext';\r\nimport LineRenderQtyOnly from '../Shared/LineRenderQtyOnly';\r\n\r\n\r\nfunction DeliveryReturnItem (props) {\r\n    const url={\r\n        item:new URLSearchParams(props.location.search).get('item'),\r\n        id:new URLSearchParams(props.location.search).get('id'),\r\n    }\r\n    const [{data:dataSelectDebtor,error:errorSelectDebtor}]=useFetch({\r\n        url:'./SelectItem',\r\n        init:{\r\n            method:'POST',\r\n            headers:{'Content-Type':'application/json'},\r\n            body:JSON.stringify({item:'debtor'}),\r\n            credentials:'include'\r\n        }\r\n    });//extension of Item component\r\n\r\n    const [{data:dataSelectStock,error:errorSelectStock}]=useFetch({\r\n        url:'./SelectItem',\r\n        init:{\r\n            method:'POST',\r\n            headers:{'Content-Type':'application/json'},\r\n            body:JSON.stringify({\r\n                item:'stock',\r\n                param:url.id?[url.id]:null\r\n            }),\r\n            credentials:'include'\r\n        }\r\n    });//extension of Item component\r\n\r\n\r\n    const linePosition=7;\r\n    const stockControlPosition=8;\r\n\r\n    const [debtorList,changeDebtorList] = useState(null);\r\n    const [stockList,changeStockList] = useState(null);\r\n    const [inputState,changeInputState]=useState(['','','','','','','',[],[]]) \r\n    \r\n    const {path} = useRouteMatch();\r\n    const {changeAuth} = useContext(authContext);\r\n\r\n    useEffect(()=>{\r\n        \r\n        if (dataSelectDebtor && dataSelectDebtor.auth===false) {\r\n                    alert('Cookies Expired or Authorisation invalid. Please Login again!');\r\n                    changeAuth(false);\r\n                }\r\n        else if (dataSelectDebtor && dataSelectDebtor.data && dataSelectDebtor.field) \r\n            changeDebtorList(dataSelectDebtor.data.map(data=>(\r\n            <option key={data[dataSelectDebtor.field[0].name]} value={data[dataSelectDebtor.field[0].name]}>\r\n                {data[dataSelectDebtor.field[0].name]+' | '+(data[dataSelectDebtor.field[1].name]?data[dataSelectDebtor.field[1].name]:'')}\r\n            </option>)\r\n            )\r\n        )\r\n\r\n        if (dataSelectStock && dataSelectStock.auth===false) {\r\n                    alert('Cookies Expired or Authorisation invalid. Please Login again!');\r\n                    changeAuth(false);\r\n                }\r\n        else if (dataSelectStock && dataSelectStock.data && dataSelectStock.field) {\r\n            const stockNum=dataSelectStock.field[0].name;\r\n            const stockDesc=dataSelectStock.field[1].name;\r\n            const stockPrice=dataSelectStock.field[2].name;\r\n            const stockBalQty=dataSelectStock.field[8].name;\r\n\r\n            changeStockList(dataSelectStock.data.map(data=>(\r\n                <option key={data[stockNum]} value={data[stockNum]}>\r\n                    {data[stockNum]+' | '\r\n                    + (data[stockDesc]?data[stockDesc]:'')+' | Price = '\r\n                    + (data[stockPrice]?data[stockPrice]:'')+' | Bal Qty = '\r\n                    + (data[stockBalQty]?data[stockBalQty]:'0')}\r\n                </option>)\r\n                )\r\n            )\r\n        }\r\n        \r\n    },[dataSelectDebtor,errorSelectDebtor,dataSelectStock,errorSelectStock])\r\n\r\n    useEffect(()=>{\r\n        function setScale() {\r\n            document.querySelector(\"meta[name=viewport]\").setAttribute(\r\n                'content','width=device-width, initial-scale=1.0');\r\n        }\r\n        window.addEventListener('popstate',setScale)\r\n            \r\n        return function unattach() {\r\n                window.removeEventListener('popstate',setScale)\r\n            }\r\n        },[])\r\n\r\n    function onChange(value,order) {\r\n        changeInputState([...inputState.slice(0,order),value,...inputState.slice(order+1)])\r\n    }\r\n    \r\n    function calculateTotal() {\r\n        let total=0\r\n        inputState[linePosition].forEach((deliveryreturnlineSet,i)=>{\r\n\r\n            if(inputState[linePosition][i][3]!=='')\r\n             total=total+(parseInt(inputState[linePosition][i][3]))\r\n        })\r\n        return total;\r\n    }\r\n    \r\n    \r\n    /*error display extension from error display already provided by Item Component*/\r\n    let errorDisplayExtension=null;\r\n    \r\n    \r\n    if ((dataSelectDebtor && dataSelectDebtor.error) || errorSelectDebtor ||(dataSelectStock && dataSelectStock.error) || errorSelectStock ) \r\n    errorDisplayExtension=(\r\n        <div className=\"alert alert-warning\">\r\n            {dataSelectDebtor && dataSelectDebtor.error? 'Debtor List RETRIEVAL for item failed errno: '+dataSelectDebtor.error.errno\r\n            +' code: '+dataSelectDebtor.error.code+' message: '+dataSelectDebtor.error.sqlMessage:null}\r\n            {errorSelectDebtor? 'Debtor List RETRIEVAL for item failed '+errorSelectDebtor : null}\r\n            <br/>\r\n            <br/>\r\n            {dataSelectStock && dataSelectStock.error? 'Stock List RETRIEVAL for item failed errno: '+dataSelectStock.error.errno\r\n            +' code: '+dataSelectStock.error.code+' message: '+dataSelectStock.error.sqlMessage:null}\r\n            {errorSelectStock? 'Stock List RETRIEVAL for item failed '+errorSelectStock : null}\r\n\r\n        </div>)\r\n\r\n    \r\n    return (\r\n        <Item inputState={inputState} changeInputState={changeInputState} url={url} item='delivery_return' successPath='/DeliveryReturn'>\r\n            {\r\n            ({usage,disabled,changeDisabled,onInsert,onUpdate,onDelete,errorDisplay,inputNumberRender})=> \r\n            (<Switch>\r\n                <Route exact path={`${path}/Preview`}>\r\n                    <DocumentOne description={DeliveryReturnItem.description} \r\n                        backPath={DeliveryReturnItem.path} \r\n                        topLeftInput={[inputState[1],inputState[2]]}\r\n                        topRightField={[DeliveryReturnItem.description+' No','Date','Other Description']}\r\n                        topRightInput={[inputState[3],dateFormatParser(inputState[4])]}\r\n                        bottomField={['','Item Code','Description','Qty']}\r\n                        bottomInput={inputState[linePosition]}\r\n                        calculateTotal={calculateTotal}\r\n                        footer='Goods sold are neither returnable or refundable. Otherwise a cancellation fee of 20% on purchase price will be imposed.'\r\n                    />\r\n                </Route>\r\n                <Route exact path={path}>\r\n                <AppLayout >\r\n                <div className='container pb-5 px-md-5'>\r\n\r\n                    {/*Heading renders depending on INSERT or UPDATE/DELETE state*/}\r\n\r\n                    <h3 className='my-3'>{(usage==='INSERT'? 'Create':'Update') + ' '+ DeliveryReturnItem.description}</h3>\r\n                    <small className='text-warning'>* required</small>\r\n                    {errorDisplay}\r\n                    {errorDisplayExtension}\r\n\r\n                    {/*onInsert and onUpdate needs to be attached to HTML form onSubmit eventhandler since native HTML form \r\n                    validation only works if submit event is handled here*/}\r\n                    <form onSubmit={(e)=>{e.preventDefault(); if(usage==='INSERT') onInsert(); else onUpdate()}}>\r\n                        <div className='row'>\r\n                            <fieldset className='form-group form-row col-md-5 mx-3 border border-secondary pb-4 rounded' disabled={disabled}>\r\n                                <legend className='col-form-label col-4 offset-4 text-center' ><h6>Debtor <span className='text-warning'>*</span></h6></legend>\r\n                                <label className='mt-3' htmlFor='debtorID' >Debtor ID</label>\r\n                                <div className='input-group'>\r\n                                    {/*if input is disabled, browser does not validate entry (and hence problem if option from dropdown \r\n                                    not chosen).Hence to prevent user altering input content(other than using those in dropdown) AND \r\n                                    to ensure a value is chosen set required attribute and a onChange event handler that does nothing*/}\r\n                                    <input type='text' id='debtorID' value={inputState[0]} onChange={(e)=>e} required className='form-control' />\r\n                                    <select className='form-control' style={{flex:'0 1 0'}} onChange={(e)=>{\r\n                                        let debtorName='';\r\n                                        let debtorAddress='';\r\n                                    \r\n                                        dataSelectDebtor.data.forEach(data=>{\r\n                                            \r\n                                            if(data[dataSelectDebtor.field[0].name]===e.target.value) {\r\n                                                debtorName=data[dataSelectDebtor.field[1].name]?data[dataSelectDebtor.field[1].name]:'';\r\n                                                debtorAddress=data[dataSelectDebtor.field[2].name]?data[dataSelectDebtor.field[2].name]:'';\r\n                                            }\r\n                                            \r\n                                        })\r\n                                    \r\n                                    changeInputState([e.target.value,debtorName,debtorAddress,...inputState.slice(3,inputState.length)])\r\n                                    }}>\r\n                                        <option value=''> -select an option- </option>\r\n                                        {debtorList}\r\n                                    </select>\r\n                                </div>\r\n                                <label className='mt-3' htmlFor='debtorName'>Debtor Name</label>\r\n                                <input id='debtorName' value={inputState[1]} onChange={(e)=>e} required className='form-control'/>\r\n                                <label className='mt-3' htmlFor='debtorAddress'>Debtor Address</label>\r\n                                <textarea id='debtorAddress' value={inputState[2]} onChange={(e)=>e} required className='form-control'/>\r\n                                \r\n                            </fieldset>\r\n\r\n                            <div className='form-group col-md-5 mx-3'>\r\n                                <label htmlFor='deliveryReturnNumber' className='mt-3'>Delivery Return Number <span className='text-warning'>*</span></label>\r\n                                {inputNumberRender({\r\n                                    onChange:onChange,\r\n                                    layout:'',\r\n                                    position:3,\r\n                                    labelID:'deliveryReturnNumber'\r\n                                })\r\n                                }\r\n                                \r\n                                <label htmlFor='date' className='mt-3'>Date <span className='text-warning'>*</span></label>\r\n                                <input type='date' disabled={disabled} required value={inputState[4]} onChange={(e)=>onChange(e.target.value,4)} \r\n                                className='form-control'/>\r\n                                \r\n                                <label htmlFor='description' className='mt-3'>Description</label>\r\n                                <textarea id='description' onChange={(e)=>onChange(e.target.value,5)} value={inputState[5]} \r\n                                disabled={disabled} className='form-control'/>\r\n                                \r\n                            </div>\r\n\r\n                            <LineRenderQtyOnly linePosition={linePosition} stockControlPosition={stockControlPosition} \r\n                            disabled={disabled} inputState={inputState} changeInputState={changeInputState} \r\n                            dataSelectStock={dataSelectStock} stockList={stockList} stockDirection='in'\r\n                            lineDescription={'Delivery Return Line'}\r\n                            />\r\n\r\n                            <h5 className='text-right my-3 col-12'>\r\n                                {'Total: '+numberFormatParser(calculateTotal())}\r\n                            </h5>\r\n\r\n                        </div>\r\n                        <ItemButton usage={usage} onInsert={onInsert} onUpdate={onUpdate} onDelete={onDelete} \r\n                        changeDisabled={changeDisabled} path={`${path}/Preview`}/>\r\n                        \r\n                        \r\n                        \r\n                    </form>\r\n                </div>\r\n            </AppLayout>\r\n            </Route>\r\n            <Redirect to={DeliveryReturnItem.path}/>\r\n        </Switch>)}\r\n        \r\n        </Item>\r\n    )\r\n}\r\nDeliveryReturnItem.description='Delivery Return';\r\nDeliveryReturnItem.path='/DeliveryReturnItem';\r\n\r\nexport default DeliveryReturnItem;\r\n\r\n","import React from 'react';\r\nimport numberFormatParser from './numberFormatParser';\r\n\r\nfunction LineRender(props) {\r\n    const minWidth=845;\r\n    const stockNum=props.dataSelectStock?props.dataSelectStock.field[0].name:null;\r\n    const stockDesc=props.dataSelectStock?props.dataSelectStock.field[1].name:null;\r\n    const stockBalQty=props.dataSelectStock?props.dataSelectStock.field[8].name:null;\r\n\r\n    function onChangeLineInput(e,order,lineNumber,innerOrder) {\r\n        props.changeInputState(inputState=>inputState.slice(0,order)\r\n        .concat([inputState[order].slice(0,lineNumber)\r\n        .concat([inputState[order][lineNumber].slice(0,innerOrder)\r\n        .concat(e)\r\n        .concat(inputState[order][lineNumber].slice(innerOrder+1))])\r\n        .concat(inputState[order].slice(lineNumber+1))])\r\n        .concat(inputState.slice(order+1)))\r\n    }\r\n\r\n    function addStockControlItem(i,itemCode,Qty) {\r\n        let targetPosition=props.inputState[props.stockControlPosition].findIndex(item=>item[0]-1===i)\r\n        \r\n        if (targetPosition>=0)\r\n                props.changeInputState(inputState=>\r\n                [...inputState.slice(0,props.stockControlPosition),\r\n                [...inputState[props.stockControlPosition].slice(0,targetPosition),\r\n                    [i+1,itemCode,Qty],\r\n                ...inputState[props.stockControlPosition].slice(targetPosition+1)],\r\n                ...inputState.slice(props.stockControlPosition+1)]\r\n                )\r\n            else\r\n                props.changeInputState(inputState=>\r\n                [...inputState.slice(0,props.stockControlPosition),\r\n                [...inputState[props.stockControlPosition],\r\n                    [i+1,itemCode,Qty]\r\n                ],\r\n                ...inputState.slice(props.stockControlPosition+1)]\r\n                )\r\n    }\r\n\r\n    function removeStockControlItem(i) {\r\n        let targetPosition=props.inputState[props.stockControlPosition].findIndex(item=>item[0]-1===i)\r\n        \r\n        if (targetPosition>=0)\r\n            props.changeInputState(inputState=>\r\n                [...inputState.slice(0,props.stockControlPosition),\r\n                [...inputState[props.stockControlPosition].slice(0,targetPosition),\r\n                ...inputState[props.stockControlPosition].slice(targetPosition+1)],\r\n                ...inputState.slice(props.stockControlPosition+1)]\r\n            )\r\n    }\r\n\r\n    function isNegativeStockBalance() {\r\n        if (props.dataSelectStock) \r\n            return props.inputState[props.stockControlPosition].some(item=>\r\n                calculateFinalQty(item) < 0\r\n            )\r\n        else return false;\r\n    }\r\n\r\n    function calculateFinalQty(item) {\r\n        if (props.stockDirection==='out')\r\n            return props.dataSelectStock.data.find(item2=>item2[stockNum]===item[1])[stockBalQty]-\r\n                props.inputState[props.stockControlPosition].reduce((a,b)=>{\r\n                    if(b[1]===item[1])\r\n                        return a+Number(b[2])\r\n                    else return a\r\n                },0)\r\n        else if (props.stockDirection==='in')\r\n            return props.dataSelectStock.data.find(item2=>item2[stockNum]===item[1])[stockBalQty]+\r\n                props.inputState[props.stockControlPosition].reduce((a,b)=>{\r\n                    if(b[1]===item[1])\r\n                        return a+Number(b[2])\r\n                    else return a\r\n                },0)\r\n    }\r\n\r\n    function populateNegativeStockBalanceTable () {\r\n        const lineAlreadyFiltered=[]\r\n\r\n        if (props.dataSelectStock) {\r\n            props.inputState[props.stockControlPosition].forEach(item=>{\r\n                if(calculateFinalQty(item)<0 && lineAlreadyFiltered.indexOf(item[1])===-1)\r\n                    lineAlreadyFiltered.push(item[1])\r\n            })\r\n            \r\n            return lineAlreadyFiltered.map(stockNum1=>\r\n                (<tr key={stockNum1}>\r\n                    <td>{stockNum1}</td>\r\n                    <td>\r\n                        {props.dataSelectStock.data.find(item2=>\r\n                        item2[stockNum]===stockNum1)[stockDesc]}\r\n                    </td>\r\n                    <td>\r\n                        {props.dataSelectStock.data.find(item2=>\r\n                        item2[stockNum]===stockNum1)[stockBalQty]}\r\n                    </td>\r\n                    <td>\r\n                        {props.inputState[props.stockControlPosition].reduce((a,b)=>{\r\n                            if(b[1]===stockNum1)\r\n                                return a+Number(b[2])\r\n                            else return a\r\n                        },0)}\r\n                    </td>\r\n                    <td>\r\n                        {calculateFinalQty(props.inputState[props.stockControlPosition].find(item=>\r\n                            item[1]===stockNum1))}\r\n                    </td>\r\n                </tr>)\r\n            )\r\n        }\r\n        else return null\r\n    }\r\n\r\n    return (\r\n        <fieldset className='form-group col-md-12 mx-3 border border-secondary pb-4 rounded'>\r\n            <legend className='col-form-label col-12 col-md-6 offset-md-3 text-center' >\r\n                <button type='button' className='btn btn-primary' disabled={props.disabled}\r\n                onClick={()=>\r\n                    props.changeInputState(\r\n                        props.inputState.slice(0,props.linePosition)\r\n                        .concat([props.inputState[props.linePosition].slice(0)\r\n                            .concat(\r\n                                [[props.inputState[props.linePosition].length+1,'','','',0,0]])])\r\n                        .concat(props.inputState.slice(props.linePosition+1))\r\n                    )\r\n                }>+</button>\r\n                <h6 className='d-inline-block mx-2 mx-md-4'>{props.lineDescription}</h6>\r\n                <button type='button' className='btn btn-secondary' disabled={props.disabled}\r\n                onClick={()=>{\r\n                    removeStockControlItem(props.inputState[props.linePosition].length-1)\r\n\r\n                    props.changeInputState(inputState=>\r\n                        inputState.slice(0,props.linePosition)\r\n                        .concat([inputState[props.linePosition].slice(0,inputState[props.linePosition].length-1)])\r\n                        .concat(inputState.slice(props.linePosition+1))\r\n                    )\r\n                }\r\n                    \r\n                }>-</button>\r\n            </legend>\r\n            <div className=\"overflow-auto\">\r\n                {/*flex nowrap and overflow auto for mobile view*/}\r\n                <div className='row flex-nowrap' style={{marginLeft:0,marginRight:0}}>\r\n                    <h6 className='col' style={{flex:'1 0 80px',paddingLeft:10,paddingRight:10}}>Line No.</h6>\r\n                    <h6 className='col' style={{flex:'1 0 120px',paddingLeft:10,paddingRight:10}}>Item Code</h6>\r\n                    <h6 className='col' style={{flex:'1 0 75px',paddingLeft:10,paddingRight:10}}>Stock Control</h6>\r\n                    <h6 className='col' style={{flex:'1 0 225px',paddingLeft:10,paddingRight:10}}>Description</h6>\r\n                    <h6 className='col' style={{flex:'1 0 90px',paddingLeft:10,paddingRight:10}}>Price</h6>\r\n                    <h6 className='col' style={{flex:'1 0 75px',paddingLeft:10,paddingRight:10}}>Qty</h6>\r\n                    <h6 className='col' style={{flex:'1 0 90px',paddingLeft:10,paddingRight:10}}>Discount</h6>\r\n                    <h6 className='col' style={{flex:'1 0 90px',paddingLeft:10,paddingRight:10}}>Subtotal</h6>\r\n                </div>\r\n\r\n                {props.inputState[props.linePosition].map((lineSet,i)=>\r\n                <div className='row flex-nowrap' style={{marginLeft:0,marginRight:0}} key={i}>\r\n                    {/*set fixed flex basis so layout is consistent with h6 header as well*/}\r\n                    <label htmlFor='lineNo' className='sr-only'/>\r\n                    <input type='number' id='lineNo' className='col form-control rounded-0' \r\n                    value={props.inputState[props.linePosition][i][0]} \r\n                    onChange={(e)=>e} style={{flex:'1 0 80px',paddingLeft:10,paddingRight:0}} disabled={props.disabled}/>\r\n\r\n                    <div className='col input-group' style={{flex:'1 0 120px',paddingLeft:0,paddingRight:0}}>\r\n                        <label htmlFor='itemCode' className='sr-only'/>\r\n                        <input type='text' id ='itemCode' className='form-control rounded-0' disabled={props.disabled}\r\n                        style={{paddingLeft:10}}\r\n                        value={props.inputState[props.linePosition][i][1]?props.inputState[props.linePosition][i][1]:''} \r\n                        onChange={(e)=>{\r\n                            onChangeLineInput(e.target.value,props.linePosition,i,1)\r\n                            if(props.dataSelectStock.data.some(item=>{\r\n                                const stockNum=props.dataSelectStock.field[0].name;\r\n                                return item[stockNum]===e.target.value\r\n                            }))\r\n                                addStockControlItem(i,e.target.value,props.inputState[props.linePosition][i][4])\r\n                            else\r\n                                removeStockControlItem(i)\r\n                        }}/>\r\n                        <select className='form-control rounded-0' style={{flex:'0 1 0'}} disabled={props.disabled} onChange={(e)=>{\r\n                            let description='';\r\n                            let price='';\r\n                            let itemCode=e.target.value;\r\n\r\n                            props.dataSelectStock.data.forEach(data=>{\r\n                            \r\n                                if(data[props.dataSelectStock.field[0].name]===e.target.value) {\r\n                                    description=data[props.dataSelectStock.field[1].name]?data[props.dataSelectStock.field[1].name]:'';\r\n                                    price=data[props.dataSelectStock.field[2].name]?data[props.dataSelectStock.field[2].name]:'';\r\n                                }\r\n                            })\r\n                        \r\n                            props.changeInputState(inputState=>inputState.slice(0,props.linePosition)\r\n                                .concat([inputState[props.linePosition].slice(0,i)\r\n                                .concat([inputState[props.linePosition][i].slice(0,1)\r\n                                .concat(itemCode).concat(description).concat(price)\r\n                                .concat(inputState[props.linePosition][i].slice(4))])\r\n                                .concat(inputState[props.linePosition].slice(i+1))])\r\n                                .concat(inputState.slice(props.linePosition+1)))\r\n\r\n                            if (e.target.value!=='')\r\n                                addStockControlItem(i,e.target.value,props.inputState[props.linePosition][i][4])\r\n                            else\r\n                                removeStockControlItem(i)\r\n                            }}>\r\n                            <option value=''>-select an option- </option>\r\n                            {props.stockList}\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div className='text-center' style={{flex:'1 0 75px',paddingLeft:10,paddingRight:10,paddingTop:7,\r\n                        border:'1px solid #ced4da',\r\n                        backgroundColor:props.disabled? '#e9ecef': \r\n                        (props.dataSelectStock && props.dataSelectStock.data.every(item=>{\r\n                            const stockNum=props.dataSelectStock.field[0].name;\r\n                            return item[stockNum]!==props.inputState[props.linePosition][i][1]\r\n                        })? '#e9ecef': 'transparent')\r\n                    }}>\r\n                        <label htmlFor='stockControl' className='sr-only'/>\r\n                        <input id='stockControl' type='checkbox' \r\n                        disabled={props.disabled? true: \r\n                            (props.dataSelectStock && props.dataSelectStock.data.every(item=>{\r\n                            const stockNum=props.dataSelectStock.field[0].name;\r\n                            return item[stockNum]!==props.inputState[props.linePosition][i][1]\r\n                        })? true: false)} checked={props.inputState[props.stockControlPosition].some(item=>item[0]-1===i)} \r\n                \r\n                        onChange={e=>{\r\n                        if (e.target.checked) \r\n                            addStockControlItem(i,props.inputState[props.linePosition][i][1],props.inputState[props.linePosition][i][4]);\r\n                        else \r\n                            removeStockControlItem(i);\r\n                        }}/>\r\n                    </div>\r\n\r\n\r\n\r\n                    <label htmlFor='description' className='sr-only'/>\r\n                    <input type='text' id='description' required className='col form-control rounded-0' \r\n                    value={props.inputState[props.linePosition][i][2]} \r\n                    onChange={(e)=>onChangeLineInput(e.target.value,props.linePosition,i,2)} disabled={props.disabled}\r\n                    style={{flex:'1 0 225px',paddingLeft:10,paddingRight:0}}/>\r\n\r\n                    <label htmlFor='price' className='sr-only'/>\r\n                    <input type='number' required min='0' step='.01' id='price' className='col form-control rounded-0' \r\n                    value={props.inputState[props.linePosition][i][3]} \r\n                    onChange={(e)=>onChangeLineInput(e.target.value,props.linePosition,i,3)} disabled={props.disabled}\r\n                    style={{flex:'1 0 90px',paddingLeft:10,paddingRight:0}}/>\r\n\r\n                    <label htmlFor='qty' className='sr-only'/>\r\n                    <input type='number' required min='0' step='1' id='qty' className='col form-control rounded-0' \r\n                    value={props.inputState[props.linePosition][i][4]} disabled={props.disabled}\r\n                    style={{flex:'1 0 75px',paddingLeft:10,paddingRight:0}}\r\n                    onChange={(e)=>{\r\n                        onChangeLineInput(e.target.value,props.linePosition,i,4)\r\n                        if(props.inputState[props.stockControlPosition].some(item=>item[0]-1===i))\r\n                            addStockControlItem(i,props.inputState[props.linePosition][i][1],e.target.value)\r\n                    }} />\r\n\r\n                    <label htmlFor='discount' className='sr-only'/>\r\n                    <input type='number' required min='0' step='.01' id='discount' className='col form-control rounded-0' \r\n                    value={props.inputState[props.linePosition][i][5]} \r\n                    onChange={(e)=>onChangeLineInput(e.target.value,props.linePosition,i,5)} disabled={props.disabled}\r\n                    style={{flex:'1 0 90px',paddingLeft:10,paddingRight:0}}/>\r\n\r\n                    <label htmlFor='subtotal' className='sr-only'/>\r\n                    <input type='text' step='.01' disabled id='subtotal' className='col form-control rounded-0' \r\n                    value={numberFormatParser(props.calculateSubtotal(i))} \r\n                    style={{flex:'1 0 90px',paddingLeft:10,paddingRight:0}}/>\r\n                </div>)}\r\n                {isNegativeStockBalance() && !props.disabled?\r\n                (<div style={{minWidth:minWidth}}> \r\n                    <div className='alert alert-warning mt-3' style={{cursor:'pointer'}} data-toggle='collapse'\r\n                    data-target='#negativeStockBal'>\r\n                        Negative Stock Balance\r\n                    </div>\r\n                    <div className='collapse navbar-collapse pl-3 pl-md-5' id='negativeStockBal'>\r\n                        <table className='table table-responsive-md'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th className='text-nowrap'>Item Code</th>\r\n                                    <th className='text-nowrap'>Description</th>\r\n                                    <th className='text-nowrap'>Bal Qty</th>\r\n                                    <th className='text-nowrap'>{props.stockDirection==='out'?'Out':'In'}</th>\r\n                                    <th className='text-nowrap'>Final Qty</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {populateNegativeStockBalanceTable()}\r\n                            </tbody>\r\n\r\n                        </table>\r\n                    </div>\r\n                </div>):null}\r\n                                    \r\n            </div>\r\n        </fieldset>\r\n    )\r\n}\r\n\r\n\r\nexport default LineRender;","import React from 'react';\r\nimport numberFormatParser from './numberFormatParser';\r\nimport dateFormatParser from '../Shared/dateFormatParser';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nfunction ReceiptPaymentHistoryRender(props) {\r\n    const docNum=props.dataSelectReceiptPaymentHistory?props.dataSelectReceiptPaymentHistory.field[0].name:null;\r\n    const date=props.dataSelectReceiptPaymentHistory?props.dataSelectReceiptPaymentHistory.field[1].name:null;\r\n    const type=props.dataSelectReceiptPaymentHistory? props.dataSelectReceiptPaymentHistory.field[2].name:null;\r\n    const description=props.dataSelectReceiptPaymentHistory?props.dataSelectReceiptPaymentHistory.field[3].name:null;\r\n    const amount=props.dataSelectReceiptPaymentHistory? props.dataSelectReceiptPaymentHistory.field[4].name:null;\r\n\r\n    const history=useHistory();\r\n\r\n    function createLink(string,id) {\r\n        var WIPstring=string.split(' ');\r\n\r\n        WIPstring=WIPstring.map(string=>{\r\n            return string.toLowerCase()\r\n        })\r\n        WIPstring=WIPstring.map(string=>{\r\n            return string[0].toUpperCase().concat(string.substr(1))\r\n        })\r\n\r\n        return WIPstring.join('')+'Item?item='+string.replace(/ /g,'_')+'&id='+encodeURIComponent(id)\r\n    }\r\n\r\n    return (\r\n    <fieldset className='form-group col-md-12 mx-3 border border-secondary pb-4 rounded'>\r\n        <legend className='col-form-label col-8 offset-2 text-center' >\r\n            <h6 className='d-inline-block mx-2 mx-md-4'>{props.historyDescription}</h6>\r\n        </legend>\r\n        <div className=\"overflow-auto\">\r\n            {/*flex nowrap and overflow auto for mobile view*/}\r\n            <div className='row flex-nowrap ' style={{marginLeft:0,marginRight:0}}>\r\n                <h6 className='col' style={{flex:'1 0 120px',paddingLeft:10,paddingRight:10}}>Doc No.</h6>\r\n                <h6 className='col' style={{flex:'1 0 120px',paddingLeft:10,paddingRight:10}}>Date</h6>\r\n                <h6 className='col' style={{flex:'1 0 200px',paddingLeft:10,paddingRight:10}}>Type</h6>\r\n                <h6 className='col' style={{flex:'1 0 200px',paddingLeft:10,paddingRight:10}}>Description</h6>\r\n                <h6 className='col' style={{flex:'1 0 120px',paddingLeft:10,paddingRight:10}}>Amount</h6>\r\n            </div>\r\n            {props.dataSelectReceiptPaymentHistory? props.dataSelectReceiptPaymentHistory.data.map(item=>\r\n            (<div className='row flex-nowrap' style={props.disabled? {marginLeft:0,marginRight:0}:\r\n            {cursor:'pointer',marginLeft:0,marginRight:0}} key={item[docNum]}\r\n            onClick={(e)=> {\r\n                if (!props.disabled)\r\n                    history.push('./'+createLink(item[type].toLowerCase(),item[docNum]))\r\n            }\r\n                }>\r\n                <p className='col border my-0' style={props.disabled? \r\n                {flex:'1 0 120px',paddingLeft:10,paddingRight:10,paddingTop:'0.375rem',paddingBottom:'0.375rem',backgroundColor:'#e9ecef'}:\r\n                {flex:'1 0 120px',paddingLeft:10,paddingRight:10,paddingTop:'0.375rem',paddingBottom:'0.375rem'}}>\r\n                    {item[docNum]}\r\n                </p>\r\n                <p className='col border my-0' style={props.disabled? \r\n                {flex:'1 0 120px',paddingLeft:10,paddingRight:10,paddingTop:'0.375rem',paddingBottom:'0.375rem',backgroundColor:'#e9ecef'}:\r\n                {flex:'1 0 120px',paddingLeft:10,paddingRight:10,paddingTop:'0.375rem',paddingBottom:'0.375rem'}}>\r\n                    {dateFormatParser(item[date])}\r\n                </p>\r\n                <p className='col border my-0' style={props.disabled? \r\n                {flex:'1 0 200px',paddingLeft:10,paddingRight:10,paddingTop:'0.375rem',paddingBottom:'0.375rem',backgroundColor:'#e9ecef'}:\r\n                {flex:'1 0 200px',paddingLeft:10,paddingRight:10,paddingTop:'0.375rem',paddingBottom:'0.375rem'}}>\r\n                    {item[type]}\r\n                </p>\r\n                <p className='col border my-0 text-truncate' style={props.disabled?\r\n                {flex:'1 0 200px',paddingLeft:10,paddingRight:10,paddingTop:'0.375rem',paddingBottom:'0.375rem',backgroundColor:'#e9ecef'}: \r\n                {flex:'1 0 200px',paddingLeft:10,paddingRight:10,paddingTop:'0.375rem',paddingBottom:'0.375rem'}}>\r\n                    {item[description]}\r\n                </p>\r\n                <p className='col border my-0' style={props.disabled?\r\n                {flex:'1 0 120px',paddingLeft:10,paddingRight:10,paddingTop:'0.375rem',paddingBottom:'0.375rem',backgroundColor:'#e9ecef'}: \r\n                {flex:'1 0 120px',paddingLeft:10,paddingRight:10,paddingTop:'0.375rem',paddingBottom:'0.375rem'}}>\r\n                    {numberFormatParser(item[amount])}\r\n                </p>\r\n            </div>)\r\n            ):null}\r\n        </div>\r\n    </fieldset>)\r\n}\r\n\r\nexport default ReceiptPaymentHistoryRender;","import React,{useState,useEffect,useContext} from 'react';\r\nimport Item from '../Shared/Item';\r\nimport ItemButton from '../Shared/ItemButton';\r\nimport AppLayout from '../Shared/AppLayout';\r\nimport {\r\n    Switch,\r\n    Route,\r\n    useRouteMatch,\r\n    Redirect\r\n} from 'react-router-dom';\r\nimport DocumentOne from '../Shared/preview/DocumentOne';\r\nimport numberFormatParser from '../Shared/numberFormatParser';\r\nimport dateFormatParser from '../Shared/dateFormatParser';\r\nimport useFetch from '../Shared/useFetch';\r\nimport authContext from '../Shared/authContext';\r\nimport LineRender from '../Shared/LineRender';\r\nimport ReceiptPaymentHistoryRender from '../Shared/ReceiptPaymentHistoryRender';\r\n\r\n\r\n\r\nfunction SalesInvoiceItem (props) {\r\n    const url={\r\n        item:new URLSearchParams(props.location.search).get('item'),\r\n        id:new URLSearchParams(props.location.search).get('id'),\r\n    }\r\n    const [{data:dataSelectDebtor,error:errorSelectDebtor}]=useFetch({\r\n        url:'./SelectItem',\r\n        init:{\r\n            method:'POST',\r\n            headers:{'Content-Type':'application/json'},\r\n            body:JSON.stringify({item:'debtor'}),\r\n            credentials:'include'\r\n        }\r\n    });//extension of Item component\r\n\r\n    const [{data:dataSelectStock,error:errorSelectStock}]=useFetch({\r\n        url:'./SelectItem',\r\n        init:{\r\n            method:'POST',\r\n            headers:{'Content-Type':'application/json'},\r\n            body:JSON.stringify({\r\n                item:'stock',\r\n                param:url.id?[url.id]:null\r\n            }),\r\n            credentials:'include'\r\n        }\r\n    });//extension of Item component\r\n\r\n    const [{data:dataSelectGLCode,error:errorSelectGLCode}]=useFetch({\r\n        url:'./getEligibleGLAccount',\r\n        init:{\r\n            method:'POST',\r\n            headers:{'Content-Type':'application/json'},\r\n            body:JSON.stringify({item:'sales_invoice'}),\r\n            credentials:'include'\r\n        }\r\n    });//extension of Item component\r\n\r\n    const [{data:dataSelectReceiptHistory,error:errorSelectReceiptHistory}]=useFetch(url.item && url.id?{\r\n        url:'./getReceiptHistory',\r\n        init:{\r\n            method:'POST',\r\n            headers:{'Content-Type':'application/json'},\r\n            body:JSON.stringify({\r\n                item:'sales_invoice',\r\n                param:[url.id]\r\n            }),\r\n            credentials:'include'\r\n        }\r\n    }:null);//extension of Item component\r\n\r\n    /*Position of inputState variable used in other components. */\r\n    const creditTermPosition=6;\r\n    const linePosition=9;\r\n    const stockControlPosition=10;\r\n    \r\n    const [debtorList,changeDebtorList] = useState(null);\r\n    const [stockList,changeStockList] = useState(null);\r\n    const [GLCodeList,changeGLCodeList] = useState(null);\r\n    const [inputState,changeInputState]=useState(['','','','','','','COD','','',[],[]]) \r\n    \r\n    const {path} = useRouteMatch();\r\n    const {changeAuth} = useContext(authContext);\r\n    \r\n\r\n    useEffect(()=>{\r\n        \r\n        if (dataSelectDebtor && dataSelectDebtor.auth===false) {\r\n                    alert('Cookies Expired or Authorisation invalid. Please Login again!');\r\n                    changeAuth(false);\r\n                }\r\n        else if (dataSelectDebtor && dataSelectDebtor.data && dataSelectDebtor.field) \r\n            changeDebtorList(dataSelectDebtor.data.map(data=>(\r\n            <option key={data[dataSelectDebtor.field[0].name]} value={data[dataSelectDebtor.field[0].name]}>\r\n                {data[dataSelectDebtor.field[0].name]+' | '+(data[dataSelectDebtor.field[1].name]?data[dataSelectDebtor.field[1].name]:'')}\r\n            </option>)\r\n            )\r\n        )\r\n\r\n        if (dataSelectStock && dataSelectStock.auth===false) {\r\n                    alert('Cookies Expired or Authorisation invalid. Please Login again!');\r\n                    changeAuth(false);\r\n                }\r\n        else if (dataSelectStock && dataSelectStock.data && dataSelectStock.field) {\r\n            const stockNum=dataSelectStock.field[0].name;\r\n            const stockDesc=dataSelectStock.field[1].name;\r\n            const stockPrice=dataSelectStock.field[2].name;\r\n            const stockBalQty=dataSelectStock.field[8].name;\r\n            \r\n            changeStockList(dataSelectStock.data.map(data=>(\r\n                <option key={data[stockNum]} value={data[stockNum]}>\r\n                    {data[stockNum]+' | '\r\n                    + (data[stockDesc]?data[stockDesc]:'')+' | Price = '\r\n                    + (data[stockPrice]?data[stockPrice]:'')+' | Bal Qty = '\r\n                    + (data[stockBalQty]?data[stockBalQty]:'0')}\r\n                </option>)\r\n                )\r\n            )\r\n        }\r\n\r\n        if (dataSelectGLCode && dataSelectGLCode.auth===false) {\r\n                alert('Cookies Expired or Authorisation invalid. Please Login again!');\r\n                changeAuth(false);\r\n            }\r\n        else if (dataSelectGLCode && dataSelectGLCode.data && dataSelectGLCode.field) \r\n            changeGLCodeList(dataSelectGLCode.data.map(data=>(\r\n            <option key={data[dataSelectGLCode.field[0].name]} value={data[dataSelectGLCode.field[0].name]}>\r\n                {(data[dataSelectGLCode.field[0].name]?data[dataSelectGLCode.field[0].name]:'')\r\n                +' | '+(data[dataSelectGLCode.field[1].name]?data[dataSelectGLCode.field[1].name]:'')}\r\n            </option>)\r\n            )\r\n        )\r\n\r\n        if (dataSelectReceiptHistory && dataSelectReceiptHistory.auth===false) {\r\n            alert('Cookies Expired or Authorisation invalid. Please Login again!');\r\n            changeAuth(false);\r\n        }\r\n\r\n    },[dataSelectDebtor,errorSelectDebtor,dataSelectStock,errorSelectStock,dataSelectGLCode,errorSelectGLCode,\r\n    dataSelectReceiptHistory,errorSelectReceiptHistory])\r\n\r\n    useEffect(()=>{\r\n        function setScale() {\r\n            document.querySelector(\"meta[name=viewport]\").setAttribute(\r\n                'content','width=device-width, initial-scale=1.0');\r\n        }\r\n        window.addEventListener('popstate',setScale)\r\n            \r\n        return function unattach() {\r\n                window.removeEventListener('popstate',setScale)\r\n            }\r\n        },[])\r\n\r\n    function onChange(value,order) {\r\n        changeInputState([...inputState.slice(0,order),value,...inputState.slice(order+1)])\r\n    }\r\n    \r\n    function calculateSubtotal(i) {\r\n        if (inputState[linePosition][i][3]!=='' && inputState[linePosition][i][4]!=='' && inputState[linePosition][i][5]!=='')\r\n            return ((parseFloat(inputState[linePosition][i][3])*parseFloat(inputState[linePosition][i][4]))\r\n            -parseFloat(inputState[linePosition][i][5]))\r\n        else return '';\r\n    }\r\n\r\n    function calculateTotal() {\r\n        let total=0\r\n        inputState[linePosition].forEach((lineSet,i)=>{\r\n\r\n            if(inputState[linePosition][i][3]!=='' && inputState[linePosition][i][4]!=='' && \r\n            inputState[linePosition][i][5]!=='')\r\n             total=total+((parseFloat(inputState[linePosition][i][3])*parseFloat(inputState[linePosition][i][4]))\r\n             -parseFloat(inputState[linePosition][i][5]))\r\n        })\r\n        return total;\r\n    }\r\n    function calculateOutstanding() {\r\n        const amount=dataSelectReceiptHistory? dataSelectReceiptHistory.field[4].name:null;\r\n        \r\n        return calculateTotal()-(dataSelectReceiptHistory? dataSelectReceiptHistory.data.reduce((a,b)=>\r\n            a+b[amount],0):0)\r\n    }\r\n    \r\n    \r\n    /*error display extension from error display already provided by Item Component*/\r\n    let errorDisplayExtension=null;\r\n    \r\n    \r\n    if ((dataSelectDebtor && dataSelectDebtor.error) || errorSelectDebtor ||(dataSelectStock && dataSelectStock.error) || errorSelectStock ||\r\n    (dataSelectGLCode && dataSelectGLCode.error) || errorSelectGLCode || (dataSelectReceiptHistory && dataSelectReceiptHistory.error)\r\n    || errorSelectReceiptHistory) \r\n    errorDisplayExtension=(\r\n        <div className=\"alert alert-warning\">\r\n            {dataSelectDebtor && dataSelectDebtor.error? 'Debtor List RETRIEVAL for item failed errno: '+dataSelectDebtor.error.errno\r\n            +' code: '+dataSelectDebtor.error.code+' message: '+dataSelectDebtor.error.sqlMessage:null}\r\n            {errorSelectDebtor? 'Debtor List RETRIEVAL for item failed '+errorSelectDebtor : null}\r\n            <br/>\r\n            <br/>\r\n            {dataSelectStock && dataSelectStock.error? 'Stock List RETRIEVAL for item failed errno: '+dataSelectStock.error.errno\r\n            +' code: '+dataSelectStock.error.code+' message: '+dataSelectStock.error.sqlMessage:null}\r\n            {errorSelectStock? 'Stock List RETRIEVAL for item failed '+errorSelectStock : null}\r\n            <br/>\r\n            <br/>\r\n            {dataSelectGLCode && dataSelectGLCode.error? 'GL Code List RETRIEVAL for item failed errno: '+dataSelectGLCode.error.errno\r\n            +' code: '+dataSelectGLCode.error.code+' message: '+dataSelectGLCode.error.sqlMessage:null}\r\n            {errorSelectGLCode? 'GL Code List RETRIEVAL for item failed '+errorSelectGLCode : null}\r\n            <br/>\r\n            <br/>\r\n            {dataSelectReceiptHistory && dataSelectReceiptHistory.error? 'Receipt History RETRIEVAL for item failed errno: '+dataSelectReceiptHistory.error.errno\r\n            +' code: '+dataSelectReceiptHistory.error.code+' message: '+dataSelectReceiptHistory.error.sqlMessage:null}\r\n            {errorSelectReceiptHistory? 'Receipt History RETRIEVAL for item failed '+errorSelectReceiptHistory : null}\r\n        </div>)\r\n\r\n    return (\r\n    <Item inputState={inputState} changeInputState={changeInputState} url={url} item='sales_invoice' successPath='/SalesInvoice'>\r\n        {\r\n        ({usage,disabled,changeDisabled,onInsert,onUpdate,onDelete,errorDisplay,inputNumberRender})=>\r\n        (<Switch>\r\n            <Route exact path={`${path}/Preview`}>\r\n                <DocumentOne description={SalesInvoiceItem.description}\r\n                    backPath={SalesInvoiceItem.path} \r\n                    topLeftInput={[inputState[1],inputState[2]]}\r\n                    topRightField={[SalesInvoiceItem.description+' No','Date','Credit Term','Other Description']}\r\n                    topRightInput={[inputState[3],dateFormatParser(inputState[4]),inputState[6]==='COD'?'C.O.D.':inputState[6]+' Days',inputState[5]]}\r\n                    bottomField={['','Item Code','Description','Price','Qty','Discount','Subtotal']}\r\n                    bottomInput={inputState[linePosition]}\r\n                    calculateSubtotal={calculateSubtotal}\r\n                    calculateTotal={calculateTotal}\r\n                    footer='NET 30 Days. Finance Charge of 1.5% will be made on unpaid balances after 30 days.'\r\n                />\r\n            </Route>\r\n            <Route exact path={path}>\r\n                <AppLayout>\r\n                <div className='container pb-5 px-md-5'>\r\n\r\n                    {/*Heading renders depending on INSERT or UPDATE/DELETE state*/}\r\n\r\n                    <h3 className='my-3'>{(usage==='INSERT'? 'Create':'Update') + ' '+ SalesInvoiceItem.description}</h3>\r\n                    <small className='text-warning'>* required</small>\r\n                    {errorDisplay}\r\n                    {errorDisplayExtension}\r\n\r\n                    {/*onInsert and onUpdate needs to be attached to HTML form onSubmit eventhandler since native HTML form \r\n                    validation only works if submit event is handled here*/}\r\n                    <form onSubmit={(e)=>{e.preventDefault(); if(usage==='INSERT') onInsert(); else onUpdate()}}>\r\n                        <div className='row'>\r\n                            <fieldset className='form-group form-row col-md-5 mx-3 border border-secondary pb-4 rounded' disabled={disabled}>\r\n                                <legend className='col-form-label col-4 offset-4 text-center' ><h6>Debtor <span className='text-warning'>*</span></h6></legend>\r\n                                <label className='mt-3' htmlFor='debtorID' >Debtor ID</label>\r\n                                <div className='input-group'>\r\n                                    {/*if input is disabled, browser does not validate entry (and hence problem if option from dropdown \r\n                                    not chosen).Hence to prevent user altering input content(other than using those in dropdown) AND \r\n                                    to ensure a value is chosen set required attribute and a onChange event handler that does nothing*/}\r\n                                    <input type='text' id='debtorID' value={inputState[0]} onChange={(e)=>e} required className='form-control' />\r\n                                    <select className='form-control' style={{flex:'0 1 0'}} onChange={(e)=>{\r\n                                        let debtorName='';\r\n                                        let debtorAddress='';\r\n                                        let debtorDefaultCreditTerm='';\r\n                                        \r\n                                        dataSelectDebtor.data.forEach(data=>{\r\n                                            \r\n                                            if(data[dataSelectDebtor.field[0].name]===e.target.value) {\r\n                                                debtorName=data[dataSelectDebtor.field[1].name]?data[dataSelectDebtor.field[1].name]:'';\r\n                                                debtorAddress=data[dataSelectDebtor.field[2].name]?data[dataSelectDebtor.field[2].name]:'';\r\n                                                debtorDefaultCreditTerm=data[dataSelectDebtor.field[7].name]?data[dataSelectDebtor.field[7].name]:'';\r\n                                                \r\n                                            }\r\n                                            \r\n                                        })\r\n                                    \r\n                                    changeInputState([e.target.value,debtorName,debtorAddress,\r\n                                        ...inputState.slice(3,creditTermPosition),debtorDefaultCreditTerm,\r\n                                        ...inputState.slice(creditTermPosition+1)])\r\n                                    }}>\r\n                                        <option value=''> -select an option- </option>\r\n                                        {debtorList}\r\n                                    </select>\r\n                                </div>\r\n                                <label className='mt-3' htmlFor='debtorName'>Debtor Name</label>\r\n                                <input id='debtorName' value={inputState[1]} onChange={(e)=>e} required className='form-control'/>\r\n                                <label className='mt-3' htmlFor='debtorAddress'>Debtor Address</label>\r\n                                <textarea id='debtorAddress' value={inputState[2]} onChange={(e)=>e} required className='form-control'/>\r\n                                \r\n                            </fieldset>\r\n\r\n                            <div className='form-group col-md-5 mx-3'>\r\n                                <label htmlFor='invoiceNumber' className='mt-3'>Invoice Number <span className='text-warning'>*</span></label>\r\n                                {inputNumberRender({\r\n                                    onChange:onChange,\r\n                                    layout:'',\r\n                                    position:3,\r\n                                    labelID:'invoiceNumber'\r\n                                })\r\n                                }\r\n                                \r\n                                <label htmlFor='date' className='mt-3'>Date <span className='text-warning'>*</span></label>\r\n                                <input type='date' disabled={disabled} required value={inputState[4]} onChange={(e)=>onChange(e.target.value,4)} \r\n                                className='form-control'/>\r\n                                \r\n                                <label className='mt-3' htmlFor='glCode' >GL Code <span className='text-warning'>*</span></label>\r\n                                <div className='input-group'>\r\n                                    <input type='text' id='glCode' value={inputState[7]} onChange={(e)=>e} required className='form-control' \r\n                                    disabled={disabled}/>\r\n                                    <select className='form-control' style={{flex:'0 1 0'}} disabled={disabled} onChange={(e)=>{\r\n                                    onChange(e.target.value,7)\r\n                                    }}>\r\n                                        <option value=''> -select an option- </option>\r\n                                        {GLCodeList}\r\n                                    </select>\r\n                                </div>\r\n\r\n                                <label htmlFor='creditTerm' className='mt-3'>Credit Term</label>\r\n                                <select id='creditTerm' onChange={(e)=> onChange(e.target.value,6)} value={inputState[6]} disabled={disabled} \r\n                                className='form-control'>\r\n                                    <option value='COD'>C.O.D.</option>\r\n                                    <option value='30'>30 Days</option>\r\n                                    <option value='45'>45 Days</option>\r\n                                    <option value='60'>60 Days</option>\r\n                                    <option value='90'>90 Days</option>\r\n                                </select>\r\n                                \r\n                                <label htmlFor='description' className='mt-3'>Description</label>\r\n                                <textarea id='description' onChange={(e)=>onChange(e.target.value,5)} value={inputState[5]} \r\n                                disabled={disabled} className='form-control'/>\r\n                                \r\n                            </div>\r\n\r\n                            \r\n                                \r\n                            <LineRender linePosition={linePosition} stockControlPosition={stockControlPosition} \r\n                            disabled={disabled} inputState={inputState} changeInputState={changeInputState} \r\n                            dataSelectStock={dataSelectStock} stockList={stockList} stockDirection='out'\r\n                            calculateSubtotal={calculateSubtotal} lineDescription={'Sales Invoice Line'}/>\r\n\r\n                            \r\n                            \r\n                            <h5 className='text-right mt-3 mb-4 col-12'>\r\n                                {'Total: '+numberFormatParser(calculateTotal())}\r\n                            </h5>\r\n                            {usage==='INSERT'?null:(<h6 className='text-right mb-4 col-12'>\r\n                                <span className=\"alert alert-secondary\">\r\n                                    {'Outstanding Amount: '+numberFormatParser(calculateOutstanding())}\r\n                                </span>\r\n                            </h6>)}\r\n\r\n                            {usage==='INSERT'?null: \r\n                            \r\n                            <ReceiptPaymentHistoryRender dataSelectReceiptPaymentHistory={dataSelectReceiptHistory}\r\n                            disabled={disabled} historyDescription={'Receipt History'}/>\r\n                            }\r\n\r\n                        </div>\r\n                        <ItemButton usage={usage} onInsert={onInsert} onUpdate={onUpdate} onDelete={onDelete} \r\n                        changeDisabled={changeDisabled} path={`${path}/Preview`}/>\r\n                        \r\n                        \r\n                        \r\n                    </form>\r\n                </div>\r\n                </AppLayout>\r\n            </Route>\r\n            <Redirect to={SalesInvoiceItem.path}/>\r\n        </Switch>)}\r\n        \r\n        </Item>\r\n    )\r\n}\r\nSalesInvoiceItem.description='Sales Invoice';\r\nSalesInvoiceItem.path='/SalesInvoiceItem';\r\n\r\nexport default SalesInvoiceItem;\r\n\r\n","import React,{useState,useEffect,useContext} from 'react';\r\nimport Item from '../Shared/Item';\r\nimport ItemButton from '../Shared/ItemButton';\r\nimport AppLayout from '../Shared/AppLayout';\r\nimport {\r\n    Switch,\r\n    Route,\r\n    useRouteMatch,\r\n    Redirect\r\n} from 'react-router-dom';\r\nimport DocumentOne from '../Shared/preview/DocumentOne';\r\nimport numberFormatParser from '../Shared/numberFormatParser';\r\nimport dateFormatParser from '../Shared/dateFormatParser';\r\nimport useFetch from '../Shared/useFetch';\r\nimport authContext from '../Shared/authContext';\r\nimport LineRender from '../Shared/LineRender';\r\nimport ReceiptPaymentHistoryRender from '../Shared/ReceiptPaymentHistoryRender';\r\n\r\n\r\nfunction DebitNoteItem (props) {\r\n    const url={\r\n        item:new URLSearchParams(props.location.search).get('item'),\r\n        id:new URLSearchParams(props.location.search).get('id'),\r\n    }\r\n    const [{data:dataSelectDebtor,error:errorSelectDebtor}]=useFetch({\r\n        url:'./SelectItem',\r\n        init:{\r\n            method:'POST',\r\n            headers:{'Content-Type':'application/json'},\r\n            body:JSON.stringify({item:'debtor'}),\r\n            credentials:'include'\r\n        }\r\n    });//extension of Item component\r\n\r\n    const [{data:dataSelectStock,error:errorSelectStock}]=useFetch({\r\n        url:'./SelectItem',\r\n        init:{\r\n            method:'POST',\r\n            headers:{'Content-Type':'application/json'},\r\n            body:JSON.stringify({\r\n                item:'stock',\r\n                param:url.id?[url.id]:null\r\n            }),\r\n            credentials:'include'\r\n        }\r\n    });//extension of Item component\r\n\r\n    const [{data:dataSelectGLCode,error:errorSelectGLCode}]=useFetch({\r\n        url:'./getEligibleGLAccount',\r\n        init:{\r\n            method:'POST',\r\n            headers:{'Content-Type':'application/json'},\r\n            body:JSON.stringify({item:'debit_note'}),\r\n            credentials:'include'\r\n        }\r\n    });//extension of Item component\r\n\r\n    const [{data:dataSelectReceiptHistory,error:errorSelectReceiptHistory}]=useFetch(url.item && url.id?{\r\n        url:'./getReceiptHistory',\r\n        init:{\r\n            method:'POST',\r\n            headers:{'Content-Type':'application/json'},\r\n            body:JSON.stringify({\r\n                item:'debit_note',\r\n                param:[url.id]\r\n            }),\r\n            credentials:'include'\r\n        }\r\n    }:null);//extension of Item component\r\n\r\n    /*Position of inputState variable used in other components. */\r\n    const creditTermPosition=6;\r\n    const linePosition=9;\r\n    const stockControlPosition=10;\r\n\r\n    const [debtorList,changeDebtorList] = useState(null);\r\n    const [stockList,changeStockList] = useState(null);\r\n    const [GLCodeList,changeGLCodeList] = useState(null);\r\n    const [inputState,changeInputState]=useState(['','','','','','','COD','','',[],[]]) \r\n    \r\n    const {path} = useRouteMatch();\r\n    const {changeAuth} = useContext(authContext);\r\n\r\n    useEffect(()=>{\r\n        \r\n        if (dataSelectDebtor && dataSelectDebtor.auth===false) {\r\n                    alert('Cookies Expired or Authorisation invalid. Please Login again!');\r\n                    changeAuth(false);\r\n                }\r\n        else if (dataSelectDebtor && dataSelectDebtor.data && dataSelectDebtor.field) \r\n            changeDebtorList(dataSelectDebtor.data.map(data=>(\r\n            <option key={data[dataSelectDebtor.field[0].name]} value={data[dataSelectDebtor.field[0].name]}>\r\n                {data[dataSelectDebtor.field[0].name]+' | '+(data[dataSelectDebtor.field[1].name]?data[dataSelectDebtor.field[1].name]:'')}\r\n            </option>)\r\n            )\r\n        )\r\n\r\n        if (dataSelectStock && dataSelectStock.auth===false) {\r\n                    alert('Cookies Expired or Authorisation invalid. Please Login again!');\r\n                    changeAuth(false);\r\n                }\r\n        else if (dataSelectStock && dataSelectStock.data && dataSelectStock.field) {\r\n            const stockNum=dataSelectStock.field[0].name;\r\n            const stockDesc=dataSelectStock.field[1].name;\r\n            const stockPrice=dataSelectStock.field[2].name;\r\n            const stockBalQty=dataSelectStock.field[8].name;\r\n            \r\n            changeStockList(dataSelectStock.data.map(data=>(\r\n                <option key={data[stockNum]} value={data[stockNum]}>\r\n                    {data[stockNum]+' | '\r\n                    + (data[stockDesc]?data[stockDesc]:'')+' | Price = '\r\n                    + (data[stockPrice]?data[stockPrice]:'')+' | Bal Qty = '\r\n                    + (data[stockBalQty]?data[stockBalQty]:'0')}\r\n                </option>)\r\n                )\r\n            )\r\n        }\r\n\r\n        if (dataSelectGLCode && dataSelectGLCode.auth===false) {\r\n                alert('Cookies Expired or Authorisation invalid. Please Login again!');\r\n                changeAuth(false);\r\n            }\r\n        else if (dataSelectGLCode && dataSelectGLCode.data && dataSelectGLCode.field) \r\n            changeGLCodeList(dataSelectGLCode.data.map(data=>(\r\n            <option key={data[dataSelectGLCode.field[0].name]} value={data[dataSelectGLCode.field[0].name]}>\r\n                {(data[dataSelectGLCode.field[0].name]?data[dataSelectGLCode.field[0].name]:'')\r\n                +' | '+(data[dataSelectGLCode.field[1].name]?data[dataSelectGLCode.field[1].name]:'')}\r\n            </option>)\r\n            )\r\n        )\r\n\r\n        if (dataSelectReceiptHistory && dataSelectReceiptHistory.auth===false) {\r\n            alert('Cookies Expired or Authorisation invalid. Please Login again!');\r\n            changeAuth(false);\r\n        }\r\n\r\n    },[dataSelectDebtor,errorSelectDebtor,dataSelectStock,errorSelectStock,dataSelectGLCode,errorSelectGLCode,\r\n        dataSelectReceiptHistory,errorSelectReceiptHistory])\r\n\r\n    useEffect(()=>{\r\n        function setScale() {\r\n            document.querySelector(\"meta[name=viewport]\").setAttribute(\r\n                'content','width=device-width, initial-scale=1.0');\r\n        }\r\n        window.addEventListener('popstate',setScale)\r\n            \r\n        return function unattach() {\r\n                window.removeEventListener('popstate',setScale)\r\n            }\r\n        },[])\r\n\r\n    function onChange(value,order) {\r\n        changeInputState([...inputState.slice(0,order),value,...inputState.slice(order+1)])\r\n    }\r\n    \r\n    function calculateSubtotal(i) {\r\n        if (inputState[linePosition][i][3]!=='' && inputState[linePosition][i][4]!=='' && inputState[linePosition][i][5]!=='')\r\n            return ((parseFloat(inputState[linePosition][i][3])*parseFloat(inputState[linePosition][i][4]))\r\n            -parseFloat(inputState[linePosition][i][5]))\r\n        else return '';\r\n    }\r\n\r\n    function calculateTotal() {\r\n        let total=0\r\n        inputState[linePosition].forEach((lineSet,i)=>{\r\n\r\n            if(inputState[linePosition][i][3]!=='' && inputState[linePosition][i][4]!=='' && \r\n            inputState[linePosition][i][5]!=='')\r\n             total=total+((parseFloat(inputState[linePosition][i][3])*parseFloat(inputState[linePosition][i][4]))\r\n             -parseFloat(inputState[linePosition][i][5]))\r\n        })\r\n        return total;\r\n    }\r\n\r\n    function calculateOutstanding() {\r\n        const amount=dataSelectReceiptHistory? dataSelectReceiptHistory.field[4].name:null;\r\n        \r\n        return calculateTotal()-(dataSelectReceiptHistory? dataSelectReceiptHistory.data.reduce((a,b)=>\r\n            a+b[amount],0):0)\r\n    }\r\n    \r\n    /*error display extension from error display already provided by Item Component*/\r\n    let errorDisplayExtension=null;\r\n    \r\n    \r\n    if ((dataSelectDebtor && dataSelectDebtor.error) || errorSelectDebtor ||(dataSelectStock && dataSelectStock.error) || errorSelectStock ||\r\n    (dataSelectGLCode && dataSelectGLCode.error) || errorSelectGLCode || (dataSelectReceiptHistory && dataSelectReceiptHistory.error)\r\n    || errorSelectReceiptHistory) \r\n    errorDisplayExtension=(\r\n        <div className=\"alert alert-warning\">\r\n            {dataSelectDebtor && dataSelectDebtor.error? 'Debtor List RETRIEVAL for item failed errno: '+dataSelectDebtor.error.errno\r\n            +' code: '+dataSelectDebtor.error.code+' message: '+dataSelectDebtor.error.sqlMessage:null}\r\n            {errorSelectDebtor? 'Debtor List RETRIEVAL for item failed '+errorSelectDebtor : null}\r\n            <br/>\r\n            <br/>\r\n            {dataSelectStock && dataSelectStock.error? 'Stock List RETRIEVAL for item failed errno: '+dataSelectStock.error.errno\r\n            +' code: '+dataSelectStock.error.code+' message: '+dataSelectStock.error.sqlMessage:null}\r\n            {errorSelectStock? 'Stock List RETRIEVAL for item failed '+errorSelectStock : null}\r\n            <br/>\r\n            <br/>\r\n            {dataSelectGLCode && dataSelectGLCode.error? 'GL Code List RETRIEVAL for item failed errno: '+dataSelectGLCode.error.errno\r\n            +' code: '+dataSelectGLCode.error.code+' message: '+dataSelectGLCode.error.sqlMessage:null}\r\n            {errorSelectGLCode? 'GL Code List RETRIEVAL for item failed '+errorSelectGLCode : null}\r\n            <br/>\r\n            <br/>\r\n            {dataSelectReceiptHistory && dataSelectReceiptHistory.error? 'Receipt History RETRIEVAL for item failed errno: '+dataSelectReceiptHistory.error.errno\r\n            +' code: '+dataSelectReceiptHistory.error.code+' message: '+dataSelectReceiptHistory.error.sqlMessage:null}\r\n            {errorSelectReceiptHistory? 'Receipt History RETRIEVAL for item failed '+errorSelectReceiptHistory : null}\r\n        </div>)\r\n\r\n    \r\n    return (\r\n    <Item inputState={inputState} changeInputState={changeInputState} url={url} item='debit_note' successPath='/DebitNote'>\r\n        {\r\n        ({usage,disabled,changeDisabled,onInsert,onUpdate,onDelete,errorDisplay,inputNumberRender})=> \r\n        (<Switch>\r\n            <Route exact path={`${path}/Preview`}>\r\n                <DocumentOne description={DebitNoteItem.description} \r\n                    backPath={DebitNoteItem.path} \r\n                    topLeftInput={[inputState[1],inputState[2]]}\r\n                    topRightField={[DebitNoteItem.description+' No','Date','Credit Term','Other Description']}\r\n                    topRightInput={[inputState[3],dateFormatParser(inputState[4]),inputState[6]==='COD'?'C.O.D.':inputState[6]+' Days',inputState[5]]}\r\n                    bottomField={['','Item Code','Description','Price','Qty','Discount','Subtotal']}\r\n                    bottomInput={inputState[linePosition]}\r\n                    calculateSubtotal={calculateSubtotal}\r\n                    calculateTotal={calculateTotal}\r\n                    footer='NET 30 Days. Finance Charge of 1.5% will be made on unpaid balances after 30 days.'\r\n                />\r\n            </Route>\r\n            <Route exact path={path}>\r\n                <AppLayout >\r\n                <div className='container pb-5 px-md-5'>\r\n\r\n                    {/*Heading renders depending on INSERT or UPDATE/DELETE state*/}\r\n\r\n                    <h3 className='my-3'>{(usage==='INSERT'? 'Create':'Update') + ' '+ DebitNoteItem.description}</h3>\r\n                    <small className='text-warning'>* required</small>\r\n                    {errorDisplay}\r\n                    {errorDisplayExtension}\r\n\r\n                    {/*onInsert and onUpdate needs to be attached to HTML form onSubmit eventhandler since native HTML form \r\n                    validation only works if submit event is handled here*/}\r\n                    <form onSubmit={(e)=>{e.preventDefault(); if(usage==='INSERT') onInsert(); else onUpdate()}}>\r\n                        <div className='row'>\r\n                            <fieldset className='form-group form-row col-md-5 mx-3 border border-secondary pb-4 rounded' disabled={disabled}>\r\n                                <legend className='col-form-label col-4 offset-4 text-center' ><h6>Debtor <span className='text-warning'>*</span></h6></legend>\r\n                                <label className='mt-3' htmlFor='debtorID' >Debtor ID</label>\r\n                                <div className='input-group'>\r\n                                    {/*if input is disabled, browser does not validate entry (and hence problem if option from dropdown \r\n                                    not chosen).Hence to prevent user altering input content(other than using those in dropdown) AND \r\n                                    to ensure a value is chosen set required attribute and a onChange event handler that does nothing*/}\r\n                                    <input type='text' id='debtorID' value={inputState[0]} onChange={(e)=>e} required className='form-control' />\r\n                                    <select className='form-control' style={{flex:'0 1 0'}} onChange={(e)=>{\r\n                                        let debtorName='';\r\n                                        let debtorAddress='';\r\n                                        let debtorDefaultCreditTerm='';\r\n                                    \r\n                                        dataSelectDebtor.data.forEach(data=>{\r\n                                            \r\n                                            if(data[dataSelectDebtor.field[0].name]===e.target.value) {\r\n                                                debtorName=data[dataSelectDebtor.field[1].name]?data[dataSelectDebtor.field[1].name]:'';\r\n                                                debtorAddress=data[dataSelectDebtor.field[2].name]?data[dataSelectDebtor.field[2].name]:'';\r\n                                                debtorDefaultCreditTerm=data[dataSelectDebtor.field[7].name]?data[dataSelectDebtor.field[7].name]:'';\r\n                                            }\r\n                                            \r\n                                        })\r\n                                    \r\n                                    changeInputState([e.target.value,debtorName,debtorAddress,\r\n                                        ...inputState.slice(3,creditTermPosition),debtorDefaultCreditTerm,\r\n                                        ...inputState.slice(creditTermPosition+1)])\r\n                                    }}>\r\n                                        <option value=''> -select an option- </option>\r\n                                        {debtorList}\r\n                                    </select>\r\n                                </div>\r\n                                <label className='mt-3' htmlFor='debtorName'>Debtor Name</label>\r\n                                <input id='debtorName' value={inputState[1]} onChange={(e)=>e} required className='form-control'/>\r\n                                <label className='mt-3' htmlFor='debtorAddress'>Debtor Address</label>\r\n                                <textarea id='debtorAddress' value={inputState[2]} onChange={(e)=>e} required className='form-control'/>\r\n                                \r\n                            </fieldset>\r\n\r\n                            <div className='form-group col-md-5 mx-3'>\r\n                                <label htmlFor='debitNoteNumber' className='mt-3'>Debit Note Number <span className='text-warning'>*</span></label>\r\n                                {inputNumberRender({\r\n                                    onChange:onChange,\r\n                                    layout:'',\r\n                                    position:3,\r\n                                    labelID:'debitNoteNumber'\r\n                                })\r\n                                }\r\n                                \r\n                                <label htmlFor='date' className='mt-3'>Date <span className='text-warning'>*</span></label>\r\n                                <input type='date' disabled={disabled} required value={inputState[4]} onChange={(e)=>onChange(e.target.value,4)} \r\n                                className='form-control'/>\r\n                                \r\n                                <label className='mt-3' htmlFor='glCode' >GL Code <span className='text-warning'>*</span></label>\r\n                                <div className='input-group'>\r\n                                    <input type='text' id='glCode' value={inputState[7]} onChange={(e)=>e} required className='form-control' \r\n                                    disabled={disabled}/>\r\n                                    <select className='form-control' style={{flex:'0 1 0'}} disabled={disabled} onChange={(e)=>{\r\n                                    onChange(e.target.value,7)\r\n                                    }}>\r\n                                        <option value=''> -select an option- </option>\r\n                                        {GLCodeList}\r\n                                    </select>\r\n                                </div>\r\n                                \r\n                                <label htmlFor='creditTerm' className='mt-3'>Credit Term</label>\r\n                                <select id='creditTerm' onChange={(e)=> onChange(e.target.value,6)} value={inputState[6]} disabled={disabled} \r\n                                className='form-control'>\r\n                                    <option value='COD'>C.O.D.</option>\r\n                                    <option value='30'>30 Days</option>\r\n                                    <option value='45'>45 Days</option>\r\n                                    <option value='60'>60 Days</option>\r\n                                    <option value='90'>90 Days</option>\r\n                                </select>\r\n\r\n                                <label htmlFor='description' className='mt-3'>Description</label>\r\n                                <textarea id='description' onChange={(e)=>onChange(e.target.value,5)} value={inputState[5]} \r\n                                disabled={disabled} className='form-control'/>\r\n                                \r\n                            </div>\r\n\r\n                            \r\n                                \r\n                            <LineRender linePosition={linePosition} stockControlPosition={stockControlPosition}\r\n                            disabled={disabled} inputState={inputState} changeInputState={changeInputState} \r\n                            dataSelectStock={dataSelectStock} stockList={stockList} stockDirection='out'\r\n                            calculateSubtotal={calculateSubtotal} lineDescription={'Debit Note Line'}/>\r\n\r\n                           \r\n\r\n                            <h5 className='text-right my-3 col-12'>\r\n                                {'Total: '+numberFormatParser(calculateTotal())}\r\n                            </h5>\r\n                            {usage==='INSERT'?null:(<h6 className='text-right mb-4 col-12'>\r\n                                <span className=\"alert alert-secondary\">\r\n                                    {'Outstanding Amount: '+numberFormatParser(calculateOutstanding())}\r\n                                </span>\r\n                            </h6>)}\r\n\r\n                            {usage==='INSERT'?null: \r\n                            \r\n                            <ReceiptPaymentHistoryRender dataSelectReceiptPaymentHistory={dataSelectReceiptHistory}\r\n                            disabled={disabled} historyDescription={'Receipt History'}/>\r\n                            }\r\n\r\n                        </div>\r\n                        <ItemButton usage={usage} onInsert={onInsert} onUpdate={onUpdate} onDelete={onDelete} \r\n                        changeDisabled={changeDisabled} path={`${path}/Preview`}/>\r\n                        \r\n                        \r\n                        \r\n                    </form>\r\n                </div>\r\n            </AppLayout>\r\n        </Route>\r\n        <Redirect to={DebitNoteItem.path}/>\r\n    </Switch>)}\r\n    </Item>\r\n    )\r\n}\r\nDebitNoteItem.description='Debit Note';\r\nDebitNoteItem.path='/DebitNoteItem';\r\n\r\nexport default DebitNoteItem;\r\n\r\n","import React from 'react';\r\nimport numberFormatParser from './numberFormatParser';\r\nimport dateFormatParser from '../Shared/dateFormatParser';\r\n\r\nfunction OffsetRender(props) {\r\n    const docNum=props.dataSelectOutstanding?props.dataSelectOutstanding.field[0].name:null;\r\n    const name=props.dataSelectOutstanding?props.dataSelectOutstanding.field[1].name:null;\r\n    const type=props.dataSelectOutstanding? props.dataSelectOutstanding.field[2].name:null;\r\n    const date=props.dataSelectOutstanding?props.dataSelectOutstanding.field[3].name:null;\r\n    const original=props.dataSelectOutstanding? props.dataSelectOutstanding.field[4].name:null;\r\n    const outstanding=props.dataSelectOutstanding?props.dataSelectOutstanding.field[5].name:null;\r\n\r\n    /*inputState offset inner positions*/\r\n    const offsetDocNumPosition=0;\r\n    const offsetAmountPosition=1;\r\n\r\n    \r\n    function onChangeOffsetInput(e,order,lineNumber,innerOrder) {\r\n        props.changeInputState(props.inputState.slice(0,order)\r\n        .concat([props.inputState[order].slice(0,lineNumber)\r\n        .concat([props.inputState[order][lineNumber].slice(0,innerOrder)\r\n        .concat(e)\r\n        .concat(props.inputState[order][lineNumber].slice(innerOrder+1))])\r\n        .concat(props.inputState[order].slice(lineNumber+1))])\r\n        .concat(props.inputState.slice(order+1)))\r\n    }\r\n    /*add offsetinput array at end of offsetposition array*/\r\n    function onAddOffsetInput(e,order) {\r\n        props.changeInputState(props.inputState.slice(0,order)\r\n        .concat([props.inputState[order].slice(0,props.inputState[order].length)\r\n        .concat([e])])\r\n        .concat(props.inputState.slice(order+1)))\r\n    }\r\n    /*slice off specific offsetinput array from overall offsetposition array*/\r\n    function onRemoveOffsetInput(order,innerIndexOfArrayToBeRemoved) {\r\n        \r\n        props.changeInputState(props.inputState.slice(0,order)\r\n        .concat([props.inputState[order].slice(0,innerIndexOfArrayToBeRemoved)\r\n        .concat(props.inputState[order].slice(innerIndexOfArrayToBeRemoved+1))])\r\n        .concat(props.inputState.slice(order+1)))\r\n    }\r\n\r\n    /*event handler for checkbox*/\r\n    function onChangeCheck(item,offsetPosition) {\r\n\r\n        /*1) check if there's existing offsetinputstate arrays*/\r\n        if (props.inputState[offsetPosition].length>1)\r\n            /*2)if yes, then iterate for each offsetinputstatearray items and check offsetinputstate arrays \r\n            vs dataSelectOutstanding*/\r\n            props.inputState[offsetPosition].forEach((item2,i)=>{\r\n                if(item2[offsetDocNumPosition]===item[docNum]) {\r\n                    /*3) If match then if dataSelectOutstanding outstanding amount>unappliedamount then \r\n                    changeoffsetinput using whole unappliedamount  */\r\n                    if(item[outstanding]>props.calculateUnappliedAmount())\r\n                        onChangeOffsetInput(\r\n                            props.calculateUnappliedAmount(),offsetPosition,i,offsetAmountPosition\r\n                            )\r\n                    else /*otherwise changeoffsetinput using whole dataSelectOutstanding outstanding amount */\r\n                        onChangeOffsetInput(item[outstanding],offsetPosition,i,offsetAmountPosition)\r\n                } else /*4) if no existing offsetinputstate arrays do the same thing as 3) above but instead of\r\n                changeoffsetinput, add offsetinput array at end of array */ \r\n                    {if (item[outstanding]>props.calculateUnappliedAmount())\r\n                        onAddOffsetInput([item[docNum],props.calculateUnappliedAmount()],offsetPosition)\r\n                    else onAddOffsetInput([item[docNum],item[outstanding]],offsetPosition)\r\n                    } \r\n            })\r\n            else {\r\n                /*5) from (1)if no existing offsetinputstate arrays, then skip to (4) by adding offsetinput array*/\r\n                if (item[outstanding]>props.calculateUnappliedAmount())\r\n                    onAddOffsetInput([item[docNum],props.calculateUnappliedAmount()],offsetPosition)\r\n                else onAddOffsetInput([item[docNum],item[outstanding]],offsetPosition)\r\n            }\r\n    }\r\n\r\n    function checkPayAmountDisabled(item,offsetPosition){\r\n        let result=true;\r\n        props.inputState[offsetPosition].forEach(item2=>{\r\n            if(item2[offsetDocNumPosition]===item[docNum] && !props.disabled)\r\n            result=false; \r\n        })\r\n\r\n        \r\n        return result;\r\n    }\r\n    function getOffsetInputStateArrayPosition(item,offsetPosition) {\r\n        let result=null;\r\n        props.inputState[offsetPosition].forEach((item2,i)=>{\r\n            if(item2[offsetDocNumPosition]===item[docNum])\r\n            result=i; \r\n        })\r\n        return result;\r\n    }\r\n\r\n    function checked(item,offsetPosition) {\r\n        let result=false;\r\n\r\n        if (props.inputState[offsetPosition]) \r\n            \r\n            props.inputState[offsetPosition].forEach(item2=>{\r\n                if(item2[offsetDocNumPosition]===item[docNum]) \r\n                    result=true;\r\n                \r\n            })\r\n        \r\n        return result\r\n    }\r\n\r\n    return (\r\n    <fieldset className='form-group col-md-12 mx-3 border border-secondary pb-4 rounded'>\r\n        <legend className='col-form-label col-12 col-md-6 offset-md-3 text-center' >\r\n            <h6 className='d-inline-block mx-2 mx-md-4'>OFFSET <br/> {props.offsetDescription}</h6>\r\n        </legend>\r\n        <div className=\"overflow-auto\">\r\n            {/*flex nowrap and overflow auto for mobile view*/}\r\n            <div className='row flex-nowrap ' style={{marginLeft:0,marginRight:0}}>\r\n                <h6 className='col' style={{flex:'1 0 200px',paddingLeft:10,paddingRight:10}}>Doc No.</h6>\r\n                <h6 className='col' style={{flex:'1 0 150px',paddingLeft:10,paddingRight:10}}>Name</h6>\r\n                <h6 className='col' style={{flex:'1 0 200px',paddingLeft:10,paddingRight:10}}>Type</h6>\r\n                <h6 className='col' style={{flex:'1 0 120px',paddingLeft:10,paddingRight:10}}>Date</h6>\r\n                <h6 className='col' style={{flex:'1 0 120px',paddingLeft:10,paddingRight:10}}>Original</h6>\r\n                <h6 className='col' style={{flex:'1 0 120px',paddingLeft:10,paddingRight:10}}>Outstanding</h6>\r\n                <h6 className='col mx-2' style={{flex:'0 0 15px',paddingLeft:0,paddingRight:0}}></h6>\r\n                <h6 className='col' style={{flex:'1 0 100px',paddingLeft:10,paddingRight:10}}>Pay</h6>\r\n            </div>\r\n            {props.dataSelectOutstanding? props.dataSelectOutstanding.data.map((item,i)=>\r\n            (<div className='row flex-nowrap' style={{marginLeft:0,marginRight:0}} key={item[docNum]}>\r\n                <p className='col border my-0' style={{flex:'1 0 200px',paddingLeft:10,paddingRight:10,paddingTop:'0.375rem',paddingBottom:'0.375rem'}}>{item[docNum]}</p>\r\n                <p className='col border my-0 text-truncate' style={{flex:'1 0 150px',paddingLeft:10,paddingRight:10,paddingTop:'0.375rem',paddingBottom:'0.375rem'}}>{item[name]}</p>\r\n                <p className='col border my-0' style={{flex:'1 0 200px',paddingLeft:10,paddingRight:10,paddingTop:'0.375rem',paddingBottom:'0.375rem'}}>{item[type]}</p>\r\n                <p className='col border my-0' style={{flex:'1 0 120px',paddingLeft:10,paddingRight:10,paddingTop:'0.375rem',paddingBottom:'0.375rem'}}>{dateFormatParser(item[date])}</p>\r\n                <p className='col border my-0' style={{flex:'1 0 120px',paddingLeft:10,paddingRight:10,paddingTop:'0.375rem',paddingBottom:'0.375rem'}}>{numberFormatParser(item[original])}</p>\r\n                <p className='col border my-0' style={{flex:'1 0 120px',paddingLeft:10,paddingRight:10,paddingTop:'0.375rem',paddingBottom:'0.375rem'}}>{numberFormatParser(item[outstanding])}</p>\r\n                <label htmlFor='pay' className='sr-only'/>\r\n                <input type='checkbox' id='pay' style={{flex:'0 0 15px'}} \r\n                checked={item[type]===props.offsetDescriptionOne?checked(item,props.offsetPositionOne):checked(item,props.offsetPositionTwo)} \r\n                disabled={props.disabled}\r\n                className='col form-control mx-2' onChange={\r\n                    (e)=>{\r\n                        props.changeErrorUnappliedAmount(null);\r\n                        /*if button checked*/\r\n                        if(e.target.checked) {\r\n                            /*First check if overall condition-unapplied amount is >0. If unapplied amount is zero, no operations \r\n                            will be executed (although still can uncheck)*/\r\n                            if (props.calculateUnappliedAmount()>0)\r\n                                /*check if item belongs in offsetPositionOne or offsetPositionTwo array and repeat steps in both array */\r\n                                if (item[type]===props.offsetDescriptionOne) \r\n                                    onChangeCheck(item,props.offsetPositionOne)\r\n                                else onChangeCheck(item,props.offsetPositionTwo)\r\n\r\n                        } /*if button unchecked*/ else {\r\n                            /*remove existing offsetinputstate arrays*/\r\n                            if(item[type]===props.offsetDescriptionOne) {\r\n                                props.inputState[props.offsetPositionOne].forEach((item2,i)=>{\r\n                                    if(item2[offsetDocNumPosition]===item[docNum]) \r\n                                        onRemoveOffsetInput(props.offsetPositionOne,i)\r\n                                })\r\n                            } else props.inputState[props.offsetPositionTwo].forEach((item2,i)=>{\r\n                                if(item2[offsetDocNumPosition]===item[docNum]) \r\n                                    onRemoveOffsetInput(props.offsetPositionTwo,i)\r\n                                })\r\n                        }\r\n                        \r\n\r\n                        }}/>\r\n                <label htmlFor='payAmount' className='sr-only'/>\r\n                <input type='number' id='payAmount' style={{flex:'1 0 90px',height:'auto',paddingLeft:10,paddingRight:10}} \r\n                className='col form-control' min='0' step='.01'\r\n                value={item[type]===props.offsetDescriptionOne? \r\n                    (props.inputState[props.offsetPositionOne][getOffsetInputStateArrayPosition(item,props.offsetPositionOne)]? \r\n                    ''+props.inputState[props.offsetPositionOne][getOffsetInputStateArrayPosition(item,props.offsetPositionOne)][offsetAmountPosition]:'')\r\n                    :\r\n                    (props.inputState[props.offsetPositionTwo][getOffsetInputStateArrayPosition(item,props.offsetPositionTwo)]? \r\n                    ''+props.inputState[props.offsetPositionTwo][getOffsetInputStateArrayPosition(item,props.offsetPositionTwo)][offsetAmountPosition]:'')}\r\n\r\n                disabled={item[type]===props.offsetDescriptionOne? \r\n                    checkPayAmountDisabled(item,props.offsetPositionOne):checkPayAmountDisabled(item,props.offsetPositionTwo)\r\n                } \r\n                onChange={(e)=>{\r\n                    props.changeErrorUnappliedAmount(null);\r\n\r\n                    if(parseFloat(e.target.value) > props.calculateUnappliedAmount(item[docNum])) {\r\n                        if (item[type]===props.offsetDescriptionOne)  \r\n                            onChangeOffsetInput(props.calculateUnappliedAmount(item[docNum]),\r\n                            props.offsetPositionOne,getOffsetInputStateArrayPosition(item,props.offsetPositionOne),offsetAmountPosition)\r\n                        else onChangeOffsetInput(props.calculateUnappliedAmount(item[docNum]),\r\n                        props.offsetPositionTwo,getOffsetInputStateArrayPosition(item,props.offsetPositionTwo),offsetAmountPosition)\r\n                    }\r\n                    else {\r\n                        if (item[type]===props.offsetDescriptionOne) \r\n                        onChangeOffsetInput(parseFloat(e.target.value),props.offsetPositionOne,\r\n                        getOffsetInputStateArrayPosition(item,props.offsetPositionOne),offsetAmountPosition)\r\n\r\n                        else onChangeOffsetInput(parseFloat(e.target.value),props.offsetPositionTwo,\r\n                        getOffsetInputStateArrayPosition(item,props.offsetPositionTwo),offsetAmountPosition)\r\n                    }\r\n                   \r\n                }}\r\n                />\r\n            </div>)\r\n            ):null}\r\n        </div>\r\n    </fieldset>\r\n    )\r\n}\r\n\r\n\r\nexport default OffsetRender;","import React,{useState,useEffect,useContext} from 'react';\r\nimport Item from '../Shared/Item';\r\nimport ItemButton from '../Shared/ItemButton';\r\nimport AppLayout from '../Shared/AppLayout';\r\nimport {\r\n    Switch,\r\n    Route,\r\n    useRouteMatch,\r\n    Redirect\r\n} from 'react-router-dom';\r\nimport DocumentOne from '../Shared/preview/DocumentOne';\r\nimport numberFormatParser from '../Shared/numberFormatParser';\r\nimport dateFormatParser from '../Shared/dateFormatParser';\r\nimport useFetch from '../Shared/useFetch';\r\nimport authContext from '../Shared/authContext';\r\nimport LineRender from '../Shared/LineRender';\r\nimport OffsetRender from '../Shared/OffsetRender';\r\n\r\n\r\n\r\nfunction CreditNoteItem (props) {\r\n    const url={\r\n        item:new URLSearchParams(props.location.search).get('item'),\r\n        id:new URLSearchParams(props.location.search).get('id'),\r\n    }\r\n    const [{data:dataSelectDebtor,error:errorSelectDebtor}]=useFetch({\r\n        url:'./SelectItem',\r\n        init:{\r\n            method:'POST',\r\n            headers:{'Content-Type':'application/json'},\r\n            body:JSON.stringify({item:'debtor'}),\r\n            credentials:'include'\r\n        }\r\n    });//extension of Item component\r\n\r\n    const [{data:dataSelectStock,error:errorSelectStock}]=useFetch({\r\n        url:'./SelectItem',\r\n        init:{\r\n            method:'POST',\r\n            headers:{'Content-Type':'application/json'},\r\n            body:JSON.stringify({\r\n                item:'stock',\r\n                param:url.id?[url.id]:null\r\n            }),\r\n            credentials:'include'\r\n        }\r\n    });//extension of Item component\r\n\r\n    const [{data:dataSelectGLCode,error:errorSelectGLCode}]=useFetch({\r\n        url:'./getEligibleGLAccount',\r\n        init:{\r\n            method:'POST',\r\n            headers:{'Content-Type':'application/json'},\r\n            body:JSON.stringify({item:'credit_note'}),\r\n            credentials:'include'\r\n        }\r\n    });//extension of Item component\r\n    \r\n    const [{data:dataSelectDebtorOutstanding,error:errorSelectDebtorOutstanding},changeParamDebtorOutstanding]=useFetch(null);//extension of Item component\r\n    \r\n    /*Position of inputState variable used in other components. */\r\n    const debtorNumPosition=0;\r\n    const creditTermPosition=6;\r\n    const oldNumPosition=8;\r\n    const linePosition=9;\r\n    const offsetPositionSalesInvoice=10;\r\n    const offsetPositionDebitNote=11;\r\n    const stockControlPosition=12;\r\n\r\n    /*inputState offset inner positions*/\r\n    const offsetDocNumPosition=0;\r\n    const offsetAmountPosition=1;\r\n\r\n    const offsetDescriptionOne='INVOICE';\r\n    const offsetDescriptionTwo='DEBIT NOTE';\r\n\r\n    const [debtorList,changeDebtorList] = useState(null);\r\n    const [stockList,changeStockList] = useState(null);\r\n    const [GLCodeList,changeGLCodeList] = useState(null);\r\n    const [errorUnappliedAmount,changeErrorUnappliedAmount] = useState(null);\r\n    const [inputState,changeInputState]=useState(['','','','','','','COD','','',[],[],[],[]]) \r\n\r\n    \r\n    const {path} = useRouteMatch();\r\n    const {changeAuth} = useContext(authContext);\r\n\r\n    useEffect(()=>{\r\n        \r\n        if (dataSelectDebtor && dataSelectDebtor.auth===false) {\r\n                    alert('Cookies Expired or Authorisation invalid. Please Login again!');\r\n                    changeAuth(false);\r\n                }\r\n        else if (dataSelectDebtor && dataSelectDebtor.data && dataSelectDebtor.field) \r\n            changeDebtorList(dataSelectDebtor.data.map(data=>(\r\n            <option key={data[dataSelectDebtor.field[0].name]} value={data[dataSelectDebtor.field[0].name]}>\r\n                {data[dataSelectDebtor.field[0].name]+' | '+(data[dataSelectDebtor.field[1].name]?data[dataSelectDebtor.field[1].name]:'')}\r\n            </option>)\r\n            )\r\n        )\r\n\r\n        if (dataSelectStock && dataSelectStock.auth===false) {\r\n                    alert('Cookies Expired or Authorisation invalid. Please Login again!');\r\n                    changeAuth(false);\r\n                }\r\n        else if (dataSelectStock && dataSelectStock.data && dataSelectStock.field) {\r\n            const stockNum=dataSelectStock.field[0].name;\r\n            const stockDesc=dataSelectStock.field[1].name;\r\n            const stockPrice=dataSelectStock.field[2].name;\r\n            const stockBalQty=dataSelectStock.field[8].name;\r\n            \r\n            changeStockList(dataSelectStock.data.map(data=>(\r\n                <option key={data[stockNum]} value={data[stockNum]}>\r\n                    {data[stockNum]+' | '\r\n                    + (data[stockDesc]?data[stockDesc]:'')+' | Price = '\r\n                    + (data[stockPrice]?data[stockPrice]:'')+' | Bal Qty = '\r\n                    + (data[stockBalQty]?data[stockBalQty]:'0')}\r\n                </option>)\r\n                )\r\n            )\r\n        }\r\n            \r\n\r\n        if (dataSelectGLCode && dataSelectGLCode.auth===false) {\r\n                alert('Cookies Expired or Authorisation invalid. Please Login again!');\r\n                changeAuth(false);\r\n            }\r\n        else if (dataSelectGLCode && dataSelectGLCode.data && dataSelectGLCode.field) \r\n            changeGLCodeList(dataSelectGLCode.data.map(data=>(\r\n            <option key={data[dataSelectGLCode.field[0].name]} value={data[dataSelectGLCode.field[0].name]}>\r\n                {(data[dataSelectGLCode.field[0].name]?data[dataSelectGLCode.field[0].name]:'')\r\n                +' | '+(data[dataSelectGLCode.field[1].name]?data[dataSelectGLCode.field[1].name]:'')}\r\n            </option>)\r\n            )\r\n        )\r\n\r\n    },[dataSelectDebtor,errorSelectDebtor,dataSelectStock,errorSelectStock,dataSelectGLCode,errorSelectGLCode])\r\n\r\n    /*have a separate useeffect for debtor outstanding fetch because fetch happens many time during lifecycle of component*/\r\n\r\n    useEffect(()=>{\r\n        if (dataSelectDebtorOutstanding && dataSelectDebtorOutstanding.auth===false) {\r\n            alert('Cookies Expired or Authorisation invalid. Please Login again!');\r\n            changeAuth(false);\r\n        }\r\n    },[dataSelectDebtorOutstanding,errorSelectDebtorOutstanding])\r\n\r\n    useEffect(()=>{\r\n        function setScale() {\r\n            document.querySelector(\"meta[name=viewport]\").setAttribute(\r\n                'content','width=device-width, initial-scale=1.0');\r\n        }\r\n        window.addEventListener('popstate',setScale)\r\n            \r\n        return function unattach() {\r\n                window.removeEventListener('popstate',setScale)\r\n            }\r\n        },[])\r\n\r\n\r\n    function paramDebtorOutstanding(debtorNum,oldNum){\r\n        return {\r\n            url:'./getDebtorOutstanding',\r\n            init:{\r\n                method:'POST',\r\n                headers:{'Content-Type':'application/json'},\r\n                body:JSON.stringify({\r\n                    debtorNum:debtorNum,\r\n                    oldNum:oldNum\r\n                }),\r\n                credentials:'include'\r\n            }\r\n        }\r\n    }\r\n    function onChange(value,order) {\r\n        changeInputState([...inputState.slice(0,order),value,...inputState.slice(order+1)])\r\n    }\r\n    \r\n    function calculateSubtotal(i) {\r\n        if (inputState[linePosition][i][3]!=='' && inputState[linePosition][i][4]!=='' && \r\n        inputState[linePosition][i][5]!=='')\r\n            return ((parseFloat(inputState[linePosition][i][3])*parseFloat(inputState[linePosition][i][4]))\r\n            -parseFloat(inputState[linePosition][i][5]))\r\n        else return '';\r\n    }\r\n\r\n    function calculateTotal() {\r\n        let total=0\r\n        inputState[linePosition].forEach((lineSet,i)=>{\r\n\r\n            if(inputState[linePosition][i][3]!=='' && inputState[linePosition][i][4]!=='' && \r\n            inputState[linePosition][i][5]!=='')\r\n             total=total+((parseFloat(inputState[linePosition][i][3])*parseFloat(inputState[linePosition][i][4]))\r\n             -parseFloat(inputState[linePosition][i][5]))\r\n        })\r\n        return total;\r\n    }\r\n    \r\n    function calculateUnappliedAmount(exclude) {\r\n        return inputState[offsetPositionDebitNote].reduce((a,b)=>{\r\n            \r\n            if(exclude===b[offsetDocNumPosition]) {\r\n                return a\r\n            }     \r\n            else return a-b[offsetAmountPosition];\r\n        },inputState[offsetPositionSalesInvoice].reduce((a,b)=>{\r\n            \r\n            if(exclude===b[offsetDocNumPosition]) {\r\n                return a\r\n            }     \r\n            else return a-b[offsetAmountPosition];\r\n        },calculateTotal())\r\n        )\r\n    }\r\n    \r\n    /*error display extension from error display already provided by Item Component*/\r\n    let errorDisplayExtension=null;\r\n    \r\n    \r\n    if ((dataSelectDebtor && dataSelectDebtor.error) || errorSelectDebtor ||(dataSelectStock && dataSelectStock.error) || errorSelectStock ||\r\n    (dataSelectGLCode && dataSelectGLCode.error) || errorSelectGLCode || (dataSelectDebtorOutstanding && dataSelectDebtorOutstanding.error) ||\r\n    errorSelectDebtorOutstanding) \r\n    errorDisplayExtension=(\r\n        <div className=\"alert alert-warning\">\r\n            {dataSelectDebtor && dataSelectDebtor.error? 'Debtor List RETRIEVAL for item failed errno: '+dataSelectDebtor.error.errno\r\n            +' code: '+dataSelectDebtor.error.code+' message: '+dataSelectDebtor.error.sqlMessage:null}\r\n            {errorSelectDebtor? 'Debtor List RETRIEVAL for item failed '+errorSelectDebtor : null}\r\n            <br/>\r\n            <br/>\r\n            {dataSelectStock && dataSelectStock.error? 'Stock List RETRIEVAL for item failed errno: '+dataSelectStock.error.errno\r\n            +' code: '+dataSelectStock.error.code+' message: '+dataSelectStock.error.sqlMessage:null}\r\n            {errorSelectStock? 'Stock List RETRIEVAL for item failed '+errorSelectStock : null}\r\n            <br/>\r\n            <br/>\r\n            {dataSelectGLCode && dataSelectGLCode.error? 'GL Code List RETRIEVAL for item failed errno: '+dataSelectGLCode.error.errno\r\n            +' code: '+dataSelectGLCode.error.code+' message: '+dataSelectGLCode.error.sqlMessage:null}\r\n            {errorSelectGLCode? 'GL Code List RETRIEVAL for item failed '+errorSelectGLCode : null}\r\n            <br/>\r\n            <br/>\r\n            {dataSelectDebtorOutstanding && dataSelectDebtorOutstanding.error? 'Debtor Outstanding List RETRIEVAL for item failed errno: '\r\n            + dataSelectDebtorOutstanding.error.errno +' code: '+dataSelectDebtorOutstanding.error.code+' message: '+ \r\n            dataSelectDebtorOutstanding.error.sqlMessage:null}\r\n            {errorSelectDebtorOutstanding? 'Debtor Outstanding List RETRIEVAL for item failed '+errorSelectDebtorOutstanding : null}\r\n        </div>)\r\n\r\n    \r\n    return (\r\n        <Item inputState={inputState} changeInputState={changeInputState} url={url} item='credit_note' successPath='/CreditNote'\r\n        paramOutstanding={paramDebtorOutstanding} changeParamOutstanding={changeParamDebtorOutstanding} \r\n        debtorCreditorNumPosition={debtorNumPosition} oldNumPosition={oldNumPosition}>\r\n            {\r\n            ({usage,disabled,changeDisabled,onInsert,onUpdate,onDelete,errorDisplay,inputNumberRender})=> \r\n            (<Switch>\r\n                <Route exact path={`${path}/Preview`}>\r\n                    <DocumentOne description={CreditNoteItem.description} \r\n                        backPath={CreditNoteItem.path} \r\n                        topLeftInput={[inputState[1],inputState[2]]}\r\n                        topRightField={[CreditNoteItem.description+' No','Date','Credit Term','Other Description']}\r\n                        topRightInput={[inputState[3],dateFormatParser(inputState[4]),inputState[6]==='COD'?'C.O.D.':inputState[6]+' Days',inputState[5]]}\r\n                        bottomField={['','Item Code','Description','Price','Qty','Discount','Subtotal']}\r\n                        bottomInput={inputState[linePosition]}\r\n                        calculateSubtotal={calculateSubtotal}\r\n                        calculateTotal={calculateTotal}\r\n                    />\r\n                </Route>\r\n                <Route exact path={path}>\r\n                <AppLayout >\r\n                <div className='container pb-5 px-md-5'>\r\n\r\n                    {/*Heading renders depending on INSERT or UPDATE/DELETE state*/}\r\n\r\n                    <h3 className='my-3'>{(usage==='INSERT'? 'Create':'Update') + ' '+ CreditNoteItem.description}</h3>\r\n                    <small className='text-warning'>* required</small>\r\n                    {errorDisplay}\r\n                    {errorDisplayExtension}\r\n\r\n                    {/*onInsert and onUpdate needs to be attached to HTML form onSubmit eventhandler since native HTML form \r\n                    validation only works if submit event is handled here*/}\r\n                    <form onSubmit={(e)=>{\r\n                        e.preventDefault();\r\n                            if(usage==='INSERT') onInsert(); \r\n                            else onUpdate()\r\n                        \r\n                        }}>\r\n                        <div className='row'>\r\n                            <fieldset className='form-group form-row col-md-5 mx-3 border border-secondary pb-4 rounded' disabled={disabled}>\r\n                                <legend className='col-form-label col-4 offset-4 text-center' ><h6>Debtor <span className='text-warning'>*</span></h6></legend>\r\n                                <label className='mt-3' htmlFor='debtorID' >Debtor ID</label>\r\n                                <div className='input-group'>\r\n                                    {/*if input is disabled, browser does not validate entry (and hence problem if option from dropdown \r\n                                    not chosen).Hence to prevent user altering input content(other than using those in dropdown) AND \r\n                                    to ensure a value is chosen set required attribute and a onChange event handler that does nothing*/}\r\n                                    <input type='text' id='debtorID' value={inputState[0]} onChange={(e)=>e} required className='form-control' />\r\n                                    <select className='form-control' style={{flex:'0 1 0'}} onChange={(e)=>{\r\n                                        let debtorName='';\r\n                                        let debtorAddress='';\r\n                                        let debtorDefaultCreditTerm='';\r\n\r\n                                        dataSelectDebtor.data.forEach(data=>{\r\n                                            \r\n                                            if(data[dataSelectDebtor.field[0].name]===e.target.value) {\r\n                                                debtorName=data[dataSelectDebtor.field[1].name]?data[dataSelectDebtor.field[1].name]:'';\r\n                                                debtorAddress=data[dataSelectDebtor.field[2].name]?data[dataSelectDebtor.field[2].name]:'';\r\n                                                debtorDefaultCreditTerm=data[dataSelectDebtor.field[7].name]?data[dataSelectDebtor.field[7].name]:'';\r\n                                            }\r\n                                            \r\n                                        })\r\n                                    \r\n                                    changeInputState([e.target.value,debtorName,debtorAddress,\r\n                                        ...inputState.slice(3,creditTermPosition),debtorDefaultCreditTerm,\r\n                                        ...inputState.slice(creditTermPosition+1)])\r\n                                    changeParamDebtorOutstanding(\r\n                                        paramDebtorOutstanding(e.target.value,inputState[oldNumPosition])\r\n                                        )\r\n                                    \r\n                                    }}>\r\n                                        <option value=''> -select an option- </option>\r\n                                        {debtorList}\r\n                                    </select>\r\n                                </div>\r\n                                <label className='mt-3' htmlFor='debtorName'>Debtor Name</label>\r\n                                <input id='debtorName' value={inputState[1]} onChange={(e)=>e} required className='form-control'/>\r\n                                <label className='mt-3' htmlFor='debtorAddress'>Debtor Address</label>\r\n                                <textarea id='debtorAddress' value={inputState[2]} onChange={(e)=>e} required className='form-control'/>\r\n                                \r\n                            </fieldset>\r\n\r\n                            <div className='form-group col-md-5 mx-3'>\r\n                                <label htmlFor='creditNoteNumber' className='mt-3'>Credit Note Number <span className='text-warning'>*</span></label>\r\n                                {inputNumberRender({\r\n                                    onChange:onChange,\r\n                                    layout:'',\r\n                                    position:3,\r\n                                    labelID:'creditNoteNumber'\r\n                                })\r\n                                }\r\n                                \r\n                                <label htmlFor='date' className='mt-3'>Date <span className='text-warning'>*</span></label>\r\n                                <input type='date' disabled={disabled} required value={inputState[4]} onChange={(e)=>onChange(e.target.value,4)} \r\n                                className='form-control'/>\r\n                                \r\n                                <label className='mt-3' htmlFor='glCode' >GL Code <span className='text-warning'>*</span></label>\r\n                                <div className='input-group'>\r\n                                    <input type='text' id='glCode' value={inputState[7]} onChange={(e)=>e} required className='form-control' \r\n                                    disabled={disabled}/>\r\n                                    <select className='form-control' style={{flex:'0 1 0'}} disabled={disabled} onChange={(e)=>{\r\n                                    onChange(e.target.value,7)\r\n                                    }}>\r\n                                        <option value=''> -select an option- </option>\r\n                                        {GLCodeList}\r\n                                    </select>\r\n                                </div>\r\n\r\n                                <label htmlFor='creditTerm' className='mt-3'>Credit Term</label>\r\n                                <select id='creditTerm' onChange={(e)=> onChange(e.target.value,6)} value={inputState[6]} disabled={disabled} \r\n                                className='form-control'>\r\n                                    <option value='COD'>C.O.D.</option>\r\n                                    <option value='30'>30 Days</option>\r\n                                    <option value='45'>45 Days</option>\r\n                                    <option value='60'>60 Days</option>\r\n                                    <option value='90'>90 Days</option>\r\n                                </select>\r\n\r\n                                <label htmlFor='description' className='mt-3'>Description</label>\r\n                                <textarea id='description' onChange={(e)=>onChange(e.target.value,5)} value={inputState[5]} \r\n                                disabled={disabled} className='form-control'/>\r\n                                \r\n                            </div>\r\n\r\n                            <LineRender linePosition={linePosition} stockControlPosition={stockControlPosition}\r\n                            disabled={disabled} inputState={inputState} changeInputState={changeInputState} \r\n                            dataSelectStock={dataSelectStock} stockList={stockList} stockDirection='in'\r\n                            calculateSubtotal={calculateSubtotal} lineDescription={'Credit Note Line'}/>\r\n\r\n                            <h5 className='text-right mt-3 mb-4 col-12'>\r\n                                {'Total: '+numberFormatParser(calculateTotal())}\r\n                            </h5>\r\n                            <h6 className='text-right mb-4 col-12'>\r\n                                <span className=\"alert alert-secondary\">\r\n                                    {'Unapplied Amount: '+numberFormatParser(calculateUnappliedAmount())}\r\n                                </span>\r\n                            </h6>\r\n                            {errorUnappliedAmount}\r\n\r\n                            <OffsetRender dataSelectOutstanding={dataSelectDebtorOutstanding} inputState={inputState} \r\n                                changeInputState={changeInputState} disabled={disabled}\r\n                                calculateUnappliedAmount={calculateUnappliedAmount} calculateTotal={calculateTotal}\r\n                                offsetPositionOne={offsetPositionSalesInvoice} offsetPositionTwo={offsetPositionDebitNote}\r\n                                offsetDescriptionOne={offsetDescriptionOne} offsetDescriptionTwo={offsetDescriptionTwo}\r\n                                changeErrorUnappliedAmount={changeErrorUnappliedAmount}\r\n                                offsetDescription={'Sales Invoice / Debit Note'}/>\r\n                            \r\n\r\n                        </div>\r\n                        <ItemButton usage={usage} onInsert={onInsert} onUpdate={onUpdate} onDelete={onDelete} \r\n                        changeDisabled={changeDisabled} path={`${path}/Preview`}/>\r\n                        \r\n                        \r\n                        \r\n                    </form>\r\n                </div>\r\n                </AppLayout>\r\n            </Route>\r\n            <Redirect to={CreditNoteItem.path}/>\r\n        </Switch>)}\r\n        </Item>\r\n    )\r\n}\r\nCreditNoteItem.description='Credit Note';\r\nCreditNoteItem.path='/CreditNoteItem';\r\n\r\nexport default CreditNoteItem;\r\n\r\n","import React from 'react';\r\nimport AppLayout from '../Shared/AppLayout';\r\nimport Process from '../Shared/Process';\r\nimport ProcessLayout from '../Shared/ProcessLayout';\r\n\r\nfunction GoodsReceivedNote(props) {\r\n    return (\r\n            <AppLayout>\r\n                <Process createItemPath='./GoodsReceivedNoteItem' item='goods_received_note'\r\n                render={(list)=>{\r\n                    return (\r\n                    <ProcessLayout description='Goods Received Note (GRN)' listname={GoodsReceivedNote.description} {...list}/>\r\n                    )}\r\n                }/>\r\n            </AppLayout>\r\n    )\r\n}\r\n                \r\n            \r\n\r\nGoodsReceivedNote.description='Goods Received Note';\r\nGoodsReceivedNote.path='/GoodsReceivedNote';\r\n\r\nexport default GoodsReceivedNote;","import React from 'react';\r\nimport AppLayout from '../Shared/AppLayout';\r\nimport Process from '../Shared/Process';\r\nimport ProcessLayout from '../Shared/ProcessLayout';\r\n\r\nfunction PurchaseReturn(props) {\r\n    return (\r\n            <AppLayout>\r\n                <Process createItemPath='./PurchaseReturnItem' item='purchase_return'\r\n                render={(list)=>{\r\n                    return (\r\n                    <ProcessLayout description={PurchaseReturn.description} listname={PurchaseReturn.description} {...list}/>\r\n                    )}\r\n                }/>\r\n            </AppLayout>\r\n    )\r\n}\r\n                \r\n            \r\n\r\nPurchaseReturn.description='Purchase Return';\r\nPurchaseReturn.path='/PurchaseReturn';\r\n\r\nexport default PurchaseReturn;","import React from 'react';\r\nimport AppLayout from '../Shared/AppLayout';\r\nimport Process from '../Shared/Process';\r\nimport ProcessLayout from '../Shared/ProcessLayout';\r\n\r\nfunction PurchaseInvoice(props) {\r\n    return (\r\n            <AppLayout>\r\n                <Process createItemPath='./PurchaseInvoiceItem' item='purchase_invoice' \r\n                render={(list)=>{\r\n                    return (\r\n                    <ProcessLayout description={PurchaseInvoice.description} listname={PurchaseInvoice.description} {...list}/>\r\n                    )}\r\n                }/>\r\n            </AppLayout>\r\n    )\r\n}\r\n                \r\n            \r\n\r\nPurchaseInvoice.description='Purchase Invoice';\r\nPurchaseInvoice.path='/PurchaseInvoice';\r\n\r\nexport default PurchaseInvoice;","import React from 'react';\r\nimport AppLayout from '../Shared/AppLayout';\r\nimport Process from '../Shared/Process';\r\nimport ProcessLayout from '../Shared/ProcessLayout';\r\n\r\nfunction PurchaseDebitNote(props) {\r\n    return (\r\n            <AppLayout>\r\n                <Process createItemPath='./PurchaseDebitNoteItem' item='purchase_debit_note' \r\n                render={(list)=>{\r\n                    return (\r\n                    <ProcessLayout description={PurchaseDebitNote.description} listname={PurchaseDebitNote.description} {...list}/>\r\n                    )}\r\n                }/>\r\n            </AppLayout>\r\n    )\r\n}\r\n                \r\n            \r\n\r\nPurchaseDebitNote.description='Purchase Debit Note';\r\nPurchaseDebitNote.path='/PurchaseDebitNote';\r\n\r\nexport default PurchaseDebitNote;","import React from 'react';\r\nimport AppLayout from '../Shared/AppLayout';\r\nimport Process from '../Shared/Process';\r\nimport ProcessLayout from '../Shared/ProcessLayout';\r\n\r\nfunction PurchaseCreditNote(props) {\r\n    return (\r\n            <AppLayout>\r\n                <Process createItemPath='./PurchaseCreditNoteItem' item='purchase_credit_note' \r\n                render={(list)=>{\r\n                    return (\r\n                    <ProcessLayout description={PurchaseCreditNote.description} listname={PurchaseCreditNote.description} {...list}/>\r\n                    )}\r\n                }/>\r\n            </AppLayout>\r\n    )\r\n}\r\n                \r\n            \r\n\r\nPurchaseCreditNote.description='Purchase Credit Note';\r\nPurchaseCreditNote.path='/PurchaseCreditNote';\r\n\r\nexport default PurchaseCreditNote;","import React from 'react';\r\nimport numberFormatParser from '../numberFormatParser';\r\nimport dateFormatParser from '../dateFormatParser';\r\nimport {useHistory} from 'react-router-dom';\r\nimport setPageSize from '../setPageSize';\r\n\r\n/*Layout for Purchase Report*/\r\n\r\nfunction PurchaseReportOne(props) {\r\n    const history=useHistory();\r\n\r\n    function populateMonthsHeader() {\r\n        const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n            \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n        ];\r\n        const result=[]\r\n        \r\n        const parsedDateStart=new Date(new Date(props.resultInput.dateStart).getFullYear(),new Date(props.resultInput.dateStart).getMonth(),new Date(props.resultInput.dateStart).getDate(),0)\r\n        const parsedDateEnd=new Date(new Date(props.resultInput.dateEnd).getFullYear(),new Date(props.resultInput.dateEnd).getMonth(),new Date(props.resultInput.dateEnd).getDate(),0)\r\n        \r\n        if (parsedDateEnd<=new Date(new Date(parsedDateStart).getFullYear(),(new Date(parsedDateStart).getMonth())+1,0)) {\r\n            if (props.resultInput['groupOne']==='itemCode' || (props.resultInput['groupOne']==='creditorCode' && props.resultInput['groupTwo']==='itemCode' && props.withDetails))\r\n            result.push(<th key={monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()+' Qty'}\r\n            className='align-top'>\r\n                {monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()+' Qty'}\r\n            </th>)\r\n\r\n            result.push(<th key={props.resultInput['groupOne']==='itemCode' || (props.resultInput['groupOne']==='creditorCode' && props.resultInput['groupTwo']==='itemCode' && props.withDetails)?\r\n            monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()+' Total'\r\n            :monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()}\r\n            className='align-top'>\r\n                {props.resultInput['groupOne']==='itemCode' || (props.resultInput['groupOne']==='creditorCode' && props.resultInput['groupTwo']==='itemCode' && props.withDetails)? \r\n                monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()+' Total'\r\n                :monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()}\r\n            </th>)\r\n        }\r\n        else {\r\n            let date=new Date(parsedDateStart)\r\n            if (props.resultInput['groupOne']==='itemCode' || (props.resultInput['groupOne']==='creditorCode' && props.resultInput['groupTwo']==='itemCode' && props.withDetails))\r\n            result.push(<th key={monthNames[parsedDateStart.getMonth()]+' '+parsedDateStart.getFullYear()+' Qty'}\r\n            className='align-top'>\r\n                {monthNames[parsedDateStart.getMonth()]+' '+parsedDateStart.getFullYear()+' Qty'}\r\n            </th>)\r\n\r\n            result.push(<th key={props.resultInput['groupOne']==='itemCode' || (props.resultInput['groupOne']==='creditorCode' && props.resultInput['groupTwo']==='itemCode' && props.withDetails)?\r\n            monthNames[parsedDateStart.getMonth()]+' '+parsedDateStart.getFullYear()+' Total'\r\n            :monthNames[parsedDateStart.getMonth()]+' '+parsedDateStart.getFullYear()}\r\n            className='align-top'>\r\n                {props.resultInput['groupOne']==='itemCode' || (props.resultInput['groupOne']==='creditorCode' && props.resultInput['groupTwo']==='itemCode' && props.withDetails)? \r\n                monthNames[parsedDateStart.getMonth()]+' '+parsedDateStart.getFullYear()+' Total'\r\n                :monthNames[parsedDateStart.getMonth()]+' '+parsedDateStart.getFullYear()}\r\n            </th>)\r\n            \r\n            while(parsedDateEnd>new Date(new Date(date).getFullYear(),(new Date(date).getMonth())+1+1,0)) {\r\n                date.setMonth(date.getMonth()+1,1)\r\n                if (props.resultInput['groupOne']==='itemCode' || (props.resultInput['groupOne']==='creditorCode' && props.resultInput['groupTwo']==='itemCode' && props.withDetails))\r\n                result.push(<th key={monthNames[date.getMonth()]+' '+date.getFullYear()+' Qty'}\r\n                className='align-top'>\r\n                    {monthNames[date.getMonth()]+' '+date.getFullYear()+' Qty'}\r\n                </th>)\r\n\r\n                result.push(<th key={props.resultInput['groupOne']==='itemCode' || (props.resultInput['groupOne']==='creditorCode' && props.resultInput['groupTwo']==='itemCode' && props.withDetails)?\r\n                monthNames[date.getMonth()]+' '+date.getFullYear()+' Total'\r\n                :monthNames[date.getMonth()]+' '+date.getFullYear()}\r\n                className='align-top'>\r\n                    {props.resultInput['groupOne']==='itemCode' || (props.resultInput['groupOne']==='creditorCode' && props.resultInput['groupTwo']==='itemCode' && props.withDetails)? \r\n                    monthNames[date.getMonth()]+' '+date.getFullYear()+' Total'\r\n                    :monthNames[date.getMonth()]+' '+date.getFullYear()}\r\n                </th>)\r\n            }\r\n            if (props.resultInput['groupOne']==='itemCode' || (props.resultInput['groupOne']==='creditorCode' && props.resultInput['groupTwo']==='itemCode' && props.withDetails))\r\n            result.push(<th key={monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()+' Qty'}\r\n            className='align-top'>\r\n                {monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()+ ' Qty'}\r\n            </th>)\r\n\r\n            result.push(<th key={props.resultInput['groupOne']==='itemCode' || (props.resultInput['groupOne']==='creditorCode' && props.resultInput['groupTwo']==='itemCode' && props.withDetails)?\r\n            monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()+' Total'\r\n            :monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()}\r\n            className='align-top'>\r\n                {props.resultInput['groupOne']==='itemCode' || (props.resultInput['groupOne']==='creditorCode' && props.resultInput['groupTwo']==='itemCode' && props.withDetails)?\r\n                monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()+' Total'\r\n                :monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()}\r\n            </th>)\r\n        }\r\n        return result;\r\n    }\r\n\r\n    \r\n    function populateMonthsAmount(item,data,field) {\r\n        const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n            \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n        ];\r\n        const result=[]\r\n\r\n        const num=field[0].name;\r\n        const itemDate=field[2].name;\r\n        const qty=props.resultInput['groupOne']==='creditorCode'?null:field[3].name;\r\n        const total=props.resultInput['groupOne']==='creditorCode'?field[3].name:field[4].name;\r\n        \r\n        const parsedDateStart=new Date(new Date(props.resultInput.dateStart).getFullYear(),new Date(props.resultInput.dateStart).getMonth(),new Date(props.resultInput.dateStart).getDate(),0)\r\n        const parsedDateEnd=new Date(new Date(props.resultInput.dateEnd).getFullYear(),new Date(props.resultInput.dateEnd).getMonth(),new Date(props.resultInput.dateEnd).getDate(),0)\r\n        if (parsedDateEnd<=new Date(new Date(parsedDateStart).getFullYear(),(new Date(parsedDateStart).getMonth())+1,0)) {\r\n            if (props.resultInput['groupOne']==='itemCode' || (props.resultInput['groupOne']==='creditorCode' && props.resultInput['groupTwo']==='itemCode' && props.withDetails))\r\n            result.push(\r\n                <th key={monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()+' Qty'}\r\n                className='align-top'>\r\n                    {numberFormatParser(data.reduce((a,b)=>{\r\n                        if (b[num]===item[num])\r\n                            return a+b[qty]\r\n                        else return a\r\n                    },0))}\r\n                </th>\r\n            )\r\n            \r\n            result.push(\r\n                <th key={props.resultInput['groupOne']==='itemCode'? \r\n                monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()+' Total'\r\n                :monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()}\r\n                className='align-top'>\r\n                    {numberFormatParser(data.reduce((a,b)=>{\r\n                        if (b[num]===item[num])\r\n                            return a+b[total]\r\n                        else return a\r\n                    },0))}\r\n                </th>\r\n            )\r\n            \r\n        }\r\n        else {\r\n            let date=new Date(parsedDateStart)\r\n            \r\n            if (props.resultInput['groupOne']==='itemCode' || (props.resultInput['groupOne']==='creditorCode' && props.resultInput['groupTwo']==='itemCode' && props.withDetails))\r\n            result.push(\r\n                <th key={monthNames[parsedDateStart.getMonth()]+' '+parsedDateStart.getFullYear()+' Qty'}\r\n                className='align-top'>\r\n                    {numberFormatParser(data.reduce((a,b)=>{\r\n                        const innerParsedDate=new Date(new Date(b[itemDate]).getFullYear(),new Date(b[itemDate]).getMonth(),new Date(b[itemDate]).getDate(),0)\r\n                        \r\n                    if (b[num]===item[num] \r\n                        && innerParsedDate<=new Date(new Date(parsedDateStart).getFullYear(),(new Date(parsedDateStart).getMonth())+1,0))                            \r\n                            return a+b[qty]\r\n                    else return a\r\n                    },0)\r\n                    )}\r\n                </th>)\r\n\r\n            result.push(\r\n                <th key={props.resultInput['groupOne']==='itemCode'?\r\n                monthNames[parsedDateStart.getMonth()]+' '+parsedDateStart.getFullYear()+' Total'\r\n                :monthNames[parsedDateStart.getMonth()]+' '+parsedDateStart.getFullYear()}\r\n                className='align-top'>\r\n                    {numberFormatParser(data.reduce((a,b)=>{\r\n                        const innerParsedDate=new Date(new Date(b[itemDate]).getFullYear(),new Date(b[itemDate]).getMonth(),new Date(b[itemDate]).getDate(),0)\r\n                        \r\n                    if (b[num]===item[num] \r\n                        && innerParsedDate<=new Date(new Date(parsedDateStart).getFullYear(),(new Date(parsedDateStart).getMonth())+1,0))                            \r\n                            return a+b[total]\r\n                    else return a\r\n                    },0)\r\n                    )}\r\n                </th>)\r\n            \r\n            while(parsedDateEnd>new Date(new Date(date).getFullYear(),(new Date(date).getMonth())+1+1,0)) {\r\n                date.setMonth(date.getMonth()+1,1)\r\n                if (props.resultInput['groupOne']==='itemCode' || (props.resultInput['groupOne']==='creditorCode' && props.resultInput['groupTwo']==='itemCode' && props.withDetails))\r\n                result.push(\r\n                    <th key={monthNames[date.getMonth()]+' '+date.getFullYear()+' Qty'}\r\n                    className='align-top'>\r\n                        {numberFormatParser(data.reduce((a,b)=>{\r\n                        const innerParsedDate=new Date(new Date(b[itemDate]).getFullYear(),new Date(b[itemDate]).getMonth(),new Date(b[itemDate]).getDate(),0)\r\n                        if (b[num]===item[num] \r\n                            && innerParsedDate>new Date(new Date(date).getFullYear(),(new Date(date).getMonth()),0)\r\n                            && innerParsedDate<=new Date(new Date(date).getFullYear(),(new Date(date).getMonth())+1,0))\r\n                                return a+b[qty]\r\n                        else return a\r\n                        },0)\r\n                        )}\r\n                    </th>\r\n                )\r\n\r\n                result.push(\r\n                    <th key={props.resultInput['groupOne']==='itemCode'?\r\n                    monthNames[date.getMonth()]+' '+date.getFullYear()+' Total'\r\n                    :monthNames[date.getMonth()]+' '+date.getFullYear()}\r\n                    className='align-top'>\r\n                        {numberFormatParser(data.reduce((a,b)=>{\r\n                        const innerParsedDate=new Date(new Date(b[itemDate]).getFullYear(),new Date(b[itemDate]).getMonth(),new Date(b[itemDate]).getDate(),0)\r\n                        if (b[num]===item[num] \r\n                            && innerParsedDate>new Date(new Date(date).getFullYear(),(new Date(date).getMonth()),0)\r\n                            && innerParsedDate<=new Date(new Date(date).getFullYear(),(new Date(date).getMonth())+1,0))\r\n                                return a+b[total]\r\n                        else return a\r\n                        },0)\r\n                        )}\r\n                    </th>\r\n                )\r\n            }\r\n            if (props.resultInput['groupOne']==='itemCode' || (props.resultInput['groupOne']==='creditorCode' && props.resultInput['groupTwo']==='itemCode' && props.withDetails))\r\n            result.push(\r\n                <th key={monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()+' Qty'}\r\n                className='align-top'>\r\n                    {numberFormatParser(data.reduce((a,b)=>{\r\n                        const innerParsedDate=new Date(new Date(b[itemDate]).getFullYear(),new Date(b[itemDate]).getMonth(),new Date(b[itemDate]).getDate(),0)\r\n                        if (b[num]===item[num] \r\n                            && innerParsedDate>new Date(new Date(parsedDateEnd).getFullYear(),(new Date(parsedDateEnd).getMonth()),0)\r\n                            && innerParsedDate<=parsedDateEnd)\r\n                            return a+b[qty]\r\n                        else return a\r\n                    },0)\r\n                    )}\r\n                </th>\r\n            )\r\n\r\n            result.push(\r\n                <th key={props.resultInput['groupOne']==='itemCode'?\r\n                monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()+' Total'\r\n                :monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()}\r\n                className='align-top'>\r\n                    {numberFormatParser(data.reduce((a,b)=>{\r\n                        const innerParsedDate=new Date(new Date(b[itemDate]).getFullYear(),new Date(b[itemDate]).getMonth(),new Date(b[itemDate]).getDate(),0)\r\n                        if (b[num]===item[num] \r\n                            && innerParsedDate>new Date(new Date(parsedDateEnd).getFullYear(),(new Date(parsedDateEnd).getMonth()),0)\r\n                            && innerParsedDate<=parsedDateEnd)\r\n                            return a+b[total]\r\n                        else return a\r\n                    },0)\r\n                    )}\r\n                </th>\r\n            )\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function populateDetailMonthsAmount(item,item2,data,field) {\r\n        const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n            \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n        ];\r\n        const result=[]\r\n        const num=field[0].name\r\n        const subNum=field[1].name;\r\n        const subDate=field[3].name;\r\n        const subQty=field[4].name;\r\n        const subTotal=field[5].name;\r\n        \r\n        const parsedDateStart=new Date(new Date(props.resultInput.dateStart).getFullYear(),new Date(props.resultInput.dateStart).getMonth(),new Date(props.resultInput.dateStart).getDate(),0)\r\n        const parsedDateEnd=new Date(new Date(props.resultInput.dateEnd).getFullYear(),new Date(props.resultInput.dateEnd).getMonth(),new Date(props.resultInput.dateEnd).getDate(),0)\r\n        if (parsedDateEnd<=new Date(new Date(parsedDateStart).getFullYear(),(new Date(parsedDateStart).getMonth())+1,0)) {\r\n            result.push(\r\n                <td key={monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()+' Qty'}\r\n                className='align-top'>\r\n                    {numberFormatParser(data.reduce((a,b)=>{\r\n                        if (b[num]===item[num] && b[subNum]===item2[subNum])\r\n                            return a+b[subQty]\r\n                        else return a\r\n                    },0))}\r\n                </td>\r\n            )\r\n\r\n            result.push(\r\n                <td key={monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear() +' Total'}\r\n                className='align-top'>\r\n                    {numberFormatParser(data.reduce((a,b)=>{\r\n                        if (b[num]===item[num] && b[subNum]===item2[subNum])\r\n                            return a+b[subTotal]\r\n                        else return a\r\n                    },0))}\r\n                </td>\r\n            )\r\n        }\r\n        else {\r\n            let date=new Date(parsedDateStart)\r\n            \r\n            result.push(\r\n                <td key={monthNames[parsedDateStart.getMonth()]+' '+parsedDateStart.getFullYear()+' Qty'} \r\n                className='align-top'>\r\n                    {numberFormatParser(data.reduce((a,b)=>{\r\n                        const innerParsedDate=new Date(new Date(b[subDate]).getFullYear(),new Date(b[subDate]).getMonth(),new Date(b[subDate]).getDate(),0)\r\n                        \r\n                    if (b[num]===item[num] && b[subNum]===item2[subNum] \r\n                        && innerParsedDate<=new Date(new Date(parsedDateStart).getFullYear(),(new Date(parsedDateStart).getMonth())+1,0))                            \r\n                            return a+b[subQty]\r\n                    else return a\r\n                    },0)\r\n                    )}\r\n                </td>)\r\n\r\n                result.push(\r\n                <td key={monthNames[parsedDateStart.getMonth()]+' '+parsedDateStart.getFullYear()+' Total'} \r\n                className='align-top'>\r\n                    {numberFormatParser(data.reduce((a,b)=>{\r\n                        const innerParsedDate=new Date(new Date(b[subDate]).getFullYear(),new Date(b[subDate]).getMonth(),new Date(b[subDate]).getDate(),0)\r\n                        \r\n                    if (b[num]===item[num] && b[subNum]===item2[subNum] \r\n                        && innerParsedDate<=new Date(new Date(parsedDateStart).getFullYear(),(new Date(parsedDateStart).getMonth())+1,0))                            \r\n                            return a+b[subTotal]\r\n                    else return a\r\n                    },0)\r\n                    )}\r\n                </td>)\r\n            \r\n            while(parsedDateEnd>new Date(new Date(date).getFullYear(),(new Date(date).getMonth())+1+1,0)) {\r\n                date.setMonth(date.getMonth()+1,1)\r\n\r\n                result.push(\r\n                    <td key={monthNames[date.getMonth()]+' '+date.getFullYear()+' Qty'}\r\n                    className='align-top'>\r\n                        {numberFormatParser(data.reduce((a,b)=>{\r\n                        const innerParsedDate=new Date(new Date(b[subDate]).getFullYear(),new Date(b[subDate]).getMonth(),new Date(b[subDate]).getDate(),0)\r\n                        if (b[num]===item[num] && b[subNum]===item2[subNum] \r\n                            && innerParsedDate>new Date(new Date(date).getFullYear(),(new Date(date).getMonth()),0)\r\n                            && innerParsedDate<=new Date(new Date(date).getFullYear(),(new Date(date).getMonth())+1,0))\r\n                                return a+b[subQty]\r\n                        else return a\r\n                        },0)\r\n                        )}\r\n                    </td>\r\n                )\r\n\r\n                result.push(\r\n                    <td key={monthNames[date.getMonth()]+' '+date.getFullYear()+' Total'}\r\n                    className='align-top'>\r\n                        {numberFormatParser(data.reduce((a,b)=>{\r\n                        const innerParsedDate=new Date(new Date(b[subDate]).getFullYear(),new Date(b[subDate]).getMonth(),new Date(b[subDate]).getDate(),0)\r\n                        if (b[num]===item[num] && b[subNum]===item2[subNum] \r\n                            && innerParsedDate>new Date(new Date(date).getFullYear(),(new Date(date).getMonth()),0)\r\n                            && innerParsedDate<=new Date(new Date(date).getFullYear(),(new Date(date).getMonth())+1,0))\r\n                                return a+b[subTotal]\r\n                        else return a\r\n                        },0)\r\n                        )}\r\n                    </td>\r\n                )\r\n            }\r\n\r\n            result.push(\r\n                <td key={monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()+' Qty'}\r\n                className='align-top'>\r\n                    {numberFormatParser(data.reduce((a,b)=>{\r\n                        const innerParsedDate=new Date(new Date(b[subDate]).getFullYear(),new Date(b[subDate]).getMonth(),new Date(b[subDate]).getDate(),0)\r\n                        if (b[num]===item[num] && b[subNum]===item2[subNum] \r\n                            && innerParsedDate>new Date(new Date(parsedDateEnd).getFullYear(),(new Date(parsedDateEnd).getMonth()),0)\r\n                            && innerParsedDate<=parsedDateEnd)\r\n                            return a+b[subQty]\r\n                        else return a\r\n                    },0)\r\n                    )}\r\n                </td>\r\n            )\r\n\r\n            result.push(\r\n                <td key={monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()+' Total'}\r\n                className='align-top'>\r\n                    {numberFormatParser(data.reduce((a,b)=>{\r\n                        const innerParsedDate=new Date(new Date(b[subDate]).getFullYear(),new Date(b[subDate]).getMonth(),new Date(b[subDate]).getDate(),0)\r\n                        if (b[num]===item[num] && b[subNum]===item2[subNum] \r\n                            && innerParsedDate>new Date(new Date(parsedDateEnd).getFullYear(),(new Date(parsedDateEnd).getMonth()),0)\r\n                            && innerParsedDate<=parsedDateEnd)\r\n                            return a+b[subTotal]\r\n                        else return a\r\n                    },0)\r\n                    )}\r\n                </td>\r\n            )\r\n        }\r\n        return result;\r\n\r\n    }\r\n    \r\n\r\n    function populateResult() {\r\n        const data=props.data;\r\n        const field=props.field[0];\r\n        const num=field[0].name;\r\n        const name=field[1].name;\r\n        const qty=props.resultInput['groupOne']==='creditorCode'?null:field[3].name;\r\n        const total=props.resultInput['groupOne']==='creditorCode'?field[3].name:field[4].name;\r\n\r\n        const dataDetail=props.dataDetail;\r\n        const subField=props.field[1];\r\n        const subNum=subField[1].name;\r\n        const subName=subField[2].name;\r\n        const subQty=subField[4].name;\r\n        const subTotal=subField[5].name;\r\n\r\n        const itemAlreadyParsed=[];\r\n        const result=[];\r\n\r\n        data.forEach(item=>{\r\n            const subItemAlreadyParsed=[];\r\n            if(itemAlreadyParsed.indexOf(item[num])===-1)  {\r\n                itemAlreadyParsed.push(item[num]);\r\n                result.push(\r\n                <tbody key={item[num]} className='border-bottom border-secondary'>\r\n                    <tr className='border-top border-secondary'>\r\n                        <th className='align-top'>{item[num]}</th>\r\n                        <th className='align-top'>{item[name]}</th>\r\n                        {populateMonthsAmount(item,data,field)}\r\n                        {props.resultInput['groupOne']==='itemCode' || (props.resultInput['groupOne']==='creditorCode' && props.resultInput['groupTwo']==='itemCode' && props.withDetails)?\r\n                        (<th className='align-top'>\r\n                            {numberFormatParser(data.reduce((a,b)=>{\r\n                                if(b[num]===item[num])\r\n                                    return a+b[qty]\r\n                                else return a\r\n                            },0))}\r\n                        </th>):null}\r\n                        <th className='align-top'>\r\n                            {numberFormatParser(data.reduce((a,b)=>{\r\n                                if(b[num]===item[num])\r\n                                    return a+b[total]\r\n                                else return a\r\n                            },0))}\r\n                        </th>\r\n                    </tr>\r\n                    {props.resultInput['groupTwo'] && props.withDetails? dataDetail.map(item2=>{\r\n                        if (subItemAlreadyParsed.indexOf(item2[subNum])===-1) {\r\n                            subItemAlreadyParsed.push(item2[subNum])\r\n                            return (\r\n                                <tr key={item2[subNum]}>\r\n                                    <td className='align-top'>{item2[subNum]}</td>\r\n                                    <td className='align-top'>{item2[subName]}</td>\r\n                                    {populateDetailMonthsAmount(item,item2,dataDetail,subField)}\r\n                                    <td className='align-top'>\r\n                                        {dataDetail.reduce((a,b)=>{\r\n                                            if (b[subNum]===item2[subNum] && b[num]===item[num]) \r\n                                                return a+b[subQty]\r\n                                            else return a\r\n                                        },0)}\r\n                                    </td>\r\n                                    <td className='align-top'>\r\n                                        {numberFormatParser(dataDetail.reduce((a,b)=>{\r\n                                            if (b[subNum]===item2[subNum] && b[num]===item[num]) \r\n                                                return a+b[subTotal]\r\n                                            else return a\r\n                                        },0)\r\n                                        )}\r\n                                    </td>\r\n                                </tr>\r\n                            )\r\n                    }}):null}\r\n                </tbody>)\r\n            }\r\n        })\r\n        return result;\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className='container-fluid py-1'>\r\n            <button type='click' className='btn btn-secondary d-print-none mb-2' \r\n                onClick={()=>{\r\n                    document.querySelector(\"meta[name=viewport]\").setAttribute(\r\n                    'content','width=device-width, initial-scale=1.0');\r\n                    setPageSize('a4 portrait');\r\n                    history.push(props.backPath)\r\n            }}>Back</button>\r\n            <h2 className='text-center mb-3'>\r\n                {props.description+' from '+ dateFormatParser(props.resultInput['dateStart'])\r\n                +' to '+ dateFormatParser(props.resultInput['dateEnd'])}\r\n            </h2>\r\n            \r\n            <table className='table table-borderless'>\r\n                <thead className='border-top border-bottom border-secondary'>\r\n                    <tr>\r\n                        <th className='align-top'>\r\n                            {props.resultInput['groupOne']==='creditorCode'? 'Creditor No.':'Item Code'}\r\n                        </th>\r\n                        <th className='align-top'>Name</th>\r\n                        {populateMonthsHeader()}\r\n                        {props.resultInput['groupOne']==='itemCode' || (props.resultInput['groupOne']==='creditorCode' && props.resultInput['groupTwo']==='itemCode' && props.withDetails)?\r\n                            (<th className='align-top'>Qty</th>):null}\r\n                        <th className='align-top'>Total</th>\r\n                    </tr>\r\n                    {props.withDetails && props.resultInput['groupTwo']?\r\n                    (<tr>\r\n                        <th className='align-top'>\r\n                            {props.resultInput['groupTwo']==='creditorCode'? 'Creditor No.':'Item Code'}\r\n                        </th>\r\n                        <th className='align-top'>Name</th>\r\n                    </tr>):null}\r\n                    \r\n                </thead>\r\n                {populateResult()}\r\n            </table>\r\n            \r\n            <small className='d-block text-center'>End of Report</small>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PurchaseReportOne;","import React,{useState,useContext,useEffect} from 'react';\r\nimport AppLayout from '../Shared/AppLayout'\r\nimport {\r\n    Switch,\r\n    Route,\r\n    useRouteMatch,\r\n    Redirect\r\n} from 'react-router-dom';\r\nimport useFetch from '../Shared/useFetch';\r\nimport authContext from '../Shared/authContext';\r\nimport {useHistory} from 'react-router-dom';\r\nimport $ from 'jquery'\r\nimport numberFormatParser from '../Shared/numberFormatParser';\r\nimport sortData from '../Shared/sort';\r\nimport setPageSize from '../Shared/setPageSize';\r\nimport PurchaseReportOne from '../Shared/preview/PurchaseReportOne';\r\n\r\nfunction PurchaseReport(props) {\r\n    const [{data:dataSelectCreditor,error:errorSelectCreditor}]=useFetch({\r\n        url:'./SelectItem',\r\n        init:{\r\n            method:'POST',\r\n            headers:{'Content-Type':'application/json'},\r\n            body:JSON.stringify({item:'creditor'}),\r\n            credentials:'include'\r\n        }\r\n    });//extension of Item component\r\n\r\n    const [{data:dataSelectStock,error:errorSelectStock}]=useFetch({\r\n        url:'./SelectItem',\r\n        init:{\r\n            method:'POST',\r\n            headers:{'Content-Type':'application/json'},\r\n            body:JSON.stringify({item:'stock'}),\r\n            credentials:'include'\r\n        }\r\n    });\r\n    const [{data:dataSelectPurchaseAnalysis,error:errorSelectPurchaseAnalysis},changeParamPurchaseAnalysis]=useFetch(null);\r\n    const [groupOne,changeGroupOne] = useState('creditorCode')\r\n    const [groupTwo,changeGroupTwo] = useState('')\r\n    const [creditorList,changeCreditorList] = useState(null);\r\n    const [stockList,changeStockList] = useState(null);\r\n    const [groupOneID,changeGroupOneID] = useState([]);\r\n    const [groupTwoID,changeGroupTwoID] = useState([]);\r\n    const [dateStart,changeDateStart] = useState(new Date().getFullYear()+'-01-01');\r\n    const [dateEnd,changeDateEnd] = useState(getFormattedDate(new Date()));\r\n    const [resultInput,changeResultInput]=useState(null);\r\n    const [collapsibleElementID,changeCollapsibleElementID]=useState([])\r\n\r\n    /*Preview states*/\r\n    const [withDetails,changeWithDetails]=useState(false);\r\n    const [sortCriteriaList,changeSortCriteriaList]=useState(null);\r\n    const [detailSortCriteriaList,changeDetailSortCriteriaList]=useState(null);\r\n    const [sortCriteria,changeSortCriteria]=useState('');\r\n    const [detailSortCriteria,changeDetailSortCriteria]=useState('');\r\n    const [generateReportWarning,changeGenerateReportWarning]=useState(false);\r\n\r\n    const {path} = useRouteMatch();\r\n    const {changeAuth} = useContext(authContext);\r\n    const history=useHistory();\r\n\r\n    useEffect(()=>{\r\n        \r\n        if (dataSelectCreditor && dataSelectCreditor.auth===false) {\r\n                    alert('Cookies Expired or Authorisation invalid. Please Login again!');\r\n                    changeAuth(false);\r\n                }\r\n        else if (dataSelectCreditor && dataSelectCreditor.data && dataSelectCreditor.field) \r\n            changeCreditorList(dataSelectCreditor.data.map(data=>(\r\n            <option key={data[dataSelectCreditor.field[0].name]} value={data[dataSelectCreditor.field[0].name]}>\r\n                {data[dataSelectCreditor.field[0].name]+' | '+(data[dataSelectCreditor.field[1].name]?data[dataSelectCreditor.field[1].name]:'')}\r\n            </option>)\r\n            )\r\n        )\r\n\r\n        if (dataSelectStock && dataSelectStock.auth===false) {\r\n                    alert('Cookies Expired or Authorisation invalid. Please Login again!');\r\n                    changeAuth(false);\r\n                }\r\n        else if (dataSelectStock && dataSelectStock.data && dataSelectStock.field) {\r\n            const stockNum=dataSelectStock.field[0].name;\r\n            const stockDesc=dataSelectStock.field[1].name;\r\n            \r\n            changeStockList(dataSelectStock.data.map(data=>(\r\n                <option key={data[stockNum]} value={data[stockNum]}>\r\n                    {data[stockNum]+' | '\r\n                    + (data[stockDesc]?data[stockDesc]:'')}\r\n                </option>)\r\n                )\r\n            )\r\n        }\r\n\r\n    },[dataSelectCreditor,errorSelectCreditor,dataSelectStock,errorSelectStock])\r\n\r\n    useEffect(()=>{\r\n        if (dataSelectPurchaseAnalysis && dataSelectPurchaseAnalysis.auth===false) {\r\n                alert('Cookies Expired or Authorisation invalid. Please Login again!');\r\n                changeAuth(false);\r\n            }\r\n        else if (dataSelectPurchaseAnalysis && dataSelectPurchaseAnalysis.data && dataSelectPurchaseAnalysis.field) {\r\n            const data=dataSelectPurchaseAnalysis.data[0];\r\n            const field=dataSelectPurchaseAnalysis.field[0];\r\n            const num=field[0].name;\r\n            const name=field[1].name;\r\n\r\n            const itemAlreadyParsed=[];\r\n            const subData=dataSelectPurchaseAnalysis.data[1];\r\n            const subField=dataSelectPurchaseAnalysis.field[1];\r\n            const subNum=subField[1].name;\r\n            const subName=subField[2].name;\r\n            \r\n            changeResultInput(resultInput=>{})\r\n\r\n            data.forEach(item=>{\r\n                let newObject={}\r\n               if(itemAlreadyParsed.indexOf(item[num])===-1) {\r\n                    itemAlreadyParsed.push(item[num])\r\n                    newObject[item[num]]=subData.filter(item2=>item2[num]===item[num])\r\n                    changeResultInput(resultInput=>(Object.assign({},resultInput,newObject)))\r\n               }\r\n            })\r\n\r\n            changeResultInput(resultInput=>({...resultInput,\r\n                data:dataSelectPurchaseAnalysis.data,\r\n                dataPreview:[...dataSelectPurchaseAnalysis.data],\r\n                field:dataSelectPurchaseAnalysis.field,\r\n                dateStart,\r\n                dateEnd,\r\n                groupOne,\r\n                groupTwo\r\n            }))\r\n            changeSortCriteriaList(\r\n                (<>\r\n                    <option value={num}>{groupOne==='creditorCode'?'Creditor No.':'Stock No.'}</option>\r\n                    <option value={name}>Name</option>\r\n                </>)\r\n            )\r\n            if (groupTwo)\r\n            changeDetailSortCriteriaList(\r\n                (<>\r\n                    <option value={subNum}>{groupTwo==='creditorCode'?'Creditor No.':'Stock No.'}</option>\r\n                    <option value={subName}>Name</option>\r\n                    \r\n                </>)\r\n            )\r\n            else changeDetailSortCriteriaList(null)\r\n\r\n            changeCollapsibleElementID(itemAlreadyParsed.map(item=>item.replace(/[ ._\\-()]/g,'')))\r\n\r\n        }\r\n    },[dataSelectPurchaseAnalysis,errorSelectPurchaseAnalysis])\r\n\r\n\r\n//attach bootstrap/jquery eventlisteners and callbacks\r\n    useEffect(()=>{\r\n        if (collapsibleElementID) {\r\n            collapsibleElementID.forEach(ID=>{\r\n                $('#'+ID).on('show.bs.collapse',e=>{\r\n                    if(e.target===e.currentTarget)\r\n                    $('#plusminus'+ID).removeClass('fa-plus-square').addClass('fa-minus-square');\r\n                })\r\n                $('#'+ID).on('hide.bs.collapse',e=>{\r\n                    if(e.target===e.currentTarget)\r\n                    $('#plusminus'+ID).removeClass('fa-minus-square').addClass('fa-plus-square');\r\n                })\r\n        })\r\n    }\r\n    },[resultInput])\r\n\r\n    useEffect(()=>{\r\n        function setScale() {\r\n            document.querySelector(\"meta[name=viewport]\").setAttribute(\r\n                'content','width=device-width, initial-scale=1.0');\r\n        }\r\n        window.addEventListener('popstate',setScale)\r\n        \r\n        return function unattach() {\r\n                window.removeEventListener('popstate',setScale)\r\n            }\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        function setPage() {\r\n            setPageSize(\"a4 portrait\");\r\n        }\r\n        window.addEventListener('popstate',setPage);\r\n\r\n        return function unattach() {\r\n                window.removeEventListener('popstate',setPage)\r\n            }\r\n    },[])\r\n\r\n    function getFormattedDate(date) {\r\n        let currDate=new Date(date)\r\n        \r\n        return (currDate.getFullYear()) + (currDate.getMonth() + 1 <10? '-0'+ (currDate.getMonth()+1):'-'+ (currDate.getMonth()+1)) + (currDate.getDate()<10?\r\n        '-0'+currDate.getDate() : '-'+currDate.getDate());\r\n    }\r\n\r\n    function populateMonthsHeader() {\r\n        const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n            \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n        ];\r\n        const result=[]\r\n        \r\n        /*date string from input type date is slightly diff from string date and produce diff result when both string are \r\n        called with Date() object. Hence perform the following to ensure date objects produced from both string are the same.\r\n        Same with all the calculate methods below*/\r\n        const parsedDateStart=new Date(new Date(resultInput.dateStart).getFullYear(),new Date(resultInput.dateStart).getMonth(),new Date(resultInput.dateStart).getDate(),0)\r\n        const parsedDateEnd=new Date(new Date(resultInput.dateEnd).getFullYear(),new Date(resultInput.dateEnd).getMonth(),new Date(resultInput.dateEnd).getDate(),0)\r\n        \r\n        if (parsedDateEnd<=new Date(new Date(parsedDateStart).getFullYear(),(new Date(parsedDateStart).getMonth())+1,0)) {\r\n            if (resultInput['groupOne']==='itemCode')\r\n            result.push(<h6 key={monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()+' Qty'}\r\n            style={{flex:'0 0 100px',paddingLeft:10,paddingRight:10}}>\r\n                {monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()+' Qty'}\r\n            </h6>)\r\n\r\n            result.push(<h6 key={resultInput['groupOne']==='itemCode'?\r\n            monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()+' Total'\r\n            :monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()}\r\n            style={resultInput['groupOne']==='itemCode'?\r\n            {flex:'0 0 100px',paddingLeft:10,paddingRight:10}\r\n            :{flex:'0 0 150px',paddingLeft:10,paddingRight:10}}>\r\n                {resultInput['groupOne']==='itemCode'? \r\n                monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()+' Total'\r\n                :monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()}\r\n            </h6>)\r\n        }\r\n        else {\r\n            let date=new Date(parsedDateStart)\r\n            if (resultInput['groupOne']==='itemCode')\r\n            result.push(<h6 key={monthNames[parsedDateStart.getMonth()]+' '+parsedDateStart.getFullYear()+' Qty'} \r\n            style={{flex:'0 0 100px',paddingLeft:10,paddingRight:10}}>\r\n                {monthNames[parsedDateStart.getMonth()]+' '+parsedDateStart.getFullYear()+' Qty'}\r\n            </h6>)\r\n\r\n            result.push(<h6 key={resultInput['groupOne']==='itemCode'?\r\n            monthNames[parsedDateStart.getMonth()]+' '+parsedDateStart.getFullYear()+' Total'\r\n            :monthNames[parsedDateStart.getMonth()]+' '+parsedDateStart.getFullYear()} \r\n            style={resultInput['groupOne']==='itemCode'?\r\n            {flex:'0 0 100px',paddingLeft:10,paddingRight:10}\r\n            :{flex:'0 0 150px',paddingLeft:10,paddingRight:10}}>\r\n                {resultInput['groupOne']==='itemCode'? \r\n                monthNames[parsedDateStart.getMonth()]+' '+parsedDateStart.getFullYear()+' Total'\r\n                :monthNames[parsedDateStart.getMonth()]+' '+parsedDateStart.getFullYear()}\r\n            </h6>)\r\n            \r\n            while(parsedDateEnd>new Date(new Date(date).getFullYear(),(new Date(date).getMonth())+1+1,0)) {\r\n                date.setMonth(date.getMonth()+1,1)\r\n                if (resultInput['groupOne']==='itemCode')\r\n                result.push(<h6 key={monthNames[date.getMonth()]+' '+date.getFullYear()+' Qty'} \r\n                style={{flex:'0 0 100px',paddingLeft:10,paddingRight:10}}>\r\n                    {monthNames[date.getMonth()]+' '+date.getFullYear()+' Qty'}\r\n                </h6>)\r\n\r\n                result.push(<h6 key={resultInput['groupOne']==='itemCode'?\r\n                monthNames[date.getMonth()]+' '+date.getFullYear()+' Total'\r\n                :monthNames[date.getMonth()]+' '+date.getFullYear()} \r\n                style={resultInput['groupOne']==='itemCode'?\r\n                {flex:'0 0 100px',paddingLeft:10,paddingRight:10}\r\n                :{flex:'0 0 150px',paddingLeft:10,paddingRight:10}}>\r\n                    {resultInput['groupOne']==='itemCode'? \r\n                    monthNames[date.getMonth()]+' '+date.getFullYear()+' Total'\r\n                    :monthNames[date.getMonth()]+' '+date.getFullYear()}\r\n                </h6>)\r\n            }\r\n            if (resultInput['groupOne']==='itemCode')\r\n            result.push(<h6 key={monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()+' Qty'} \r\n            style={{flex:'0 0 100px',paddingLeft:10,paddingRight:10}}>\r\n                {monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()+ ' Qty'}\r\n            </h6>)\r\n\r\n            result.push(<h6 key={resultInput['groupOne']==='itemCode'?\r\n            monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()+' Total'\r\n            :monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()} \r\n            style={resultInput['groupOne']==='itemCode'?\r\n            {flex:'0 0 100px',paddingLeft:10,paddingRight:10}\r\n            :{flex:'0 0 150px',paddingLeft:10,paddingRight:10}}>\r\n                {resultInput['groupOne']==='itemCode'?\r\n                monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()+' Total'\r\n                :monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()}\r\n            </h6>)\r\n        }\r\n        \r\n        return result;\r\n        \r\n    }\r\n\r\n    function populateMonthsAmount(item,data,field) {\r\n        const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n            \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n        ];\r\n        const result=[]\r\n\r\n        const num=field[0].name;\r\n        const itemDate=field[2].name;\r\n        const qty=resultInput['groupOne']==='creditorCode'?null:field[3].name;\r\n        const total=resultInput['groupOne']==='creditorCode'?field[3].name:field[4].name;\r\n        \r\n        /*date string from input type date is slightly diff from string date and produce diff result when both string are \r\n        called with Date() object. Hence perform the following to ensure date objects produced from both string are the same.\r\n        Same with all the calculate methods below*/\r\n        const parsedDateStart=new Date(new Date(resultInput.dateStart).getFullYear(),new Date(resultInput.dateStart).getMonth(),new Date(resultInput.dateStart).getDate(),0)\r\n        const parsedDateEnd=new Date(new Date(resultInput.dateEnd).getFullYear(),new Date(resultInput.dateEnd).getMonth(),new Date(resultInput.dateEnd).getDate(),0)\r\n        if (parsedDateEnd<=new Date(new Date(parsedDateStart).getFullYear(),(new Date(parsedDateStart).getMonth())+1,0)) {\r\n            if (resultInput['groupOne']==='itemCode')\r\n            result.push(\r\n                <p key={monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()+' Qty'}\r\n                className='mb-0' \r\n                style={{flex:'0 0 100px',paddingLeft:10,paddingRight:10}}>\r\n                    {numberFormatParser(data.reduce((a,b)=>{\r\n                        if (b[num]===item[num])\r\n                            return a+b[qty]\r\n                        else return a\r\n                    },0))}\r\n                </p>\r\n            )\r\n            \r\n            result.push(\r\n                <p key={resultInput['groupOne']==='itemCode'? \r\n                monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()+' Total'\r\n                :monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()}\r\n                className='mb-0' \r\n                style={resultInput['groupOne']==='itemCode'?\r\n                {flex:'0 0 100px',paddingLeft:10,paddingRight:10}\r\n                :{flex:'0 0 150px',paddingLeft:10,paddingRight:10}}>\r\n                    {numberFormatParser(data.reduce((a,b)=>{\r\n                        if (b[num]===item[num])\r\n                            return a+b[total]\r\n                        else return a\r\n                    },0))}\r\n                </p>\r\n            )\r\n            \r\n        }\r\n        else {\r\n            let date=new Date(parsedDateStart)\r\n            \r\n            if (resultInput['groupOne']==='itemCode')\r\n            result.push(\r\n                <p key={monthNames[parsedDateStart.getMonth()]+' '+parsedDateStart.getFullYear()+' Qty'} \r\n                className='mb-0' style={{flex:'0 0 100px',paddingLeft:10,paddingRight:10}}>\r\n                    {numberFormatParser(data.reduce((a,b)=>{\r\n                        const innerParsedDate=new Date(new Date(b[itemDate]).getFullYear(),new Date(b[itemDate]).getMonth(),new Date(b[itemDate]).getDate(),0)\r\n                        \r\n                    if (b[num]===item[num] \r\n                        && innerParsedDate<=new Date(new Date(parsedDateStart).getFullYear(),(new Date(parsedDateStart).getMonth())+1,0))                            \r\n                            return a+b[qty]\r\n                    else return a\r\n                    },0)\r\n                    )}\r\n                </p>)\r\n\r\n            result.push(\r\n                <p key={resultInput['groupOne']==='itemCode'?\r\n                monthNames[parsedDateStart.getMonth()]+' '+parsedDateStart.getFullYear()+' Total'\r\n                :monthNames[parsedDateStart.getMonth()]+' '+parsedDateStart.getFullYear()} \r\n                className='mb-0' \r\n                style={resultInput['groupOne']==='itemCode'?\r\n                    {flex:'0 0 100px',paddingLeft:10,paddingRight:10}\r\n                    :{flex:'0 0 150px',paddingLeft:10,paddingRight:10}}>\r\n                    {numberFormatParser(data.reduce((a,b)=>{\r\n                        const innerParsedDate=new Date(new Date(b[itemDate]).getFullYear(),new Date(b[itemDate]).getMonth(),new Date(b[itemDate]).getDate(),0)\r\n                        \r\n                    if (b[num]===item[num] \r\n                        && innerParsedDate<=new Date(new Date(parsedDateStart).getFullYear(),(new Date(parsedDateStart).getMonth())+1,0))                            \r\n                            return a+b[total]\r\n                    else return a\r\n                    },0)\r\n                    )}\r\n                </p>)\r\n            \r\n            while(parsedDateEnd>new Date(new Date(date).getFullYear(),(new Date(date).getMonth())+1+1,0)) {\r\n                date.setMonth(date.getMonth()+1,1)\r\n                if (resultInput['groupOne']==='itemCode')\r\n                result.push(\r\n                    <p key={monthNames[date.getMonth()]+' '+date.getFullYear()+' Qty'}\r\n                    className='mb-0' style={{flex:'0 0 100px',paddingLeft:10,paddingRight:10}}>\r\n                        {numberFormatParser(data.reduce((a,b)=>{\r\n                        const innerParsedDate=new Date(new Date(b[itemDate]).getFullYear(),new Date(b[itemDate]).getMonth(),new Date(b[itemDate]).getDate(),0)\r\n                        if (b[num]===item[num] \r\n                            && innerParsedDate>new Date(new Date(date).getFullYear(),(new Date(date).getMonth()),0)\r\n                            && innerParsedDate<=new Date(new Date(date).getFullYear(),(new Date(date).getMonth())+1,0))\r\n                                return a+b[qty]\r\n                        else return a\r\n                        },0)\r\n                        )}\r\n                    </p>\r\n                )\r\n\r\n                result.push(\r\n                    <p key={resultInput['groupOne']==='itemCode'?\r\n                    monthNames[date.getMonth()]+' '+date.getFullYear()+' Total'\r\n                    :monthNames[date.getMonth()]+' '+date.getFullYear()}\r\n                    className='mb-0' \r\n                    style={resultInput['groupOne']==='itemCode'?\r\n                    {flex:'0 0 100px',paddingLeft:10,paddingRight:10}\r\n                    :{flex:'0 0 150px',paddingLeft:10,paddingRight:10}}>\r\n                        {numberFormatParser(data.reduce((a,b)=>{\r\n                        const innerParsedDate=new Date(new Date(b[itemDate]).getFullYear(),new Date(b[itemDate]).getMonth(),new Date(b[itemDate]).getDate(),0)\r\n                        if (b[num]===item[num] \r\n                            && innerParsedDate>new Date(new Date(date).getFullYear(),(new Date(date).getMonth()),0)\r\n                            && innerParsedDate<=new Date(new Date(date).getFullYear(),(new Date(date).getMonth())+1,0))\r\n                                return a+b[total]\r\n                        else return a\r\n                        },0)\r\n                        )}\r\n                    </p>\r\n                )\r\n            }\r\n            if (resultInput['groupOne']==='itemCode')\r\n            result.push(\r\n                <p key={monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()+' Qty'}\r\n                className='mb-0' style={{flex:'0 0 100px',paddingLeft:10,paddingRight:10}}>\r\n                    {numberFormatParser(data.reduce((a,b)=>{\r\n                        const innerParsedDate=new Date(new Date(b[itemDate]).getFullYear(),new Date(b[itemDate]).getMonth(),new Date(b[itemDate]).getDate(),0)\r\n                        if (b[num]===item[num] \r\n                            && innerParsedDate>new Date(new Date(parsedDateEnd).getFullYear(),(new Date(parsedDateEnd).getMonth()),0)\r\n                            && innerParsedDate<=parsedDateEnd)\r\n                            return a+b[qty]\r\n                        else return a\r\n                    },0)\r\n                    )}\r\n                </p>\r\n            )\r\n\r\n            result.push(\r\n                <p key={resultInput['groupOne']==='itemCode'?\r\n                monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()+' Total'\r\n                :monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()}\r\n                className='mb-0' \r\n                style={resultInput['groupOne']==='itemCode'?\r\n                {flex:'0 0 100px',paddingLeft:10,paddingRight:10}\r\n                :{flex:'0 0 150px',paddingLeft:10,paddingRight:10}}>\r\n                    {numberFormatParser(data.reduce((a,b)=>{\r\n                        const innerParsedDate=new Date(new Date(b[itemDate]).getFullYear(),new Date(b[itemDate]).getMonth(),new Date(b[itemDate]).getDate(),0)\r\n                        if (b[num]===item[num] \r\n                            && innerParsedDate>new Date(new Date(parsedDateEnd).getFullYear(),(new Date(parsedDateEnd).getMonth()),0)\r\n                            && innerParsedDate<=parsedDateEnd)\r\n                            return a+b[total]\r\n                        else return a\r\n                    },0)\r\n                    )}\r\n                </p>\r\n            )\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function populateTableHeader() {\r\n        const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n            \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n        ];\r\n        const result=[]\r\n        \r\n        /*date string from input type date is slightly diff from string date and produce diff result when both string are \r\n        called with Date() object. Hence perform the following to ensure date objects produced from both string are the same.\r\n        Same with all the calculate methods below*/\r\n        const parsedDateStart=new Date(new Date(resultInput.dateStart).getFullYear(),new Date(resultInput.dateStart).getMonth(),new Date(resultInput.dateStart).getDate(),0)\r\n        const parsedDateEnd=new Date(new Date(resultInput.dateEnd).getFullYear(),new Date(resultInput.dateEnd).getMonth(),new Date(resultInput.dateEnd).getDate(),0)\r\n        \r\n        if (parsedDateEnd<=new Date(new Date(parsedDateStart).getFullYear(),(new Date(parsedDateStart).getMonth())+1,0)) {\r\n            result.push(\r\n            <th key={monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()+' Qty'}\r\n            className='align-top'>\r\n                {monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()+' Qty'}\r\n            </th>)\r\n\r\n            result.push(\r\n            <th key={monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()+' Total'}\r\n            className='align-top'>\r\n                {monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()+' Total'}\r\n            </th>)\r\n        }\r\n        else {\r\n            let date=new Date(parsedDateStart)\r\n            result.push(\r\n            <th key={monthNames[parsedDateStart.getMonth()]+' '+parsedDateStart.getFullYear()+' Qty'}\r\n            className='align-top'>\r\n                {monthNames[parsedDateStart.getMonth()]+' '+parsedDateStart.getFullYear()+' Qty'}\r\n            </th>)\r\n            result.push(\r\n                <th key={monthNames[parsedDateStart.getMonth()]+' '+parsedDateStart.getFullYear()+' Total'}\r\n                className='align-top'>\r\n                    {monthNames[parsedDateStart.getMonth()]+' '+parsedDateStart.getFullYear()+' Total'}\r\n                </th>)\r\n            \r\n            while(parsedDateEnd>new Date(new Date(date).getFullYear(),(new Date(date).getMonth())+1+1,0)) {\r\n                date.setMonth(date.getMonth()+1,1)\r\n\r\n                result.push(\r\n                <th key={monthNames[date.getMonth()]+' '+date.getFullYear()+' Qty'}\r\n                className='align-top'>\r\n                    {monthNames[date.getMonth()]+' '+date.getFullYear()+' Qty'}\r\n                </th>)\r\n\r\n                result.push(\r\n                <th key={monthNames[date.getMonth()]+' '+date.getFullYear()+' Total'}\r\n                className='align-top'>\r\n                    {monthNames[date.getMonth()]+' '+date.getFullYear()+' Total'}\r\n                </th>)\r\n            }\r\n\r\n            result.push(\r\n            <th key={monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()+' Qty'}\r\n            className='align-top'>\r\n                {monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()+' Qty'}\r\n            </th>)\r\n\r\n            result.push(\r\n            <th key={monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()+' Total'}\r\n            className='align-top'>\r\n                {monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()+' Total'}\r\n            </th>)\r\n        }\r\n        \r\n        return result;\r\n        \r\n    }\r\n\r\n    function populateTableMonthsAmount(item,data,field) {\r\n        const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n            \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n        ];\r\n        const result=[]\r\n        \r\n        const subNum=field[1].name;\r\n        const subDate=field[3].name;\r\n        const subQty=field[4].name;\r\n        const subTotal=field[5].name;\r\n        \r\n        /*date string from input type date is slightly diff from string date and produce diff result when both string are \r\n        called with Date() object. Hence perform the following to ensure date objects produced from both string are the same.\r\n        Same with all the calculate methods below*/\r\n        const parsedDateStart=new Date(new Date(resultInput.dateStart).getFullYear(),new Date(resultInput.dateStart).getMonth(),new Date(resultInput.dateStart).getDate(),0)\r\n        const parsedDateEnd=new Date(new Date(resultInput.dateEnd).getFullYear(),new Date(resultInput.dateEnd).getMonth(),new Date(resultInput.dateEnd).getDate(),0)\r\n        if (parsedDateEnd<=new Date(new Date(parsedDateStart).getFullYear(),(new Date(parsedDateStart).getMonth())+1,0)) {\r\n            result.push(\r\n                <td key={monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()+' Qty'}\r\n                className='align-top'>\r\n                    {numberFormatParser(data.reduce((a,b)=>{\r\n                        if (b[subNum]===item[subNum])\r\n                            return a+b[subQty]\r\n                        else return a\r\n                    },0))}\r\n                </td>\r\n            )\r\n\r\n            result.push(\r\n                <td key={monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear() +' Total'}\r\n                className='align-top'>\r\n                    {numberFormatParser(data.reduce((a,b)=>{\r\n                        if (b[subNum]===item[subNum])\r\n                            return a+b[subTotal]\r\n                        else return a\r\n                    },0))}\r\n                </td>\r\n            )\r\n        }\r\n        else {\r\n            let date=new Date(parsedDateStart)\r\n            \r\n            result.push(\r\n                <td key={monthNames[parsedDateStart.getMonth()]+' '+parsedDateStart.getFullYear()+' Qty'} \r\n                className='align-top'>\r\n                    {numberFormatParser(data.reduce((a,b)=>{\r\n                        const innerParsedDate=new Date(new Date(b[subDate]).getFullYear(),new Date(b[subDate]).getMonth(),new Date(b[subDate]).getDate(),0)\r\n                        \r\n                    if (b[subNum]===item[subNum] \r\n                        && innerParsedDate<=new Date(new Date(parsedDateStart).getFullYear(),(new Date(parsedDateStart).getMonth())+1,0))                            \r\n                            return a+b[subQty]\r\n                    else return a\r\n                    },0)\r\n                    )}\r\n                </td>)\r\n\r\n                result.push(\r\n                <td key={monthNames[parsedDateStart.getMonth()]+' '+parsedDateStart.getFullYear()+' Total'} \r\n                className='align-top'>\r\n                    {numberFormatParser(data.reduce((a,b)=>{\r\n                        const innerParsedDate=new Date(new Date(b[subDate]).getFullYear(),new Date(b[subDate]).getMonth(),new Date(b[subDate]).getDate(),0)\r\n                        \r\n                    if (b[subNum]===item[subNum] \r\n                        && innerParsedDate<=new Date(new Date(parsedDateStart).getFullYear(),(new Date(parsedDateStart).getMonth())+1,0))                            \r\n                            return a+b[subTotal]\r\n                    else return a\r\n                    },0)\r\n                    )}\r\n                </td>)\r\n            \r\n            while(parsedDateEnd>new Date(new Date(date).getFullYear(),(new Date(date).getMonth())+1+1,0)) {\r\n                date.setMonth(date.getMonth()+1,1)\r\n\r\n                result.push(\r\n                    <td key={monthNames[date.getMonth()]+' '+date.getFullYear()+' Qty'}\r\n                    className='align-top'>\r\n                        {numberFormatParser(data.reduce((a,b)=>{\r\n                        const innerParsedDate=new Date(new Date(b[subDate]).getFullYear(),new Date(b[subDate]).getMonth(),new Date(b[subDate]).getDate(),0)\r\n                        if (b[subNum]===item[subNum] \r\n                            && innerParsedDate>new Date(new Date(date).getFullYear(),(new Date(date).getMonth()),0)\r\n                            && innerParsedDate<=new Date(new Date(date).getFullYear(),(new Date(date).getMonth())+1,0))\r\n                                return a+b[subQty]\r\n                        else return a\r\n                        },0)\r\n                        )}\r\n                    </td>\r\n                )\r\n\r\n                result.push(\r\n                    <td key={monthNames[date.getMonth()]+' '+date.getFullYear()+' Total'}\r\n                    className='align-top'>\r\n                        {numberFormatParser(data.reduce((a,b)=>{\r\n                        const innerParsedDate=new Date(new Date(b[subDate]).getFullYear(),new Date(b[subDate]).getMonth(),new Date(b[subDate]).getDate(),0)\r\n                        if (b[subNum]===item[subNum] \r\n                            && innerParsedDate>new Date(new Date(date).getFullYear(),(new Date(date).getMonth()),0)\r\n                            && innerParsedDate<=new Date(new Date(date).getFullYear(),(new Date(date).getMonth())+1,0))\r\n                                return a+b[subTotal]\r\n                        else return a\r\n                        },0)\r\n                        )}\r\n                    </td>\r\n                )\r\n            }\r\n\r\n            result.push(\r\n                <td key={monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()+' Qty'}\r\n                className='align-top'>\r\n                    {numberFormatParser(data.reduce((a,b)=>{\r\n                        const innerParsedDate=new Date(new Date(b[subDate]).getFullYear(),new Date(b[subDate]).getMonth(),new Date(b[subDate]).getDate(),0)\r\n                        if (b[subNum]===item[subNum] \r\n                            && innerParsedDate>new Date(new Date(parsedDateEnd).getFullYear(),(new Date(parsedDateEnd).getMonth()),0)\r\n                            && innerParsedDate<=parsedDateEnd)\r\n                            return a+b[subQty]\r\n                        else return a\r\n                    },0)\r\n                    )}\r\n                </td>\r\n            )\r\n\r\n            result.push(\r\n                <td key={monthNames[parsedDateEnd.getMonth()]+' '+parsedDateEnd.getFullYear()+' Total'}\r\n                className='align-top'>\r\n                    {numberFormatParser(data.reduce((a,b)=>{\r\n                        const innerParsedDate=new Date(new Date(b[subDate]).getFullYear(),new Date(b[subDate]).getMonth(),new Date(b[subDate]).getDate(),0)\r\n                        if (b[subNum]===item[subNum] \r\n                            && innerParsedDate>new Date(new Date(parsedDateEnd).getFullYear(),(new Date(parsedDateEnd).getMonth()),0)\r\n                            && innerParsedDate<=parsedDateEnd)\r\n                            return a+b[subTotal]\r\n                        else return a\r\n                    },0)\r\n                    )}\r\n                </td>\r\n            )\r\n        }\r\n        return result;\r\n\r\n    }\r\n\r\n    function populateResult() {\r\n        const data=resultInput['data'][0];\r\n        const field=resultInput['field'][0];\r\n        const num=field[0].name;\r\n        const name=field[1].name;\r\n        const qty=resultInput['groupOne']==='creditorCode'?null:field[3].name;\r\n        const total=resultInput['groupOne']==='creditorCode'?field[3].name:field[4].name;\r\n\r\n        const subData=resultInput['data'][1];\r\n        const subField=resultInput['field'][1];\r\n        const subNum=subField[1].name;\r\n        const subName=subField[2].name;\r\n        const subQty=subField[4].name;\r\n        const subTotal=subField[5].name;\r\n        \r\n        const header=populateMonthsHeader();\r\n        const calculatedWidth=resultInput['groupOne']==='creditorCode'? 34+120+225+(header.length*150)+100:34+120+225+(header.length*100)+100+100;\r\n\r\n        function populateItem() {\r\n            const itemAlreadyParsed=[];\r\n            const result=[];\r\n\r\n            data.forEach(item=>{\r\n                const subItemAlreadyParsed=[];\r\n                if(itemAlreadyParsed.indexOf(item[num])===-1)  {\r\n                    itemAlreadyParsed.push(item[num]);\r\n                    result.push(\r\n                        <div key={item[num]}>\r\n                            <div className='d-flex' style={resultInput['groupTwo']?{cursor:'pointer'}:null} data-toggle='collapse' data-target={'#'+item[num].replace(/[ ._\\-()]/g,'')}>\r\n                                <i className={resultInput['groupTwo']?'fa fa-plus-square mt-1':''} \r\n                                style={resultInput['groupTwo']? {flex:'0 0 14px',paddingLeft:10,paddingRight:10}:{flex:'0 0 34px'}}\r\n                                id={'plusminus'+item[num].replace(/[ ._\\-()]/g,'')}></i>\r\n                                <p className='mb-0' style={{flex:'0 0 120px',paddingLeft:10,paddingRight:10}}>{item[num]}</p>\r\n                                <p className='mb-0' style={{flex:'0 0 225px',paddingLeft:10,paddingRight:10}}>{item[name]}</p>\r\n                                {populateMonthsAmount(item,data,field)}\r\n                                {resultInput['groupOne']==='itemCode'?\r\n                                <p className='mb-0' style={{flex:'0 0 100px',paddingLeft:10,paddingRight:10}}>\r\n                                    {numberFormatParser(data.reduce((a,b)=>{\r\n                                        if(b[num]===item[num])\r\n                                            return a+b[qty]\r\n                                        else return a\r\n                                    },0))}\r\n                                </p>:null}\r\n                                <p className='mb-0' style={{flex:'0 0 100px',paddingLeft:10,paddingRight:10}}>\r\n                                    {numberFormatParser(data.reduce((a,b)=>{\r\n                                        if(b[num]===item[num])\r\n                                            return a+b[total]\r\n                                        else return a\r\n                                    },0))}\r\n                                </p>\r\n                            </div>\r\n                            {resultInput['groupTwo']?\r\n                            (<div className='collapse navbar-collapse my-2 pl-3 pl-md-5' \r\n                            id={item[num].replace(/[ ._\\-()]/g,'')}>\r\n                                <table className='table table-hover'>\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th className='align-top' style={{cursor:'pointer'}} data-order='asc'\r\n                                            onClick={(e)=>{\r\n                                            if (resultInput[item[num]]) {\r\n                                                const id='subNum'+item[num].replace(/[ ._\\-()]/g,'');   \r\n                                                e.target.setAttribute('data-order',\r\n                                                e.target.getAttribute('data-order')==='asc'?'desc':'asc')\r\n                                                let sortedData={}\r\n                                                sortedData[item[num]]=sortData(resultInput[item[num]],subNum,e.target.getAttribute('data-order'))\r\n                                                changeResultInput(Object.assign({},resultInput,sortedData))\r\n                            \r\n                                                if (e.target.getAttribute('data-order')==='asc') {\r\n                                                    document.getElementById(id).classList.remove('fa-caret-up');\r\n                                                    document.getElementById(id).classList.add('fa-caret-down')\r\n                                                }\r\n                                                else {\r\n                                                    document.getElementById(id).classList.remove('fa-caret-down');\r\n                                                    document.getElementById(id).classList.add('fa-caret-up')\r\n                                                }\r\n                                            }\r\n                                            }}>\r\n                                                {resultInput['groupTwo']==='itemCode'?'Stock No.':'Creditor No.'}\r\n                                                <i id={'subNum'+item[num].replace(/[ ._\\-()]/g,'')} className='fa fa-caret-down ml-2'></i>\r\n                                            </th>\r\n                                            <th className='align-top' style={{cursor:'pointer'}} data-order='asc'\r\n                                            onClick={(e)=>{\r\n                                            if (resultInput[item[num]]) {\r\n                                                const id='subName'+item[num].replace(/[ ._\\-()]/g,'');   \r\n                                                e.target.setAttribute('data-order',\r\n                                                e.target.getAttribute('data-order')==='asc'?'desc':'asc')\r\n                                                let sortedData={}\r\n                                                sortedData[item[num]]=sortData(resultInput[item[num]],subName,e.target.getAttribute('data-order'))\r\n                                                changeResultInput(Object.assign({},resultInput,sortedData))\r\n                            \r\n                                                if (e.target.getAttribute('data-order')==='asc') {\r\n                                                    document.getElementById(id).classList.remove('fa-caret-up');\r\n                                                    document.getElementById(id).classList.add('fa-caret-down')\r\n                                                }\r\n                                                else {\r\n                                                    document.getElementById(id).classList.remove('fa-caret-down');\r\n                                                    document.getElementById(id).classList.add('fa-caret-up')\r\n                                                }\r\n                                            }\r\n                                            }}>\r\n                                                    Name\r\n                                                    <i id={'subName'+item[num].replace(/[ ._\\-()]/g,'')} className='fa fa-caret-down ml-2'></i>\r\n                                                </th>\r\n                                            {populateTableHeader()}\r\n                                            <th className='align-top'>Total Qty</th>\r\n                                            <th className='align-top'>Total</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {resultInput[item[num]]? resultInput[item[num]].map(item2=>{\r\n                                            if (subItemAlreadyParsed.indexOf(item2[subNum])===-1) {\r\n                                                subItemAlreadyParsed.push(item2[subNum])\r\n                                                return (\r\n                                                    <tr key={item2[subNum]}>\r\n                                                        <td className='align-top'>{item2[subNum]}</td>\r\n                                                        <td className='align-top'>{item2[subName]}</td>\r\n                                                        {populateTableMonthsAmount(item2,resultInput[item[num]],subField)}\r\n                                                        <td className='align-top'>\r\n                                                            {resultInput[item[num]].reduce((a,b)=>{\r\n                                                                if (b[subNum]===item2[subNum]) \r\n                                                                    return a+b[subQty]\r\n                                                                else return a\r\n                                                            },0)}\r\n                                                        </td>\r\n                                                        <td className='align-top'>\r\n                                                            {numberFormatParser(resultInput[item[num]].reduce((a,b)=>{\r\n                                                                if (b[subNum]===item2[subNum]) \r\n                                                                    return a+b[subTotal]\r\n                                                                else return a\r\n                                                            },0)\r\n                                                            )}\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                )\r\n                                            }\r\n                                            \r\n                                        })\r\n                                        :null}\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>):null}\r\n                        </div>\r\n                    )}\r\n            })\r\n            return result;\r\n        }\r\n\r\n        return (\r\n            <div className=\"overflow-auto mb-5 pt-3\" style={{transform:'rotateX(180deg)'}}>\r\n                <div style={{width:calculatedWidth,transform:'rotateX(180deg)'}}>\r\n                    <div className='row flex-nowrap text-white bg-secondary pt-2 pb-1' \r\n                    style={{marginLeft:0,marginRight:0,}}>\r\n                        <h6 style={{flex:'0 0 34px',paddingLeft:10,paddingRight:10}}></h6>\r\n                        <h6 style={{flex:'0 0 120px',paddingLeft:10,paddingRight:10,cursor:'pointer'}}\r\n                            data-order='asc' onClick={(e)=>{\r\n                            e.target.setAttribute('data-order',\r\n                            e.target.getAttribute('data-order')==='asc'?'desc':'asc')\r\n                            resultInput['data'][0]=sortData(resultInput['data'][0],num,e.target.getAttribute('data-order'))\r\n                            changeResultInput({...resultInput})\r\n                                if (e.target.getAttribute('data-order')==='asc') {\r\n                                    document.getElementById('num').classList.remove('fa-caret-up');\r\n                                    document.getElementById('num').classList.add('fa-caret-down')\r\n                                }\r\n                                else {\r\n                                    document.getElementById('num').classList.remove('fa-caret-down');\r\n                                    document.getElementById('num').classList.add('fa-caret-up')\r\n                                }\r\n                            }\r\n                                    \r\n                            }>\r\n                            {resultInput['groupOne']==='creditorCode'?'Creditor No.':'Stock No.'}\r\n                            <i id='num' className='fa fa-caret-down ml-2'></i>\r\n                        </h6>\r\n                        <h6 style={{flex:'0 0 225px',paddingLeft:10,paddingRight:10,cursor:'pointer'}}\r\n                        data-order='asc' onClick={(e)=>{\r\n                            e.target.setAttribute('data-order',\r\n                            e.target.getAttribute('data-order')==='asc'?'desc':'asc')\r\n                            resultInput['data'][0]=sortData(resultInput['data'][0],name,e.target.getAttribute('data-order'))\r\n                            changeResultInput({...resultInput})\r\n                                if (e.target.getAttribute('data-order')==='asc') {\r\n                                    document.getElementById('name').classList.remove('fa-caret-up');\r\n                                    document.getElementById('name').classList.add('fa-caret-down')\r\n                                }\r\n                                else {\r\n                                    document.getElementById('name').classList.remove('fa-caret-down');\r\n                                    document.getElementById('name').classList.add('fa-caret-up')\r\n                                }\r\n                            }\r\n                            }>\r\n                            Name\r\n                            <i id='name' className='fa fa-caret-down ml-2'></i>\r\n                        </h6>\r\n                        {header}\r\n                        {resultInput['groupOne']==='creditorCode'?null:\r\n                        <h6 style={{flex:'0 0 100px',paddingLeft:10,paddingRight:10}}>Qty</h6>}\r\n                        <h6 style={{flex:'0 0 100px',paddingLeft:10,paddingRight:10}}>Total</h6>\r\n                    </div>\r\n                    <div style={{overflowY:'auto',overflowX:'hidden',maxHeight:'60vh'}}>\r\n                        {populateItem()}\r\n                    </div>\r\n                </div>\r\n            </div>)\r\n    }\r\n\r\n    let errorDisplay=null;\r\n\r\n    if ((dataSelectCreditor && dataSelectCreditor.error) || errorSelectCreditor || (dataSelectStock && dataSelectStock.error) || errorSelectStock \r\n    || (dataSelectPurchaseAnalysis && dataSelectPurchaseAnalysis.error) || errorSelectPurchaseAnalysis )\r\n    errorDisplay=(\r\n        <div className=\"alert alert-warning\">\r\n            {dataSelectCreditor && dataSelectCreditor.error? 'Creditor List RETRIEVAL for item failed errno: '+dataSelectCreditor.error.errno\r\n            +' code: '+dataSelectCreditor.error.code+' message: '+dataSelectCreditor.error.sqlMessage:null}\r\n            {errorSelectCreditor? 'Creditor List RETRIEVAL for item failed '+errorSelectCreditor : null}\r\n            <br/>\r\n            <br/>\r\n            {dataSelectStock && dataSelectStock.error? 'Stock List RETRIEVAL for item failed errno: '+dataSelectStock.error.errno\r\n            +' code: '+dataSelectStock.error.code+' message: '+dataSelectStock.error.sqlMessage:null}\r\n            {errorSelectStock? 'Stock List RETRIEVAL for item failed '+errorSelectStock : null}\r\n            <br/>\r\n            <br/>\r\n            {dataSelectPurchaseAnalysis && dataSelectPurchaseAnalysis.error? 'Purchase Report RETRIEVAL for item failed errno: '+dataSelectPurchaseAnalysis.error.errno\r\n            +' code: '+dataSelectPurchaseAnalysis.error.code+' message: '+dataSelectPurchaseAnalysis.error.sqlMessage:null}\r\n            {errorSelectPurchaseAnalysis? 'Purchase Report RETRIEVAL for item failed '+errorSelectPurchaseAnalysis : null}\r\n\r\n        </div>\r\n    )\r\n    \r\n    return (\r\n        <Switch>\r\n            <Route exact path={`${path}/Preview`}>\r\n                {resultInput? \r\n                (<PurchaseReportOne\r\n                    backPath={PurchaseReport.path}\r\n                    description={PurchaseReport.description}\r\n                    resultInput={resultInput}\r\n                    withDetails={withDetails}\r\n                    data={sortData(resultInput['dataPreview'][0],sortCriteria,'asc')}\r\n                    dataDetail={sortData(resultInput['dataPreview'][1],detailSortCriteria,'asc')}\r\n                    field={resultInput['field']}\r\n                    getFormattedDate={getFormattedDate}\r\n                   \r\n                    \r\n                />):<Redirect to={PurchaseReport.path}/>}\r\n            </Route>\r\n\r\n            <Route exact path={path}>\r\n                <AppLayout>\r\n                    <div className='container pt-3' style={{paddingLeft:20,paddingRight:20}}>\r\n                        <h3>{PurchaseReport.description}</h3>\r\n                        <form className='mt-3' onSubmit={e=>{\r\n                        e.preventDefault();\r\n                        changeGenerateReportWarning(false);\r\n                        if (groupOne==='creditorCode')\r\n                        changeParamPurchaseAnalysis({\r\n                            url:'./ReportItem',\r\n                            init:{\r\n                                method:'POST',\r\n                                headers:{'Content-Type':'application/json'},\r\n                                body:JSON.stringify({\r\n                                    item:'purchase_analysis_creditor_stock',\r\n                                    param:[dateStart,dateEnd,groupOneID,groupTwoID]\r\n                                }),\r\n                                credentials:'include'\r\n                            }\r\n                        })\r\n                        else \r\n                        changeParamPurchaseAnalysis({\r\n                            url:'./ReportItem',\r\n                            init:{\r\n                                method:'POST',\r\n                                headers:{'Content-Type':'application/json'},\r\n                                body:JSON.stringify({\r\n                                    item:'purchase_analysis_stock_creditor',\r\n                                    param:[dateStart,dateEnd,groupOneID,groupTwoID]\r\n                                }),\r\n                                credentials:'include'\r\n                            }\r\n                        })\r\n                        \r\n                        \r\n                        }}>\r\n                        <div className='form-row'>\r\n                            <div className='form-group form-row mx-0 col-12'>\r\n                                <label className='col-md-2 col-form-label' style={{paddingLeft:0}} htmlFor='dateStart'>Date Start</label>\r\n                                <input type='date' id='dateStart' required onChange={(e)=>{\r\n                                    if (new Date(e.target.value)>new Date(dateEnd)) {\r\n                                        alert('Invalid Date Start Entry')\r\n                                        changeDateStart(new Date().getFullYear()+'-01-01')\r\n                                    }\r\n                                    else changeDateStart(e.target.value)\r\n                                }} \r\n                                    value={dateStart} required className='form-control col-md-3 mb-3 mb-md-0'/>\r\n                                <label className='offset-md-1 col-md-2 col-form-label' style={{paddingLeft:0}} htmlFor='dateEnd'>Date End</label>\r\n                                <input type='date' id='dateEnd' required onChange={(e)=>{\r\n                                    if (new Date(e.target.value)<new Date(dateStart)) {\r\n                                        alert('Invalid Date End Entry')\r\n                                        changeDateEnd(getFormattedDate(new Date()))\r\n                                    }\r\n                                    else changeDateEnd(e.target.value)\r\n                                }} value={dateEnd} required className='form-control col-md-3 mb-3 mb-md-0'/>\r\n                            </div>\r\n                            \r\n                            <fieldset className='form-group border py-3 px-4 border-secondary rounded col-md-7'>\r\n                                <legend className='col-form-label col-4 offset-4 text-center'>\r\n                                    <h6>Options</h6>\r\n                                </legend>\r\n\r\n                                <div className='form-group form-row'>\r\n                                    <label className='col-md-2 col-form-label' htmlFor='groupOne'>Group One</label>\r\n                                    <select className='form-control col-md-2' required id='groupOne' \r\n                                    value={groupOne} onChange={e=>{\r\n                                        changeGroupOne(e.target.value)\r\n                                        changeGroupTwo('')\r\n                                        changeGroupOneID([])\r\n                                        changeGroupTwoID([])\r\n                                    }}>\r\n                                        <option value='creditorCode'>Creditor Code</option>\r\n                                        <option value='itemCode'>Item Code</option>\r\n                                    </select>\r\n                                    <label className='col-md-2 col-form-label pl-3' htmlFor='groupOneID'>\r\n                                        {groupOne==='creditorCode'?'Creditor ID':'Stock ID'}\r\n                                    </label>\r\n                                    <select className='form-control col-md-6' required size='3' id='groupOneID' \r\n                                    value={groupOneID} multiple={true} onChange={e=>{\r\n                                        let result=[];\r\n                                        Array.from(e.target.options).map(option=>{\r\n                                            if (option.selected===true) \r\n                                                result.push(option.value) \r\n                                        })\r\n                                        changeGroupOneID(result)\r\n                                    }}>\r\n                                        {groupOne==='creditorCode'?creditorList:stockList}\r\n                                    </select>\r\n                                </div>\r\n\r\n                                <div className='form-group form-row'>\r\n                                    <div className='form-check offset-md-6'>\r\n                                        <input type='checkbox' className=' form-check-input' id='groupOneAllID' \r\n                                        checked={groupOne==='creditorCode'? (dataSelectCreditor && dataSelectCreditor.data.length===groupOneID.length?\r\n                                            true:false):(dataSelectStock && dataSelectStock.data.length===groupOneID.length?\r\n                                                true:false)}\r\n                                        onChange={e=>{\r\n                                            if (e.target.checked) \r\n                                                changeGroupOneID(groupOne==='creditorCode'?\r\n                                                dataSelectCreditor.data.map(data=>\r\n                                                    data[dataSelectCreditor.field[0].name])\r\n                                                :dataSelectStock.data.map(data=>\r\n                                                    data[dataSelectStock.field[0].name])\r\n                                                )\r\n                                            else changeGroupOneID([])\r\n                                        }}/>\r\n                                        <label htmlFor='groupOneAllID' style={{paddingLeft:0}} className='form-check-label'>\r\n                                            {groupOne==='creditorCode'?'All Creditor ID':'All Stock ID'}\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className='form-group form-row'>\r\n                                    <label className='col-md-2 col-form-label' htmlFor='groupTwo'>Group Two</label>\r\n                                    <select className='form-control col-md-2' id='groupTwo' \r\n                                    value={groupTwo} onChange={e=>{\r\n                                        changeGroupTwo(e.target.value)\r\n                                        changeGroupTwoID([])\r\n                                    }}>\r\n                                        <option value=''> -select an option- </option>\r\n                                        <option value={groupOne==='creditorCode'?'itemCode':'creditorCode'}>{groupOne==='creditorCode'?'Item Code':'Creditor Code'}</option>\r\n                                    </select>\r\n                                    {groupTwo? (<label className='col-md-2 col-form-label pl-3' htmlFor='groupTwoID'>\r\n                                        {groupTwo==='creditorCode'?'Creditor ID':'Stock ID'}\r\n                                    </label>):null}\r\n                                    {groupTwo? (<select className='form-control col-md-6' required size='3' id='groupTwoID'\r\n                                    disabled={groupTwo?false:true}\r\n                                    value={groupTwoID} multiple={true} onChange={e=>{\r\n                                        let result=[];\r\n                                        Array.from(e.target.options).map(option=>{\r\n                                            if (option.selected===true) \r\n                                                result.push(option.value) \r\n                                        })\r\n                                        changeGroupTwoID(result);\r\n                                    }}>\r\n                                        {groupTwo==='creditorCode'?creditorList:stockList}\r\n                                    </select>):null}\r\n                                </div>\r\n\r\n                                {groupTwo? (<div className='form-group form-row'>\r\n                                    <div className='form-check offset-md-6'>\r\n                                        <input type='checkbox' className=' form-check-input' id='groupTwoAllID' \r\n                                        checked={groupTwo==='creditorCode'? (dataSelectCreditor && dataSelectCreditor.data.length===groupTwoID.length?\r\n                                        true:false):(dataSelectStock && dataSelectStock.data.length===groupTwoID.length?\r\n                                            true:false)}\r\n                                        onChange={e=>{\r\n                                            if (e.target.checked) \r\n                                                changeGroupTwoID(groupTwo==='creditorCode'?\r\n                                                dataSelectCreditor.data.map(data=>\r\n                                                    data[dataSelectCreditor.field[0].name])\r\n                                                :dataSelectStock.data.map(data=>\r\n                                                    data[dataSelectStock.field[0].name])\r\n                                                )\r\n                                            else changeGroupTwoID([])\r\n                                        }}/>\r\n                                        <label htmlFor='groupTwoAllID' style={{paddingLeft:0}} className='form-check-label'>\r\n                                            {groupTwo==='creditorCode'?'All Creditor ID':'All Stock ID'}\r\n                                        </label>\r\n                                    </div>\r\n                                </div>):null}\r\n\r\n                            </fieldset>\r\n\r\n                            <fieldset className='form-group py-2 px-4 border border-secondary rounded col-md-3 offset-md-1'>\r\n                                <legend className='col-form-label col-md-6 offset-md-3 col-8 offset-2 text-center'>\r\n                                    <h6>Preview Options</h6>\r\n                                </legend>\r\n                                <div className='form-row'>\r\n                                <div className='form-check col-md-12 form-group col-form-label' style={{paddingLeft:20}}>\r\n                                    <input type='checkbox' className='form-check-input' id='withDetails' onChange={e=>{\r\n                                        if (e.target.checked) \r\n                                            changeWithDetails(true)\r\n                                        else changeWithDetails(false)\r\n                                        }} checked={withDetails}/>\r\n                                    <label htmlFor='withDetails' className='form-check-label'>With Details</label>\r\n                                </div>\r\n\r\n                                <div className='form-group form-row col-md-12'>\r\n                                    <label className='col-md-4 col-form-label' style={{paddingLeft:0}} htmlFor='sort'>\r\n                                        Sort\r\n                                    </label>\r\n                                    <select id='sort' className='form-control col-md-8' value={sortCriteria} onChange={e=>\r\n                                        changeSortCriteria(e.target.value)\r\n                                    }>\r\n                                        <option value=''> -select an option- </option>\r\n                                        {sortCriteriaList}\r\n                                    </select>\r\n                                </div>\r\n\r\n                                <div className='form-group col-md-12 form-row'>\r\n                                    <label className='col-md-6 col-form-label ' style={{paddingLeft:0}} htmlFor='sort'>\r\n                                        Detail Sort\r\n                                    </label>\r\n                                    <select id='sort' className='form-control col-md-6' value={detailSortCriteria} onChange={e=>\r\n                                        changeDetailSortCriteria(e.target.value)\r\n                                    }>\r\n                                        <option value=''> -select an option- </option> \r\n                                        {detailSortCriteriaList}\r\n                                    </select>\r\n                                </div>\r\n                                </div>\r\n                            </fieldset>\r\n                            <div className='col-md-12'>\r\n                                <button type='submit' className='btn btn-primary mx-2'>Generate</button>\r\n                                <button type='button' className='btn btn-warning' onClick={e=>\r\n                                    changeResultInput(null)}>Clear</button>\r\n                                <button type='button' onClick={(e)=>{\r\n                                    if (!resultInput) {\r\n                                        changeGenerateReportWarning(true)\r\n                                    }\r\n                                    else {\r\n                                        document.querySelector(\"meta[name=viewport]\").setAttribute(\r\n                                        'content','width=device-width, initial-scale=0.4');\r\n                                        setPageSize('a4 landscape')\r\n                                        history.push('./PurchaseReport/Preview')\r\n                                    }}\r\n                                } \r\n                                className='btn btn-info mx-1 my-1'>Preview</button>\r\n                                {generateReportWarning? \r\n                                (<div className=\"alert alert-warning\">\r\n                                    Please generate report first!\r\n                                </div>):null}\r\n                            </div>\r\n                        </div>\r\n                        </form>\r\n                        <hr/>\r\n                        {errorDisplay}\r\n\r\n                        {resultInput? \r\n                        (<div className='mb-5'>\r\n                            <h5 className='py-2'>\r\n                                Result\r\n                                <button className='btn btn-dark mx-2' \r\n                                    onClick={(e)=>collapsibleElementID.forEach(ID=>\r\n                                        $('#'+ID).collapse('show')\r\n                                )}><i className='fa fa-plus-square'></i> Expand</button>\r\n                                <button className='btn btn-light'  \r\n                                    onClick={(e)=>collapsibleElementID.forEach(ID=>\r\n                                        $('#'+ID).collapse('hide')\r\n                                )}> <i className='fa fa-minus-square'></i> Collapse</button>\r\n                            </h5>\r\n                            {populateResult()}\r\n                            \r\n                        </div>):null\r\n                        }\r\n                        <hr className='pb-3'/>\r\n                    </div>\r\n                </AppLayout>\r\n            </Route>\r\n            <Redirect to={PurchaseReport.path}/>\r\n        </Switch>\r\n    )\r\n}\r\nPurchaseReport.description='Purchase Report';\r\nPurchaseReport.path='/PurchaseReport';\r\n\r\nexport default PurchaseReport;","import React,{useState,useEffect,useContext} from 'react';\r\nimport Item from '../Shared/Item';\r\nimport ItemButton from '../Shared/ItemButton';\r\nimport AppLayout from '../Shared/AppLayout';\r\nimport {\r\n    Switch,\r\n    Route,\r\n    useRouteMatch,\r\n    Redirect\r\n} from 'react-router-dom';\r\nimport DocumentOne from '../Shared/preview/DocumentOne';\r\nimport numberFormatParser from '../Shared/numberFormatParser';\r\nimport dateFormatParser from '../Shared/dateFormatParser';\r\nimport useFetch from '../Shared/useFetch';\r\nimport authContext from '../Shared/authContext';\r\nimport LineRenderQtyOnly from '../Shared/LineRenderQtyOnly';\r\n\r\n\r\nfunction GoodsReceivedNoteItem (props) {\r\n    const url={\r\n        item:new URLSearchParams(props.location.search).get('item'),\r\n        id:new URLSearchParams(props.location.search).get('id'),\r\n    }\r\n    const [{data:dataSelectCreditor,error:errorSelectCreditor}]=useFetch({\r\n        url:'./SelectItem',\r\n        init:{\r\n            method:'POST',\r\n            headers:{'Content-Type':'application/json'},\r\n            body:JSON.stringify({item:'creditor'}),\r\n            credentials:'include'\r\n        }\r\n    });//extension of Item component\r\n\r\n    const [{data:dataSelectStock,error:errorSelectStock}]=useFetch({\r\n        url:'./SelectItem',\r\n        init:{\r\n            method:'POST',\r\n            headers:{'Content-Type':'application/json'},\r\n            body:JSON.stringify({\r\n                item:'stock',\r\n                param:url.id?[url.id]:null\r\n            }),\r\n            credentials:'include'\r\n        }\r\n    });//extension of Item component\r\n\r\n\r\n    const linePosition=7;\r\n    const stockControlPosition=8;\r\n\r\n    const [creditorList,changeCreditorList] = useState(null);\r\n    const [stockList,changeStockList] = useState(null);\r\n    const [inputState,changeInputState]=useState(['','','','','','','',[],[]]) \r\n    \r\n    const {path} = useRouteMatch();\r\n    const {changeAuth} = useContext(authContext);\r\n\r\n    useEffect(()=>{\r\n        \r\n        if (dataSelectCreditor && dataSelectCreditor.auth===false) {\r\n                    alert('Cookies Expired or Authorisation invalid. Please Login again!');\r\n                    changeAuth(false);\r\n                }\r\n        else if (dataSelectCreditor && dataSelectCreditor.data && dataSelectCreditor.field) \r\n        changeCreditorList(dataSelectCreditor.data.map(data=>(\r\n            <option key={data[dataSelectCreditor.field[0].name]} value={data[dataSelectCreditor.field[0].name]}>\r\n                {data[dataSelectCreditor.field[0].name]+' | '+(data[dataSelectCreditor.field[1].name]?data[dataSelectCreditor.field[1].name]:'')}\r\n            </option>)\r\n            )\r\n        )\r\n\r\n        if (dataSelectStock && dataSelectStock.auth===false) {\r\n                    alert('Cookies Expired or Authorisation invalid. Please Login again!');\r\n                    changeAuth(false);\r\n                }\r\n        else if (dataSelectStock && dataSelectStock.data && dataSelectStock.field) {\r\n            const stockNum=dataSelectStock.field[0].name;\r\n            const stockDesc=dataSelectStock.field[1].name;\r\n            const stockPrice=dataSelectStock.field[2].name;\r\n            const stockBalQty=dataSelectStock.field[8].name;\r\n\r\n            changeStockList(dataSelectStock.data.map(data=>(\r\n                <option key={data[stockNum]} value={data[stockNum]}>\r\n                    {data[stockNum]+' | '\r\n                    + (data[stockDesc]?data[stockDesc]:'')+' | Price = '\r\n                    + (data[stockPrice]?data[stockPrice]:'')+' | Bal Qty = '\r\n                    + (data[stockBalQty]?data[stockBalQty]:'0')}\r\n                </option>)\r\n                )\r\n            )\r\n        }\r\n            \r\n\r\n\r\n    },[dataSelectCreditor,errorSelectCreditor,dataSelectStock,errorSelectStock])\r\n\r\n    useEffect(()=>{\r\n        function setScale() {\r\n            document.querySelector(\"meta[name=viewport]\").setAttribute(\r\n                'content','width=device-width, initial-scale=1.0');\r\n        }\r\n        window.addEventListener('popstate',setScale)\r\n            \r\n        return function unattach() {\r\n                window.removeEventListener('popstate',setScale)\r\n            }\r\n        },[])\r\n\r\n    function onChange(value,order) {\r\n        changeInputState([...inputState.slice(0,order),value,...inputState.slice(order+1)])\r\n    }\r\n    \r\n    function calculateTotal() {\r\n        let total=0\r\n        inputState[linePosition].forEach((goodsreceivednotelineSet,i)=>{\r\n\r\n            if(inputState[linePosition][i][3]!=='')\r\n             total=total+(parseInt(inputState[linePosition][i][3]))\r\n        })\r\n        return total;\r\n    }\r\n    \r\n    \r\n    \r\n    \r\n    /*error display extension from error display already provided by Item Component*/\r\n    let errorDisplayExtension=null;\r\n    \r\n    \r\n    if ((dataSelectCreditor && dataSelectCreditor.error) || errorSelectCreditor ||(dataSelectStock && dataSelectStock.error) || errorSelectStock ) \r\n    errorDisplayExtension=(\r\n        <div className=\"alert alert-warning\">\r\n            {dataSelectCreditor && dataSelectCreditor.error? 'Creditor List RETRIEVAL for item failed errno: '+dataSelectCreditor.error.errno\r\n            +' code: '+dataSelectCreditor.error.code+' message: '+dataSelectCreditor.error.sqlMessage:null}\r\n            {errorSelectCreditor? 'Creditor List RETRIEVAL for item failed '+errorSelectCreditor : null}\r\n            <br/>\r\n            <br/>\r\n            {dataSelectStock && dataSelectStock.error? 'Stock List RETRIEVAL for item failed errno: '+dataSelectStock.error.errno\r\n            +' code: '+dataSelectStock.error.code+' message: '+dataSelectStock.error.sqlMessage:null}\r\n            {errorSelectStock? 'Stock List RETRIEVAL for item failed '+errorSelectStock : null}\r\n\r\n        </div>)\r\n\r\n    \r\n    return (\r\n        <Item inputState={inputState} changeInputState={changeInputState} url={url} item='goods_received_note' successPath='/GoodsReceivedNote'>\r\n            {\r\n            ({usage,disabled,changeDisabled,onInsert,onUpdate,onDelete,errorDisplay,inputNumberRender})=> \r\n            (<Switch>\r\n                <Route exact path={`${path}/Preview`}>\r\n                    <DocumentOne description={GoodsReceivedNoteItem.description} \r\n                        backPath={GoodsReceivedNoteItem.path} \r\n                        topLeftInput={[inputState[1],inputState[2]]}\r\n                        topRightField={[GoodsReceivedNoteItem.description+' No','Date','Other Description']}\r\n                        topRightInput={[inputState[3],dateFormatParser(inputState[4])]}\r\n                        bottomField={['','Item Code','Description','Qty']}\r\n                        bottomInput={inputState[linePosition]}\r\n                        calculateTotal={calculateTotal}\r\n                        footer=''\r\n                    />\r\n            </Route>\r\n            <Route exact path={path}>\r\n            <AppLayout >\r\n                <div className='container pb-5 px-md-5'>\r\n\r\n                    {/*Heading renders depending on INSERT or UPDATE/DELETE state*/}\r\n\r\n                    <h3 className='my-3'>{(usage==='INSERT'? 'Create':'Update') + ' '+ GoodsReceivedNoteItem.description}</h3>\r\n                    <small className='text-warning'>* required</small>\r\n                    {errorDisplay}\r\n                    {errorDisplayExtension}\r\n\r\n                    {/*onInsert and onUpdate needs to be attached to HTML form onSubmit eventhandler since native HTML form \r\n                    validation only works if submit event is handled here*/}\r\n                    <form onSubmit={(e)=>{e.preventDefault(); if(usage==='INSERT') onInsert(); else onUpdate()}}>\r\n                        <div className='row'>\r\n                            <fieldset className='form-group form-row col-md-5 mx-3 border border-secondary pb-4 rounded' disabled={disabled}>\r\n                                <legend className='col-form-label col-4 offset-4 text-center' ><h6>Creditor <span className='text-warning'>*</span></h6></legend>\r\n                                <label className='mt-3' htmlFor='creditorID' >Creditor ID</label>\r\n                                <div className='input-group'>\r\n                                    {/*if input is disabled, browser does not validate entry (and hence problem if option from dropdown \r\n                                    not chosen).Hence to prevent user altering input content(other than using those in dropdown) AND \r\n                                    to ensure a value is chosen set required attribute and a onChange event handler that does nothing*/}\r\n                                    <input type='text' id='creditorID' value={inputState[0]} onChange={(e)=>e} required className='form-control' />\r\n                                    <select className='form-control' style={{flex:'0 1 0'}} onChange={(e)=>{\r\n                                        let creditorName='';\r\n                                        let creditorAddress='';\r\n                                    \r\n                                        dataSelectCreditor.data.forEach(data=>{\r\n                                            \r\n                                            if(data[dataSelectCreditor.field[0].name]===e.target.value) {\r\n                                                creditorName=data[dataSelectCreditor.field[1].name]?data[dataSelectCreditor.field[1].name]:'';\r\n                                                creditorAddress=data[dataSelectCreditor.field[2].name]?data[dataSelectCreditor.field[2].name]:'';\r\n                                            }\r\n                                            \r\n                                        })\r\n                                    \r\n                                    changeInputState([e.target.value,creditorName,creditorAddress,...inputState.slice(3,inputState.length)])\r\n                                    }}>\r\n                                        <option value=''> -select an option- </option>\r\n                                        {creditorList}\r\n                                    </select>\r\n                                </div>\r\n                                <label className='mt-3' htmlFor='creditorName'>Creditor Name</label>\r\n                                <input id='creditorName' value={inputState[1]} onChange={(e)=>e} required className='form-control'/>\r\n                                <label className='mt-3' htmlFor='creditorAddress'>Creditor Address</label>\r\n                                <textarea id='creditorAddress' value={inputState[2]} onChange={(e)=>e} required className='form-control'/>\r\n                                \r\n                            </fieldset>\r\n\r\n                            <div className='form-group col-md-5 mx-3'>\r\n                                <label htmlFor='goodsReceivedNoteNumber' className='mt-3'>Goods Received Note Number <span className='text-warning'>*</span></label>\r\n                                {inputNumberRender({\r\n                                    onChange:onChange,\r\n                                    layout:'',\r\n                                    position:3,\r\n                                    labelID:'goodsReceivedNoteNumber'\r\n                                })\r\n                                }\r\n                                \r\n                                <label htmlFor='date' className='mt-3'>Date <span className='text-warning'>*</span></label>\r\n                                <input type='date' disabled={disabled} required value={inputState[4]} onChange={(e)=>onChange(e.target.value,4)} \r\n                                className='form-control'/>\r\n                                \r\n                                <label htmlFor='description' className='mt-3'>Description</label>\r\n                                <textarea id='description' onChange={(e)=>onChange(e.target.value,5)} value={inputState[5]} \r\n                                disabled={disabled} className='form-control'/>\r\n                                \r\n                            </div>\r\n\r\n                            <LineRenderQtyOnly linePosition={linePosition} stockControlPosition={stockControlPosition} \r\n                            disabled={disabled} inputState={inputState} changeInputState={changeInputState} \r\n                            dataSelectStock={dataSelectStock} stockList={stockList} stockDirection='in'\r\n                            lineDescription={'GRN Line'}\r\n                            />\r\n\r\n                            <h5 className='text-right my-3 col-12'>\r\n                                {'Total: '+numberFormatParser(calculateTotal())}\r\n                            </h5>\r\n\r\n                        </div>\r\n                        <ItemButton usage={usage} onInsert={onInsert} onUpdate={onUpdate} onDelete={onDelete} \r\n                        changeDisabled={changeDisabled} path={`${path}/Preview`}/>\r\n                        \r\n                        \r\n                        \r\n                    </form>\r\n                </div>\r\n            </AppLayout>\r\n            </Route>\r\n            <Redirect to={GoodsReceivedNoteItem.path}/>\r\n        </Switch>)}\r\n        \r\n        </Item>\r\n    )\r\n}\r\nGoodsReceivedNoteItem.description='Goods Received Note';\r\nGoodsReceivedNoteItem.path='/GoodsReceivedNoteItem';\r\n\r\nexport default GoodsReceivedNoteItem;\r\n\r\n","import React,{useState,useEffect,useContext} from 'react';\r\nimport Item from '../Shared/Item';\r\nimport ItemButton from '../Shared/ItemButton';\r\nimport AppLayout from '../Shared/AppLayout';\r\nimport {\r\n    Switch,\r\n    Route,\r\n    useRouteMatch,\r\n    Redirect\r\n} from 'react-router-dom';\r\nimport DocumentOne from '../Shared/preview/DocumentOne';\r\nimport numberFormatParser from '../Shared/numberFormatParser';\r\nimport dateFormatParser from '../Shared/dateFormatParser';\r\nimport useFetch from '../Shared/useFetch';\r\nimport authContext from '../Shared/authContext';\r\nimport LineRenderQtyOnly from '../Shared/LineRenderQtyOnly';\r\n\r\n\r\nfunction PurchaseReturnItem (props) {\r\n    const url={\r\n        item:new URLSearchParams(props.location.search).get('item'),\r\n        id:new URLSearchParams(props.location.search).get('id'),\r\n    }\r\n    const [{data:dataSelectCreditor,error:errorSelectCreditor}]=useFetch({\r\n        url:'./SelectItem',\r\n        init:{\r\n            method:'POST',\r\n            headers:{'Content-Type':'application/json'},\r\n            body:JSON.stringify({item:'creditor'}),\r\n            credentials:'include'\r\n        }\r\n    });//extension of Item component\r\n\r\n    const [{data:dataSelectStock,error:errorSelectStock}]=useFetch({\r\n        url:'./SelectItem',\r\n        init:{\r\n            method:'POST',\r\n            headers:{'Content-Type':'application/json'},\r\n            body:JSON.stringify({\r\n                item:'stock',\r\n                param:url.id?[url.id]:null\r\n            }),\r\n            credentials:'include'\r\n        }\r\n    });//extension of Item component\r\n\r\n\r\n    const linePosition=7;\r\n    const stockControlPosition=8;\r\n\r\n    const [creditorList,changeCreditorList] = useState(null);\r\n    const [stockList,changeStockList] = useState(null);\r\n    const [inputState,changeInputState]=useState(['','','','','','','',[],[]]) \r\n    \r\n    const {path} = useRouteMatch();\r\n    const {changeAuth} = useContext(authContext);\r\n\r\n    useEffect(()=>{\r\n        \r\n        if (dataSelectCreditor && dataSelectCreditor.auth===false) {\r\n                    alert('Cookies Expired or Authorisation invalid. Please Login again!');\r\n                    changeAuth(false);\r\n                }\r\n        else if (dataSelectCreditor && dataSelectCreditor.data && dataSelectCreditor.field) \r\n        changeCreditorList(dataSelectCreditor.data.map(data=>(\r\n            <option key={data[dataSelectCreditor.field[0].name]} value={data[dataSelectCreditor.field[0].name]}>\r\n                {data[dataSelectCreditor.field[0].name]+' | '+(data[dataSelectCreditor.field[1].name]?data[dataSelectCreditor.field[1].name]:'')}\r\n            </option>)\r\n            )\r\n        )\r\n\r\n        if (dataSelectStock && dataSelectStock.auth===false) {\r\n                    alert('Cookies Expired or Authorisation invalid. Please Login again!');\r\n                    changeAuth(false);\r\n                }\r\n        else if (dataSelectStock && dataSelectStock.data && dataSelectStock.field) {\r\n            const stockNum=dataSelectStock.field[0].name;\r\n            const stockDesc=dataSelectStock.field[1].name;\r\n            const stockPrice=dataSelectStock.field[2].name;\r\n            const stockBalQty=dataSelectStock.field[8].name;\r\n\r\n            changeStockList(dataSelectStock.data.map(data=>(\r\n                <option key={data[stockNum]} value={data[stockNum]}>\r\n                    {data[stockNum]+' | '\r\n                    + (data[stockDesc]?data[stockDesc]:'')+' | Price = '\r\n                    + (data[stockPrice]?data[stockPrice]:'')+' | Bal Qty = '\r\n                    + (data[stockBalQty]?data[stockBalQty]:'0')}\r\n                </option>)\r\n                )\r\n            )\r\n        }\r\n            \r\n\r\n\r\n    },[dataSelectCreditor,errorSelectCreditor,dataSelectStock,errorSelectStock])\r\n\r\n    useEffect(()=>{\r\n        function setScale() {\r\n            document.querySelector(\"meta[name=viewport]\").setAttribute(\r\n                'content','width=device-width, initial-scale=1.0');\r\n        }\r\n        window.addEventListener('popstate',setScale)\r\n            \r\n        return function unattach() {\r\n                window.removeEventListener('popstate',setScale)\r\n            }\r\n        },[])\r\n\r\n    function onChange(value,order) {\r\n        changeInputState([...inputState.slice(0,order),value,...inputState.slice(order+1)])\r\n    }\r\n\r\n    function calculateTotal() {\r\n        let total=0\r\n        inputState[linePosition].forEach((purchasereturnlineSet,i)=>{\r\n\r\n            if(inputState[linePosition][i][3]!=='')\r\n             total=total+(parseInt(inputState[linePosition][i][3]))\r\n        })\r\n        return total;\r\n    }\r\n    \r\n    /*error display extension from error display already provided by Item Component*/\r\n    let errorDisplayExtension=null;\r\n    \r\n    \r\n    if ((dataSelectCreditor && dataSelectCreditor.error) || errorSelectCreditor ||(dataSelectStock && dataSelectStock.error) || errorSelectStock ) \r\n    errorDisplayExtension=(\r\n        <div className=\"alert alert-warning\">\r\n            {dataSelectCreditor && dataSelectCreditor.error? 'Creditor List RETRIEVAL for item failed errno: '+dataSelectCreditor.error.errno\r\n            +' code: '+dataSelectCreditor.error.code+' message: '+dataSelectCreditor.error.sqlMessage:null}\r\n            {errorSelectCreditor? 'Creditor List RETRIEVAL for item failed '+errorSelectCreditor : null}\r\n            <br/>\r\n            <br/>\r\n            {dataSelectStock && dataSelectStock.error? 'Stock List RETRIEVAL for item failed errno: '+dataSelectStock.error.errno\r\n            +' code: '+dataSelectStock.error.code+' message: '+dataSelectStock.error.sqlMessage:null}\r\n            {errorSelectStock? 'Stock List RETRIEVAL for item failed '+errorSelectStock : null}\r\n\r\n        </div>)\r\n\r\n    \r\n    return (\r\n        <Item inputState={inputState} changeInputState={changeInputState} url={url} item='purchase_return' successPath='/PurchaseReturn'>\r\n            {\r\n            ({usage,disabled,changeDisabled,onInsert,onUpdate,onDelete,errorDisplay,inputNumberRender})=> \r\n            (<Switch>\r\n                <Route exact path={`${path}/Preview`}>\r\n                    <DocumentOne description={PurchaseReturnItem.description} \r\n                        backPath={PurchaseReturnItem.path} \r\n                        topLeftInput={[inputState[1],inputState[2]]}\r\n                        topRightField={[PurchaseReturnItem.description+' No','Date','Other Description']}\r\n                        topRightInput={[inputState[3],dateFormatParser(inputState[4])]}\r\n                        bottomField={['','Item Code','Description','Qty']}\r\n                        bottomInput={inputState[linePosition]}\r\n                        calculateTotal={calculateTotal}\r\n                        footer=''\r\n                    />\r\n            </Route>\r\n            <Route exact path={path}>\r\n            <AppLayout >\r\n                <div className='container pb-5 px-md-5'>\r\n\r\n                    {/*Heading renders depending on INSERT or UPDATE/DELETE state*/}\r\n\r\n                    <h3 className='my-3'>{(usage==='INSERT'? 'Create':'Update') + ' '+ PurchaseReturnItem.description}</h3>\r\n                    <small className='text-warning'>* required</small>\r\n                    {errorDisplay}\r\n                    {errorDisplayExtension}\r\n\r\n                    {/*onInsert and onUpdate needs to be attached to HTML form onSubmit eventhandler since native HTML form \r\n                    validation only works if submit event is handled here*/}\r\n                    <form onSubmit={(e)=>{e.preventDefault(); if(usage==='INSERT') onInsert(); else onUpdate()}}>\r\n                        <div className='row'>\r\n                            <fieldset className='form-group form-row col-md-5 mx-3 border border-secondary pb-4 rounded' disabled={disabled}>\r\n                                <legend className='col-form-label col-4 offset-4 text-center' ><h6>Creditor <span className='text-warning'>*</span></h6></legend>\r\n                                <label className='mt-3' htmlFor='creditorID' >Creditor ID</label>\r\n                                <div className='input-group'>\r\n                                    {/*if input is disabled, browser does not validate entry (and hence problem if option from dropdown \r\n                                    not chosen).Hence to prevent user altering input content(other than using those in dropdown) AND \r\n                                    to ensure a value is chosen set required attribute and a onChange event handler that does nothing*/}\r\n                                    <input type='text' id='creditorID' value={inputState[0]} onChange={(e)=>e} required className='form-control' />\r\n                                    <select className='form-control' style={{flex:'0 1 0'}} onChange={(e)=>{\r\n                                        let creditorName='';\r\n                                        let creditorAddress='';\r\n                                    \r\n                                        dataSelectCreditor.data.forEach(data=>{\r\n                                            \r\n                                            if(data[dataSelectCreditor.field[0].name]===e.target.value) {\r\n                                                creditorName=data[dataSelectCreditor.field[1].name]?data[dataSelectCreditor.field[1].name]:'';\r\n                                                creditorAddress=data[dataSelectCreditor.field[2].name]?data[dataSelectCreditor.field[2].name]:'';\r\n                                            }\r\n                                            \r\n                                        })\r\n                                    \r\n                                    changeInputState([e.target.value,creditorName,creditorAddress,...inputState.slice(3,inputState.length)])\r\n                                    }}>\r\n                                        <option value=''> -select an option- </option>\r\n                                        {creditorList}\r\n                                    </select>\r\n                                </div>\r\n                                <label className='mt-3' htmlFor='creditorName'>Creditor Name</label>\r\n                                <input id='creditorName' value={inputState[1]} onChange={(e)=>e} required className='form-control'/>\r\n                                <label className='mt-3' htmlFor='creditorAddress'>Creditor Address</label>\r\n                                <textarea id='creditorAddress' value={inputState[2]} onChange={(e)=>e} required className='form-control'/>\r\n                                \r\n                            </fieldset>\r\n\r\n                            <div className='form-group col-md-5 mx-3'>\r\n                                <label htmlFor='purchaseReturnNumber' className='mt-3'>Purchase Return Number <span className='text-warning'>*</span></label>\r\n                                {inputNumberRender({\r\n                                    onChange:onChange,\r\n                                    layout:'',\r\n                                    position:3,\r\n                                    labelID:'purchaseReturnNumber'\r\n                                })\r\n                                }\r\n                                \r\n                                <label htmlFor='date' className='mt-3'>Date <span className='text-warning'>*</span></label>\r\n                                <input type='date' disabled={disabled} required value={inputState[4]} onChange={(e)=>onChange(e.target.value,4)} \r\n                                className='form-control'/>\r\n                                \r\n                                <label htmlFor='description' className='mt-3'>Description</label>\r\n                                <textarea id='description' onChange={(e)=>onChange(e.target.value,5)} value={inputState[5]} \r\n                                disabled={disabled} className='form-control'/>\r\n                                \r\n                            </div>\r\n\r\n                            <LineRenderQtyOnly linePosition={linePosition} stockControlPosition={stockControlPosition} \r\n                            disabled={disabled} inputState={inputState} changeInputState={changeInputState} \r\n                            dataSelectStock={dataSelectStock} stockList={stockList} stockDirection='out'\r\n                            lineDescription={'Purchase Return Line'}\r\n                            />\r\n\r\n                            <h5 className='text-right my-3 col-12'>\r\n                                {'Total: '+numberFormatParser(calculateTotal())}\r\n                            </h5>\r\n\r\n                        </div>\r\n                        <ItemButton usage={usage} onInsert={onInsert} onUpdate={onUpdate} onDelete={onDelete} \r\n                        changeDisabled={changeDisabled} path={`${path}/Preview`}/>\r\n                        \r\n                        \r\n                        \r\n                    </form>\r\n                </div>\r\n            </AppLayout>\r\n            </Route>\r\n            <Redirect to={PurchaseReturnItem.path}/>\r\n        </Switch>)}\r\n        \r\n        </Item>\r\n    )\r\n}\r\nPurchaseReturnItem.description='Purchase Return';\r\nPurchaseReturnItem.path='/PurchaseReturnItem';\r\n\r\nexport default PurchaseReturnItem;\r\n\r\n","import React,{useState,useEffect,useContext} from 'react';\r\nimport Item from '../Shared/Item';\r\nimport ItemButton from '../Shared/ItemButton';\r\nimport AppLayout from '../Shared/AppLayout';\r\nimport {\r\n    Switch,\r\n    Route,\r\n    useRouteMatch,\r\n    Redirect\r\n} from 'react-router-dom';\r\nimport DocumentOne from '../Shared/preview/DocumentOne';\r\nimport numberFormatParser from '../Shared/numberFormatParser';\r\nimport dateFormatParser from '../Shared/dateFormatParser';\r\nimport useFetch from '../Shared/useFetch';\r\nimport authContext from '../Shared/authContext';\r\nimport LineRender from '../Shared/LineRender';\r\nimport ReceiptPaymentHistoryRender from '../Shared/ReceiptPaymentHistoryRender';\r\n\r\n\r\nfunction PurchaseInvoiceItem (props) {\r\n    const url={\r\n        item:new URLSearchParams(props.location.search).get('item'),\r\n        id:new URLSearchParams(props.location.search).get('id'),\r\n    }\r\n    const [{data:dataSelectCreditor,error:errorSelectCreditor}]=useFetch({\r\n        url:'./SelectItem',\r\n        init:{\r\n            method:'POST',\r\n            headers:{'Content-Type':'application/json'},\r\n            body:JSON.stringify({item:'creditor'}),\r\n            credentials:'include'\r\n        }\r\n    });//extension of Item component\r\n\r\n    const [{data:dataSelectStock,error:errorSelectStock}]=useFetch({\r\n        url:'./SelectItem',\r\n        init:{\r\n            method:'POST',\r\n            headers:{'Content-Type':'application/json'},\r\n            body:JSON.stringify({\r\n                item:'stock',\r\n                param:url.id?[url.id]:null\r\n            }),\r\n            credentials:'include'\r\n        }\r\n    });//extension of Item component\r\n\r\n    const [{data:dataSelectGLCode,error:errorSelectGLCode}]=useFetch({\r\n        url:'./getEligibleGLAccount',\r\n        init:{\r\n            method:'POST',\r\n            headers:{'Content-Type':'application/json'},\r\n            body:JSON.stringify({item:'purchase_invoice'}),\r\n            credentials:'include'\r\n        }\r\n    });//extension of Item component\r\n\r\n    const [{data:dataSelectPaymentHistory,error:errorSelectPaymentHistory}]=useFetch(url.item && url.id?{\r\n        url:'./getPaymentHistory',\r\n        init:{\r\n            method:'POST',\r\n            headers:{'Content-Type':'application/json'},\r\n            body:JSON.stringify({\r\n                item:'purchase_invoice',\r\n                param:[url.id]\r\n            }),\r\n            credentials:'include'\r\n        }\r\n    }:null);//extension of Item component\r\n\r\n    /*Position of inputState variable used in other components. */\r\n    const creditTermPosition=6;\r\n    const linePosition=9;\r\n    const stockControlPosition=10;\r\n\r\n    const [creditorList,changeCreditorList] = useState(null);\r\n    const [stockList,changeStockList] = useState(null);\r\n    const [GLCodeList,changeGLCodeList] = useState(null);\r\n    const [inputState,changeInputState]=useState(['','','','','','','COD','','',[],[]]) \r\n    \r\n    const {path} = useRouteMatch();\r\n    const {changeAuth} = useContext(authContext);\r\n\r\n    useEffect(()=>{\r\n        \r\n        if (dataSelectCreditor && dataSelectCreditor.auth===false) {\r\n                    alert('Cookies Expired or Authorisation invalid. Please Login again!');\r\n                    changeAuth(false);\r\n                }\r\n        else if (dataSelectCreditor && dataSelectCreditor.data && dataSelectCreditor.field) \r\n            changeCreditorList(dataSelectCreditor.data.map(data=>(\r\n            <option key={data[dataSelectCreditor.field[0].name]} value={data[dataSelectCreditor.field[0].name]}>\r\n                {(data[dataSelectCreditor.field[0].name]?data[dataSelectCreditor.field[0].name]:'')\r\n                +' | '+(data[dataSelectCreditor.field[1].name]?data[dataSelectCreditor.field[1].name]:'')}\r\n            </option>)\r\n            )\r\n        )\r\n            \r\n        if (dataSelectStock && dataSelectStock.auth===false) {\r\n                    alert('Cookies Expired or Authorisation invalid. Please Login again!');\r\n                    changeAuth(false);\r\n                }\r\n        else if (dataSelectStock && dataSelectStock.data && dataSelectStock.field) {\r\n            const stockNum=dataSelectStock.field[0].name;\r\n            const stockDesc=dataSelectStock.field[1].name;\r\n            const stockPrice=dataSelectStock.field[2].name;\r\n            const stockBalQty=dataSelectStock.field[8].name;\r\n            \r\n            changeStockList(dataSelectStock.data.map(data=>(\r\n                <option key={data[stockNum]} value={data[stockNum]}>\r\n                    {data[stockNum]+' | '\r\n                    + (data[stockDesc]?data[stockDesc]:'')+' | Price = '\r\n                    + (data[stockPrice]?data[stockPrice]:'')+' | Bal Qty = '\r\n                    + (data[stockBalQty]?data[stockBalQty]:'0')}\r\n                </option>)\r\n                )\r\n            )\r\n        }\r\n\r\n        if (dataSelectGLCode && dataSelectGLCode.auth===false) {\r\n                    alert('Cookies Expired or Authorisation invalid. Please Login again!');\r\n                    changeAuth(false);\r\n                }\r\n        else if (dataSelectGLCode && dataSelectGLCode.data && dataSelectGLCode.field) \r\n            \r\n                changeGLCodeList(dataSelectGLCode.data.map(data=>(\r\n                <option key={data[dataSelectGLCode.field[0].name]} value={data[dataSelectGLCode.field[0].name]}>\r\n                    {(data[dataSelectGLCode.field[0].name]?data[dataSelectGLCode.field[0].name]:'')\r\n                    +' | '+(data[dataSelectGLCode.field[1].name]?data[dataSelectGLCode.field[1].name]:'')}\r\n                </option>)\r\n                )\r\n            )\r\n\r\n        if (dataSelectPaymentHistory && dataSelectPaymentHistory.auth===false) {\r\n            alert('Cookies Expired or Authorisation invalid. Please Login again!');\r\n            changeAuth(false);\r\n        }\r\n                \r\n    },[dataSelectCreditor,errorSelectCreditor,dataSelectStock,errorSelectStock,dataSelectGLCode,errorSelectGLCode,\r\n    dataSelectPaymentHistory,errorSelectPaymentHistory])\r\n\r\n    useEffect(()=>{\r\n        function setScale() {\r\n            document.querySelector(\"meta[name=viewport]\").setAttribute(\r\n                'content','width=device-width, initial-scale=1.0');\r\n        }\r\n        window.addEventListener('popstate',setScale)\r\n            \r\n        return function unattach() {\r\n                window.removeEventListener('popstate',setScale)\r\n            }\r\n        },[])\r\n\r\n    function onChange(value,order) {\r\n        changeInputState([...inputState.slice(0,order),value,...inputState.slice(order+1,inputState.length)])\r\n    }\r\n    function calculateSubtotal(i) {\r\n        if (inputState[linePosition][i][3]!=='' && inputState[linePosition][i][4]!=='' && inputState[linePosition][i][5]!=='')\r\n            return ((parseFloat(inputState[linePosition][i][3])*parseFloat(inputState[linePosition][i][4]))\r\n            -parseFloat(inputState[linePosition][i][5]))\r\n        else return '';\r\n    }\r\n\r\n    function calculateTotal() {\r\n        let total=0\r\n        inputState[linePosition].forEach((lineSet,i)=>{\r\n\r\n            if(inputState[linePosition][i][3]!=='' && inputState[linePosition][i][4]!=='' && \r\n            inputState[linePosition][i][5]!=='')\r\n             total=total+((parseFloat(inputState[linePosition][i][3])*parseFloat(inputState[linePosition][i][4]))\r\n             -parseFloat(inputState[linePosition][i][5]))\r\n        })\r\n        return total;\r\n    }\r\n\r\n    function calculateOutstanding() {\r\n        const amount=dataSelectPaymentHistory? dataSelectPaymentHistory.field[4].name:null;\r\n        \r\n        return calculateTotal()-(dataSelectPaymentHistory? dataSelectPaymentHistory.data.reduce((a,b)=>\r\n            a+b[amount],0):0)\r\n    }\r\n    \r\n    /*error display extension from error display already provided by Item Component*/\r\n    let errorDisplayExtension=null;\r\n    \r\n    if ((dataSelectCreditor && dataSelectCreditor.error) || errorSelectCreditor ||(dataSelectStock && dataSelectStock.error) || errorSelectStock \r\n    || (dataSelectGLCode && dataSelectGLCode.error) || errorSelectGLCode || (dataSelectPaymentHistory && dataSelectPaymentHistory.error)\r\n    || errorSelectPaymentHistory ) \r\n    errorDisplayExtension=(\r\n        <div className=\"alert alert-warning\">\r\n            {dataSelectCreditor && dataSelectCreditor.error? 'Creditor List RETRIEVAL for item failed errno: '+dataSelectCreditor.error.errno\r\n            +' code: '+dataSelectCreditor.error.code+' message: '+dataSelectCreditor.error.sqlMessage:null}\r\n            {errorSelectCreditor? 'Creditor List RETRIEVAL for item failed '+errorSelectCreditor : null}\r\n            <br/>\r\n            <br/>\r\n            {dataSelectStock && dataSelectStock.error? 'Stock List RETRIEVAL for item failed errno: '+dataSelectStock.error.errno\r\n            +' code: '+dataSelectStock.error.code+' message: '+dataSelectStock.error.sqlMessage:null}\r\n            {errorSelectStock? 'Stock List RETRIEVAL for item failed '+errorSelectStock : null}\r\n            <br/>\r\n            <br/>\r\n            {dataSelectGLCode && dataSelectGLCode.error? 'GL Code List RETRIEVAL for item failed errno: '+dataSelectGLCode.error.errno\r\n            +' code: '+dataSelectGLCode.error.code+' message: '+dataSelectGLCode.error.sqlMessage:null}\r\n            {errorSelectGLCode? 'GL Code List RETRIEVAL for item failed '+errorSelectGLCode : null}\r\n            <br/>\r\n            <br/>\r\n            {dataSelectPaymentHistory && dataSelectPaymentHistory.error? 'Payment History RETRIEVAL for item failed errno: '+dataSelectPaymentHistory.error.errno\r\n            +' code: '+dataSelectPaymentHistory.error.code+' message: '+dataSelectPaymentHistory.error.sqlMessage:null}\r\n            {errorSelectPaymentHistory? 'Payment History RETRIEVAL for item failed '+errorSelectPaymentHistory : null}\r\n        </div>)\r\n\r\n    return (\r\n        <Item inputState={inputState} changeInputState={changeInputState} url={url} item='purchase_invoice' successPath='/PurchaseInvoice'>\r\n            {\r\n            ({usage,disabled,changeDisabled,onInsert,onUpdate,onDelete,errorDisplay})=> \r\n            (<Switch>\r\n                <Route exact path={`${path}/Preview`}>\r\n                    <DocumentOne description={PurchaseInvoiceItem.description} \r\n                        backPath={PurchaseInvoiceItem.path} \r\n                        topLeftInput={[inputState[1],inputState[2]]}\r\n                        topRightField={[PurchaseInvoiceItem.description+' No','Date','Credit Term','Other Description']}\r\n                        topRightInput={[inputState[3],dateFormatParser(inputState[4]),inputState[6]==='COD'?'C.O.D.':inputState[6]+' Days',inputState[5]]}\r\n                        bottomField={['','Item Code','Description','Price','Qty','Discount','Subtotal']}\r\n                        bottomInput={inputState[linePosition]}\r\n                        calculateSubtotal={calculateSubtotal}\r\n                        calculateTotal={calculateTotal}\r\n                    />\r\n                </Route>\r\n                <Route exact path={path}>\r\n                <AppLayout >\r\n                <div className='container pb-5 px-md-5'>\r\n\r\n                    {/*Heading renders depending on INSERT or UPDATE/DELETE state*/}\r\n\r\n                    <h3 className='my-3'>{(usage==='INSERT'? 'Create':'Update') + ' '+ PurchaseInvoiceItem.description}</h3>\r\n                    <small className='text-warning'>* required</small>\r\n                    {errorDisplay}\r\n                    {errorDisplayExtension}\r\n\r\n                    {/*onInsert and onUpdate needs to be attached to HTML form onSubmit eventhandler since native HTML form \r\n                    validation only works if submit event is handled here*/}\r\n                    <form onSubmit={(e)=>{e.preventDefault(); if(usage==='INSERT') onInsert(); else onUpdate()}}>\r\n                        <div className='row'>\r\n                            <fieldset className='form-group form-row col-md-5 mx-3 border border-secondary pb-4 rounded' disabled={disabled}>\r\n                                <legend className='col-form-label col-4 offset-4 text-center' ><h6>Creditor <span className='text-warning'>*</span></h6></legend>\r\n                                <label className='mt-3' htmlFor='creditorID' >Creditor ID</label>\r\n                                <div className='input-group'>\r\n                                    {/*if input is disabled, browser does not validate entry (and hence problem if option from dropdown \r\n                                    not chosen).Hence to prevent user altering input content(other than using those in dropdown) AND \r\n                                    to ensure a value is chosen set required attribute and a onChange event handler that does nothing*/}\r\n                                    <input type='text' id='creditorID' value={inputState[0]} onChange={(e)=>e} required className='form-control'/>\r\n                                    <select className='form-control' style={{flex:'0 1 0'}} onChange={(e)=>{\r\n                                        let creditorName='';\r\n                                        let creditorAddress='';\r\n                                        let creditorDefaultCreditTerm='';\r\n\r\n                                        dataSelectCreditor.data.forEach(data=>{\r\n                                            \r\n                                            if(data[dataSelectCreditor.field[0].name]===e.target.value) {\r\n                                                creditorName=data[dataSelectCreditor.field[1].name]?data[dataSelectCreditor.field[1].name]:'';\r\n                                                creditorAddress=data[dataSelectCreditor.field[2].name]?data[dataSelectCreditor.field[2].name]:'';\r\n                                                creditorDefaultCreditTerm=data[dataSelectCreditor.field[7].name]?data[dataSelectCreditor.field[7].name]:'';\r\n                                            }\r\n                                            \r\n                                        })\r\n                                    \r\n                                    changeInputState([e.target.value,creditorName,creditorAddress,\r\n                                        ...inputState.slice(3,creditTermPosition),creditorDefaultCreditTerm,\r\n                                        ...inputState.slice(creditTermPosition+1)])\r\n                                    }}>\r\n                                        <option value=''> -select an option- </option>\r\n                                        {creditorList}\r\n                                    </select>\r\n                                </div>\r\n                                <label className='mt-3' htmlFor='creditorName'>Creditor Name</label>\r\n                                <input id='creditorName' value={inputState[1]} onChange={(e)=>e} required className='form-control'/>\r\n                                <label className='mt-3' htmlFor='creditorAddress'>Creditor Address</label>\r\n                                <textarea id='creditorAddress' value={inputState[2]} onChange={(e)=>e} required className='form-control'/>\r\n        \r\n                            </fieldset>\r\n                            <div className='form-group col-md-5 mx-3'>\r\n                                <label htmlFor='purchaseInvoiceNumber' className='mt-3'>Purchase Invoice Number <span className='text-warning'>*</span></label>\r\n                                <input type='text' id='purchaseInvoiceNumber' maxLength='50' value={inputState[3]} onChange={\r\n                                    (e)=>onChange(e.target.value,3)} disabled={disabled} required className='form-control' />\r\n                                \r\n                                <label htmlFor='date' className='mt-3'>Date <span className='text-warning'>*</span></label>\r\n                                <input type='date' disabled={disabled} required value={inputState[4]} onChange={(e)=>onChange(e.target.value,4)} \r\n                                className='form-control'/>\r\n\r\n                                <label className='mt-3' htmlFor='GLCode' >GL Code <span className='text-warning'>*</span></label>\r\n                                <div className='input-group'>\r\n                                    <input type='text' id='GLCode' value={inputState[7]} onChange={(e)=>e} required className='form-control' \r\n                                    disabled={disabled}/>\r\n                                    <select className='form-control' style={{flex:'0 1 0'}} disabled={disabled} onChange={(e)=>\r\n                                        onChange(e.target.value,7)}>\r\n                                        <option value=''> -select an option- </option>\r\n                                        {GLCodeList}\r\n                                    </select>\r\n                                </div>\r\n\r\n                                <label htmlFor='creditTerm' className='mt-3'>Credit Term</label>\r\n                                <select id='creditTerm' onChange={(e)=> onChange(e.target.value,6)} value={inputState[6]} disabled={disabled} \r\n                                className='form-control'>\r\n                                    <option value='COD'>C.O.D.</option>\r\n                                    <option value='30'>30 Days</option>\r\n                                    <option value='45'>45 Days</option>\r\n                                    <option value='60'>60 Days</option>\r\n                                    <option value='90'>90 Days</option>\r\n                                </select>\r\n\r\n                                <label htmlFor='description' className='mt-3'>Description</label>\r\n                                <textarea id='description' onChange={(e)=>onChange(e.target.value,5)} value={inputState[5]} \r\n                                disabled={disabled} className='form-control'/>\r\n                            </div>\r\n\r\n                            <LineRender linePosition={linePosition} stockControlPosition={stockControlPosition} \r\n                            disabled={disabled} inputState={inputState} changeInputState={changeInputState} \r\n                            dataSelectStock={dataSelectStock} stockList={stockList} stockDirection='in'\r\n                            calculateSubtotal={calculateSubtotal} lineDescription={'Purchase Invoice Line'}/>\r\n\r\n                            <h5 className='text-right my-3 col-12'>\r\n                                {'Total: '+numberFormatParser(calculateTotal())}\r\n                            </h5>\r\n                            {usage==='INSERT'?null:(<h6 className='text-right mb-4 col-12'>\r\n                                <span className=\"alert alert-secondary\">\r\n                                    {'Outstanding Amount: '+numberFormatParser(calculateOutstanding())}\r\n                                </span>\r\n                            </h6>)}\r\n\r\n                            {usage==='INSERT'?null: \r\n                            \r\n                            <ReceiptPaymentHistoryRender dataSelectReceiptPaymentHistory={dataSelectPaymentHistory}\r\n                                disabled={disabled} historyDescription={'Payment History'}/>\r\n                            }\r\n\r\n                        </div>\r\n                        <ItemButton usage={usage} onInsert={onInsert} onUpdate={onUpdate} onDelete={onDelete} \r\n                        changeDisabled={changeDisabled} path={`${path}/Preview`}/>\r\n                        \r\n                        \r\n                        \r\n                    </form>\r\n                </div>\r\n            </AppLayout>\r\n            </Route>\r\n            <Redirect to={PurchaseInvoiceItem.path}/>\r\n        </Switch>)}\r\n        \r\n        </Item>\r\n    )\r\n}\r\nPurchaseInvoiceItem.description='Purchase Invoice';\r\nPurchaseInvoiceItem.path='/PurchaseInvoiceItem';\r\n\r\nexport default PurchaseInvoiceItem;\r\n\r\n","import React,{useState,useEffect,useContext} from 'react';\r\nimport Item from '../Shared/Item';\r\nimport ItemButton from '../Shared/ItemButton';\r\nimport AppLayout from '../Shared/AppLayout';\r\nimport {\r\n    Switch,\r\n    Route,\r\n    useRouteMatch,\r\n    Redirect\r\n} from 'react-router-dom';\r\nimport DocumentOne from '../Shared/preview/DocumentOne';\r\nimport numberFormatParser from '../Shared/numberFormatParser';\r\nimport dateFormatParser from '../Shared/dateFormatParser';\r\nimport useFetch from '../Shared/useFetch';\r\nimport authContext from '../Shared/authContext';\r\nimport LineRender from '../Shared/LineRender';\r\nimport ReceiptPaymentHistoryRender from '../Shared/ReceiptPaymentHistoryRender';\r\n\r\n\r\n\r\nfunction PurchaseDebitNoteItem (props) {\r\n    const url={\r\n        item:new URLSearchParams(props.location.search).get('item'),\r\n        id:new URLSearchParams(props.location.search).get('id'),\r\n    }\r\n    const [{data:dataSelectCreditor,error:errorSelectCreditor}]=useFetch({\r\n        url:'./SelectItem',\r\n        init:{\r\n            method:'POST',\r\n            headers:{'Content-Type':'application/json'},\r\n            body:JSON.stringify({item:'creditor'}),\r\n            credentials:'include'\r\n        }\r\n    });//extension of Item component\r\n\r\n    const [{data:dataSelectStock,error:errorSelectStock}]=useFetch({\r\n        url:'./SelectItem',\r\n        init:{\r\n            method:'POST',\r\n            headers:{'Content-Type':'application/json'},\r\n            body:JSON.stringify({\r\n                item:'stock',\r\n                param:url.id?[url.id]:null\r\n            }),\r\n            credentials:'include'\r\n        }\r\n    });//extension of Item component\r\n\r\n    const [{data:dataSelectGLCode,error:errorSelectGLCode}]=useFetch({\r\n        url:'./getEligibleGLAccount',\r\n        init:{\r\n            method:'POST',\r\n            headers:{'Content-Type':'application/json'},\r\n            body:JSON.stringify({item:'purchase_debit_note'}),\r\n            credentials:'include'\r\n        }\r\n    });//extension of Item component\r\n\r\n    const [{data:dataSelectPaymentHistory,error:errorSelectPaymentHistory}]=useFetch(url.item && url.id?{\r\n        url:'./getPaymentHistory',\r\n        init:{\r\n            method:'POST',\r\n            headers:{'Content-Type':'application/json'},\r\n            body:JSON.stringify({\r\n                item:'purchase_debit_note',\r\n                param:[url.id]\r\n            }),\r\n            credentials:'include'\r\n        }\r\n    }:null);//extension of Item component\r\n\r\n    /*Position of inputState variable used in other components. */\r\n    const creditTermPosition=6;\r\n    const linePosition=9;\r\n    const stockControlPosition=10;\r\n\r\n    const [creditorList,changeCreditorList] = useState(null);\r\n    const [stockList,changeStockList] = useState(null);\r\n    const [GLCodeList,changeGLCodeList] = useState(null);\r\n    const [inputState,changeInputState]=useState(['','','','','','','COD','','',[],[]]) \r\n    \r\n    const {path} = useRouteMatch();\r\n    const {changeAuth} = useContext(authContext);\r\n\r\n    useEffect(()=>{\r\n        \r\n        if (dataSelectCreditor && dataSelectCreditor.auth===false) {\r\n                    alert('Cookies Expired or Authorisation invalid. Please Login again!');\r\n                    changeAuth(false);\r\n                }\r\n        else if (dataSelectCreditor && dataSelectCreditor.data && dataSelectCreditor.field) \r\n            changeCreditorList(dataSelectCreditor.data.map(data=>(\r\n            <option key={data[dataSelectCreditor.field[0].name]} value={data[dataSelectCreditor.field[0].name]}>\r\n                {data[dataSelectCreditor.field[0].name]+' | '+(data[dataSelectCreditor.field[1].name]?data[dataSelectCreditor.field[1].name]:'')}\r\n            </option>)\r\n            )\r\n        )\r\n\r\n        if (dataSelectStock && dataSelectStock.auth===false) {\r\n                    alert('Cookies Expired or Authorisation invalid. Please Login again!');\r\n                    changeAuth(false);\r\n                }\r\n        else if (dataSelectStock && dataSelectStock.data && dataSelectStock.field) {\r\n            const stockNum=dataSelectStock.field[0].name;\r\n            const stockDesc=dataSelectStock.field[1].name;\r\n            const stockPrice=dataSelectStock.field[2].name;\r\n            const stockBalQty=dataSelectStock.field[8].name;\r\n            \r\n            changeStockList(dataSelectStock.data.map(data=>(\r\n                <option key={data[stockNum]} value={data[stockNum]}>\r\n                    {data[stockNum]+' | '\r\n                    + (data[stockDesc]?data[stockDesc]:'')+' | Price = '\r\n                    + (data[stockPrice]?data[stockPrice]:'')+' | Bal Qty = '\r\n                    + (data[stockBalQty]?data[stockBalQty]:'0')}\r\n                </option>)\r\n                )\r\n            )\r\n        }\r\n            \r\n\r\n        if (dataSelectGLCode && dataSelectGLCode.auth===false) {\r\n                alert('Cookies Expired or Authorisation invalid. Please Login again!');\r\n                changeAuth(false);\r\n            }\r\n        else if (dataSelectGLCode && dataSelectGLCode.data && dataSelectGLCode.field) \r\n            changeGLCodeList(dataSelectGLCode.data.map(data=>(\r\n            <option key={data[dataSelectGLCode.field[0].name]} value={data[dataSelectGLCode.field[0].name]}>\r\n                {(data[dataSelectGLCode.field[0].name]?data[dataSelectGLCode.field[0].name]:'')\r\n                +' | '+(data[dataSelectGLCode.field[1].name]?data[dataSelectGLCode.field[1].name]:'')}\r\n            </option>)\r\n            )\r\n        )\r\n\r\n        if (dataSelectPaymentHistory && dataSelectPaymentHistory.auth===false) {\r\n            alert('Cookies Expired or Authorisation invalid. Please Login again!');\r\n            changeAuth(false);\r\n        }\r\n\r\n    },[dataSelectCreditor,errorSelectCreditor,dataSelectStock,errorSelectStock,dataSelectGLCode,errorSelectGLCode,\r\n    dataSelectPaymentHistory,errorSelectPaymentHistory])\r\n\r\n    useEffect(()=>{\r\n        function setScale() {\r\n            document.querySelector(\"meta[name=viewport]\").setAttribute(\r\n                'content','width=device-width, initial-scale=1.0');\r\n        }\r\n        window.addEventListener('popstate',setScale)\r\n            \r\n        return function unattach() {\r\n                window.removeEventListener('popstate',setScale)\r\n            }\r\n        },[])\r\n\r\n    function onChange(value,order) {\r\n        changeInputState([...inputState.slice(0,order),value,...inputState.slice(order+1)])\r\n    }\r\n    \r\n    function calculateSubtotal(i) {\r\n        if (inputState[linePosition][i][3]!=='' && inputState[linePosition][i][4]!=='' && inputState[linePosition][i][5]!=='')\r\n            return ((parseFloat(inputState[linePosition][i][3])*parseFloat(inputState[linePosition][i][4]))\r\n            -parseFloat(inputState[linePosition][i][5]))\r\n        else return '';\r\n    }\r\n\r\n    function calculateTotal() {\r\n        let total=0\r\n        inputState[linePosition].forEach((lineSet,i)=>{\r\n\r\n            if(inputState[linePosition][i][3]!=='' && inputState[linePosition][i][4]!=='' && \r\n            inputState[linePosition][i][5]!=='')\r\n             total=total+((parseFloat(inputState[linePosition][i][3])*parseFloat(inputState[linePosition][i][4]))\r\n             -parseFloat(inputState[linePosition][i][5]))\r\n        })\r\n        return total;\r\n    }\r\n    \r\n    function calculateOutstanding() {\r\n        const amount=dataSelectPaymentHistory? dataSelectPaymentHistory.field[4].name:null;\r\n        \r\n        return calculateTotal()-(dataSelectPaymentHistory? dataSelectPaymentHistory.data.reduce((a,b)=>\r\n            a+b[amount],0):0)\r\n    }\r\n    \r\n    /*error display extension from error display already provided by Item Component*/\r\n    let errorDisplayExtension=null;\r\n    \r\n    \r\n    if ((dataSelectCreditor && dataSelectCreditor.error) || errorSelectCreditor ||(dataSelectStock && dataSelectStock.error) || errorSelectStock ||\r\n    (dataSelectGLCode && dataSelectGLCode.error) || errorSelectGLCode || (dataSelectPaymentHistory && dataSelectPaymentHistory.error)\r\n    || errorSelectPaymentHistory ) \r\n    errorDisplayExtension=(\r\n        <div className=\"alert alert-warning\">\r\n            {dataSelectCreditor && dataSelectCreditor.error? 'Creditor List RETRIEVAL for item failed errno: '+dataSelectCreditor.error.errno\r\n            +' code: '+dataSelectCreditor.error.code+' message: '+dataSelectCreditor.error.sqlMessage:null}\r\n            {errorSelectCreditor? 'Creditor List RETRIEVAL for item failed '+errorSelectCreditor : null}\r\n            <br/>\r\n            <br/>\r\n            {dataSelectStock && dataSelectStock.error? 'Stock List RETRIEVAL for item failed errno: '+dataSelectStock.error.errno\r\n            +' code: '+dataSelectStock.error.code+' message: '+dataSelectStock.error.sqlMessage:null}\r\n            {errorSelectStock? 'Stock List RETRIEVAL for item failed '+errorSelectStock : null}\r\n            <br/>\r\n            <br/>\r\n            {dataSelectGLCode && dataSelectGLCode.error? 'GL Code List RETRIEVAL for item failed errno: '+dataSelectGLCode.error.errno\r\n            +' code: '+dataSelectGLCode.error.code+' message: '+dataSelectGLCode.error.sqlMessage:null}\r\n            {errorSelectGLCode? 'GL Code List RETRIEVAL for item failed '+errorSelectGLCode : null}\r\n            <br/>\r\n            <br/>\r\n            {dataSelectPaymentHistory && dataSelectPaymentHistory.error? 'Payment History RETRIEVAL for item failed errno: '+dataSelectPaymentHistory.error.errno\r\n            +' code: '+dataSelectPaymentHistory.error.code+' message: '+dataSelectPaymentHistory.error.sqlMessage:null}\r\n            {errorSelectPaymentHistory? 'Payment History RETRIEVAL for item failed '+errorSelectPaymentHistory : null}\r\n        </div>)\r\n\r\n    \r\n    return (\r\n        <Item inputState={inputState} changeInputState={changeInputState} url={url} item='purchase_debit_note' successPath='/PurchaseDebitNote'>\r\n            {\r\n            ({usage,disabled,changeDisabled,onInsert,onUpdate,onDelete,errorDisplay})=> \r\n            (<Switch>\r\n                <Route exact path={`${path}/Preview`}>\r\n                    <DocumentOne description={PurchaseDebitNoteItem.description} \r\n                        backPath={PurchaseDebitNoteItem.path} \r\n                        topLeftInput={[inputState[1],inputState[2]]}\r\n                        topRightField={[PurchaseDebitNoteItem.description+' No','Date','Credit Term','Other Description']}\r\n                        topRightInput={[inputState[3],dateFormatParser(inputState[4]),inputState[6]==='COD'?'C.O.D.':inputState[6]+' Days',inputState[5]]}\r\n                        bottomField={['','Item Code','Description','Price','Qty','Discount','Subtotal']}\r\n                        bottomInput={inputState[linePosition]}\r\n                        calculateSubtotal={calculateSubtotal}\r\n                        calculateTotal={calculateTotal}\r\n                    />\r\n                </Route>\r\n                <Route exact path={path}>\r\n                <AppLayout >\r\n                <div className='container pb-5 px-md-5'>\r\n\r\n                    {/*Heading renders depending on INSERT or UPDATE/DELETE state*/}\r\n\r\n                    <h3 className='my-3'>{(usage==='INSERT'? 'Create':'Update') + ' '+ PurchaseDebitNoteItem.description}</h3>\r\n                    <small className='text-warning'>* required</small>\r\n                    {errorDisplay}\r\n                    {errorDisplayExtension}\r\n\r\n                    {/*onInsert and onUpdate needs to be attached to HTML form onSubmit eventhandler since native HTML form \r\n                    validation only works if submit event is handled here*/}\r\n                    <form onSubmit={(e)=>{e.preventDefault(); if(usage==='INSERT') onInsert(); else onUpdate()}}>\r\n                        <div className='row'>\r\n                            <fieldset className='form-group form-row col-md-5 mx-3 border border-secondary pb-4 rounded' disabled={disabled}>\r\n                                <legend className='col-form-label col-4 offset-4 text-center' ><h6>Creditor <span className='text-warning'>*</span></h6></legend>\r\n                                <label className='mt-3' htmlFor='creditorID' >Creditor ID</label>\r\n                                <div className='input-group'>\r\n                                    {/*if input is disabled, browser does not validate entry (and hence problem if option from dropdown \r\n                                    not chosen).Hence to prevent user altering input content(other than using those in dropdown) AND \r\n                                    to ensure a value is chosen set required attribute and a onChange event handler that does nothing*/}\r\n                                    <input type='text' id='creditorID' value={inputState[0]} onChange={(e)=>e} required className='form-control' />\r\n                                    <select className='form-control' style={{flex:'0 1 0'}} onChange={(e)=>{\r\n                                        let creditorName='';\r\n                                        let creditorAddress='';\r\n                                        let creditorDefaultCreditTerm='';\r\n                                    \r\n                                        dataSelectCreditor.data.forEach(data=>{\r\n                                            \r\n                                            if(data[dataSelectCreditor.field[0].name]===e.target.value) {\r\n                                                creditorName=data[dataSelectCreditor.field[1].name]?data[dataSelectCreditor.field[1].name]:'';\r\n                                                creditorAddress=data[dataSelectCreditor.field[2].name]?data[dataSelectCreditor.field[2].name]:'';\r\n                                                creditorDefaultCreditTerm=data[dataSelectCreditor.field[7].name]?data[dataSelectCreditor.field[7].name]:'';\r\n                                            }\r\n                                            \r\n                                        })\r\n                                    \r\n                                    changeInputState([e.target.value,creditorName,creditorAddress,\r\n                                        ...inputState.slice(3,creditTermPosition),creditorDefaultCreditTerm,\r\n                                        ...inputState.slice(creditTermPosition+1)])\r\n                                    }}>\r\n                                        <option value=''> -select an option- </option>\r\n                                        {creditorList}\r\n                                    </select>\r\n                                </div>\r\n                                <label className='mt-3' htmlFor='creditorName'>Creditor Name</label>\r\n                                <input id='creditorName' value={inputState[1]} onChange={(e)=>e} required className='form-control'/>\r\n                                <label className='mt-3' htmlFor='creditorAddress'>Creditor Address</label>\r\n                                <textarea id='creditorAddress' value={inputState[2]} onChange={(e)=>e} required className='form-control'/>\r\n                                \r\n                            </fieldset>\r\n\r\n                            <div className='form-group col-md-5 mx-3'>\r\n                                <label htmlFor='purchaseDebitNoteNumber' className='mt-3'>Purchase Debit Note Number <span className='text-warning'>*</span></label>\r\n                                <input type='text' id='purchaseDebitNoteNumber' maxLength='50' value={inputState[3]} onChange={\r\n                                    (e)=>onChange(e.target.value,3)} disabled={disabled} required className='form-control' />\r\n\r\n                                <label htmlFor='date' className='mt-3'>Date <span className='text-warning'>*</span></label>\r\n                                <input type='date' disabled={disabled} required value={inputState[4]} onChange={(e)=>onChange(e.target.value,4)} \r\n                                className='form-control'/>\r\n                                \r\n                                <label className='mt-3' htmlFor='glCode' >GL Code <span className='text-warning'>*</span></label>\r\n                                <div className='input-group'>\r\n                                    <input type='text' id='glCode' value={inputState[7]} onChange={(e)=>e} required className='form-control' \r\n                                    disabled={disabled}/>\r\n                                    <select className='form-control' style={{flex:'0 1 0'}} disabled={disabled} onChange={(e)=>{\r\n                                    onChange(e.target.value,7)\r\n                                    }}>\r\n                                        <option value=''> -select an option- </option>\r\n                                        {GLCodeList}\r\n                                    </select>\r\n                                </div>\r\n\r\n                                <label htmlFor='creditTerm' className='mt-3'>Credit Term</label>\r\n                                <select id='creditTerm' onChange={(e)=> onChange(e.target.value,6)} value={inputState[6]} disabled={disabled} \r\n                                className='form-control'>\r\n                                    <option value='COD'>C.O.D.</option>\r\n                                    <option value='30'>30 Days</option>\r\n                                    <option value='45'>45 Days</option>\r\n                                    <option value='60'>60 Days</option>\r\n                                    <option value='90'>90 Days</option>\r\n                                </select>\r\n\r\n                                <label htmlFor='description' className='mt-3'>Description</label>\r\n                                <textarea id='description' onChange={(e)=>onChange(e.target.value,5)} value={inputState[5]} \r\n                                disabled={disabled} className='form-control'/>\r\n                                \r\n                            </div>\r\n\r\n                            <LineRender linePosition={linePosition} stockControlPosition={stockControlPosition}\r\n                            disabled={disabled} inputState={inputState} changeInputState={changeInputState} \r\n                            dataSelectStock={dataSelectStock} stockList={stockList} stockDirection='in'\r\n                            calculateSubtotal={calculateSubtotal} lineDescription={'Purchase Debit Note Line'}/>\r\n\r\n                            \r\n                            <h5 className='text-right my-3 col-12'>\r\n                                {'Total: '+numberFormatParser(calculateTotal())}\r\n                            </h5>\r\n                            {usage==='INSERT'?null:(<h6 className='text-right mb-4 col-12'>\r\n                                <span className=\"alert alert-secondary\">\r\n                                    {'Outstanding Amount: '+numberFormatParser(calculateOutstanding())}\r\n                                </span>\r\n                            </h6>)}\r\n\r\n                            {usage==='INSERT'?null: \r\n                            \r\n                            <ReceiptPaymentHistoryRender dataSelectReceiptPaymentHistory={dataSelectPaymentHistory}\r\n                                disabled={disabled} historyDescription={'Payment History'}/>\r\n                            }\r\n\r\n                        </div>\r\n                        <ItemButton usage={usage} onInsert={onInsert} onUpdate={onUpdate} onDelete={onDelete} \r\n                        changeDisabled={changeDisabled} path={`${path}/Preview`}/>\r\n                        \r\n                    </form>\r\n                </div>\r\n            </AppLayout>\r\n            </Route>\r\n            <Redirect to={PurchaseDebitNoteItem.path}/>\r\n        </Switch>)}\r\n        \r\n        </Item>\r\n    )\r\n}\r\nPurchaseDebitNoteItem.description='Purchase Debit Note';\r\nPurchaseDebitNoteItem.path='/PurchaseDebitNoteItem';\r\n\r\nexport default PurchaseDebitNoteItem;\r\n\r\n","import React,{useState,useEffect,useContext} from 'react';\r\nimport Item from '../Shared/Item';\r\nimport ItemButton from '../Shared/ItemButton';\r\nimport AppLayout from '../Shared/AppLayout';\r\nimport {\r\n    Switch,\r\n    Route,\r\n    useRouteMatch,\r\n    Redirect\r\n} from 'react-router-dom';\r\nimport DocumentOne from '../Shared/preview/DocumentOne';\r\nimport numberFormatParser from '../Shared/numberFormatParser';\r\nimport dateFormatParser from '../Shared/dateFormatParser';\r\nimport useFetch from '../Shared/useFetch';\r\nimport authContext from '../Shared/authContext';\r\nimport LineRender from '../Shared/LineRender';\r\nimport OffsetRender from '../Shared/OffsetRender';\r\n\r\n\r\n\r\nfunction PurchaseCreditNoteItem (props) {\r\n    const url={\r\n        item:new URLSearchParams(props.location.search).get('item'),\r\n        id:new URLSearchParams(props.location.search).get('id'),\r\n    }\r\n    const [{data:dataSelectCreditor,error:errorSelectCreditor}]=useFetch({\r\n        url:'./SelectItem',\r\n        init:{\r\n            method:'POST',\r\n            headers:{'Content-Type':'application/json'},\r\n            body:JSON.stringify({item:'creditor'}),\r\n            credentials:'include'\r\n        }\r\n    });//extension of Item component\r\n\r\n    const [{data:dataSelectStock,error:errorSelectStock}]=useFetch({\r\n        url:'./SelectItem',\r\n        init:{\r\n            method:'POST',\r\n            headers:{'Content-Type':'application/json'},\r\n            body:JSON.stringify({\r\n                item:'stock',\r\n                param:url.id?[url.id]:null\r\n            }),\r\n            credentials:'include'\r\n        }\r\n    });//extension of Item component\r\n\r\n    const [{data:dataSelectGLCode,error:errorSelectGLCode}]=useFetch({\r\n        url:'./getEligibleGLAccount',\r\n        init:{\r\n            method:'POST',\r\n            headers:{'Content-Type':'application/json'},\r\n            body:JSON.stringify({item:'purchase_credit_note'}),\r\n            credentials:'include'\r\n        }\r\n    });//extension of Item component\r\n\r\n    const [{data:dataSelectCreditorOutstanding,error:errorSelectCreditorOutstanding},changeParamCreditorOutstanding]=useFetch(null);//extension of Item component\r\n\r\n    /*Position of inputState variable used in other components. */\r\n    const creditorNumPosition=0;\r\n    const creditTermPosition=6;\r\n    const oldNumPosition=8;\r\n    const linePosition=9;\r\n    const offsetPositionPurchaseInvoice=10;\r\n    const offsetPositionPurchaseDebitNote=11;\r\n    const stockControlPosition=12;\r\n\r\n    /*inputState offset inner positions*/\r\n    const offsetDocNumPosition=0;\r\n    const offsetAmountPosition=1;\r\n\r\n    const offsetDescriptionOne='PURCHASE INVOICE';\r\n    const offsetDescriptionTwo='PURCHASE DEBIT NOTE';\r\n\r\n    const [creditorList,changeCreditorList] = useState(null);\r\n    const [stockList,changeStockList] = useState(null);\r\n    const [GLCodeList,changeGLCodeList] = useState(null);\r\n    const [errorUnappliedAmount,changeErrorUnappliedAmount] = useState(null);\r\n    const [inputState,changeInputState]=useState(['','','','','','','COD','','',[],[],[],[]]) \r\n    \r\n    const {path} = useRouteMatch();\r\n    const {changeAuth} = useContext(authContext);\r\n\r\n    useEffect(()=>{\r\n        \r\n        if (dataSelectCreditor && dataSelectCreditor.auth===false) {\r\n                    alert('Cookies Expired or Authorisation invalid. Please Login again!');\r\n                    changeAuth(false);\r\n                }\r\n        else if (dataSelectCreditor && dataSelectCreditor.data && dataSelectCreditor.field) \r\n            changeCreditorList(dataSelectCreditor.data.map(data=>(\r\n            <option key={data[dataSelectCreditor.field[0].name]} value={data[dataSelectCreditor.field[0].name]}>\r\n                {data[dataSelectCreditor.field[0].name]+' | '+(data[dataSelectCreditor.field[1].name]?data[dataSelectCreditor.field[1].name]:'')}\r\n            </option>)\r\n            )\r\n        )\r\n\r\n        if (dataSelectStock && dataSelectStock.auth===false) {\r\n                    alert('Cookies Expired or Authorisation invalid. Please Login again!');\r\n                    changeAuth(false);\r\n                }\r\n        else if (dataSelectStock && dataSelectStock.data && dataSelectStock.field) {\r\n            const stockNum=dataSelectStock.field[0].name;\r\n            const stockDesc=dataSelectStock.field[1].name;\r\n            const stockPrice=dataSelectStock.field[2].name;\r\n            const stockBalQty=dataSelectStock.field[8].name;\r\n            \r\n            changeStockList(dataSelectStock.data.map(data=>(\r\n                <option key={data[stockNum]} value={data[stockNum]}>\r\n                    {data[stockNum]+' | '\r\n                    + (data[stockDesc]?data[stockDesc]:'')+' | Price = '\r\n                    + (data[stockPrice]?data[stockPrice]:'')+' | Bal Qty = '\r\n                    + (data[stockBalQty]?data[stockBalQty]:'0')}\r\n                </option>)\r\n                )\r\n            )\r\n        }\r\n            \r\n\r\n        if (dataSelectGLCode && dataSelectGLCode.auth===false) {\r\n                alert('Cookies Expired or Authorisation invalid. Please Login again!');\r\n                changeAuth(false);\r\n            }\r\n        else if (dataSelectGLCode && dataSelectGLCode.data && dataSelectGLCode.field) \r\n            changeGLCodeList(dataSelectGLCode.data.map(data=>(\r\n            <option key={data[dataSelectGLCode.field[0].name]} value={data[dataSelectGLCode.field[0].name]}>\r\n                {(data[dataSelectGLCode.field[0].name]?data[dataSelectGLCode.field[0].name]:'')\r\n                +' | '+(data[dataSelectGLCode.field[1].name]?data[dataSelectGLCode.field[1].name]:'')}\r\n            </option>)\r\n            )\r\n        )\r\n\r\n    },[dataSelectCreditor,errorSelectCreditor,dataSelectStock,errorSelectStock,dataSelectGLCode,errorSelectGLCode])\r\n\r\n    /*have a separate useeffect for creditor outstanding fetch because fetch happens many time during lifecycle of component*/\r\n    useEffect(()=>{\r\n        if (dataSelectCreditorOutstanding && dataSelectCreditorOutstanding.auth===false) {\r\n            alert('Cookies Expired or Authorisation invalid. Please Login again!');\r\n            changeAuth(false);\r\n        }\r\n    },[dataSelectCreditorOutstanding,errorSelectCreditorOutstanding])\r\n\r\n    useEffect(()=>{\r\n        function setScale() {\r\n            document.querySelector(\"meta[name=viewport]\").setAttribute(\r\n                'content','width=device-width, initial-scale=1.0');\r\n        }\r\n        window.addEventListener('popstate',setScale)\r\n            \r\n        return function unattach() {\r\n                window.removeEventListener('popstate',setScale)\r\n            }\r\n        },[])\r\n\r\n    function paramCreditorOutstanding(creditorNum,oldNum){\r\n        return {\r\n            url:'./getCreditorOutstanding',\r\n            init:{\r\n                method:'POST',\r\n                headers:{'Content-Type':'application/json'},\r\n                body:JSON.stringify({\r\n                    creditorNum:creditorNum,\r\n                    oldNum:oldNum\r\n                }),\r\n                credentials:'include'\r\n            }\r\n        }\r\n    }\r\n\r\n    function onChange(value,order) {\r\n        changeInputState([...inputState.slice(0,order),value,...inputState.slice(order+1)])\r\n    }\r\n    \r\n    function calculateSubtotal(i) {\r\n        if (inputState[linePosition][i][3]!=='' && inputState[linePosition][i][4]!=='' && inputState[linePosition][i][5]!=='')\r\n            return ((parseFloat(inputState[linePosition][i][3])*parseFloat(inputState[linePosition][i][4]))\r\n            -parseFloat(inputState[linePosition][i][5]))\r\n        else return '';\r\n    }\r\n\r\n    function calculateTotal() {\r\n        let total=0\r\n        inputState[linePosition].forEach((lineset,i)=>{\r\n\r\n            if(inputState[linePosition][i][3]!=='' && inputState[linePosition][i][4]!=='' && \r\n            inputState[linePosition][i][5]!=='')\r\n             total=total+((parseFloat(inputState[linePosition][i][3])*parseFloat(inputState[linePosition][i][4]))\r\n             -parseFloat(inputState[linePosition][i][5]))\r\n        })\r\n        return total;\r\n    }\r\n\r\n    function calculateUnappliedAmount(exclude) {\r\n        return inputState[offsetPositionPurchaseDebitNote].reduce((a,b)=>{\r\n            \r\n            if(exclude===b[offsetDocNumPosition]) {\r\n                return a\r\n            }     \r\n            else return a-b[offsetAmountPosition];\r\n        },inputState[offsetPositionPurchaseInvoice].reduce((a,b)=>{\r\n            \r\n            if(exclude===b[offsetDocNumPosition]) {\r\n                return a\r\n            }     \r\n            else return a-b[offsetAmountPosition];\r\n        },calculateTotal())\r\n        )\r\n    }\r\n\r\n    \r\n    /*error display extension from error display already provided by Item Component*/\r\n    let errorDisplayExtension=null;\r\n    \r\n    \r\n    if ((dataSelectCreditor && dataSelectCreditor.error) || errorSelectCreditor ||(dataSelectStock && dataSelectStock.error) || errorSelectStock \r\n        || (dataSelectGLCode && dataSelectGLCode.error) || errorSelectGLCode || (dataSelectCreditorOutstanding \r\n        && dataSelectCreditorOutstanding.error) || errorSelectCreditorOutstanding) \r\n    errorDisplayExtension=(\r\n        <div className=\"alert alert-warning\">\r\n            {dataSelectCreditor && dataSelectCreditor.error? 'Creditor List RETRIEVAL for item failed errno: '+dataSelectCreditor.error.errno\r\n            +' code: '+dataSelectCreditor.error.code+' message: '+dataSelectCreditor.error.sqlMessage:null}\r\n            {errorSelectCreditor? 'Creditor List RETRIEVAL for item failed '+errorSelectCreditor : null}\r\n            <br/>\r\n            <br/>\r\n            {dataSelectStock && dataSelectStock.error? 'Stock List RETRIEVAL for item failed errno: '+dataSelectStock.error.errno\r\n            +' code: '+dataSelectStock.error.code+' message: '+dataSelectStock.error.sqlMessage:null}\r\n            {errorSelectStock? 'Stock List RETRIEVAL for item failed '+errorSelectStock : null}\r\n            <br/>\r\n            <br/>\r\n            {dataSelectGLCode && dataSelectGLCode.error? 'GL Code List RETRIEVAL for item failed errno: '+dataSelectGLCode.error.errno\r\n            +' code: '+dataSelectGLCode.error.code+' message: '+dataSelectGLCode.error.sqlMessage:null}\r\n            {errorSelectGLCode? 'GL Code List RETRIEVAL for item failed '+errorSelectGLCode : null}\r\n            <br/>\r\n            <br/>\r\n            {dataSelectCreditorOutstanding && dataSelectCreditorOutstanding.error? 'Creditor Outstanding List RETRIEVAL for item failed errno: '\r\n            + dataSelectCreditorOutstanding.error.errno +' code: '+dataSelectCreditorOutstanding.error.code+' message: '+ \r\n            dataSelectCreditorOutstanding.error.sqlMessage:null}\r\n            {errorSelectCreditorOutstanding? 'Creditor Outstanding List RETRIEVAL for item failed '+errorSelectCreditorOutstanding : null}\r\n        </div>)\r\n\r\n    \r\n    return (\r\n        <Item inputState={inputState} changeInputState={changeInputState} url={url} item='purchase_credit_note' successPath='/PurchaseCreditNote'\r\n        paramOutstanding={paramCreditorOutstanding} changeParamOutstanding={changeParamCreditorOutstanding} \r\n        debtorCreditorNumPosition={creditorNumPosition} oldNumPosition={oldNumPosition}>\r\n            {\r\n            ({usage,disabled,changeDisabled,onInsert,onUpdate,onDelete,errorDisplay})=> \r\n            (<Switch>\r\n                <Route path={`${path}/Preview`}>\r\n                    <DocumentOne description={PurchaseCreditNoteItem.description} \r\n                        backPath={'.'+PurchaseCreditNoteItem.path} \r\n                        topLeftInput={[inputState[1],inputState[2]]}\r\n                        topRightField={[PurchaseCreditNoteItem.description+' No','Date','Credit Term','Other Description']}\r\n                        topRightInput={[inputState[3],dateFormatParser(inputState[4]),inputState[6]==='COD'?'C.O.D.':inputState[6]+' Days',inputState[5]]}\r\n                        bottomField={['','Item Code','Description','Price','Qty','Discount','Subtotal']}\r\n                        bottomInput={inputState[linePosition]}\r\n                        calculateSubtotal={calculateSubtotal}\r\n                        calculateTotal={calculateTotal}\r\n                    />\r\n                </Route>\r\n                <Route exact path={path}>\r\n                <AppLayout >\r\n                <div className='container pb-5 px-md-5'>\r\n\r\n                    {/*Heading renders depending on INSERT or UPDATE/DELETE state*/}\r\n\r\n                    <h3 className='my-3'>{(usage==='INSERT'? 'Create':'Update') + ' '+ PurchaseCreditNoteItem.description}</h3>\r\n                    <small className='text-warning'>* required</small>\r\n                    {errorDisplay}\r\n                    {errorDisplayExtension}\r\n\r\n                    {/*onInsert and onUpdate needs to be attached to HTML form onSubmit eventhandler since native HTML form \r\n                    validation only works if submit event is handled here*/}\r\n                    <form onSubmit={(e)=>{\r\n                        e.preventDefault(); \r\n                        if(usage==='INSERT') onInsert(); \r\n                        else onUpdate()\r\n                        \r\n                        }}>\r\n                        <div className='row'>\r\n                            <fieldset className='form-group form-row col-md-5 mx-3 border border-secondary pb-4 rounded' disabled={disabled}>\r\n                                <legend className='col-form-label col-4 offset-4 text-center' ><h6>Creditor <span className='text-warning'>*</span></h6></legend>\r\n                                <label className='mt-3' htmlFor='creditorID' >Creditor ID</label>\r\n                                <div className='input-group'>\r\n                                    {/*if input is disabled, browser does not validate entry (and hence problem if option from dropdown \r\n                                    not chosen).Hence to prevent user altering input content(other than using those in dropdown) AND \r\n                                    to ensure a value is chosen set required attribute and a onChange event handler that does nothing*/}\r\n                                    <input type='text' id='creditorID' value={inputState[0]} onChange={(e)=>e} required className='form-control' />\r\n                                    <select className='form-control' style={{flex:'0 1 0'}} onChange={(e)=>{\r\n                                        let creditorName='';\r\n                                        let creditorAddress='';\r\n                                        let creditorDefaultCreditTerm='';\r\n                                    \r\n                                        dataSelectCreditor.data.forEach(data=>{\r\n                                            \r\n                                            if(data[dataSelectCreditor.field[0].name]===e.target.value) {\r\n                                                creditorName=data[dataSelectCreditor.field[1].name]?data[dataSelectCreditor.field[1].name]:'';\r\n                                                creditorAddress=data[dataSelectCreditor.field[2].name]?data[dataSelectCreditor.field[2].name]:'';\r\n                                                creditorDefaultCreditTerm=data[dataSelectCreditor.field[7].name]?data[dataSelectCreditor.field[7].name]:'';\r\n                                            }\r\n                                            \r\n                                        })\r\n                                    \r\n                                    changeInputState([e.target.value,creditorName,creditorAddress,\r\n                                        ...inputState.slice(3,creditTermPosition),creditorDefaultCreditTerm,\r\n                                        ...inputState.slice(creditTermPosition+1)])\r\n                                    changeParamCreditorOutstanding(\r\n                                        paramCreditorOutstanding(e.target.value,inputState[oldNumPosition])\r\n                                        )\r\n                                    }}>\r\n                                        <option value=''> -select an option- </option>\r\n                                        {creditorList}\r\n                                    </select>\r\n                                </div>\r\n                                <label className='mt-3' htmlFor='creditorName'>Creditor Name</label>\r\n                                <input id='creditorName' value={inputState[1]} onChange={(e)=>e} required className='form-control'/>\r\n                                <label className='mt-3' htmlFor='creditorAddress'>Creditor Address</label>\r\n                                <textarea id='creditorAddress' value={inputState[2]} onChange={(e)=>e} required className='form-control'/>\r\n                                \r\n                            </fieldset>\r\n\r\n                            <div className='form-group col-md-5 mx-3'>\r\n                                <label htmlFor='purchaseCreditNoteNumber' className='mt-3'>Purchase Credit Note Number <span className='text-warning'>*</span></label>\r\n                                <input type='text' id='purchaseCreditNoteNumber' maxLength='50' value={inputState[3]} onChange={\r\n                                    (e)=>onChange(e.target.value,3)} disabled={disabled} required className='form-control' />\r\n                                \r\n                                <label htmlFor='date' className='mt-3'>Date <span className='text-warning'>*</span></label>\r\n                                <input type='date' disabled={disabled} required value={inputState[4]} onChange={(e)=>onChange(e.target.value,4)} \r\n                                className='form-control'/>\r\n                                \r\n                                <label className='mt-3' htmlFor='glCode' >GL Code <span className='text-warning'>*</span></label>\r\n                                <div className='input-group'>\r\n                                    <input type='text' id='glCode' value={inputState[7]} onChange={(e)=>e} required className='form-control' \r\n                                    disabled={disabled}/>\r\n                                    <select className='form-control' style={{flex:'0 1 0'}} disabled={disabled} onChange={(e)=>{\r\n                                    onChange(e.target.value,7)\r\n                                    }}>\r\n                                        <option value=''> -select an option- </option>\r\n                                        {GLCodeList}\r\n                                    </select>\r\n                                </div>\r\n\r\n                                <label htmlFor='creditTerm' className='mt-3'>Credit Term</label>\r\n                                <select id='creditTerm' onChange={(e)=> onChange(e.target.value,6)} value={inputState[6]} disabled={disabled} \r\n                                className='form-control'>\r\n                                    <option value='COD'>C.O.D.</option>\r\n                                    <option value='30'>30 Days</option>\r\n                                    <option value='45'>45 Days</option>\r\n                                    <option value='60'>60 Days</option>\r\n                                    <option value='90'>90 Days</option>\r\n                                </select>\r\n\r\n                                <label htmlFor='description' className='mt-3'>Description</label>\r\n                                <textarea id='description' onChange={(e)=>onChange(e.target.value,5)} value={inputState[5]} \r\n                                disabled={disabled} className='form-control'/>\r\n                                \r\n                            </div>\r\n\r\n                            <LineRender linePosition={linePosition} stockControlPosition={stockControlPosition}\r\n                            disabled={disabled} inputState={inputState} changeInputState={changeInputState} \r\n                            dataSelectStock={dataSelectStock} stockList={stockList} stockDirection='out'\r\n                            calculateSubtotal={calculateSubtotal} lineDescription={'Purchase Credit Note Line'} />\r\n\r\n\r\n                            <h5 className='text-right mt-3 mb-4 col-12'>\r\n                                {'Total: '+numberFormatParser(calculateTotal())}\r\n                            </h5>\r\n                            <h6 className='text-right mb-4 col-12'>\r\n                                <span className=\"alert alert-secondary\">{'Unapplied Amount: '+numberFormatParser(calculateUnappliedAmount())}</span>\r\n                            </h6>\r\n                            {errorUnappliedAmount}\r\n\r\n                            \r\n                            <OffsetRender dataSelectOutstanding={dataSelectCreditorOutstanding} inputState={inputState} \r\n                                changeInputState={changeInputState} disabled={disabled}\r\n                                calculateUnappliedAmount={calculateUnappliedAmount} calculateTotal={calculateTotal}\r\n                                offsetPositionOne={offsetPositionPurchaseInvoice} offsetPositionTwo={offsetPositionPurchaseDebitNote}\r\n                                offsetDescriptionOne={offsetDescriptionOne} offsetDescriptionTwo={offsetDescriptionTwo}\r\n                                changeErrorUnappliedAmount={changeErrorUnappliedAmount} \r\n                                offsetDescription={'Purchase Invoice / Purchase Debit Note'}/>\r\n                            \r\n\r\n                        </div>\r\n                        <ItemButton usage={usage} onInsert={onInsert} onUpdate={onUpdate} onDelete={onDelete} \r\n                        changeDisabled={changeDisabled} path={`${path}/Preview`}/>\r\n                        \r\n                    </form>\r\n                </div>\r\n            </AppLayout>\r\n            </Route>\r\n            <Redirect to={PurchaseCreditNoteItem.path}/>\r\n        </Switch>)}\r\n        \r\n        </Item>\r\n    )\r\n}\r\nPurchaseCreditNoteItem.description='Purchase Credit Note';\r\nPurchaseCreditNoteItem.path='/PurchaseCreditNoteItem';\r\n\r\nexport default PurchaseCreditNoteItem;\r\n\r\n","import React from 'react';\r\nimport AppLayout from '../Shared/AppLayout';\r\nimport Process from '../Shared/Process';\r\nimport ProcessLayout from '../Shared/ProcessLayout';\r\n\r\nfunction StockItemMaintenance(props) {\r\n    return (\r\n            <AppLayout>\r\n                <Process createItemPath='./StockItem' item='stock'\r\n                render={(list)=>{\r\n                    return (\r\n                    <ProcessLayout description={StockItemMaintenance.description} listname={'Stock Item'} {...list}/>\r\n                    )}\r\n                }/>\r\n            </AppLayout>\r\n    )\r\n}\r\n                \r\n            \r\n\r\nStockItemMaintenance.description='Stock Item Maintenance';\r\nStockItemMaintenance.path='/StockItemMaintenance';\r\n\r\nexport default StockItemMaintenance;","import React from 'react';\r\nimport AppLayout from '../Shared/AppLayout';\r\nimport Process from '../Shared/Process';\r\nimport ProcessLayout from '../Shared/ProcessLayout';\r\n\r\nfunction StockAdjustment(props) {\r\n    return (\r\n            <AppLayout>\r\n                <Process createItemPath='./StockAdjustmentItem' item='stock_adjustment'\r\n                render={(list)=>{\r\n                    return (\r\n                    <ProcessLayout description={StockAdjustment.description} listname={'Stock Adjustment'} {...list}/>\r\n                    )}\r\n                }/>\r\n            </AppLayout>\r\n    )\r\n}\r\n                \r\n            \r\n\r\nStockAdjustment.description='Stock Adjustment';\r\nStockAdjustment.path='/StockAdjustment';\r\n\r\nexport default StockAdjustment;","import React from 'react';\r\nimport numberFormatParser from '../numberFormatParser';\r\nimport dateFormatParser from '../dateFormatParser';\r\nimport {useHistory} from 'react-router-dom';\r\nimport setPageSize from '../setPageSize';\r\n\r\n/*Layout for Stock Card Report*/\r\n\r\nfunction StockCardOne(props) {\r\n    const history=useHistory();\r\n\r\n    function populateResult() {\r\n        const broughtForwardData=props.broughtForwardData;\r\n        const broughtForwardField=props.broughtForwardField;\r\n        const data=props.data;\r\n        const dataDetail=props.dataDetail;\r\n        const field=props.field;\r\n        const stockNum=field[0].name;\r\n        const description=field[1].name;\r\n        const docNum=field[2].name;\r\n        const docDate=field[3].name;\r\n        const type=field[4].name;\r\n        const IN=field[5].name;\r\n        const OUT=field[6].name;\r\n        const bfQty=broughtForwardField[1].name\r\n\r\n        const stockAlreadyParsed=[];\r\n        const result=[];\r\n        let balQty=0;\r\n\r\n        data.forEach(item=>{\r\n            if(stockAlreadyParsed.indexOf(item[stockNum])===-1)  {\r\n                stockAlreadyParsed.push(item[stockNum]);\r\n                balQty=broughtForwardData.find(item2=>\r\n                    item2[stockNum]===item[stockNum]\r\n                )[bfQty];\r\n                result.push(\r\n                (<tbody key={item[stockNum]} className='border-bottom border-secondary'>\r\n                    <tr className='border-top border-secondary'>\r\n                        <th className='align-top'>{item[stockNum]}</th>\r\n                        <th className='align-top'>{item[description]}</th>\r\n                        <th></th>\r\n                        <th></th>\r\n                        <th className='align-top'>\r\n                            {numberFormatParser(broughtForwardData.find(item2=>\r\n                                item2[stockNum]===item[stockNum]\r\n                                )[bfQty]\r\n                            )}\r\n                        </th>\r\n                        <th className='align-top'>\r\n                            {numberFormatParser(\r\n                                broughtForwardData.find(item2=>\r\n                                    item2[stockNum]===item[stockNum]\r\n                                )[bfQty]+data.reduce((a,b)=>{\r\n                                    if(b[stockNum]===item[stockNum])\r\n                                        return a+b[IN]+b[OUT]\r\n                                    else return a\r\n                                },0)\r\n                            )}\r\n                        </th>\r\n                    </tr>\r\n                    {props.withDetails? props.dataDetail.map(item2=>{\r\n                        if (item2[stockNum]===item[stockNum]) \r\n                            return (\r\n                            <tr key={item2[docNum]}>\r\n                                <td className='align-top'>{item2[docNum]}</td>\r\n                                <td className='align-top'>{dateFormatParser(item2[docDate])}</td>\r\n                                <td className='align-top'>{item2[type]}</td>\r\n                                <td className='align-top'>{item2[IN]}</td>\r\n                                <td className='align-top'>{item2[OUT]}</td>\r\n                                <td className='align-top'>{balQty+=item2[IN]+item2[OUT]}</td>\r\n                            </tr>\r\n                            )\r\n                    }):null}\r\n                </tbody>)\r\n                )\r\n            }\r\n        })\r\n\r\n        return result;\r\n    \r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <div className='container-fluid py-1'>\r\n            <button type='click' className='btn btn-secondary d-print-none mb-2' \r\n                onClick={()=>{\r\n                    document.querySelector(\"meta[name=viewport]\").setAttribute(\r\n                    'content','width=device-width, initial-scale=1.0');\r\n                    setPageSize('a4 portrait');\r\n                    history.push(props.backPath)\r\n            }}>Back</button>\r\n            <h2 className='text-center mb-3'>\r\n                {props.description+' from '+ dateFormatParser(props.resultInput['dateStart'])\r\n                +' to '+ dateFormatParser(props.resultInput['dateEnd'])}\r\n            </h2>\r\n            <hr className='border border-dark'/>\r\n            <table className='table table-borderless'>\r\n                <thead>\r\n                    <tr className='border-top border-secondary'>\r\n                        <th className='align-top'>Item Code</th>\r\n                        <th className='align-top' colSpan={3}>Description</th>\r\n                        <th className='align-top'>B/F Qty</th>\r\n                        <th className='align-top'>Balance Qty</th>\r\n                    </tr>\r\n                    {props.withDetails?\r\n                    (<tr>\r\n                        <th className='align-top'>Doc No.</th>\r\n                        <th className='align-top'>Date</th>\r\n                        <th className='align-top'>Type</th>\r\n                        <th className='align-top'>In</th>\r\n                        <th className='align-top'>Out</th>\r\n                        <th className='align-top'>Bal Qty</th>\r\n                    </tr>):null}\r\n                    <tr>\r\n                        <th className='border-bottom border-secondary' colSpan={6}></th>\r\n                    </tr>\r\n                </thead>\r\n                {populateResult()}\r\n            </table>\r\n            <hr className='border border-dark'/>\r\n            <small className='d-block text-center'>End of Report</small>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StockCardOne;","import React,{useState,useContext,useEffect} from 'react';\r\nimport AppLayout from '../Shared/AppLayout'\r\nimport {\r\n    Switch,\r\n    Route,\r\n    useRouteMatch,\r\n    Redirect\r\n} from 'react-router-dom';\r\nimport useFetch from '../Shared/useFetch';\r\nimport authContext from '../Shared/authContext';\r\nimport {useHistory} from 'react-router-dom';\r\nimport $ from 'jquery'\r\nimport numberFormatParser from '../Shared/numberFormatParser';\r\nimport dateFormatParser from '../Shared/dateFormatParser';\r\nimport sortData from '../Shared/sort';\r\nimport setPageSize from '../Shared/setPageSize';\r\nimport StockCardOne from '../Shared/preview/StockCardOne';\r\n\r\nfunction StockCardReport(props) {\r\n    const [{data:dataSelectStock,error:errorSelectStock}]=useFetch({\r\n        url:'./SelectItem',\r\n        init:{\r\n            method:'POST',\r\n            headers:{'Content-Type':'application/json'},\r\n            body:JSON.stringify({item:'stock'}),\r\n            credentials:'include'\r\n        }\r\n    });\r\n    const [{data:dataSelectStockCard,error:errorSelectStockCard},changeParamStockCard]=useFetch(null);\r\n    const [stockList,changeStockList] = useState(null);\r\n    const [stockID,changeStockID] = useState([]);\r\n    const [dateStart,changeDateStart] = useState(new Date().getFullYear()+'-01-01');\r\n    const [dateEnd,changeDateEnd] = useState(getFormattedDate(new Date()));\r\n    const [resultInput,changeResultInput]=useState(null);\r\n    const [collapsibleElementID,changeCollapsibleElementID]=useState([])\r\n\r\n    /*Preview states*/\r\n    const [withDetails,changeWithDetails]=useState(false);\r\n    const [sortCriteriaList,changeSortCriteriaList]=useState(null);\r\n    const [detailSortCriteriaList,changeDetailSortCriteriaList]=useState(null);\r\n    const [sortCriteria,changeSortCriteria]=useState('');\r\n    const [detailSortCriteria,changeDetailSortCriteria]=useState('');\r\n    const [generateReportWarning,changeGenerateReportWarning]=useState(false);\r\n\r\n    const {path} = useRouteMatch();\r\n    const {changeAuth} = useContext(authContext);\r\n    const history=useHistory();\r\n\r\n    const calculatedWidth=700;\r\n\r\n    useEffect(()=>{\r\n        \r\n        if (dataSelectStock && dataSelectStock.auth===false) {\r\n                alert('Cookies Expired or Authorisation invalid. Please Login again!');\r\n                changeAuth(false);\r\n            }\r\n        else if (dataSelectStock && dataSelectStock.data && dataSelectStock.field) \r\n            changeStockList(dataSelectStock.data.map(data=>(\r\n            <option key={data[dataSelectStock.field[0].name]} value={data[dataSelectStock.field[0].name]}>\r\n                {data[dataSelectStock.field[0].name]+' '+(data[dataSelectStock.field[1].name]?data[dataSelectStock.field[1].name]:'')}\r\n            </option>)\r\n            )\r\n        )\r\n    },[dataSelectStock,errorSelectStock])\r\n    \r\n    useEffect(()=>{\r\n        if (dataSelectStockCard && dataSelectStockCard.auth===false) {\r\n                alert('Cookies Expired or Authorisation invalid. Please Login again!');\r\n                changeAuth(false);\r\n            }\r\n        else if (dataSelectStockCard && dataSelectStockCard.data && dataSelectStockCard.field) {\r\n            const stockAlreadyParsed=[];\r\n            const data=dataSelectStockCard.data[1];\r\n            const field=dataSelectStockCard.field[1];\r\n            const stockNum=field[0].name;\r\n            const description=field[1].name;\r\n            const docNum=field[2].name;\r\n            const docDate=field[3].name;\r\n            const type=field[4].name;\r\n            const IN=field[5].name;\r\n            const OUT=field[6].name;\r\n            \r\n            changeResultInput(resultInput=>{})\r\n\r\n            data.forEach(item=>{\r\n                let newObject={}\r\n               if(stockAlreadyParsed.indexOf(item[stockNum])===-1) {\r\n                stockAlreadyParsed.push(item[stockNum])\r\n                    newObject[item[stockNum]]=data.filter(item2=>item2[stockNum]===item[stockNum])\r\n                    changeResultInput(resultInput=>(Object.assign({},resultInput,newObject)))\r\n               }\r\n            })\r\n\r\n            changeResultInput(resultInput=>({...resultInput,\r\n                data:dataSelectStockCard.data,\r\n                dataPreview:[...dataSelectStockCard.data],\r\n                field:dataSelectStockCard.field,\r\n                dateStart,\r\n                dateEnd,\r\n                stockID\r\n            }))\r\n\r\n            changeSortCriteriaList(\r\n                (<>\r\n                    <option value={stockNum}>Item Code</option>\r\n                    <option value={description}>Description</option>\r\n                </>)\r\n            )\r\n            changeDetailSortCriteriaList(\r\n                (<>\r\n                    <option value={docNum}>Doc No.</option>\r\n                    <option value={docDate}>Doc Date</option>\r\n                    <option value={type}>Type</option>\r\n                    <option value={IN}>In</option>\r\n                    <option value={OUT}>Out</option>\r\n                </>)\r\n            )\r\n\r\n             changeCollapsibleElementID(stockAlreadyParsed.map(item=>item.replace(/[ ._\\-()]/g,'')))\r\n\r\n        }\r\n    },[dataSelectStockCard,errorSelectStockCard])\r\n\r\n    //attach bootstrap/jquery eventlisteners and callbacks\r\n    useEffect(()=>{\r\n        if (collapsibleElementID) {\r\n            collapsibleElementID.forEach(ID=>{\r\n                $('#'+ID).on('show.bs.collapse',e=>{\r\n                    if(e.target===e.currentTarget)\r\n                    $('#plusminus'+ID).removeClass('fa-plus-square').addClass('fa-minus-square');\r\n                })\r\n                $('#'+ID).on('hide.bs.collapse',e=>{\r\n                    if(e.target===e.currentTarget)\r\n                    $('#plusminus'+ID).removeClass('fa-minus-square').addClass('fa-plus-square');\r\n                })\r\n        })\r\n    }\r\n    },[resultInput])\r\n\r\n    useEffect(()=>{\r\n        function setScale() {\r\n            document.querySelector(\"meta[name=viewport]\").setAttribute(\r\n                'content','width=device-width, initial-scale=1.0');\r\n        }\r\n        window.addEventListener('popstate',setScale)\r\n        \r\n        return function unattach() {\r\n                window.removeEventListener('popstate',setScale)\r\n            }\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        function setPage() {\r\n            setPageSize(\"a4 portrait\");\r\n        }\r\n        window.addEventListener('popstate',setPage);\r\n\r\n        return function unattach() {\r\n                window.removeEventListener('popstate',setPage)\r\n            }\r\n    },[])\r\n\r\n    function getFormattedDate(date) {\r\n        let currDate=new Date(date)\r\n        \r\n        return (currDate.getFullYear()) + (currDate.getMonth() + 1 <10? '-0'+ (currDate.getMonth()+1):'-'+ (currDate.getMonth()+1)) + (currDate.getDate()<10?\r\n        '-0'+currDate.getDate() : '-'+currDate.getDate());\r\n    }\r\n\r\n    function createLink(string,id) {\r\n        var WIPstring=string.split(' ');\r\n\r\n        WIPstring=WIPstring.map(string=>{\r\n            return string.toLowerCase()\r\n        })\r\n        WIPstring=WIPstring.map(string=>{\r\n            return string[0].toUpperCase().concat(string.substr(1))\r\n        })\r\n\r\n        return WIPstring.join('')+'Item?item='+string.replace(/ /g,'_')+'&id='+encodeURIComponent(id)\r\n    }\r\n\r\n\r\n    function populateResult() {\r\n        const broughtForwardData=resultInput['data'][0];\r\n        const broughtForwardField=resultInput['field'][0];\r\n        const data=resultInput['data'][1];\r\n        const field=resultInput['field'][1];\r\n        const stockNum=field[0].name;\r\n        const description=field[1].name;\r\n        const docNum=field[2].name;\r\n        const docDate=field[3].name;\r\n        const type=field[4].name;\r\n        const IN=field[5].name;\r\n        const OUT=field[6].name;\r\n        const bfQty=broughtForwardField[1].name\r\n\r\n        \r\n        \r\n        function populateStock() {\r\n            const stockAlreadyParsed=[];\r\n            const result=[];\r\n            let balQty=0;\r\n            \r\n            data.forEach(item=>{\r\n                if(stockAlreadyParsed.indexOf(item[stockNum])===-1)  {\r\n                    stockAlreadyParsed.push(item[stockNum]);\r\n                    balQty=broughtForwardData.find(item2=>\r\n                        item2[stockNum]===item[stockNum]\r\n                    )[bfQty];\r\n                    result.push(\r\n                        <div key={item[stockNum]}>\r\n                            <div className='d-flex' style={{cursor:'pointer'}} data-toggle='collapse' data-target={'#'+item[stockNum].replace(/[ ._\\-()]/g,'')}>\r\n                                <i className='fa fa-plus-square mt-1' style={{flex:'0 0 14px',paddingLeft:10,paddingRight:10}}\r\n                                id={'plusminus'+item[stockNum].replace(/[ ._\\-()]/g,'')}></i>\r\n                                <p className='mb-0' style={{flex:'0 0 120px',paddingLeft:10,paddingRight:10}}>{item[stockNum]}</p>\r\n                                <p className='mb-0' style={{flex:'1 0 225px',paddingLeft:10,paddingRight:10}}>{item[description]}</p>\r\n                                <p className='mb-0' style={{flex:'0 0 150px',paddingLeft:10,paddingRight:10}}>\r\n                                    {numberFormatParser(broughtForwardData.find(item2=>\r\n                                        item2[stockNum]===item[stockNum]\r\n                                        )[bfQty]\r\n                                    )}\r\n                                </p>\r\n                                <p className='mb-0' style={{flex:'0 0 150px',paddingLeft:10,paddingRight:10}}>\r\n                                    {numberFormatParser(\r\n                                        broughtForwardData.find(item2=>\r\n                                            item2[stockNum]===item[stockNum]\r\n                                        )[bfQty]+data.reduce((a,b)=>{\r\n                                            if(b[stockNum]===item[stockNum])\r\n                                               return a+b[IN]+b[OUT]\r\n                                            else return a\r\n                                        },0)\r\n                                    )}\r\n                                </p>\r\n                            </div>\r\n                            <div className='collapse navbar-collapse my-2 pl-3 pl-md-5' \r\n                            id={item[stockNum].replace(/[ ._\\-()]/g,'')}>\r\n                                <table className='table table-hover'>\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th className='text-nowrap' style={{cursor:'pointer'}} data-order='asc'\r\n                                            onClick={(e)=>{\r\n                                            const id='docNum'+item[stockNum].replace(/[ ._\\-()]/g,'');\r\n                                            e.target.setAttribute('data-order',\r\n                                            e.target.getAttribute('data-order')==='asc'?'desc':'asc')\r\n\r\n                                            let sortedData={}\r\n                                            sortedData[item[stockNum]]=sortData(resultInput[item[stockNum]],docNum,e.target.getAttribute('data-order'))\r\n                                            changeResultInput(Object.assign({},resultInput,sortedData))\r\n\r\n                                            if (e.target.getAttribute('data-order')==='asc') {\r\n                                                document.getElementById(id).classList.remove('fa-caret-up');\r\n                                                document.getElementById(id).classList.add('fa-caret-down')\r\n                                            }\r\n                                            else {\r\n                                                document.getElementById(id).classList.remove('fa-caret-down');\r\n                                                document.getElementById(id).classList.add('fa-caret-up')\r\n                                            }\r\n                                            }}>\r\n                                                Doc No.\r\n                                                <i id={'docNum'+item[stockNum].replace(/[ ._\\-()]/g,'')} className='fa fa-caret-down ml-2'></i>\r\n                                            </th>\r\n                                            <th className='text-nowrap' style={{cursor:'pointer'}} data-order='asc'\r\n                                            onClick={(e)=>{\r\n                                                const id='date'+item[stockNum].replace(/[ ._\\-()]/g,'');\r\n                                                e.target.setAttribute('data-order',\r\n                                                e.target.getAttribute('data-order')==='asc'?'desc':'asc')\r\n    \r\n                                                let sortedData={}\r\n                                                sortedData[item[stockNum]]=sortData(resultInput[item[stockNum]],docDate,e.target.getAttribute('data-order'))\r\n                                                changeResultInput(Object.assign({},resultInput,sortedData))\r\n    \r\n                                                if (e.target.getAttribute('data-order')==='asc') {\r\n                                                    document.getElementById(id).classList.remove('fa-caret-up');\r\n                                                    document.getElementById(id).classList.add('fa-caret-down')\r\n                                                }\r\n                                                else {\r\n                                                    document.getElementById(id).classList.remove('fa-caret-down');\r\n                                                    document.getElementById(id).classList.add('fa-caret-up')\r\n                                                }\r\n                                            }}>\r\n                                                Date\r\n                                                <i id={'date'+item[stockNum].replace(/[ ._\\-()]/g,'')} className='fa fa-caret-down ml-2'></i>\r\n                                            </th>\r\n                                            <th className='text-nowrap' style={{cursor:'pointer'}} data-order='asc'\r\n                                            onClick={(e)=>{\r\n                                                const id='type'+item[stockNum].replace(/[ ._\\-()]/g,'');\r\n                                                e.target.setAttribute('data-order',\r\n                                                e.target.getAttribute('data-order')==='asc'?'desc':'asc')\r\n    \r\n                                                let sortedData={}\r\n                                                sortedData[item[stockNum]]=sortData(resultInput[item[stockNum]],type,e.target.getAttribute('data-order'))\r\n                                                changeResultInput(Object.assign({},resultInput,sortedData))\r\n    \r\n                                                if (e.target.getAttribute('data-order')==='asc') {\r\n                                                    document.getElementById(id).classList.remove('fa-caret-up');\r\n                                                    document.getElementById(id).classList.add('fa-caret-down')\r\n                                                }\r\n                                                else {\r\n                                                    document.getElementById(id).classList.remove('fa-caret-down');\r\n                                                    document.getElementById(id).classList.add('fa-caret-up')\r\n                                                }\r\n                                                }}>\r\n                                                Type\r\n                                                <i id={'type'+item[stockNum].replace(/[ ._\\-()]/g,'')} className='fa fa-caret-down ml-2'></i>\r\n                                            </th>\r\n                                            <th className='text-nowrap' style={{cursor:'pointer'}} data-order='asc'\r\n                                            onClick={(e)=>{\r\n                                                const id='IN'+item[stockNum].replace(/[ ._\\-()]/g,'');\r\n                                                e.target.setAttribute('data-order',\r\n                                                e.target.getAttribute('data-order')==='asc'?'desc':'asc')\r\n    \r\n                                                let sortedData={}\r\n                                                sortedData[item[stockNum]]=sortData(resultInput[item[stockNum]],IN,e.target.getAttribute('data-order'))\r\n                                                changeResultInput(Object.assign({},resultInput,sortedData))\r\n    \r\n                                                if (e.target.getAttribute('data-order')==='asc') {\r\n                                                    document.getElementById(id).classList.remove('fa-caret-up');\r\n                                                    document.getElementById(id).classList.add('fa-caret-down')\r\n                                                }\r\n                                                else {\r\n                                                    document.getElementById(id).classList.remove('fa-caret-down');\r\n                                                    document.getElementById(id).classList.add('fa-caret-up')\r\n                                                }\r\n                                                }}>\r\n                                                In\r\n                                                <i id={'IN'+item[stockNum].replace(/[ ._\\-()]/g,'')} className='fa fa-caret-down ml-2'></i>\r\n                                            </th>\r\n                                            <th className='text-nowrap' style={{cursor:'pointer'}} data-order='asc'\r\n                                            onClick={(e)=>{\r\n                                                const id='OUT'+item[stockNum].replace(/[ ._\\-()]/g,'');\r\n                                                e.target.setAttribute('data-order',\r\n                                                e.target.getAttribute('data-order')==='asc'?'desc':'asc')\r\n    \r\n                                                let sortedData={}\r\n                                                sortedData[item[stockNum]]=sortData(resultInput[item[stockNum]],OUT,e.target.getAttribute('data-order'))\r\n                                                changeResultInput(Object.assign({},resultInput,sortedData))\r\n    \r\n                                                if (e.target.getAttribute('data-order')==='asc') {\r\n                                                    document.getElementById(id).classList.remove('fa-caret-up');\r\n                                                    document.getElementById(id).classList.add('fa-caret-down')\r\n                                                }\r\n                                                else {\r\n                                                    document.getElementById(id).classList.remove('fa-caret-down');\r\n                                                    document.getElementById(id).classList.add('fa-caret-up')\r\n                                                }\r\n                                                }}>\r\n                                                Out\r\n                                                <i id={'OUT'+item[stockNum].replace(/[ ._\\-()]/g,'')} className='fa fa-caret-down ml-2'></i>\r\n                                            </th>\r\n                                            <th className='text-nowrap'>Bal Qty</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                    {resultInput[item[stockNum]].map(item2=>{\r\n                                        if(item2[stockNum]===item[stockNum]) {\r\n                                            return (\r\n                                                <tr key={item2[docNum]} style={{cursor:'pointer'}} onClick={(e)=>\r\n                                                history.push('./'+createLink(item2[type].toLowerCase(),item2[docNum]))\r\n                                                }>\r\n                                                    <td className='text-nowrap'>{item2[docNum]}</td>\r\n                                                    <td className='text-nowrap'>{dateFormatParser(item2[docDate])}</td>\r\n                                                    <td className='text-nowrap'>{item2[type]}</td>\r\n                                                    <td className='text-nowrap'>{item2[IN]}</td>\r\n                                                    <td className='text-nowrap'>{item2[OUT]}</td>\r\n                                                    <td className='text-nowrap'>{balQty+=item2[IN]+item2[OUT]}</td>\r\n                                                </tr>)\r\n                                        }\r\n                                    })}\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n            })\r\n            return result;\r\n        }\r\n\r\n        return (\r\n            <div className=\"overflow-auto mb-5 pt-3\" style={{transform:'rotateX(180deg)'}}>\r\n                <div style={{minWidth:calculatedWidth,transform:'rotateX(180deg)'}}>\r\n                    <div className='row flex-nowrap text-white bg-secondary pt-2 pb-1' \r\n                    style={{marginLeft:0,marginRight:0,}}>\r\n                        <h6 style={{flex:'0 0 34px',paddingLeft:10,paddingRight:10}}></h6>\r\n                        <h6 style={{flex:'0 0 120px',paddingLeft:10,paddingRight:10,cursor:'pointer'}}\r\n                            data-order='asc' onClick={(e)=>{\r\n                            e.target.setAttribute('data-order',\r\n                            e.target.getAttribute('data-order')==='asc'?'desc':'asc')\r\n                            resultInput['data'][1]=sortData(resultInput['data'][1],stockNum,e.target.getAttribute('data-order'))\r\n                            changeResultInput({...resultInput})\r\n                                if (e.target.getAttribute('data-order')==='asc') {\r\n                                    document.getElementById('stockNo').classList.remove('fa-caret-up');\r\n                                    document.getElementById('stockNo').classList.add('fa-caret-down')\r\n                                }\r\n                                else {\r\n                                    document.getElementById('stockNo').classList.remove('fa-caret-down');\r\n                                    document.getElementById('stockNo').classList.add('fa-caret-up')\r\n                                }\r\n                            }\r\n                                    \r\n                            }>\r\n                            Stock No.\r\n                            <i id='stockNo' className='fa fa-caret-down ml-2'></i>\r\n                        </h6>\r\n                        <h6 style={{flex:'1 0 225px',paddingLeft:10,paddingRight:10,cursor:'pointer'}}\r\n                        data-order='asc' onClick={(e)=>{\r\n                            e.target.setAttribute('data-order',\r\n                            e.target.getAttribute('data-order')==='asc'?'desc':'asc')\r\n                            resultInput['data'][1]=sortData(resultInput['data'][1],description,e.target.getAttribute('data-order'))\r\n                            changeResultInput({...resultInput})\r\n                                if (e.target.getAttribute('data-order')==='asc') {\r\n                                    document.getElementById('description').classList.remove('fa-caret-up');\r\n                                    document.getElementById('description').classList.add('fa-caret-down')\r\n                                }\r\n                                else {\r\n                                    document.getElementById('description').classList.remove('fa-caret-down');\r\n                                    document.getElementById('description').classList.add('fa-caret-up')\r\n                                }\r\n                            }\r\n                            }>\r\n                            Description\r\n                            <i id='description' className='fa fa-caret-down ml-2'></i>\r\n                        </h6>\r\n                        <h6 style={{flex:'0 0 150px',paddingLeft:10,paddingRight:10}}>B/F Qty</h6>\r\n                        <h6 style={{flex:'0 0 150px',paddingLeft:10,paddingRight:10}}>Balance Qty</h6>\r\n                    </div>\r\n                    <div style={{overflowY:'auto',overflowX:'hidden',maxHeight:'60vh'}}>\r\n                        {populateStock()}\r\n                    </div>\r\n                </div>\r\n            </div>)\r\n    }\r\n\r\n    let errorDisplay=null;\r\n\r\n    if ((dataSelectStock && dataSelectStock.error) || errorSelectStock || \r\n    (dataSelectStockCard && dataSelectStockCard.error) || errorSelectStockCard )\r\n    errorDisplay=(\r\n        <div className=\"alert alert-warning\">\r\n            {dataSelectStock && dataSelectStock.error? 'Stock List RETRIEVAL for item failed errno: '+dataSelectStock.error.errno\r\n            +' code: '+dataSelectStock.error.code+' message: '+dataSelectStock.error.sqlMessage:null}\r\n            {errorSelectStock? 'Stock List RETRIEVAL for item failed '+errorSelectStock : null}\r\n            <br/>\r\n            <br/>\r\n            {dataSelectStockCard && dataSelectStockCard.error? 'Stock Card RETRIEVAL for item failed errno: '+dataSelectStockCard.error.errno\r\n            +' code: '+dataSelectStockCard.error.code+' message: '+dataSelectStockCard.error.sqlMessage:null}\r\n            {errorSelectStockCard? 'Stock Card RETRIEVAL for item failed '+errorSelectStockCard : null}\r\n\r\n        </div>\r\n    )\r\n\r\n    return (\r\n        <Switch>\r\n            <Route exact path={`${path}/Preview`}>\r\n                {resultInput? \r\n                (<StockCardOne\r\n                    backPath={StockCardReport.path}\r\n                    description={StockCardReport.description}\r\n                    resultInput={resultInput}\r\n                    withDetails={withDetails}\r\n                    data={sortData(resultInput['dataPreview'][1],sortCriteria,'asc')}\r\n                    dataDetail={sortData(resultInput['dataPreview'][1],detailSortCriteria,'asc')}\r\n                    field={resultInput['field'][1]}\r\n                    broughtForwardData={resultInput['dataPreview'][0]}\r\n                    broughtForwardField={dataSelectStockCard.field[0]}\r\n                    getFormattedDate={getFormattedDate}\r\n                   \r\n                    \r\n                />):<Redirect to={StockCardReport.path}/>}\r\n            </Route>\r\n\r\n            <Route exact path={path}>\r\n                <AppLayout>\r\n                    <div className='container pt-3' style={{paddingLeft:20,paddingRight:20}}>\r\n                        <h3>{StockCardReport.description}</h3>\r\n                        <form className='mt-3' onSubmit={e=>{\r\n                        e.preventDefault();\r\n                        changeGenerateReportWarning(false);\r\n                        changeParamStockCard({\r\n                            url:'./ReportItem',\r\n                            init:{\r\n                                method:'POST',\r\n                                headers:{'Content-Type':'application/json'},\r\n                                body:JSON.stringify({\r\n                                    item:'stock_card',\r\n                                    param:[dateStart,dateEnd,stockID]\r\n                                }),\r\n                                credentials:'include'\r\n                            }\r\n                        })\r\n                        \r\n                        }}>\r\n                            <div className='form-group form-row mx-0'>\r\n                                <label className='col-md-2 col-form-label' style={{paddingLeft:0}} htmlFor='dateStart'>Date Start</label>\r\n                                <input type='date' id='dateStart' required onChange={(e)=>{\r\n                                    if (new Date(e.target.value)>new Date(dateEnd)) {\r\n                                        alert('Invalid Date Start Entry')\r\n                                        changeDateStart(new Date().getFullYear()+'-01-01')\r\n                                    }\r\n                                    else changeDateStart(e.target.value)\r\n                                }} \r\n                                    value={dateStart} required className='form-control col-md-3 mb-3 mb-md-0'/>\r\n                                <label className='offset-md-1 col-md-2 col-form-label' style={{paddingLeft:0}} htmlFor='dateEnd'>Date End</label>\r\n                                <input type='date' id='dateEnd' required onChange={(e)=>{\r\n                                    if (new Date(e.target.value)<new Date(dateStart)) {\r\n                                        alert('Invalid Date End Entry')\r\n                                        changeDateEnd(getFormattedDate(new Date()))\r\n                                    }\r\n                                    else changeDateEnd(e.target.value)\r\n                                }} value={dateEnd} required className='form-control col-md-3 mb-3 mb-md-0'/>\r\n                            </div>\r\n\r\n                            <div className='form-group form-row mx-0'>\r\n                                <label className='col-md-2 col-form-label' style={{paddingLeft:0}} htmlFor='stockID'>Stock ID</label>\r\n                                <select className='form-control col-md-4' required size='3' id='stockID' \r\n                                value={stockID} multiple={true} onChange={e=>{\r\n                                    let result=[];\r\n                                    Array.from(e.target.options).map(option=>{\r\n                                        if (option.selected===true) \r\n                                            result.push(option.value) \r\n                                    })\r\n                                    changeStockID(result);\r\n                                }}>\r\n                                    {stockList}\r\n                                </select>\r\n                            </div>\r\n\r\n                            <div className='form-group form-row mx-0'>\r\n                                <div className='form-check offset-md-2'>\r\n                                    <input type='checkbox' className=' form-check-input' id='allStockID' onChange={e=>{\r\n                                        if (e.target.checked) \r\n                                            changeStockID(dataSelectStock.data.map(data=>\r\n                                                data[dataSelectStock.field[0].name]\r\n                                                ))\r\n                                        else changeStockID([])\r\n                                    }}/>\r\n                                    <label htmlFor='allStockID' style={{paddingLeft:0}} className='form-check-label'>\r\n                                        All Stock ID\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <fieldset className='form-group pl-4 pb-3 border border-secondary rounded col-md-8'>\r\n                                <legend className='col-form-label col-md-6 offset-md-3 col-8 offset-2 text-center'>\r\n                                    <h6>Preview Options</h6>\r\n                                </legend>\r\n                                <div className='form-row'>\r\n                                <div className='form-check col-md-12 form-group col-form-label' style={{paddingLeft:20}}>\r\n                                    <input type='checkbox' className='form-check-input' id='withDetails' onChange={e=>{\r\n                                        if (e.target.checked) \r\n                                            changeWithDetails(true)\r\n                                        else changeWithDetails(false)\r\n                                        }} checked={withDetails}/>\r\n                                    <label htmlFor='withDetails' className='form-check-label'>With Details</label>\r\n                                </div>\r\n\r\n                                <div className='form-group form-row col-md-6'>\r\n                                    <label className='col-md-4 col-form-label' style={{paddingLeft:0}} htmlFor='sort'>\r\n                                        Sort\r\n                                    </label>\r\n                                    <select id='sort' className='form-control col-md-6' value={sortCriteria} onChange={e=>\r\n                                        changeSortCriteria(e.target.value)\r\n                                    }>\r\n                                        <option value=''> -select an option- </option>\r\n                                        {sortCriteriaList}\r\n                                    </select>\r\n                                </div>\r\n\r\n                                <div className='form-group col-md-6 form-row'>\r\n                                    <label className='col-md-4 col-form-label' style={{paddingLeft:0}} htmlFor='sort'>\r\n                                        Detail Sort\r\n                                    </label>\r\n                                    <select id='sort' className='form-control col-md-6' value={detailSortCriteria} onChange={e=>\r\n                                        changeDetailSortCriteria(e.target.value)\r\n                                    }>\r\n                                        <option value=''> -select an option- </option> \r\n                                        {detailSortCriteriaList}\r\n                                    </select>\r\n                                </div>\r\n                                </div>\r\n\r\n                            </fieldset>\r\n\r\n                            <button type='submit' className='btn btn-primary mx-2'>Generate</button>\r\n                            <button type='button' className='btn btn-warning' onClick={e=>\r\n                                changeResultInput(null)}>Clear</button>\r\n                            <button type='button' onClick={(e)=>{\r\n                                if (!resultInput) {\r\n                                    changeGenerateReportWarning(true)\r\n                                }\r\n                                else {\r\n                                    document.querySelector(\"meta[name=viewport]\").setAttribute(\r\n                                    'content','width=device-width, initial-scale=0.4');\r\n                                    setPageSize('a4 landscape')\r\n                                    history.push('./StockCardReport/Preview')\r\n                                }}\r\n                            } \r\n                            className='btn btn-info mx-1 my-1'>Preview</button>\r\n                            {generateReportWarning? \r\n                            (<div className=\"alert alert-warning\">\r\n                                Please generate report first!\r\n                            </div>):null}\r\n                        </form>\r\n                        \r\n                        <hr/>\r\n                        {errorDisplay}\r\n\r\n                        {resultInput? \r\n                        (<div className='mb-5'>\r\n                            <h5 className='py-2'>\r\n                                Result\r\n                                <button className='btn btn-dark mx-2' \r\n                                    onClick={(e)=>collapsibleElementID.forEach(ID=>\r\n                                        $('#'+ID).collapse('show')\r\n                                )}><i className='fa fa-plus-square'></i> Expand</button>\r\n                                <button className='btn btn-light'  \r\n                                    onClick={(e)=>collapsibleElementID.forEach(ID=>\r\n                                        $('#'+ID).collapse('hide')\r\n                                )}> <i className='fa fa-minus-square'></i> Collapse</button>\r\n                            </h5>\r\n                            {populateResult()}\r\n                            \r\n                        </div>):null\r\n                        }\r\n                        <hr className='pb-3'/>\r\n                    </div>\r\n                </AppLayout>\r\n            </Route>\r\n            <Redirect to={StockCardReport.path}/>\r\n        </Switch>\r\n    )\r\n}\r\nStockCardReport.description='Stock Card Report';\r\nStockCardReport.path='/StockCardReport';\r\n\r\nexport default StockCardReport;\r\n","import React,{useState} from 'react';\r\nimport Item from '../Shared/Item';\r\nimport ItemButton from '../Shared/ItemButton';\r\nimport AppLayout from '../Shared/AppLayout';\r\n\r\nfunction StockItem (props) {\r\n\r\n    const url={\r\n        item:new URLSearchParams(props.location.search).get('item'),\r\n        id:new URLSearchParams(props.location.search).get('id'),\r\n    }\r\n    \r\n    const [inputState,changeInputState]=useState(['','','','','','','','','',''])\r\n\r\n    function onChange(value,order) {\r\n        changeInputState([...inputState.slice(0,order),value,...inputState.slice(order+1,inputState.length)])\r\n    }\r\n\r\n    return (\r\n        <Item inputState={inputState} changeInputState={changeInputState} url={url} item='stock' successPath='/StockItemMaintenance'>\r\n            {\r\n            ({usage,disabled,changeDisabled,onInsert,onUpdate,onDelete,errorDisplay,inputNumberRender})=> \r\n            (<AppLayout >\r\n                <div className='container pb-5 px-md-5'>\r\n\r\n                    {/*Heading renders depending on INSERT or UPDATE/DELETE state*/}\r\n\r\n                    <h3 className='my-3'>{(usage==='INSERT'? 'Create':'Update') + ' '+ StockItem.description}</h3>\r\n                    <small className='text-warning'>* required</small>\r\n                    {errorDisplay}\r\n\r\n                    {/*onInsert and onUpdate needs to be attached to HTML form onSubmit eventhandler since native HTML form \r\n                    validation only works if submit event is handled here*/}\r\n\r\n                    <form onSubmit={(e)=>{e.preventDefault(); if(usage==='INSERT') onInsert(); else onUpdate()}}>\r\n                        <div className='form-group form-row'>\r\n                            <label className='col-md-2 col-form-label' htmlFor='itemNumber' >Item Number <span className='text-warning'>*</span></label>\r\n                            {inputNumberRender({\r\n                                onChange:onChange,\r\n                                layout:'col-md-4',\r\n                                position:0,\r\n                                labelID:'itemNumber'\r\n                            })\r\n                            }\r\n                        </div>\r\n                        <div className='form-group form-row'>\r\n                            <label className='col-md-2 col-form-label' htmlFor='description'>Description <span className='text-warning'>*</span></label>\r\n                            <div className='col-md-10'>\r\n                                <textarea id='description' onChange={(e)=>\r\n                                onChange(e.target.value,1)} \r\n                                value={inputState[1]} disabled={disabled} required className='form-control'/>\r\n                            </div>\r\n                        </div>\r\n                        <div className='row'>\r\n                            <fieldset className='form-group col-md-5 mx-3 border border-secondary pb-4 rounded'>\r\n                                <legend className='col-form-label col-4 offset-4 text-center'><h6>Price</h6></legend>\r\n                            \r\n                                <label htmlFor='sellingPrice' className='col-12'>Selling Price:</label>\r\n                                <div className='col-12'>\r\n                                    <input type='number' min='0' step='.01' id='sellingPrice' onChange={(e)=>\r\n                                onChange(e.target.value,2)} \r\n                                value={inputState[2]} disabled={disabled} className='form-control'/>\r\n                                </div>\r\n                                <label  htmlFor='minPrice' className='col-12'>Min Price:</label>\r\n                                <div className='col-12'>\r\n                                    <input type='number' min='0' step='.01' id='minPrice' onChange={(e)=>\r\n                                onChange(e.target.value,3)} \r\n                                value={inputState[3]} disabled={disabled} className='form-control'/>\r\n                                </div>\r\n                                <label  htmlFor='maxPrice' className='col-12'>Max Price:</label>\r\n                                <div className='col-12'>\r\n                                    <input type='number' min='0' step='.01' id='maxPrice' onChange={(e)=>onChange(e.target.value,4)} \r\n                                value={inputState[4]} disabled={disabled} className='form-control'/>\r\n                                </div>\r\n                                <small className='text-warning'>2 decimal places only</small>\r\n                            </fieldset>\r\n                            <fieldset className='form-group col-md-5 mx-3 border border-secondary pb-4 rounded'>\r\n                                <legend className='col-form-label col-4 offset-4 text-center'><h6>Cost</h6></legend>\r\n\r\n                                <label htmlFor='standardCost' className='col-12'>Standard Cost:</label>\r\n                                <div className='col-12'>\r\n                                    <input type='number' min='0' step='.01' id='standardCost' onChange={(e)=>onChange(e.target.value,5)} \r\n                                value={inputState[5]} disabled={disabled} className='form-control'/>\r\n                                </div>\r\n                                <small className='text-warning'>2 decimal places only</small>\r\n                            </fieldset>\r\n                            <fieldset className='form-group col-md-5 mx-3 border border-secondary pb-4 rounded'>\r\n                                <legend className='col-form-label col-4 offset-4 text-center'><h6>Stock Level</h6></legend>\r\n\r\n                                <label htmlFor='minQTY' className='col-12'>Min Quantity(Re-order Level):</label>\r\n                                <div className='col-12'>\r\n                                    <input type='number' min='0' step='1' id='minQTY' onChange={(e)=>onChange(e.target.value,6)} \r\n                                value={inputState[6]} disabled={disabled} className='form-control'/>\r\n                                </div>\r\n                                <label htmlFor='maxQTY' className='col-12'>Max Quantity:</label>\r\n                                <div className='col-12'>\r\n                                    <input type='number' min='0' step='1' id='maxQTY' onChange={(e)=>onChange(e.target.value,7)} \r\n                                value={inputState[7]} disabled={disabled} className='form-control'/>\r\n                                </div>\r\n                                <label htmlFor='balanceQTY' className='col-12'>Balance Quantity: </label>\r\n                                <div className='col-12'>\r\n                                    <input type='number' id='balanceQTY' onChange={(e)=>e} \r\n                                value={inputState[8]} disabled \r\n                                required className='form-control'/>\r\n                                </div>\r\n                            </fieldset>\r\n                        </div>\r\n                        \r\n                        <ItemButton usage={usage} onInsert={onInsert} onUpdate={onUpdate} onDelete={onDelete} changeDisabled={changeDisabled}/>\r\n                        \r\n                        \r\n                        \r\n                    </form>\r\n                </div>\r\n            </AppLayout>)\r\n            }\r\n        \r\n        </Item>\r\n    )\r\n}\r\nStockItem.description='Stock Item';\r\nStockItem.path='/StockItem';\r\n\r\nexport default StockItem;","import React,{useState,useEffect,useContext} from 'react';\r\nimport Item from '../Shared/Item';\r\nimport ItemButton from '../Shared/ItemButton';\r\nimport AppLayout from '../Shared/AppLayout';\r\nimport numberFormatParser from '../Shared/numberFormatParser';\r\nimport dateFormatParser from '../Shared/dateFormatParser';\r\nimport useFetch from '../Shared/useFetch';\r\nimport authContext from '../Shared/authContext';\r\nimport LineRenderQtyOnly from '../Shared/LineRenderQtyOnly';\r\n\r\n\r\n\r\nfunction StockAdjustmentItem (props) {\r\n    const url={\r\n        item:new URLSearchParams(props.location.search).get('item'),\r\n        id:new URLSearchParams(props.location.search).get('id'),\r\n    }\r\n\r\n    const [{data:dataSelectStock,error:errorSelectStock}]=useFetch({\r\n        url:'./SelectItem',\r\n        init:{\r\n            method:'POST',\r\n            headers:{'Content-Type':'application/json'},\r\n            body:JSON.stringify({\r\n                item:'stock',\r\n                param:url.id?[url.id]:null\r\n            }),\r\n            credentials:'include'\r\n        }\r\n    });//extension of Item component\r\n\r\n\r\n    const linePosition=4;\r\n\r\n    const [stockList,changeStockList] = useState(null);\r\n    const [inputState,changeInputState]=useState(['','','','',[]]) \r\n    \r\n    const {changeAuth} = useContext(authContext);\r\n\r\n    useEffect(()=>{\r\n\r\n        if (dataSelectStock && dataSelectStock.auth===false) {\r\n                    alert('Cookies Expired or Authorisation invalid. Please Login again!');\r\n                    changeAuth(false);\r\n                }\r\n        else if (dataSelectStock && dataSelectStock.data && dataSelectStock.field) {\r\n            const stockNum=dataSelectStock.field[0].name;\r\n            const stockDesc=dataSelectStock.field[1].name;\r\n            const stockBalQty=dataSelectStock.field[8].name;\r\n            \r\n            changeStockList(dataSelectStock.data.map(data=>(\r\n                <option key={data[stockNum]} value={data[stockNum]}>\r\n                    {data[stockNum]+' | '\r\n                    + (data[stockDesc]?data[stockDesc]:'')+' | Bal Qty = '\r\n                    + (data[stockBalQty]?data[stockBalQty]:'0')}\r\n                </option>)\r\n                )\r\n            )\r\n        }\r\n    },[dataSelectStock,errorSelectStock])\r\n\r\n    function onChange(value,order) {\r\n        changeInputState([...inputState.slice(0,order),value,...inputState.slice(order+1)])\r\n    }\r\n\r\n    function onChangeStockAdjustmentlineInput(e,order,lineNumber,innerOrder) {\r\n        changeInputState(inputState.slice(0,order)\r\n        .concat([inputState[order].slice(0,lineNumber)\r\n        .concat([inputState[order][lineNumber].slice(0,innerOrder)\r\n        .concat(e)\r\n        .concat(inputState[order][lineNumber].slice(innerOrder+1))])\r\n        .concat(inputState[order].slice(lineNumber+1))])\r\n        .concat(inputState.slice(order+1)))\r\n    }\r\n    \r\n    function calculateTotal() {\r\n        let total=0\r\n        inputState[linePosition].forEach((stockadjustmentlineSet,i)=>{\r\n\r\n            if(inputState[linePosition][i][3]!=='')\r\n             total=total+(parseInt(inputState[linePosition][i][3]))\r\n        })\r\n        return total;\r\n    }\r\n\r\n    function stockAdjustmentlineListRender(disabled) {\r\n        return(\r\n            inputState[linePosition].map((stockAdjustmentlineSet,i)=>\r\n            <div className='row flex-nowrap' style={{marginLeft:0,marginRight:0}} key={i}>\r\n                {/*set fixed flex basis so layout is consistent with h6 header as well*/}\r\n                <label htmlFor='lineNo' className='sr-only'/>\r\n                <input type='number' id='lineNo' className='col form-control rounded-0 text-center' value={inputState[linePosition][i][0]?\r\n                inputState[linePosition][i][0]:''} \r\n                onChange={(e)=>e} style={{flex:'1 0 80px',paddingLeft:10,paddingRight:0}} disabled={disabled}/>\r\n    \r\n                <div className='col input-group' style={{flex:'1 0 120px',paddingLeft:0,paddingRight:0}}>\r\n                    <label htmlFor='itemCode' className='sr-only'/>\r\n                    <input type='text' id ='itemCode' required className='form-control rounded-0' disabled={disabled}\r\n                    style={{paddingLeft:10}}\r\n                    value={inputState[linePosition][i][1]?inputState[linePosition][i][1]:''} onChange={(e)=>e}/>\r\n                    <select className='form-control rounded-0' style={{flex:'0 1 0'}} disabled={disabled} onChange={(e)=>{\r\n                            let stockDescription='';\r\n                            let itemCode=e.target.value\r\n\r\n                            dataSelectStock.data.forEach(data=>{        \r\n                                if(data[dataSelectStock.field[0].name]===e.target.value) {\r\n                                    stockDescription=data[dataSelectStock.field[1].name]?\r\n                                        data[dataSelectStock.field[1].name]:'';\r\n                                }\r\n                            })\r\n    \r\n                            changeInputState(inputState=>inputState.slice(0,linePosition)\r\n                            .concat([inputState[linePosition].slice(0,i)\r\n                            .concat([inputState[linePosition][i].slice(0,1)\r\n                            .concat(itemCode).concat(stockDescription)\r\n                            .concat(inputState[linePosition][i].slice(3))])\r\n                            .concat(inputState[linePosition].slice(i+1))])\r\n                            .concat(inputState.slice(linePosition+1))\r\n                            )\r\n            \r\n                            }}>\r\n                        <option value=''>-select an option- </option>\r\n                        {stockList}\r\n                    </select>\r\n                </div>\r\n                <label htmlFor='description' className='sr-only'/>\r\n                <input type='text' id='description' required className='col form-control rounded-0' value={inputState[linePosition][i][2]?\r\n                inputState[linePosition][i][2]:''} \r\n                onChange={(e)=>e} disabled={disabled}\r\n                style={{flex:'1 0 225px',paddingLeft:10,paddingRight:0}}/>\r\n    \r\n                <label htmlFor='qty' className='sr-only'/>\r\n                <input type='number' required  step='1' min='-1000000' max='1000000' id='qty' required className='col form-control rounded-0' \r\n                value={inputState[linePosition][i][3]} disabled={disabled}\r\n                style={{flex:'1 0 75px',paddingLeft:10,paddingRight:0}}\r\n                onChange={(e)=>onChangeStockAdjustmentlineInput(e.target.value,linePosition,i,3)}/>\r\n    \r\n            </div>)\r\n            )\r\n        }\r\n\r\n    /*error display extension from error display already provided by Item Component*/\r\n    let errorDisplayExtension=null;\r\n    \r\n    \r\n    if ((dataSelectStock && dataSelectStock.error) || errorSelectStock ) \r\n    errorDisplayExtension=(\r\n        <div className=\"alert alert-warning\">\r\n            {dataSelectStock && dataSelectStock.error? 'Stock List RETRIEVAL for item failed errno: '+dataSelectStock.error.errno\r\n            +' code: '+dataSelectStock.error.code+' message: '+dataSelectStock.error.sqlMessage:null}\r\n            {errorSelectStock? 'Stock List RETRIEVAL for item failed '+errorSelectStock : null}\r\n        </div>)\r\n\r\n    \r\n    return (\r\n        <Item inputState={inputState} changeInputState={changeInputState} url={url} item='stock_adjustment' successPath='/StockAdjustment'>\r\n            {\r\n            ({usage,disabled,changeDisabled,onInsert,onUpdate,onDelete,errorDisplay,inputNumberRender})=> \r\n            (<AppLayout >\r\n                <div className='container pb-5 px-md-5'>\r\n\r\n                    {/*Heading renders depending on INSERT or UPDATE/DELETE state*/}\r\n\r\n                    <h3 className='my-3'>{(usage==='INSERT'? 'Create':'Update') + ' '+ StockAdjustmentItem.description}</h3>\r\n                    <small className='text-warning'>* required</small>\r\n                    {errorDisplay}\r\n                    {errorDisplayExtension}\r\n\r\n                    {/*onInsert and onUpdate needs to be attached to HTML form onSubmit eventhandler since native HTML form \r\n                    validation only works if submit event is handled here*/}\r\n                    <form onSubmit={(e)=>{e.preventDefault(); if(usage==='INSERT') onInsert(); else onUpdate()}}>\r\n                        <div className='form-group form-row'>\r\n                            <label className='col-md-2 col-form-label' htmlFor='stockAdjustmentNumber' >Stock Adjustment Number <span className='text-warning'>*</span></label>\r\n                            {inputNumberRender({\r\n                                onChange:onChange,\r\n                                layout:'col-md-4',\r\n                                position:0,\r\n                                labelID:'stockAdjustmentNumber'\r\n                            })\r\n                            }\r\n                        </div>\r\n                        <div className='form-group form-row'>\r\n                            <label className='col-md-2 col-form-label' htmlFor='data'>Date <span className='text-warning'>*</span></label>\r\n                            <div className='col-md-4'>\r\n                                <input type='date' id='date' onChange={(e)=>\r\n                                onChange(e.target.value,1)} value={inputState[1]} disabled={disabled} required className='form-control'/>\r\n                            </div>\r\n                        </div>\r\n                        <div className='form-group form-row'>\r\n                            <label className='col-md-2 col-form-label' htmlFor='description'>Description</label>\r\n                            <div className='col-md-10'>\r\n                                <textarea id='description' onChange={(e)=>\r\n                                onChange(e.target.value,2)} \r\n                                value={inputState[2]} disabled={disabled} className='form-control'/>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        <fieldset className='form-group border border-secondary pb-4 rounded px-3'>\r\n                            <legend className='col-form-label col-12 col-md-6 offset-md-3 text-center' >\r\n                                <button type='button' className='btn btn-primary' disabled={disabled}\r\n                                onClick={()=>\r\n                                    changeInputState(\r\n                                        inputState.slice(0,linePosition)\r\n                                        .concat([inputState[linePosition].slice(0)\r\n                                            .concat(\r\n                                                [[inputState[linePosition].length+1,'','','']])])\r\n                                        .concat(inputState.slice(linePosition+1))\r\n                                    )\r\n                                }>+</button>\r\n                                <h6 className='d-inline-block mx-2 mx-md-4'>Stock Adjustment Line</h6>\r\n                                <button type='button' className='btn btn-secondary' disabled={disabled} \r\n                                onClick={()=>\r\n                                    changeInputState(\r\n                                        inputState.slice(0,linePosition)\r\n                                        .concat([inputState[linePosition].slice(0,inputState[linePosition].length-1)])\r\n                                        .concat(inputState.slice(linePosition+1))\r\n                                    )\r\n                                }>-</button>\r\n                            </legend>\r\n                            <div className=\"overflow-auto\">\r\n                                {/*flex nowrap and overflow auto for mobile view*/}\r\n                                <div className='row flex-nowrap' style={{marginLeft:0,marginRight:0}}>\r\n                                    <h6 className='col' style={{flex:'1 0 80px',paddingLeft:10,paddingRight:10}}>Line No.</h6>\r\n                                    <h6 className='col' style={{flex:'1 0 120px',paddingLeft:10,paddingRight:10}}>Item Code</h6>\r\n                                    <h6 className='col' style={{flex:'1 0 225px',paddingLeft:10,paddingRight:10}}>Description</h6>\r\n                                    <h6 className='col' style={{flex:'1 0 75px',paddingLeft:10,paddingRight:10}}>Qty</h6>\r\n                                </div>\r\n                                {stockAdjustmentlineListRender(disabled)}\r\n                            </div>\r\n                        </fieldset>\r\n                        \r\n                                \r\n                        <h5 className='text-right my-3 col-12'>\r\n                            {'Total: '+numberFormatParser(calculateTotal())}\r\n                        </h5>\r\n\r\n                        \r\n                        <ItemButton usage={usage} onInsert={onInsert} onUpdate={onUpdate} onDelete={onDelete} \r\n                        changeDisabled={changeDisabled}/>\r\n                    </form>\r\n                </div>\r\n            </AppLayout>)}\r\n        \r\n        </Item>\r\n    )\r\n}\r\nStockAdjustmentItem.description='Stock Adjustment';\r\nStockAdjustmentItem.path='/StockAdjustmentItem';\r\n\r\nexport default StockAdjustmentItem;\r\n\r\n","import React from 'react';\r\nimport AppLayout from '../Shared/AppLayout';\r\nimport Process from '../Shared/Process';\r\nimport ProcessLayout from '../Shared/ProcessLayout';\r\n\r\nfunction BankMaintenance(props) {\r\n    return (\r\n            <AppLayout>\r\n                <Process createItemPath='./BankItem' item='bank'\r\n                render={(list)=>{\r\n                    return (\r\n                    <ProcessLayout description={BankMaintenance.description} listname={'Bank'} {...list}/>\r\n                    )}\r\n                }/>\r\n            </AppLayout>\r\n    )\r\n}\r\n                \r\n            \r\n\r\nBankMaintenance.description='Bank Maintenance';\r\nBankMaintenance.path='/BankMaintenance';\r\n\r\nexport default BankMaintenance;","import React from 'react';\r\nimport AppLayout from '../Shared/AppLayout';\r\nimport Process from '../Shared/Process';\r\nimport ProcessLayout from '../Shared/ProcessLayout';\r\n\r\nfunction BankReceipt(props) {\r\n    return (\r\n            <AppLayout>\r\n                <Process createItemPath='./BankReceiptItem' item='bank_receipt'\r\n                render={(list)=>{\r\n                    return (\r\n                    <ProcessLayout description={BankReceipt.description} listname={BankReceipt.description} {...list}/>\r\n                    )}\r\n                }/>\r\n            </AppLayout>\r\n    )\r\n}\r\n                \r\n            \r\n\r\nBankReceipt.description='Bank Receipt';\r\nBankReceipt.path='/BankReceipt';\r\n\r\nexport default BankReceipt;","import React from 'react';\r\nimport AppLayout from '../Shared/AppLayout';\r\nimport Process from '../Shared/Process';\r\nimport ProcessLayout from '../Shared/ProcessLayout';\r\n\r\nfunction BankPayment(props) {\r\n    return (\r\n            <AppLayout>\r\n                <Process createItemPath='./BankPaymentItem' item='bank_payment'\r\n                render={(list)=>{\r\n                    return (\r\n                    <ProcessLayout description={BankPayment.description} listname={BankPayment.description} {...list}/>\r\n                    )}\r\n                }/>\r\n            </AppLayout>\r\n    )\r\n}\r\n                \r\n            \r\n\r\nBankPayment.description='Bank Payment';\r\nBankPayment.path='/BankPayment';\r\n\r\nexport default BankPayment;","import React from 'react';\r\nimport AppLayout from '../Shared/AppLayout';\r\nimport Process from '../Shared/Process';\r\nimport ProcessLayout from '../Shared/ProcessLayout';\r\n\r\nfunction CashReceipt(props) {\r\n    return (\r\n            <AppLayout>\r\n                <Process createItemPath='./CashReceiptItem' item='cash_receipt'\r\n                render={(list)=>{\r\n                    return (\r\n                    <ProcessLayout description={CashReceipt.description} listname={CashReceipt.description} {...list}/>\r\n                    )}\r\n                }/>\r\n            </AppLayout>\r\n    )\r\n}\r\n                \r\n            \r\n\r\nCashReceipt.description='Cash Receipt';\r\nCashReceipt.path='/CashReceipt';\r\n\r\nexport default CashReceipt;","import React from 'react';\r\nimport AppLayout from '../Shared/AppLayout';\r\nimport Process from '../Shared/Process';\r\nimport ProcessLayout from '../Shared/ProcessLayout';\r\n\r\nfunction CashPayment(props) {\r\n    return (\r\n            <AppLayout>\r\n                <Process createItemPath='./CashPaymentItem' item='cash_payment'\r\n                render={(list)=>{\r\n                    return (\r\n                    <ProcessLayout description={CashPayment.description} listname={CashPayment.description} {...list}/>\r\n                    )}\r\n                }/>\r\n            </AppLayout>\r\n    )\r\n}\r\n                \r\n            \r\n\r\nCashPayment.description='Cash Payment';\r\nCashPayment.path='/CashPayment';\r\n\r\nexport default CashPayment;","import React,{useState} from 'react';\r\nimport Item from '../Shared/Item';\r\nimport ItemButton from '../Shared/ItemButton';\r\nimport AppLayout from '../Shared/AppLayout';\r\n\r\nfunction BankItem (props) {\r\n\r\n    const url={\r\n        item:new URLSearchParams(props.location.search).get('item'),\r\n        id:new URLSearchParams(props.location.search).get('id'),\r\n    }\r\n    \r\n    const [inputState,changeInputState]=useState(['','','','','',''])\r\n\r\n    function onChange(value,order) {\r\n        changeInputState([...inputState.slice(0,order),value,...inputState.slice(order+1,inputState.length)])\r\n    }\r\n\r\n    return (\r\n        <Item inputState={inputState} changeInputState={changeInputState} url={url} item='bank' successPath='/BankMaintenance'>\r\n            {\r\n            ({usage,disabled,changeDisabled,onInsert,onUpdate,onDelete,errorDisplay,inputNumberRender})=> \r\n            (<AppLayout >\r\n                <div className='container pb-5 px-md-5'>\r\n\r\n                    {/*Heading renders depending on INSERT or UPDATE/DELETE state*/}\r\n\r\n                    <h3 className='my-3'>{(usage==='INSERT'? 'Create':'Update') + ' '+ BankItem.description}</h3>\r\n                    <small className='text-warning'>* required</small>\r\n                    {errorDisplay}\r\n\r\n                    {/*onInsert and onUpdate needs to be attached to HTML form onSubmit eventhandler since native HTML form \r\n                    validation only works if submit event is handled here*/}\r\n\r\n                    <form onSubmit={(e)=>{e.preventDefault(); if(usage==='INSERT') onInsert(); else onUpdate()}}>\r\n                        <div className='form-group form-row'>\r\n                            <label className='col-md-2 col-form-label' htmlFor='bankCode' >Bank Code <span className='text-warning'>*</span></label>\r\n                            {inputNumberRender({\r\n                                onChange:onChange,\r\n                                layout:'col-md-4',\r\n                                position:0,\r\n                                labelID:'bankCode'\r\n                            })\r\n                            }\r\n                        </div>\r\n                        <div className='form-group form-row'>\r\n                            <label className='col-md-2 col-form-label' htmlFor='bankName'>Bank Name <span className='text-warning'>*</span></label>\r\n                            <div className='col-md-10'>\r\n                                <input type='text' id='bankName' onChange={(e)=>\r\n                                onChange(e.target.value,1)} value={inputState[1]} disabled={disabled} required className='form-control'/>\r\n                            </div>\r\n                        </div>\r\n                        <div className='form-group form-row'>\r\n                            <label className='col-md-2 col-form-label' htmlFor='bankAddress'>Bank Address <span className='text-warning'>*</span></label>\r\n                            <div className='col-md-10'>\r\n                                <textarea id='bankAddress' onChange={(e)=>\r\n                                onChange(e.target.value,2)} \r\n                                value={inputState[2]} disabled={disabled} required className='form-control'/>\r\n                            </div>\r\n                        </div>\r\n                        <div className='form-group form-row'>\r\n                            <label className='col-md-2 col-form-label' htmlFor='bankPostcode'>Bank Postcode <span className='text-warning'>*</span></label>\r\n                            <div className='col-md-4'>\r\n                                <input type='text' maxLength='5' id='bankPostcode' onChange={(e)=>\r\n                                onChange(e.target.value,3)} value={inputState[3]} disabled={disabled} required className='form-control'/>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <ItemButton usage={usage} onInsert={onInsert} onUpdate={onUpdate} onDelete={onDelete} changeDisabled={changeDisabled}/>\r\n                        \r\n                        \r\n                        \r\n                    </form>\r\n                </div>\r\n            </AppLayout>)\r\n            }\r\n        \r\n        </Item>\r\n    )\r\n}\r\nBankItem.description='Bank Item';\r\nBankItem.path='/BankItem';\r\n\r\nexport default BankItem;","import React,{useState,useEffect,useContext} from 'react';\r\nimport Item from '../Shared/Item';\r\nimport ItemButton from '../Shared/ItemButton';\r\nimport AppLayout from '../Shared/AppLayout';\r\nimport useFetch from '../Shared/useFetch';\r\nimport authContext from '../Shared/authContext';\r\nimport OffsetRender from '../Shared/OffsetRender';\r\nimport numberFormatParser from '../Shared/numberFormatParser';\r\n\r\n\r\n\r\nfunction BankReceiptItem (props) {\r\n    const url={\r\n        item:new URLSearchParams(props.location.search).get('item'),\r\n        id:new URLSearchParams(props.location.search).get('id'),\r\n    }\r\n    const [{data:dataSelectDebtor,error:errorSelectDebtor}]=useFetch({\r\n        url:'./SelectItem',\r\n        init:{\r\n            method:'POST',\r\n            headers:{'Content-Type':'application/json'},\r\n            body:JSON.stringify({item:'debtor'}),\r\n            credentials:'include'\r\n            }\r\n    });//extension of Item component\r\n\r\n    const [{data:dataSelectGLCode,error:errorSelectGLCode}]=useFetch({\r\n        url:'./getEligibleGLAccount',\r\n        init:{\r\n            method:'POST',\r\n            headers:{'Content-Type':'application/json'},\r\n            body:JSON.stringify({item:'bank_receipt'}),\r\n            credentials:'include'\r\n        }\r\n    });//extension of Item component\r\n\r\n    const [{data:dataSelectBank,error:errorSelectBank}]=useFetch({\r\n        url:'./SelectItem',\r\n        init:{\r\n            method:'POST',\r\n            headers:{'Content-Type':'application/json'},\r\n            body:JSON.stringify({item:'bank'}),\r\n            credentials:'include'\r\n        }\r\n    });//extension of Item component\r\n\r\n    const [{data:dataSelectDebtorOutstanding,error:errorSelectDebtorOutstanding},changeParamDebtorOutstanding]=useFetch(null);//extension of Item component\r\n\r\n    /*Position of inputState variable used in other components. */\r\n    const debtorNumPosition=2;\r\n    const amountPosition=7;\r\n    const glPosition=8;\r\n    const oldNumPosition=9;\r\n    const offsetPositionSalesInvoice=10;\r\n    const offsetPositionDebitNote=11;\r\n\r\n    /*inputState offset inner positions*/\r\n    const offsetDocNumPosition=0;\r\n    const offsetAmountPosition=1;\r\n\r\n    const offsetDescriptionOne='INVOICE';\r\n    const offsetDescriptionTwo='DEBIT NOTE';\r\n\r\n    const [debtorList,changeDebtorList] = useState(null);\r\n    const [GLCodeList,changeGLCodeList] = useState(null);\r\n    const [bankList,changeBankList] = useState(null);\r\n    const [errorUnappliedAmount,changeErrorUnappliedAmount] = useState(null);\r\n    const [isDebtorPayment,changeIsDebtorPayment] = useState(true);\r\n    const [inputState,changeInputState]=useState(['','','','','','','','','','',[],[]]) \r\n    const {changeAuth} = useContext(authContext);\r\n\r\n    useEffect(()=>{\r\n        \r\n        \r\n        if (dataSelectDebtor && dataSelectDebtor.auth===false) {\r\n                    alert('Cookies Expired or Authorisation invalid. Please Login again!');\r\n                    changeAuth(false);\r\n                }\r\n        else if (dataSelectDebtor && dataSelectDebtor.data && dataSelectDebtor.field) \r\n            changeDebtorList(dataSelectDebtor.data.map(data=>(\r\n            <option key={data[dataSelectDebtor.field[0].name]} value={data[dataSelectDebtor.field[0].name]}>\r\n                {data[dataSelectDebtor.field[0].name]+' | '+(data[dataSelectDebtor.field[1].name]?data[dataSelectDebtor.field[1].name]:'')}\r\n            </option>)\r\n            )\r\n        )\r\n\r\n        if (dataSelectGLCode && dataSelectGLCode.auth===false) {\r\n                    alert('Cookies Expired or Authorisation invalid. Please Login again!');\r\n                    changeAuth(false);\r\n                }\r\n        else if (dataSelectGLCode && dataSelectGLCode.data && dataSelectGLCode.field) \r\n                changeGLCodeList(dataSelectGLCode.data.map(data=>(\r\n                <option key={data[dataSelectGLCode.field[0].name]} value={data[dataSelectGLCode.field[0].name]}>\r\n                    {(data[dataSelectGLCode.field[0].name]?data[dataSelectGLCode.field[0].name]:'')\r\n                    +' | '+(data[dataSelectGLCode.field[1].name]?data[dataSelectGLCode.field[1].name]:'')}\r\n                </option>)\r\n                )\r\n            )\r\n\r\n        if (dataSelectBank && dataSelectBank.auth===false) {\r\n                alert('Cookies Expired or Authorisation invalid. Please Login again!');\r\n                changeAuth(false);\r\n            }\r\n        else if (dataSelectBank && dataSelectBank.data && dataSelectBank.field) \r\n            changeBankList(dataSelectBank.data.map(data=>(\r\n            <option key={data[dataSelectBank.field[0].name]} value={data[dataSelectBank.field[0].name]}>\r\n                {(data[dataSelectBank.field[0].name]?data[dataSelectBank.field[0].name]:'')\r\n                +' | '+(data[dataSelectBank.field[1].name]?data[dataSelectBank.field[1].name]:'')}\r\n            </option>)\r\n            )\r\n        )\r\n        \r\n        if (inputState[glPosition]!=='') {\r\n            changeIsDebtorPayment(false)\r\n        }\r\n\r\n    },[dataSelectDebtor,errorSelectDebtor,dataSelectGLCode,errorSelectGLCode,dataSelectBank,errorSelectBank,inputState[glPosition]])\r\n\r\n    /*have a separate useeffect for debtor outstanding fetch because fetch happens many time during lifecycle of component*/\r\n\r\n    useEffect(()=>{\r\n        if (dataSelectDebtorOutstanding && dataSelectDebtorOutstanding.auth===false) {\r\n            alert('Cookies Expired or Authorisation invalid. Please Login again!');\r\n            changeAuth(false);\r\n        }\r\n    },[dataSelectDebtorOutstanding,errorSelectDebtorOutstanding])\r\n\r\n    function paramDebtorOutstanding(debtorNum,oldNum){\r\n        return {\r\n            url:'./getDebtorOutstanding',\r\n            init:{\r\n                method:'POST',\r\n                headers:{'Content-Type':'application/json'},\r\n                body:JSON.stringify({\r\n                    debtorNum:debtorNum,\r\n                    oldNum:oldNum\r\n                }),\r\n                credentials:'include'\r\n            }\r\n        }\r\n    }\r\n\r\n    function onChange(value,order) {\r\n        changeInputState([...inputState.slice(0,order),value,...inputState.slice(order+1,inputState.length)])\r\n    }\r\n\r\n    function calculateTotal() {\r\n        return +(inputState[amountPosition]);\r\n    }\r\n\r\n    function calculateUnappliedAmount(exclude) {\r\n        \r\n        return inputState[offsetPositionDebitNote].reduce((a,b)=>{\r\n            \r\n            if(exclude===b[offsetDocNumPosition]) {\r\n                return a\r\n            }     \r\n            else return a-b[offsetAmountPosition];\r\n        },inputState[offsetPositionSalesInvoice].reduce((a,b)=>{\r\n            \r\n            if(exclude===b[offsetDocNumPosition]) {\r\n                return a\r\n            }     \r\n            else return a-b[offsetAmountPosition];\r\n        },calculateTotal())\r\n        )\r\n    }\r\n    \r\n    /*error display extension from error display already provided by Item Component*/\r\n    let errorDisplayExtension=null;\r\n    \r\n    if ((dataSelectDebtor && dataSelectDebtor.error) || errorSelectDebtor || (dataSelectGLCode && dataSelectGLCode.error) || errorSelectGLCode \r\n    || (dataSelectBank && dataSelectBank.error) || errorSelectBank || (dataSelectDebtorOutstanding && dataSelectDebtorOutstanding.error) ||\r\n    errorSelectDebtorOutstanding) \r\n    errorDisplayExtension=(\r\n        <div className=\"alert alert-warning\">\r\n            {dataSelectDebtor && dataSelectDebtor.error? 'Debtor List RETRIEVAL for item failed errno: '+dataSelectDebtor.error.errno\r\n            +' code: '+dataSelectDebtor.error.code+' message: '+dataSelectDebtor.error.sqlMessage:null}\r\n            {errorSelectDebtor? 'Debtor List RETRIEVAL for item failed '+errorSelectDebtor : null}\r\n            <br/>\r\n            <br/>\r\n            {dataSelectGLCode && dataSelectGLCode.error? 'GL Code List RETRIEVAL for item failed errno: '+dataSelectGLCode.error.errno\r\n            +' code: '+dataSelectGLCode.error.code+' message: '+dataSelectGLCode.error.sqlMessage:null}\r\n            {errorSelectGLCode? 'GL Code List RETRIEVAL for item failed '+errorSelectGLCode : null}\r\n            <br/>\r\n            <br/>\r\n            {dataSelectBank && dataSelectBank.error? 'Bank List RETRIEVAL for item failed errno: '+dataSelectBank.error.errno\r\n            +' code: '+dataSelectBank.error.code+' message: '+dataSelectBank.error.sqlMessage:null}\r\n            {errorSelectBank? 'Bank List RETRIEVAL for item failed '+errorSelectBank : null}\r\n            <br/>\r\n            <br/>\r\n            {dataSelectDebtorOutstanding && dataSelectDebtorOutstanding.error? 'Debtor Outstanding List RETRIEVAL for item failed errno: '\r\n            + dataSelectDebtorOutstanding.error.errno +' code: '+dataSelectDebtorOutstanding.error.code+' message: '+ \r\n            dataSelectDebtorOutstanding.error.sqlMessage:null}\r\n            {errorSelectDebtorOutstanding? 'Debtor Outstanding List RETRIEVAL for item failed '+errorSelectDebtorOutstanding : null}\r\n        </div>)\r\n    \r\n    return (\r\n        <Item inputState={inputState} changeInputState={changeInputState} url={url} item='bank_receipt' successPath='/BankReceipt'\r\n        paramOutstanding={paramDebtorOutstanding} changeParamOutstanding={changeParamDebtorOutstanding} \r\n        debtorCreditorNumPosition={debtorNumPosition} oldNumPosition={oldNumPosition}>\r\n            {\r\n            ({usage,disabled,changeDisabled,onInsert,onUpdate,onDelete,errorDisplay,inputNumberRender})=> \r\n            (<AppLayout >\r\n                <div className='container pb-5 px-md-5'>\r\n\r\n                    {/*Heading renders depending on INSERT or UPDATE/DELETE state*/}\r\n\r\n                    <h3 className='my-3'>{(usage==='INSERT'? 'Create':'Update') + ' '+ BankReceiptItem.description}</h3>\r\n                    <small className='text-warning'>* required</small>\r\n                    {errorDisplay}\r\n                    {errorDisplayExtension}\r\n\r\n                    {/*onInsert and onUpdate needs to be attached to HTML form onSubmit eventhandler since native HTML form \r\n                    validation only works if submit event is handled here*/}\r\n                    <form onSubmit={(e)=>{\r\n                        e.preventDefault();\r\n                        if (calculateUnappliedAmount()!==0 && isDebtorPayment) {\r\n                            changeErrorUnappliedAmount(\r\n                                (<p className='col-md-12 text-right alert alert-warning mx-3'>\r\n                                    Total not fully offset. Please amend. \r\n                                </p>)\r\n                            )\r\n                        } else {\r\n                            if(usage==='INSERT') onInsert(); \r\n                            else onUpdate()\r\n                        }\r\n                        }}>\r\n                        <div className='form-check'>\r\n                            <input className=\"form-check-input\" type=\"checkbox\" checked={isDebtorPayment} disabled={disabled} id=\"isDebtorPayment\" \r\n                            onChange={(e)=>{\r\n                                changeIsDebtorPayment(!isDebtorPayment);\r\n                                changeInputState([...inputState.slice(0,debtorNumPosition),'',\r\n                                ...inputState.slice(debtorNumPosition+1,glPosition),'',\r\n                                ...inputState.slice(glPosition+1,offsetPositionSalesInvoice),[],[]])\r\n                                }\r\n                            \r\n                            }/>\r\n                            <label className=\"form-check-label\" htmlFor=\"isDebtorPayment\">\r\n                                Debtor Payment?\r\n                            </label>\r\n                        </div>\r\n                        <div className='row'>\r\n                            <fieldset className='form-group form-row col-md-5 mx-3 border border-secondary pb-4 rounded' \r\n                            disabled={disabled? true:!isDebtorPayment}>\r\n                                <legend className='col-form-label col-4 offset-4 text-center' ><h6>Debtor</h6></legend>\r\n                                <label className='mt-3' htmlFor='debtorID' >Debtor ID</label>\r\n                                <div className='input-group'>\r\n                                    <input type='text' id='debtorID' value={inputState[2]} onChange={(e)=>e} required className='form-control' />\r\n                                    <select className='form-control' style={{flex:'0 1 0'}} value={inputState[2]} onChange={(e)=>{\r\n                                    onChange(e.target.value,2)\r\n                                    changeParamDebtorOutstanding(\r\n                                        paramDebtorOutstanding(e.target.value,inputState[oldNumPosition])\r\n                                        )\r\n                                    }}>\r\n                                        <option value=''> -select an option- </option>\r\n                                        {debtorList}\r\n                                    </select>\r\n                                </div>\r\n                            </fieldset>\r\n                            <fieldset className='form-group form-row col-md-5 mx-3 border border-secondary pb-4 rounded' disabled={disabled? true:isDebtorPayment}>\r\n                                <legend className='col-form-label col-4 offset-4 text-center' ><h6>GL Code</h6></legend>\r\n                                <label className='mt-3' htmlFor='glCode' >GL Code</label>\r\n                                <div className='input-group'>\r\n                                    <input type='text' id='glCode' value={inputState[8]} onChange={(e)=>e} required className='form-control' />\r\n                                    <select className='form-control' style={{flex:'0 1 0'}} onChange={(e)=>{\r\n                                    onChange(e.target.value,8)\r\n                                    }}>\r\n                                        <option value=''> -select an option- </option>\r\n                                        {GLCodeList}\r\n                                    </select>\r\n                                </div>\r\n                            </fieldset>\r\n                        \r\n                            <div className='form-group col-md-5 mx-3'>\r\n                                <label htmlFor='documentNumber'>Document Number <span className='text-warning'>*</span></label>\r\n                                {inputNumberRender({\r\n                                    onChange:onChange,\r\n                                    layout:'',\r\n                                    position:0,\r\n                                    labelID:'documentNumber'\r\n                                })\r\n                                }\r\n                            </div>\r\n                    \r\n                            <div className='form-group form-row col-md-5 mx-3'>\r\n                                <label htmlFor='bankCode'>Bank Code <span className='text-warning'>*</span></label>\r\n                                <div className='input-group'>\r\n                                    <input type='text' id='bankCode' value={inputState[1]} onChange={(e)=>e} required className='form-control' \r\n                                    disabled={disabled}/>\r\n                                    <select className='form-control' style={{flex:'0 1 0'}} onChange={(e)=>{\r\n                                    onChange(e.target.value,1)\r\n                                    }}>\r\n                                        <option value=''> -select an option- </option>\r\n                                        {bankList}\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                        \r\n                            \r\n                            <div className='form-group form-row col-md-5 mx-3'>\r\n                                <label htmlFor='date'>Date <span className='text-warning'>*</span></label>\r\n                                <input type='date' disabled={disabled} required value={inputState[3]} onChange={(e)=>onChange(e.target.value,3)} \r\n                                className='form-control'/>\r\n                            </div>\r\n\r\n                            <div className='form-group form-row col-md-5 mx-3'>\r\n                                <label htmlFor='paymentMethod'>Payment Method</label>\r\n                                <input type='text' id='paymentMethod' onChange={(e)=>onChange(e.target.value,4)} value={inputState[4]} \r\n                                disabled={disabled} className='form-control'/>\r\n                            </div>\r\n                        \r\n                            <div className='form-group form-row col-md-5 mx-3'>\r\n                                <label htmlFor='transactionID'>Transaction ID</label>\r\n                                <input type='text' id='transactionID' onChange={(e)=>onChange(e.target.value,5)} value={inputState[5]} \r\n                                disabled={disabled} className='form-control'/>\r\n                            </div>\r\n\r\n                            <div className='form-group form-row col-md-5 mx-3'>\r\n                                <label htmlFor='description' >Description</label>\r\n                                <textarea type='text' id='description' onChange={(e)=>onChange(e.target.value,6)} value={inputState[6]} \r\n                                disabled={disabled} className='form-control'/>\r\n                            </div>\r\n                            \r\n                            <div className='form-group form-row col-md-5 mx-3'>\r\n                                <label htmlFor='amount'>Amount <span className='text-warning'>*</span></label>\r\n                                <input type='number' id='amount' onChange={(e)=>onChange(e.target.value,7)} value={inputState[7]} \r\n                                disabled={disabled} required min='0' step='.01' className='form-control'/>\r\n                            </div>\r\n\r\n                            {isDebtorPayment?\r\n                            (<h6 className='text-right my-4 col-12' style={{paddingRight:30}}>\r\n                                <span className='alert alert-secondary'>{'Unapplied Amount: '+numberFormatParser(calculateUnappliedAmount())}</span>\r\n                            </h6>):null}\r\n                            {errorUnappliedAmount}\r\n\r\n                            {isDebtorPayment?\r\n                                <OffsetRender dataSelectOutstanding={dataSelectDebtorOutstanding} inputState={inputState} \r\n                                changeInputState={changeInputState} disabled={disabled}\r\n                                calculateUnappliedAmount={calculateUnappliedAmount} calculateTotal={calculateTotal}\r\n                                offsetPositionOne={offsetPositionSalesInvoice} offsetPositionTwo={offsetPositionDebitNote}\r\n                                offsetDescriptionOne={offsetDescriptionOne} offsetDescriptionTwo={offsetDescriptionTwo}\r\n                                changeErrorUnappliedAmount={changeErrorUnappliedAmount}\r\n                                offsetDescription={'Sales Invoice / Debit Note'}/>\r\n                            :null}\r\n\r\n                        </div>\r\n                        <ItemButton usage={usage} onInsert={onInsert} onUpdate={onUpdate} onDelete={onDelete} \r\n                        changeDisabled={changeDisabled}/>\r\n                        \r\n\r\n                        \r\n                        \r\n                    </form>\r\n                </div>\r\n            </AppLayout>)\r\n            }\r\n        \r\n        </Item>\r\n    )\r\n}\r\nBankReceiptItem.description='Bank Receipt';\r\nBankReceiptItem.path='/BankReceiptItem';\r\n\r\nexport default BankReceiptItem;\r\n\r\n","import React,{useState,useEffect,useContext} from 'react';\r\nimport Item from '../Shared/Item';\r\nimport ItemButton from '../Shared/ItemButton';\r\nimport AppLayout from '../Shared/AppLayout';\r\nimport useFetch from '../Shared/useFetch';\r\nimport authContext from '../Shared/authContext';\r\nimport OffsetRender from '../Shared/OffsetRender';\r\nimport numberFormatParser from '../Shared/numberFormatParser';\r\n\r\n\r\n\r\nfunction BankPaymentItem (props) {\r\n    const url={\r\n        item:new URLSearchParams(props.location.search).get('item'),\r\n        id:new URLSearchParams(props.location.search).get('id'),\r\n    }\r\n    const [{data:dataSelectCreditor,error:errorSelectCreditor}]=useFetch({\r\n        url:'./SelectItem',\r\n        init:{\r\n            method:'POST',\r\n            headers:{'Content-Type':'application/json'},\r\n            body:JSON.stringify({item:'creditor'}),\r\n            credentials:'include'\r\n        }\r\n    });//extension of Item component\r\n\r\n    const [{data:dataSelectGLCode,error:errorSelectGLCode}]=useFetch({\r\n        url:'./getEligibleGLAccount',\r\n        init:{\r\n            method:'POST',\r\n            headers:{'Content-Type':'application/json'},\r\n            body:JSON.stringify({item:'bank_payment'}),\r\n            credentials:'include'\r\n        }\r\n    });//extension of Item component\r\n\r\n    const [{data:dataSelectBank,error:errorSelectBank},changeParamSelectBank]=useFetch({\r\n        url:'./SelectItem',\r\n        init:{\r\n            method:'POST',\r\n            headers:{'Content-Type':'application/json'},\r\n            body:JSON.stringify({item:'bank'}),\r\n            credentials:'include'\r\n        }\r\n    });//extension of Item component\r\n\r\n    const [{data:dataSelectCreditorOutstanding,error:errorSelectCreditorOutstanding},changeParamCreditorOutstanding]=useFetch(null);//extension of Item component\r\n\r\n    /*Position of inputState variable used in other components. */\r\n    const creditorNumPosition=2;\r\n    const amountPosition=7;\r\n    const glPosition=8;\r\n    const oldNumPosition=9;\r\n    const offsetPositionPurchaseInvoice=10;\r\n    const offsetPositionPurchaseDebitNote=11;\r\n\r\n    /*inputState offset inner positions*/\r\n    const offsetDocNumPosition=0;\r\n    const offsetAmountPosition=1;\r\n\r\n    const offsetDescriptionOne='PURCHASE INVOICE';\r\n    const offsetDescriptionTwo='PURCHASE DEBIT NOTE';\r\n\r\n\r\n    const [creditorList,changeCreditorList] = useState(null);\r\n    const [GLCodeList,changeGLCodeList] = useState(null);\r\n    const [bankList,changeBankList] = useState(null);\r\n    const [errorUnappliedAmount,changeErrorUnappliedAmount] = useState(null);\r\n    const [isCreditorPayment,changeIsCreditorPayment] = useState(true);\r\n    const [inputState,changeInputState]=useState(['','','','','','','','','','',[],[]]) \r\n    const {changeAuth} = useContext(authContext);\r\n\r\n    useEffect(()=>{\r\n\r\n        if (dataSelectCreditor && dataSelectCreditor.auth===false) {\r\n                    alert('Cookies Expired or Authorisation invalid. Please Login again!');\r\n                    changeAuth(false);\r\n                }\r\n        else if (dataSelectCreditor && dataSelectCreditor.data && dataSelectCreditor.field) \r\n            changeCreditorList(dataSelectCreditor.data.map(data=>(\r\n            <option key={data[dataSelectCreditor.field[0].name]} value={data[dataSelectCreditor.field[0].name]}>\r\n                {data[dataSelectCreditor.field[0].name]+' | '+(data[dataSelectCreditor.field[1].name]?data[dataSelectCreditor.field[1].name]:'')}\r\n            </option>)\r\n            )\r\n        )\r\n\r\n         if (dataSelectGLCode && dataSelectGLCode.auth===false) {\r\n                    alert('Cookies Expired or Authorisation invalid. Please Login again!');\r\n                    changeAuth(false);\r\n                }\r\n        else if (dataSelectGLCode && dataSelectGLCode.data && dataSelectGLCode.field) \r\n            \r\n                changeGLCodeList(dataSelectGLCode.data.map(data=>(\r\n                <option key={data[dataSelectGLCode.field[0].name]} value={data[dataSelectGLCode.field[0].name]}>\r\n                    {(data[dataSelectGLCode.field[0].name]?data[dataSelectGLCode.field[0].name]:'')\r\n                    +' | '+(data[dataSelectGLCode.field[1].name]?data[dataSelectGLCode.field[1].name]:'')}\r\n                </option>)\r\n                )\r\n            )\r\n\r\n        \r\n        if (dataSelectBank && dataSelectBank.auth===false) {\r\n                alert('Cookies Expired or Authorisation invalid. Please Login again!');\r\n                changeAuth(false);\r\n            }\r\n        else if (dataSelectBank && dataSelectBank.data && dataSelectBank.field) \r\n            changeBankList(dataSelectBank.data.map(data=>(\r\n            <option key={data[dataSelectBank.field[0].name]} value={data[dataSelectBank.field[0].name]}>\r\n                {(data[dataSelectBank.field[0].name]?data[dataSelectBank.field[0].name]:'')\r\n                +' | '+(data[dataSelectBank.field[1].name]?data[dataSelectBank.field[1].name]:'')}\r\n            </option>)\r\n            )\r\n        )\r\n        \r\n        if (inputState[glPosition]!=='') {\r\n            changeIsCreditorPayment(false)\r\n        }\r\n\r\n    },[dataSelectCreditor,errorSelectCreditor,dataSelectGLCode,errorSelectGLCode,dataSelectBank,errorSelectBank,inputState[glPosition]])\r\n\r\n    /*have a separate useeffect for debtor outstanding fetch because fetch happens many time during lifecycle of component*/\r\n\r\n    useEffect(()=>{\r\n        if (dataSelectCreditorOutstanding && dataSelectCreditorOutstanding.auth===false) {\r\n            alert('Cookies Expired or Authorisation invalid. Please Login again!');\r\n            changeAuth(false);\r\n        }\r\n    },[dataSelectCreditorOutstanding,errorSelectCreditorOutstanding])\r\n\r\n    function paramCreditorOutstanding(creditorNum,oldNum){\r\n        return {\r\n            url:'./getCreditorOutstanding',\r\n            init:{\r\n                method:'POST',\r\n                headers:{'Content-Type':'application/json'},\r\n                body:JSON.stringify({\r\n                    creditorNum:creditorNum,\r\n                    oldNum:oldNum\r\n                }),\r\n                credentials:'include'\r\n            }\r\n        }\r\n    }\r\n\r\n    function onChange(value,order) {\r\n        changeInputState([...inputState.slice(0,order),value,...inputState.slice(order+1,inputState.length)])\r\n    }\r\n\r\n    function calculateTotal() {\r\n        return +(inputState[amountPosition]);\r\n    }\r\n\r\n    function calculateUnappliedAmount(exclude) {\r\n        \r\n        return inputState[offsetPositionPurchaseDebitNote].reduce((a,b)=>{\r\n            \r\n            if(exclude===b[offsetDocNumPosition]) {\r\n                return a\r\n            }     \r\n            else return a-b[offsetAmountPosition];\r\n        },inputState[offsetPositionPurchaseInvoice].reduce((a,b)=>{\r\n            \r\n            if(exclude===b[offsetDocNumPosition]) {\r\n                return a\r\n            }     \r\n            else return a-b[offsetAmountPosition];\r\n        },calculateTotal())\r\n        )\r\n    }\r\n    \r\n    /*error display extension from error display already provided by Item Component*/\r\n    let errorDisplayExtension=null;\r\n    \r\n    if ((dataSelectCreditor && dataSelectCreditor.error) || errorSelectCreditor || (dataSelectGLCode && dataSelectGLCode.error) || errorSelectGLCode \r\n    || (dataSelectBank && dataSelectBank.error) || errorSelectBank || (dataSelectCreditorOutstanding && dataSelectCreditorOutstanding.error) ||\r\n    errorSelectCreditorOutstanding) \r\n    errorDisplayExtension=(\r\n        <div className=\"alert alert-warning\">\r\n            {dataSelectCreditor && dataSelectCreditor.error? 'Creditor List RETRIEVAL for item failed errno: '+dataSelectCreditor.error.errno\r\n            +' code: '+dataSelectCreditor.error.code+' message: '+dataSelectCreditor.error.sqlMessage:null}\r\n            {errorSelectCreditor? 'Creditor List RETRIEVAL for item failed '+errorSelectCreditor : null}\r\n            <br/>\r\n            <br/>\r\n            {dataSelectGLCode && dataSelectGLCode.error? 'GL Code List RETRIEVAL for item failed errno: '+dataSelectGLCode.error.errno\r\n            +' code: '+dataSelectGLCode.error.code+' message: '+dataSelectGLCode.error.sqlMessage:null}\r\n            {errorSelectGLCode? 'GL Code List RETRIEVAL for item failed '+errorSelectGLCode : null}\r\n            <br/>\r\n            <br/>\r\n            {dataSelectBank && dataSelectBank.error? 'Bank List RETRIEVAL for item failed errno: '+dataSelectBank.error.errno\r\n            +' code: '+dataSelectBank.error.code+' message: '+dataSelectBank.error.sqlMessage:null}\r\n            {errorSelectBank? 'Bank List RETRIEVAL for item failed '+errorSelectBank : null}\r\n            <br/>\r\n            <br/>\r\n            {dataSelectCreditorOutstanding && dataSelectCreditorOutstanding.error? 'Creditor Outstanding List RETRIEVAL for item failed errno: '\r\n            + dataSelectCreditorOutstanding.error.errno +' code: '+dataSelectCreditorOutstanding.error.code+' message: '+ \r\n            dataSelectCreditorOutstanding.error.sqlMessage:null}\r\n            {errorSelectCreditorOutstanding? 'Creditor Outstanding List RETRIEVAL for item failed '+errorSelectCreditorOutstanding : null}\r\n        </div>)\r\n\r\n    return (\r\n        <Item inputState={inputState} changeInputState={changeInputState} url={url} item='bank_payment' successPath='/BankPayment'\r\n        paramOutstanding={paramCreditorOutstanding} changeParamOutstanding={changeParamCreditorOutstanding} \r\n        debtorCreditorNumPosition={creditorNumPosition} oldNumPosition={oldNumPosition}>\r\n            {\r\n            ({usage,disabled,changeDisabled,onInsert,onUpdate,onDelete,errorDisplay,inputNumberRender})=> \r\n            (<AppLayout >\r\n                <div className='container pb-5 px-md-5'>\r\n\r\n                    {/*Heading renders depending on INSERT or UPDATE/DELETE state*/}\r\n\r\n                    <h3 className='my-3'>{(usage==='INSERT'? 'Create':'Update') + ' '+ BankPaymentItem.description}</h3>\r\n                    <small className='text-warning'>* required</small>\r\n                    {errorDisplay}\r\n                    {errorDisplayExtension}\r\n\r\n                    {/*onInsert and onUpdate needs to be attached to HTML form onSubmit eventhandler since native HTML form \r\n                    validation only works if submit event is handled here*/}\r\n                    <form onSubmit={(e)=>{e.preventDefault(); \r\n                        if (calculateUnappliedAmount()!==0 && isCreditorPayment) {\r\n                            changeErrorUnappliedAmount(\r\n                                (<p className='col-md-12 text-right alert alert-warning mx-3'>\r\n                                    Total not fully offset. Please amend. \r\n                                </p>)\r\n                            )\r\n                        } else {\r\n                            if(usage==='INSERT') onInsert(); \r\n                            else onUpdate()\r\n                        }\r\n                        }}>\r\n                        <div className='form-check'>\r\n                            <input className=\"form-check-input\" type=\"checkbox\" checked={isCreditorPayment} disabled={disabled} id=\"isCreditorPayment\" \r\n                            onChange={(e)=>{\r\n                                changeIsCreditorPayment(!isCreditorPayment);\r\n                                changeInputState([...inputState.slice(0,creditorNumPosition),'',\r\n                                ...inputState.slice(creditorNumPosition+1,glPosition),'',\r\n                                ...inputState.slice(glPosition+1,offsetPositionPurchaseInvoice),[],[]])\r\n                                }\r\n                            }/>\r\n                            <label className=\"form-check-label\" htmlFor=\"isCreditorPayment\">\r\n                                Creditor Payment?\r\n                            </label>\r\n                        </div>\r\n                        <div className='row'>\r\n                            <fieldset className='form-group form-row col-md-5 mx-3 border border-secondary pb-4 rounded' \r\n                            disabled={disabled? true:!isCreditorPayment}>\r\n                                <legend className='col-form-label col-4 offset-4 text-center' ><h6>Creditor</h6></legend>\r\n                                <label className='mt-3' htmlFor='creditorID' >Creditor ID</label>\r\n                                <div className='input-group'>\r\n                                    <input type='text' id='creditorID' value={inputState[2]} onChange={(e)=>e} required className='form-control' />\r\n                                    <select className='form-control' style={{flex:'0 1 0'}} value={inputState[2]} onChange={(e)=>{\r\n                                    onChange(e.target.value,2)\r\n                                    changeParamCreditorOutstanding(\r\n                                        paramCreditorOutstanding(e.target.value,inputState[oldNumPosition])\r\n                                        )\r\n                                    }}>\r\n                                        <option value=''> -select an option- </option>\r\n                                        {creditorList}\r\n                                    </select>\r\n                                </div>\r\n                            </fieldset>\r\n                            <fieldset className='form-group form-row col-md-5 mx-3 border border-secondary pb-4 rounded' disabled={disabled? true:isCreditorPayment}>\r\n                                <legend className='col-form-label col-4 offset-4 text-center' ><h6>GL Code</h6></legend>\r\n                                <label className='mt-3' htmlFor='glCode' >GL Code</label>\r\n                                <div className='input-group'>\r\n                                    <input type='text' id='glCode' value={inputState[8]} onChange={(e)=>e} required className='form-control' />\r\n                                    <select className='form-control' style={{flex:'0 1 0'}} onChange={(e)=>{\r\n                                    onChange(e.target.value,8)\r\n                                    }}>\r\n                                        <option value=''> -select an option- </option>\r\n                                        {GLCodeList}\r\n                                    </select>\r\n                                </div>\r\n                            </fieldset>\r\n                        \r\n                            <div className='form-group col-md-5 mx-3'>\r\n                                <label htmlFor='documentNumber'>Document Number <span className='text-warning'>*</span></label>\r\n                                {inputNumberRender({\r\n                                    onChange:onChange,\r\n                                    layout:'',\r\n                                    position:0,\r\n                                    labelID:'documentNumber'\r\n                                })\r\n                                }\r\n                            </div>\r\n                    \r\n                            <div className='form-group form-row col-md-5 mx-3'>\r\n                                <label htmlFor='bankCode'>Bank Code <span className='text-warning'>*</span></label>\r\n                                <div className='input-group'>\r\n                                    <input type='text' id='bankCode' value={inputState[1]} onChange={(e)=>e} required className='form-control' \r\n                                    disabled={disabled}/>\r\n                                    <select className='form-control' style={{flex:'0 1 0'}} onChange={(e)=>{\r\n                                    onChange(e.target.value,1)\r\n                                    }}>\r\n                                        <option value=''> -select an option- </option>\r\n                                        {bankList}\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                        \r\n                            \r\n                            <div className='form-group form-row col-md-5 mx-3'>\r\n                                <label htmlFor='date'>Date <span className='text-warning'>*</span></label>\r\n                                <input type='date' disabled={disabled} required value={inputState[3]} onChange={(e)=>onChange(e.target.value,3)} \r\n                                className='form-control'/>\r\n                            </div>\r\n\r\n                            <div className='form-group form-row col-md-5 mx-3'>\r\n                                <label htmlFor='paymentMethod'>Payment Method</label>\r\n                                <input type='text' id='paymentMethod' onChange={(e)=>onChange(e.target.value,4)} value={inputState[4]} \r\n                                disabled={disabled} className='form-control'/>\r\n                            </div>\r\n                        \r\n                            <div className='form-group form-row col-md-5 mx-3'>\r\n                                <label htmlFor='transactionID'>Transaction ID</label>\r\n                                <input type='text' id='transactionID' onChange={(e)=>onChange(e.target.value,5)} value={inputState[5]} \r\n                                disabled={disabled} className='form-control'/>\r\n                            </div>\r\n\r\n                            <div className='form-group form-row col-md-5 mx-3'>\r\n                                <label htmlFor='description' >Description</label>\r\n                                <textarea type='text' id='description' onChange={(e)=>onChange(e.target.value,6)} value={inputState[6]} \r\n                                disabled={disabled} className='form-control'/>\r\n                            </div>\r\n                            \r\n                            <div className='form-group form-row col-md-5 mx-3'>\r\n                                <label htmlFor='amount'>Amount <span className='text-warning'>*</span></label>\r\n                                <input type='number' id='amount' onChange={(e)=>onChange(e.target.value,7)} value={inputState[7]} \r\n                                disabled={disabled} required min='0' step='.01' className='form-control'/>\r\n                            </div>\r\n\r\n                            {isCreditorPayment?\r\n                            (<h6 className='text-right my-4 col-12' style={{paddingRight:30}}>\r\n                                <span className='alert alert-secondary'>{'Unapplied Amount: '+numberFormatParser(calculateUnappliedAmount())}</span>\r\n                            </h6>):null}\r\n                            {errorUnappliedAmount}\r\n\r\n                            {isCreditorPayment?\r\n                            <OffsetRender dataSelectOutstanding={dataSelectCreditorOutstanding} inputState={inputState} \r\n                                changeInputState={changeInputState} disabled={disabled}\r\n                                calculateUnappliedAmount={calculateUnappliedAmount} calculateTotal={calculateTotal}\r\n                                offsetPositionOne={offsetPositionPurchaseInvoice} offsetPositionTwo={offsetPositionPurchaseDebitNote}\r\n                                offsetDescriptionOne={offsetDescriptionOne} offsetDescriptionTwo={offsetDescriptionTwo}\r\n                                changeErrorUnappliedAmount={changeErrorUnappliedAmount}\r\n                                offsetDescription={'Purchase Invoice / Purchase Debit Note'}/>\r\n                            :null}\r\n\r\n                        </div>\r\n                        <ItemButton usage={usage} onInsert={onInsert} onUpdate={onUpdate} onDelete={onDelete} \r\n                        changeDisabled={changeDisabled}/>\r\n                        \r\n                        \r\n                        \r\n                    </form>\r\n                </div>\r\n            </AppLayout>)\r\n            }\r\n        \r\n        </Item>\r\n    )\r\n}\r\nBankPaymentItem.description='Bank Payment';\r\nBankPaymentItem.path='/BankPaymentItem';\r\n\r\nexport default BankPaymentItem;\r\n\r\n","import React,{useState,useEffect,useContext} from 'react';\r\nimport Item from '../Shared/Item';\r\nimport ItemButton from '../Shared/ItemButton';\r\nimport AppLayout from '../Shared/AppLayout';\r\nimport useFetch from '../Shared/useFetch';\r\nimport authContext from '../Shared/authContext';\r\nimport OffsetRender from '../Shared/OffsetRender';\r\nimport numberFormatParser from '../Shared/numberFormatParser';\r\n\r\n\r\nfunction CashReceiptItem (props) {\r\n    const url={\r\n        item:new URLSearchParams(props.location.search).get('item'),\r\n        id:new URLSearchParams(props.location.search).get('id'),\r\n    }\r\n    const [{data:dataSelectDebtor,error:errorSelectDebtor}]=useFetch({\r\n        url:'./SelectItem',\r\n        init:{\r\n            method:'POST',\r\n            headers:{'Content-Type':'application/json'},\r\n            body:JSON.stringify({item:'debtor'}),\r\n            credentials:'include'\r\n        }\r\n    });//extension of Item component\r\n\r\n    const [{data:dataSelectGLCode,error:errorSelectGLCode}]=useFetch({\r\n        url:'./getEligibleGLAccount',\r\n        init:{\r\n            method:'POST',\r\n            headers:{'Content-Type':'application/json'},\r\n            body:JSON.stringify({item:'cash_receipt'}),\r\n            credentials:'include'\r\n        }\r\n    });//extension of Item component\r\n\r\n    const [{data:dataSelectDebtorOutstanding,error:errorSelectDebtorOutstanding},changeParamDebtorOutstanding]=useFetch(null);//extension of Item component\r\n\r\n    /*Position of inputState variable used in other components. */\r\n    const debtorNumPosition=1;\r\n    const amountPosition=6;\r\n    const glPosition=7;\r\n    const oldNumPosition=9;\r\n    const offsetPositionSalesInvoice=10;\r\n    const offsetPositionDebitNote=11;\r\n\r\n    /*inputState offset inner positions*/\r\n    const offsetDocNumPosition=0;\r\n    const offsetAmountPosition=1;\r\n\r\n    const offsetDescriptionOne='INVOICE';\r\n    const offsetDescriptionTwo='DEBIT NOTE';\r\n\r\n    const [debtorList,changeDebtorList] = useState(null);\r\n    const [GLCodeList,changeGLCodeList] = useState(null);\r\n    const [errorUnappliedAmount,changeErrorUnappliedAmount] = useState(null);\r\n    const [isDebtorPayment,changeIsDebtorPayment] = useState(true);\r\n    const [inputState,changeInputState]=useState(['','','','','','','','','','',[],[]]) \r\n    const {changeAuth} = useContext(authContext);\r\n\r\n    useEffect(()=>{\r\n        \r\n        if (dataSelectDebtor && dataSelectDebtor.auth===false) {\r\n                    alert('Cookies Expired or Authorisation invalid. Please Login again!');\r\n                    changeAuth(false);\r\n                }\r\n        else if (dataSelectDebtor && dataSelectDebtor.data && dataSelectDebtor.field) \r\n            changeDebtorList(dataSelectDebtor.data.map(data=>(\r\n            <option key={data[dataSelectDebtor.field[0].name]} value={data[dataSelectDebtor.field[0].name]}>\r\n                {data[dataSelectDebtor.field[0].name]+' | '+(data[dataSelectDebtor.field[1].name]?data[dataSelectDebtor.field[1].name]:'')}\r\n            </option>)\r\n            )\r\n        )\r\n\r\n        if (dataSelectGLCode && dataSelectGLCode.auth===false) {\r\n                    alert('Cookies Expired or Authorisation invalid. Please Login again!');\r\n                    changeAuth(false);\r\n                }\r\n        else if (dataSelectGLCode && dataSelectGLCode.data && dataSelectGLCode.field) \r\n            \r\n                changeGLCodeList(dataSelectGLCode.data.map(data=>(\r\n                <option key={data[dataSelectGLCode.field[0].name]} value={data[dataSelectGLCode.field[0].name]}>\r\n                    {(data[dataSelectGLCode.field[0].name]?data[dataSelectGLCode.field[0].name]:'')\r\n                    +' | '+(data[dataSelectGLCode.field[1].name]?data[dataSelectGLCode.field[1].name]:'')}\r\n                </option>)\r\n                )\r\n            )\r\n        if (inputState[glPosition]!=='') {\r\n            changeIsDebtorPayment(false)\r\n        }\r\n\r\n    },[dataSelectDebtor,errorSelectDebtor,dataSelectGLCode,errorSelectGLCode,inputState[glPosition]])\r\n\r\n    /*have a separate useeffect for debtor outstanding fetch because fetch happens many time during lifecycle of component*/\r\n\r\n    useEffect(()=>{\r\n        if (dataSelectDebtorOutstanding && dataSelectDebtorOutstanding.auth===false) {\r\n            alert('Cookies Expired or Authorisation invalid. Please Login again!');\r\n            changeAuth(false);\r\n        }\r\n    },[dataSelectDebtorOutstanding,errorSelectDebtorOutstanding])\r\n\r\n    function paramDebtorOutstanding(debtorNum,oldNum){\r\n        return {\r\n            url:'./getDebtorOutstanding',\r\n            init:{\r\n                method:'POST',\r\n                headers:{'Content-Type':'application/json'},\r\n                body:JSON.stringify({\r\n                    debtorNum:debtorNum,\r\n                    oldNum:oldNum\r\n                }),\r\n                credentials:'include'\r\n            }\r\n        }\r\n    }\r\n\r\n    function onChange(value,order) {\r\n        changeInputState([...inputState.slice(0,order),value,...inputState.slice(order+1,inputState.length)])\r\n    }\r\n\r\n    function calculateTotal() {\r\n        return +(inputState[amountPosition]);\r\n    }\r\n\r\n    function calculateUnappliedAmount(exclude) {\r\n        \r\n        return inputState[offsetPositionDebitNote].reduce((a,b)=>{\r\n            \r\n            if(exclude===b[offsetDocNumPosition]) {\r\n                return a\r\n            }     \r\n            else return a-b[offsetAmountPosition];\r\n        },inputState[offsetPositionSalesInvoice].reduce((a,b)=>{\r\n            \r\n            if(exclude===b[offsetDocNumPosition]) {\r\n                return a\r\n            }     \r\n            else return a-b[offsetAmountPosition];\r\n        },calculateTotal())\r\n        )\r\n    }\r\n    \r\n    /*error display extension from error display already provided by Item Component*/\r\n    let errorDisplayExtension=null;\r\n    \r\n    if ((dataSelectDebtor && dataSelectDebtor.error) || errorSelectDebtor || (dataSelectGLCode && dataSelectGLCode.error) || errorSelectGLCode \r\n    || (dataSelectDebtorOutstanding && dataSelectDebtorOutstanding.error) || errorSelectDebtorOutstanding) \r\n    errorDisplayExtension=(\r\n        <div className=\"alert alert-warning\">\r\n            {dataSelectDebtor && dataSelectDebtor.error? 'Debtor List RETRIEVAL for item failed errno: '+dataSelectDebtor.error.errno\r\n            +' code: '+dataSelectDebtor.error.code+' message: '+dataSelectDebtor.error.sqlMessage:null}\r\n            {errorSelectDebtor? 'Debtor List RETRIEVAL for item failed '+errorSelectDebtor : null}\r\n            <br/>\r\n            <br/>\r\n            {dataSelectGLCode && dataSelectGLCode.error? 'GL Code List RETRIEVAL for item failed errno: '+dataSelectGLCode.error.errno\r\n            +' code: '+dataSelectGLCode.error.code+' message: '+dataSelectGLCode.error.sqlMessage:null}\r\n            {errorSelectGLCode? 'GL Code List RETRIEVAL for item failed '+errorSelectGLCode : null}\r\n            <br/>\r\n            <br/>\r\n            {dataSelectDebtorOutstanding && dataSelectDebtorOutstanding.error? 'Debtor Outstanding List RETRIEVAL for item failed errno: '\r\n            + dataSelectDebtorOutstanding.error.errno +' code: '+dataSelectDebtorOutstanding.error.code+' message: '+ \r\n            dataSelectDebtorOutstanding.error.sqlMessage:null}\r\n            {errorSelectDebtorOutstanding? 'Debtor Outstanding List RETRIEVAL for item failed '+errorSelectDebtorOutstanding : null}\r\n        </div>)\r\n\r\n    return (\r\n        <Item inputState={inputState} changeInputState={changeInputState} url={url} item='cash_receipt' successPath='/CashReceipt'\r\n            paramOutstanding={paramDebtorOutstanding} changeParamOutstanding={changeParamDebtorOutstanding} \r\n            debtorCreditorNumPosition={debtorNumPosition} oldNumPosition={oldNumPosition}>\r\n            {\r\n            ({usage,disabled,changeDisabled,onInsert,onUpdate,onDelete,errorDisplay,inputNumberRender})=> \r\n            (<AppLayout >\r\n                <div className='container pb-5 px-md-5'>\r\n\r\n                    {/*Heading renders depending on INSERT or UPDATE/DELETE state*/}\r\n\r\n                    <h3 className='my-3'>{(usage==='INSERT'? 'Create':'Update') + ' '+ CashReceiptItem.description}</h3>\r\n                    <small className='text-warning'>* required</small>\r\n                    {errorDisplay}\r\n                    {errorDisplayExtension}\r\n\r\n                    {/*onInsert and onUpdate needs to be attached to HTML form onSubmit eventhandler since native HTML form \r\n                    validation only works if submit event is handled here*/}\r\n                    <form onSubmit={(e)=>{\r\n                        e.preventDefault(); \r\n\r\n                        if (calculateUnappliedAmount()!==0 && isDebtorPayment) {\r\n                            changeErrorUnappliedAmount(\r\n                                (<p className='col-md-12 text-right alert alert-warning mx-3'>\r\n                                    Total not fully offset. Please amend. \r\n                                </p>)\r\n                            )\r\n                        } else {\r\n                            if(usage==='INSERT') onInsert(); \r\n                            else onUpdate()\r\n                        }\r\n                        }}>\r\n                        <div className='form-check'>\r\n                            <input className=\"form-check-input\" type=\"checkbox\" checked={isDebtorPayment} disabled={disabled} id=\"isDebtorPayment\" \r\n                            onChange={(e)=>{\r\n                                changeIsDebtorPayment(!isDebtorPayment);\r\n                                changeInputState([...inputState.slice(0,debtorNumPosition),'',\r\n                                ...inputState.slice(debtorNumPosition+1,glPosition),'',\r\n                                ...inputState.slice(glPosition+1,offsetPositionSalesInvoice),[],[]])\r\n                                }\r\n                            }/>\r\n                            <label className=\"form-check-label\" htmlFor=\"isDebtorPayment\">\r\n                                Debtor Payment?\r\n                            </label>\r\n                        </div>\r\n                        <div className='row'>\r\n                            <fieldset className='form-group form-row col-md-5 mx-3 border border-secondary pb-4 rounded' \r\n                            disabled={disabled? true:!isDebtorPayment}>\r\n                                <legend className='col-form-label col-4 offset-4 text-center' ><h6>Debtor</h6></legend>\r\n                                <label className='mt-3' htmlFor='debtorID' >Debtor ID</label>\r\n                                <div className='input-group'>\r\n                                    <input type='text' id='debtorID' value={inputState[1]} onChange={(e)=>e} required className='form-control' />\r\n                                    <select className='form-control' style={{flex:'0 1 0'}} value={inputState[1]} onChange={(e)=>{\r\n                                    onChange(e.target.value,1)\r\n                                    changeParamDebtorOutstanding(\r\n                                        paramDebtorOutstanding(e.target.value,inputState[oldNumPosition])\r\n                                        )\r\n                                    }}>\r\n                                        <option value=''> -select an option- </option>\r\n                                        {debtorList}\r\n                                    </select>\r\n                                </div>\r\n                            </fieldset>\r\n                            <fieldset className='form-group form-row col-md-5 mx-3 border border-secondary pb-4 rounded' disabled={disabled? true:isDebtorPayment}>\r\n                                <legend className='col-form-label col-4 offset-4 text-center' ><h6>GL Code</h6></legend>\r\n                                <label className='mt-3' htmlFor='glCode' >GL Code</label>\r\n                                <div className='input-group'>\r\n                                    <input type='text' id='glCode' value={inputState[7]} onChange={(e)=>e} required className='form-control' />\r\n                                    <select className='form-control' style={{flex:'0 1 0'}} onChange={(e)=>{\r\n                                    onChange(e.target.value,7)\r\n                                    }}>\r\n                                        <option value=''> -select an option- </option>\r\n                                        {GLCodeList}\r\n                                    </select>\r\n                                </div>\r\n                            </fieldset>\r\n                        \r\n                            <div className='form-group col-md-5 mx-3'>\r\n                                <label htmlFor='documentNumber'>Document Number <span className='text-warning'>*</span></label>\r\n                                {inputNumberRender({\r\n                                    onChange:onChange,\r\n                                    layout:'',\r\n                                    position:0,\r\n                                    labelID:'documentNumber'\r\n                                })\r\n                                }\r\n                            </div>\r\n                        \r\n                            \r\n                            <div className='form-group form-row col-md-5 mx-3'>\r\n                                <label htmlFor='date'>Date <span className='text-warning'>*</span></label>\r\n                                <input type='date' disabled={disabled} required value={inputState[2]} onChange={(e)=>onChange(e.target.value,2)} \r\n                                className='form-control'/>\r\n                            </div>\r\n\r\n                            <div className='form-group form-row col-md-5 mx-3'>\r\n                                <label htmlFor='paymentMethod'>Payment Method</label>\r\n                                <input type='text' id='paymentMethod' onChange={(e)=>onChange(e.target.value,3)} value={inputState[3]} \r\n                                disabled={disabled} className='form-control'/>\r\n                            </div>\r\n                        \r\n                            <div className='form-group form-row col-md-5 mx-3'>\r\n                                <label htmlFor='transactionID'>Transaction ID</label>\r\n                                <input type='text' id='transactionID' onChange={(e)=>onChange(e.target.value,4)} value={inputState[4]} \r\n                                disabled={disabled} className='form-control'/>\r\n                            </div>\r\n\r\n                            <div className='form-group form-row col-md-5 mx-3'>\r\n                                <label htmlFor='description' >Description</label>\r\n                                <textarea type='text' id='description' onChange={(e)=>onChange(e.target.value,5)} value={inputState[5]} \r\n                                disabled={disabled} className='form-control'/>\r\n                            </div>\r\n                            \r\n                            <div className='form-group form-row col-md-5 mx-3'>\r\n                                <label htmlFor='amount'>Amount <span className='text-warning'>*</span></label>\r\n                                <input type='number' id='amount' onChange={(e)=>onChange(e.target.value,6)} value={inputState[6]} \r\n                                disabled={disabled} required min='0' step='.01' className='form-control'/>\r\n                                \r\n                            </div>\r\n\r\n                            {isDebtorPayment?\r\n                            (<h6 className='text-right my-4 col-12' style={{paddingRight:30}}>\r\n                                <span className='alert alert-secondary'>{'Unapplied Amount: '+numberFormatParser(calculateUnappliedAmount())}</span>\r\n                            </h6>):null}\r\n                            {errorUnappliedAmount}\r\n\r\n                            {isDebtorPayment?\r\n                            <OffsetRender dataSelectOutstanding={dataSelectDebtorOutstanding} inputState={inputState} \r\n                                changeInputState={changeInputState} disabled={disabled}\r\n                                calculateUnappliedAmount={calculateUnappliedAmount} calculateTotal={calculateTotal}\r\n                                offsetPositionOne={offsetPositionSalesInvoice} offsetPositionTwo={offsetPositionDebitNote}\r\n                                offsetDescriptionOne={offsetDescriptionOne} offsetDescriptionTwo={offsetDescriptionTwo}\r\n                                changeErrorUnappliedAmount={changeErrorUnappliedAmount}\r\n                                offsetDescription={'Sales Invoice / Debit Note'}/>\r\n                            :null}\r\n\r\n                        </div>\r\n                        <ItemButton usage={usage} onInsert={onInsert} onUpdate={onUpdate} onDelete={onDelete} \r\n                        changeDisabled={changeDisabled}/>\r\n                        \r\n                        \r\n                        \r\n                    </form>\r\n                </div>\r\n            </AppLayout>)\r\n            }\r\n        \r\n        </Item>\r\n    )\r\n}\r\nCashReceiptItem.description='Cash Receipt';\r\nCashReceiptItem.path='/CashReceiptItem';\r\n\r\nexport default CashReceiptItem;\r\n\r\n","import React,{useState,useEffect,useContext} from 'react';\r\nimport Item from '../Shared/Item';\r\nimport ItemButton from '../Shared/ItemButton';\r\nimport AppLayout from '../Shared/AppLayout';\r\nimport useFetch from '../Shared/useFetch';\r\nimport authContext from '../Shared/authContext';\r\nimport OffsetRender from '../Shared/OffsetRender';\r\nimport numberFormatParser from '../Shared/numberFormatParser';\r\n\r\n\r\nfunction CashPaymentItem (props) {\r\n    const url={\r\n        item:new URLSearchParams(props.location.search).get('item'),\r\n        id:new URLSearchParams(props.location.search).get('id'),\r\n    }\r\n    const [{data:dataSelectCreditor,error:errorSelectCreditor},changeParamSelectCreditor]=useFetch({\r\n        url:'./SelectItem',\r\n        init:{\r\n            method:'POST',\r\n            headers:{'Content-Type':'application/json'},\r\n            body:JSON.stringify({item:'creditor'}),\r\n            credentials:'include'\r\n        }\r\n    });//extension of Item component\r\n\r\n    const [{data:dataSelectGLCode,error:errorSelectGLCode},changeParamSelectGLCode]=useFetch({\r\n        url:'./getEligibleGLAccount',\r\n        init:{\r\n            method:'POST',\r\n            headers:{'Content-Type':'application/json'},\r\n            body:JSON.stringify({item:'cash_payment'}),\r\n            credentials:'include'\r\n        }\r\n    });//extension of Item component\r\n\r\n    const [{data:dataSelectCreditorOutstanding,error:errorSelectCreditorOutstanding},changeParamCreditorOutstanding]=useFetch(null);//extension of Item component\r\n\r\n    /*Position of inputState variable used in other components. */\r\n    const creditorNumPosition=1;\r\n    const amountPosition=6;\r\n    const glPosition=7;\r\n    const oldNumPosition=9;\r\n    const offsetPositionPurchaseInvoice=10;\r\n    const offsetPositionPurchaseDebitNote=11;\r\n\r\n    /*inputState offset inner positions*/\r\n    const offsetDocNumPosition=0;\r\n    const offsetAmountPosition=1;\r\n\r\n    const offsetDescriptionOne='PURCHASE INVOICE';\r\n    const offsetDescriptionTwo='PURCHASE DEBIT NOTE';\r\n\r\n    const [creditorList,changeCreditorList] = useState(null);\r\n    const [GLCodeList,changeGLCodeList] = useState(null);\r\n    const [errorUnappliedAmount,changeErrorUnappliedAmount] = useState(null);\r\n    const [isCreditorPayment,changeIsCreditorPayment] = useState(true);\r\n    const [inputState,changeInputState]=useState(['','','','','','','','','','',[],[]]) \r\n    const {changeAuth} = useContext(authContext);\r\n\r\n    useEffect(()=>{\r\n        \r\n        if (dataSelectCreditor && dataSelectCreditor.auth===false) {\r\n                    alert('Cookies Expired or Authorisation invalid. Please Login again!');\r\n                    changeAuth(false);\r\n                }\r\n        else if (dataSelectCreditor && dataSelectCreditor.data && dataSelectCreditor.field) \r\n            changeCreditorList(dataSelectCreditor.data.map(data=>(\r\n            <option key={data[dataSelectCreditor.field[0].name]} value={data[dataSelectCreditor.field[0].name]}>\r\n                {data[dataSelectCreditor.field[0].name]+' | '+(data[dataSelectCreditor.field[1].name]?data[dataSelectCreditor.field[1].name]:'')}\r\n            </option>)\r\n            )\r\n        )\r\n\r\n        if (dataSelectGLCode && dataSelectGLCode.auth===false) {\r\n                    alert('Cookies Expired or Authorisation invalid. Please Login again!');\r\n                    changeAuth(false);\r\n                }\r\n        else if (dataSelectGLCode && dataSelectGLCode.data && dataSelectGLCode.field) \r\n            \r\n                changeGLCodeList(dataSelectGLCode.data.map(data=>(\r\n                <option key={data[dataSelectGLCode.field[0].name]} value={data[dataSelectGLCode.field[0].name]}>\r\n                    {(data[dataSelectGLCode.field[0].name]?data[dataSelectGLCode.field[0].name]:'')\r\n                    +' | '+(data[dataSelectGLCode.field[1].name]?data[dataSelectGLCode.field[1].name]:'')}\r\n                </option>)\r\n                )\r\n            )\r\n        \r\n        if (inputState[glPosition]!=='') {\r\n            changeIsCreditorPayment(false)\r\n        }\r\n\r\n    },[dataSelectCreditor,errorSelectCreditor,dataSelectGLCode,errorSelectGLCode,inputState[glPosition]])\r\n\r\n    /*have a separate useeffect for debtor outstanding fetch because fetch happens many time during lifecycle of component*/\r\n\r\n    useEffect(()=>{\r\n        if (dataSelectCreditorOutstanding && dataSelectCreditorOutstanding.auth===false) {\r\n            alert('Cookies Expired or Authorisation invalid. Please Login again!');\r\n            changeAuth(false);\r\n        }\r\n    },[dataSelectCreditorOutstanding,errorSelectCreditorOutstanding])\r\n\r\n    function paramCreditorOutstanding(creditorNum,oldNum){\r\n        return {\r\n            url:'./getCreditorOutstanding',\r\n            init:{\r\n                method:'POST',\r\n                headers:{'Content-Type':'application/json'},\r\n                body:JSON.stringify({\r\n                    creditorNum:creditorNum,\r\n                    oldNum:oldNum\r\n                }),\r\n                credentials:'include'\r\n            }\r\n        }\r\n    }\r\n\r\n    function onChange(value,order) {\r\n        changeInputState([...inputState.slice(0,order),value,...inputState.slice(order+1,inputState.length)])\r\n    }\r\n\r\n    function calculateTotal() {\r\n        return +(inputState[amountPosition]);\r\n    }\r\n\r\n    function calculateUnappliedAmount(exclude) {\r\n        return inputState[offsetPositionPurchaseDebitNote].reduce((a,b)=>{\r\n            \r\n            if(exclude===b[offsetDocNumPosition]) {\r\n                return a\r\n            }     \r\n            else return a-b[offsetAmountPosition];\r\n        },inputState[offsetPositionPurchaseInvoice].reduce((a,b)=>{\r\n            \r\n            if(exclude===b[offsetDocNumPosition]) {\r\n                return a\r\n            }     \r\n            else return a-b[offsetAmountPosition];\r\n        },calculateTotal())\r\n        )\r\n    }\r\n    \r\n    /*error display extension from error display already provided by Item Component*/\r\n    let errorDisplayExtension=null;\r\n    \r\n    if ((dataSelectCreditor && dataSelectCreditor.error) || errorSelectCreditor || (dataSelectGLCode && dataSelectGLCode.error) \r\n    || errorSelectGLCode || (dataSelectCreditorOutstanding && dataSelectCreditorOutstanding.error) ||\r\n    errorSelectCreditorOutstanding ) \r\n    errorDisplayExtension=(\r\n        <div className=\"alert alert-warning\">\r\n            {dataSelectCreditor && dataSelectCreditor.error? 'Creditor List RETRIEVAL for item failed errno: '+dataSelectCreditor.error.errno\r\n            +' code: '+dataSelectCreditor.error.code+' message: '+dataSelectCreditor.error.sqlMessage:null}\r\n            {errorSelectCreditor? 'Creditor List RETRIEVAL for item failed '+errorSelectCreditor : null}\r\n            <br/>\r\n            <br/>\r\n            {dataSelectGLCode && dataSelectGLCode.error? 'GL Code List RETRIEVAL for item failed errno: '+dataSelectGLCode.error.errno\r\n            +' code: '+dataSelectGLCode.error.code+' message: '+dataSelectGLCode.error.sqlMessage:null}\r\n            {errorSelectGLCode? 'GL Code List RETRIEVAL for item failed '+errorSelectGLCode : null}\r\n            <br/>\r\n            <br/>\r\n            {dataSelectCreditorOutstanding && dataSelectCreditorOutstanding.error? 'Creditor Outstanding List RETRIEVAL for item failed errno: '\r\n            + dataSelectCreditorOutstanding.error.errno +' code: '+dataSelectCreditorOutstanding.error.code+' message: '+ \r\n            dataSelectCreditorOutstanding.error.sqlMessage:null}\r\n            {errorSelectCreditorOutstanding? 'Creditor Outstanding List RETRIEVAL for item failed '+errorSelectCreditorOutstanding : null}\r\n\r\n        </div>)\r\n\r\n    return (\r\n        <Item inputState={inputState} changeInputState={changeInputState} url={url} item='cash_payment' successPath='/CashPayment'\r\n        paramOutstanding={paramCreditorOutstanding} changeParamOutstanding={changeParamCreditorOutstanding} \r\n        debtorCreditorNumPosition={creditorNumPosition} oldNumPosition={oldNumPosition}>\r\n            {\r\n            ({usage,disabled,changeDisabled,onInsert,onUpdate,onDelete,errorDisplay,inputNumberRender})=> \r\n            (<AppLayout >\r\n                <div className='container pb-5 px-md-5'>\r\n\r\n                    {/*Heading renders depending on INSERT or UPDATE/DELETE state*/}\r\n\r\n                    <h3 className='my-3'>{(usage==='INSERT'? 'Create':'Update') + ' '+ CashPaymentItem.description}</h3>\r\n                    <small className='text-warning'>* required</small>\r\n                    {errorDisplay}\r\n                    {errorDisplayExtension}\r\n\r\n                    {/*onInsert and onUpdate needs to be attached to HTML form onSubmit eventhandler since native HTML form \r\n                    validation only works if submit event is handled here*/}\r\n                    <form onSubmit={(e)=>{e.preventDefault(); \r\n                        if (calculateUnappliedAmount()!==0 && isCreditorPayment) {\r\n                            changeErrorUnappliedAmount(\r\n                                (<p className='col-md-12 text-right alert alert-warning mx-3'>\r\n                                    Total not fully offset. Please amend. \r\n                                </p>)\r\n                            )\r\n                        } else {\r\n                            if(usage==='INSERT') onInsert(); \r\n                            else onUpdate()\r\n                        }\r\n                        }}>\r\n                        <div className='form-check'>\r\n                            <input className=\"form-check-input\" type=\"checkbox\" checked={isCreditorPayment} disabled={disabled} id=\"isCreditorPayment\" \r\n                            onChange={(e)=>{\r\n                                changeIsCreditorPayment(!isCreditorPayment);\r\n                                changeInputState([...inputState.slice(0,creditorNumPosition),'',\r\n                                ...inputState.slice(creditorNumPosition+1,glPosition),'',\r\n                                ...inputState.slice(glPosition+1,offsetPositionPurchaseInvoice),[],[]])\r\n                                }\r\n                            }/>\r\n                            <label className=\"form-check-label\" htmlFor=\"isCreditorPayment\">\r\n                                Creditor Payment?\r\n                            </label>\r\n                        </div>\r\n                        <div className='row'>\r\n                            <fieldset className='form-group form-row col-md-5 mx-3 border border-secondary pb-4 rounded' \r\n                            disabled={disabled? true:!isCreditorPayment}>\r\n                                <legend className='col-form-label col-4 offset-4 text-center' ><h6>Creditor</h6></legend>\r\n                                <label className='mt-3' htmlFor='creditorID' >Creditor ID</label>\r\n                                <div className='input-group'>\r\n                                    <input type='text' id='creditorID' value={inputState[1]} onChange={(e)=>e} required className='form-control' />\r\n                                    <select className='form-control' style={{flex:'0 1 0'}} value={inputState[1]} onChange={(e)=>{\r\n                                    onChange(e.target.value,1)\r\n                                    changeParamCreditorOutstanding(\r\n                                        paramCreditorOutstanding(e.target.value,inputState[oldNumPosition])\r\n                                        )\r\n                                    }}>\r\n                                        <option value=''> -select an option- </option>\r\n                                        {creditorList}\r\n                                    </select>\r\n                                </div>\r\n                            </fieldset>\r\n                            <fieldset className='form-group form-row col-md-5 mx-3 border border-secondary pb-4 rounded' disabled={disabled? true:isCreditorPayment}>\r\n                                <legend className='col-form-label col-4 offset-4 text-center' ><h6>GL Code</h6></legend>\r\n                                <label className='mt-3' htmlFor='glCode' >GL Code</label>\r\n                                <div className='input-group'>\r\n                                    <input type='text' id='glCode' value={inputState[7]} onChange={(e)=>e} required className='form-control' />\r\n                                    <select className='form-control' style={{flex:'0 1 0'}} onChange={(e)=>{\r\n                                    onChange(e.target.value,7)\r\n                                    }}>\r\n                                        <option value=''> -select an option- </option>\r\n                                        {GLCodeList}\r\n                                    </select>\r\n                                </div>\r\n                            </fieldset>\r\n                        \r\n                            <div className='form-group col-md-5 mx-3'>\r\n                                <label htmlFor='documentNumber'>Document Number <span className='text-warning'>*</span></label>\r\n                                {inputNumberRender({\r\n                                    onChange:onChange,\r\n                                    layout:'',\r\n                                    position:0,\r\n                                    labelID:'documentNumber'\r\n                                })\r\n                                }\r\n                            </div>\r\n                        \r\n                            \r\n                            <div className='form-group form-row col-md-5 mx-3'>\r\n                                <label htmlFor='date'>Date <span className='text-warning'>*</span></label>\r\n                                <input type='date' disabled={disabled} required value={inputState[2]} onChange={(e)=>onChange(e.target.value,2)} \r\n                                className='form-control'/>\r\n                            </div>\r\n\r\n                            <div className='form-group form-row col-md-5 mx-3'>\r\n                                <label htmlFor='paymentMethod'>Payment Method</label>\r\n                                <input type='text' id='paymentMethod' onChange={(e)=>onChange(e.target.value,3)} value={inputState[3]} \r\n                                disabled={disabled} className='form-control'/>\r\n                            </div>\r\n                        \r\n                            <div className='form-group form-row col-md-5 mx-3'>\r\n                                <label htmlFor='transactionID'>Transaction ID</label>\r\n                                <input type='text' id='transactionID' onChange={(e)=>onChange(e.target.value,4)} value={inputState[4]} \r\n                                disabled={disabled} className='form-control'/>\r\n                            </div>\r\n\r\n                            <div className='form-group form-row col-md-5 mx-3'>\r\n                                <label htmlFor='description' >Description</label>\r\n                                <textarea type='text' id='description' onChange={(e)=>onChange(e.target.value,5)} value={inputState[5]} \r\n                                disabled={disabled} className='form-control'/>\r\n                            </div>\r\n                            \r\n                            <div className='form-group form-row col-md-5 mx-3'>\r\n                                <label htmlFor='amount'>Amount <span className='text-warning'>*</span></label>\r\n                                <input type='number' id='amount' onChange={(e)=>onChange(e.target.value,6)} value={inputState[6]} \r\n                                disabled={disabled} required min='0' step='.01' className='form-control'/>\r\n                                \r\n                            </div>\r\n\r\n                            {isCreditorPayment?\r\n                            (<h6 className='text-right my-4 col-12' style={{paddingRight:30}}>\r\n                                <span className='alert alert-secondary'>{'Unapplied Amount: '+numberFormatParser(calculateUnappliedAmount())}</span>\r\n                            </h6>):null}\r\n                            {errorUnappliedAmount}\r\n\r\n                            {isCreditorPayment?\r\n                                <OffsetRender dataSelectOutstanding={dataSelectCreditorOutstanding} inputState={inputState} \r\n                                changeInputState={changeInputState} disabled={disabled}\r\n                                calculateUnappliedAmount={calculateUnappliedAmount} calculateTotal={calculateTotal}\r\n                                offsetPositionOne={offsetPositionPurchaseInvoice} offsetPositionTwo={offsetPositionPurchaseDebitNote}\r\n                                offsetDescriptionOne={offsetDescriptionOne} offsetDescriptionTwo={offsetDescriptionTwo}\r\n                                changeErrorUnappliedAmount={changeErrorUnappliedAmount}\r\n                                offsetDescription={'Purchase Invoice / Purchase Debit Note'}/>\r\n                            :null}\r\n\r\n                        </div>\r\n                        <ItemButton usage={usage} onInsert={onInsert} onUpdate={onUpdate} onDelete={onDelete} \r\n                        changeDisabled={changeDisabled}/>\r\n                        \r\n                        \r\n                        \r\n                    </form>\r\n                </div>\r\n            </AppLayout>)\r\n            }\r\n        \r\n        </Item>\r\n    )\r\n}\r\nCashPaymentItem.description='Cash Payment';\r\nCashPaymentItem.path='/CashPaymentItem';\r\n\r\nexport default CashPaymentItem;\r\n\r\n","import React from 'react';\r\nimport AppLayout from '../Shared/AppLayout';\r\nimport Process from '../Shared/Process';\r\nimport ProcessLayout from '../Shared/ProcessLayout';\r\n\r\nfunction DebtorMaintenance(props) {\r\n    return (\r\n            <AppLayout>\r\n                <Process createItemPath='./DebtorItem' item='debtor'\r\n                render={(list)=>{\r\n                    return (\r\n                    <ProcessLayout description={DebtorMaintenance.description} listname={'Debtor'} {...list}/>\r\n                    )}\r\n                }/>\r\n            </AppLayout>\r\n    )\r\n}\r\n                \r\n            \r\n\r\nDebtorMaintenance.description='Debtor Maintenance';\r\nDebtorMaintenance.path='/DebtorMaintenance';\r\n\r\nexport default DebtorMaintenance;","import React from 'react';\r\nimport numberFormatParser from '../numberFormatParser';\r\nimport dateFormatParser from '../dateFormatParser';\r\nimport {useHistory} from 'react-router-dom';\r\nimport setPageSize from '../setPageSize';\r\n\r\n/*Layout for Debtor Aging Report and Creditor Aging Report*/\r\n\r\nfunction DebtorCreditorAgingOne(props) {\r\n\r\nconst {currDate,agingMonths}=props.resultInput;\r\nconst history=useHistory();\r\n\r\nfunction populateDebtor(currDate,agingMonths) {\r\n        const data=props.data;\r\n        const dataDetail=props.dataDetail;\r\n        const field=props.field;\r\n        const debtorNum=field[0].name;\r\n        const name=field[1].name;\r\n        const docNum=field[2].name;\r\n        const docDate=field[3].name;\r\n        const type=field[4].name;\r\n        const amount=field[5].name;\r\n        const creditTerm=field[6].name;\r\n\r\n    \r\n        const debtorAlreadyParsed=[];\r\n        const result=[];\r\n\r\n        data.forEach(item=>{\r\n            if(debtorAlreadyParsed.indexOf(item[debtorNum])===-1)  {\r\n                debtorAlreadyParsed.push(item[debtorNum]);\r\n                result.push(\r\n                (<tbody key={item[debtorNum]} className='border-bottom border-secondary'>\r\n                    <tr className='border-top border-secondary'>\r\n                        <th className='align-top'>{item[debtorNum]}</th>\r\n                        <th className='align-top'>{item[name]}</th>\r\n                        {props.withDetails?(<th></th>):null}\r\n                        {props.withDetails?(<th></th>):null}\r\n                        <th className='align-top'>\r\n                            {numberFormatParser(data.reduce((a,b)=>{\r\n                            if(b[debtorNum]===item[debtorNum]) {\r\n                                let value=props.calculateAgingCurrentAmount(\r\n                                    currDate,\r\n                                    b[creditTerm] && b[creditTerm]!=='COD'? \r\n                                        props.getFormattedDate(new Date(new Date(b[docDate])\r\n                                        .setDate(new Date(b[docDate]).getDate()+Number(b[creditTerm])))\r\n                                        ):b[docDate],\r\n                                    b[amount]\r\n                                    )\r\n\r\n                                if (value) {\r\n                                    return a+b[amount];\r\n                                } else return a\r\n                                    \r\n                            }\r\n                            else return a;\r\n                        },0))\r\n                        }</th>\r\n                        {props.populateMonthsAmount(\r\n                            currDate,\r\n                            item[debtorNum],\r\n                            Number(agingMonths),\r\n                            'table'\r\n                        )}\r\n                        <th className='align-top'>\r\n                            {numberFormatParser(data.reduce((a,b)=>{\r\n                            if(b[debtorNum]===item[debtorNum]) {\r\n                                let value=props.calculateAgingRemainderAmount(\r\n                                    currDate,\r\n                                    b[creditTerm] && b[creditTerm]!=='COD'? \r\n                                        props.getFormattedDate(new Date(new Date(b[docDate])\r\n                                        .setDate(new Date(b[docDate]).getDate()+Number(b[creditTerm])))\r\n                                        ):b[docDate],\r\n                                    b[amount],\r\n                                    Number(agingMonths)\r\n                                    )\r\n\r\n                                if (value) {\r\n                                    return a+b[amount];\r\n                                } else return a\r\n                                    \r\n                            }\r\n                            \r\n                            else return a;\r\n                        },0))}</th>\r\n                        <th className='align-top'>\r\n                            {numberFormatParser(\r\n                                data.reduce((a,b)=>{\r\n                                if(b[debtorNum]===item[debtorNum])\r\n                                    return a+b[amount]\r\n                                else return a\r\n                                },0)-\r\n                                data.reduce((a,b)=>{\r\n                                if(b[debtorNum]===item[debtorNum]) {\r\n                                    let value=props.calculateAgingCurrentAmount(\r\n                                        currDate,\r\n                                        b[creditTerm] && b[creditTerm]!=='COD'? \r\n                                            props.getFormattedDate(new Date(new Date(b[docDate])\r\n                                            .setDate(new Date(b[docDate]).getDate()+Number(b[creditTerm])))\r\n                                            ):b[docDate],\r\n                                        b[amount]\r\n                                        )\r\n    \r\n                                    if (value) {\r\n                                        return a+b[amount];\r\n                                    } else return a\r\n                                        \r\n                                }\r\n                                else return a;\r\n                            },0)\r\n                            )}\r\n                            </th>\r\n                        <th className='align-top'>\r\n                            {numberFormatParser(\r\n                                data.reduce((a,b)=>{\r\n                                if(b[debtorNum]===item[debtorNum])\r\n                                    return a+b[amount]\r\n                                else return a\r\n                                },0)\r\n                            )}</th>\r\n                    </tr>\r\n                            \r\n                    {props.withDetails? dataDetail.map((item2,i)=>{\r\n                        if (item2[debtorNum]===item[debtorNum]) \r\n                            return (\r\n                                <tr key={item2[docNum]} >\r\n                                    <td className='align-top'>{item2[docNum]}</td>\r\n                                    <td className='align-top'>{dateFormatParser(item2[docDate])}</td>\r\n                                    <td className='align-top'>{item2[type]}</td>\r\n                                    <td className='align-top'>{\r\n                                        item2[creditTerm] && item2[creditTerm]!=='COD'? \r\n                                        dateFormatParser(props.getFormattedDate(\r\n                                            new Date(new Date(item2[docDate])\r\n                                            .setDate(new Date(item2[docDate]).getDate()+Number(item2[creditTerm]))))\r\n                                        ):dateFormatParser(item2[docDate])\r\n                                    }</td>\r\n                                    <td className='align-top'>{\r\n                                        numberFormatParser(props.calculateAgingCurrentAmount(\r\n                                            currDate,\r\n                                            item2[creditTerm] && item2[creditTerm]!=='COD'? \r\n                                                props.getFormattedDate(new Date(new Date(item2[docDate])\r\n                                                .setDate(new Date(item2[docDate]).getDate()+Number(item2[creditTerm])))\r\n                                                ):item2[docDate],\r\n                                            item2[amount]\r\n                                            ))\r\n                                    }</td>\r\n                                    {props.populateTableMonthsAmount(\r\n                                        currDate,\r\n                                        item2[creditTerm] && item2[creditTerm]!=='COD'? \r\n                                            props.getFormattedDate(new Date(new Date(item2[docDate])\r\n                                            .setDate(new Date(item2[docDate]).getDate()+Number(item2[creditTerm])))\r\n                                            ):item2[docDate],\r\n                                        item2[amount],\r\n                                        Number(agingMonths)\r\n                                    )}\r\n                                    <td className='align-top'>{\r\n                                    numberFormatParser(props.calculateAgingRemainderAmount(\r\n                                        currDate,\r\n                                        item2[creditTerm] && item2[creditTerm]!=='COD'? \r\n                                            props.getFormattedDate(new Date(new Date(item2[docDate])\r\n                                            .setDate(new Date(item2[docDate]).getDate()+Number(item2[creditTerm])))\r\n                                            ):item2[docDate],\r\n                                        item2[amount],\r\n                                        Number(agingMonths)\r\n                                    ))\r\n                                    }</td>\r\n                                    <td className='align-top'/>\r\n                                    <td className='align-top'/>\r\n                                </tr>\r\n                            )\r\n                        else return null; \r\n                        }):null\r\n                    }\r\n                </tbody>)\r\n                )\r\n            } \r\n        })\r\n        return result;\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='container-fluid py-1'>\r\n            <button type='click' className='btn btn-secondary d-print-none mb-2' \r\n                onClick={()=>{\r\n                    document.querySelector(\"meta[name=viewport]\").setAttribute(\r\n                    'content','width=device-width, initial-scale=1.0');\r\n                    setPageSize('a4 portrait');\r\n                    history.push(props.backPath)\r\n            }}>Back</button>\r\n            <h2 className='text-center mb-3'>\r\n                {props.description+' as at '+ (dateFormatParser(props.resultInput['currDate']))}\r\n            </h2>\r\n            <hr className='border border-dark'/>\r\n            <table className='table table-borderless'>\r\n                <thead>\r\n                    <tr className='border-top border-secondary'>\r\n                        <th className='align-top'>Debtor No.</th>\r\n                        <th className='align-top'>Name</th>\r\n                        {props.withDetails?(<th></th>):null}\r\n                        {props.withDetails?(<th></th>):null}\r\n                        <th className='align-top'>Current</th>\r\n                        {props.populateTableMonthsHeader(props.resultInput['agingMonths'])}\r\n                        <th className='align-top'>{'> '+props.resultInput['agingMonths']+' Month'}</th>\r\n                        <th className='align-top'>Total Overdue</th>\r\n                        <th className='align-top'>Balance</th>\r\n                    </tr>\r\n                    \r\n                    {props.withDetails?\r\n                    (<tr className='border-bottom border-secondary text-secondary'>\r\n                        <th className='align-top'>Doc No.</th>\r\n                        <th className='align-top'>Doc Date</th>\r\n                        <th className='align-top'>Type</th>\r\n                        <th className='align-top'>Due Date</th>\r\n                        <th colSpan={4+props.resultInput['agingMonths']}></th>\r\n                    </tr>):null}\r\n                    {props.withDetails?\r\n                    (<tr>\r\n                        <th className='border-bottom border-secondary' colSpan={8+props.resultInput['agingMonths']}></th>\r\n                    </tr>):\r\n                    (<tr>\r\n                        <th className='border-bottom border-top border-secondary' colSpan={6+props.resultInput['agingMonths']}></th>\r\n                    </tr>)}\r\n                    \r\n\r\n                </thead>\r\n                {populateDebtor(currDate,agingMonths)}\r\n            </table>\r\n            <hr className='border border-dark'/>\r\n            <small className='d-block text-center'>End of Report</small>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DebtorCreditorAgingOne;","import React,{useState,useContext,useEffect} from 'react';\r\nimport AppLayout from '../Shared/AppLayout'\r\nimport {\r\n    Switch,\r\n    Route,\r\n    useRouteMatch,\r\n    Redirect\r\n} from 'react-router-dom';\r\nimport useFetch from '../Shared/useFetch';\r\nimport authContext from '../Shared/authContext';\r\nimport {useHistory} from 'react-router-dom';\r\nimport $ from 'jquery'\r\nimport numberFormatParser from '../Shared/numberFormatParser';\r\nimport dateFormatParser from '../Shared/dateFormatParser';\r\nimport sortData from '../Shared/sort';\r\nimport setPageSize from '../Shared/setPageSize';\r\nimport DebtorCreditorAgingOne from '../Shared/preview/DebtorCreditorAgingOne';\r\n\r\nfunction DebtorAgingReport(props) {\r\n    const [{data:dataSelectDebtor,error:errorSelectDebtor}]=useFetch({\r\n        url:'./SelectItem',\r\n        init:{\r\n            method:'POST',\r\n            headers:{'Content-Type':'application/json'},\r\n            body:JSON.stringify({item:'debtor'}),\r\n            credentials:'include'\r\n        }\r\n    });\r\n\r\n    const [{data:dataSelectDebtorAging,error:errorSelectDebtorAging},changeParamDebtorAging]=useFetch(null);\r\n    \r\n    const [debtorList,changeDebtorList] = useState(null);\r\n\r\n    const [currDate,changeCurrDate] = useState (getFormattedDate(new Date()))\r\n    const [debtorID,changeDebtorID] = useState([]);\r\n    const [agingMonths,changeAgingMonths]=useState(3);\r\n    const [resultInput,changeResultInput]=useState(null);\r\n    const [collapsibleElementID,changeCollapsibleElementID]=useState([])\r\n\r\n    /*Preview states*/\r\n    const [withDetails,changeWithDetails]=useState(false);\r\n    const [sortCriteriaList,changeSortCriteriaList]=useState(null);\r\n    const [detailSortCriteriaList,changeDetailSortCriteriaList]=useState(null);\r\n    const [sortCriteria,changeSortCriteria]=useState('');\r\n    const [detailSortCriteria,changeDetailSortCriteria]=useState('');\r\n    const [generateReportWarning,changeGenerateReportWarning]=useState(false);\r\n\r\n    const {path} = useRouteMatch();\r\n    const {changeAuth} = useContext(authContext);\r\n    const history=useHistory();\r\n\r\n    const calculatedWidth=resultInput && resultInput['agingMonths']? 714+resultInput['agingMonths']*90:'auto';\r\n    \r\n    \r\n    useEffect(()=>{\r\n        \r\n        if (dataSelectDebtor && dataSelectDebtor.auth===false) {\r\n                alert('Cookies Expired or Authorisation invalid. Please Login again!');\r\n                changeAuth(false);\r\n            }\r\n        else if (dataSelectDebtor && dataSelectDebtor.data && dataSelectDebtor.field) \r\n            changeDebtorList(dataSelectDebtor.data.map(data=>(\r\n            <option key={data[dataSelectDebtor.field[0].name]} value={data[dataSelectDebtor.field[0].name]}>\r\n                {data[dataSelectDebtor.field[0].name]+' '+(data[dataSelectDebtor.field[1].name]?data[dataSelectDebtor.field[1].name]:'')}\r\n            </option>)\r\n            )\r\n        )\r\n    },[dataSelectDebtor,errorSelectDebtor])\r\n\r\n    useEffect(()=>{\r\n        if (dataSelectDebtorAging && dataSelectDebtorAging.auth===false) {\r\n                alert('Cookies Expired or Authorisation invalid. Please Login again!');\r\n                changeAuth(false);\r\n            }\r\n        else if (dataSelectDebtorAging && dataSelectDebtorAging.data && dataSelectDebtorAging.field) {\r\n            const debtorAlreadyParsed=[];\r\n            const data=dataSelectDebtorAging.data;\r\n            const field=dataSelectDebtorAging.field;\r\n            const debtorNum=field[0].name;\r\n            const name=field[1].name;\r\n            const docNum=field[2].name;\r\n            const docDate=field[3].name;\r\n            const type=field[4].name;\r\n            /*The 3 useState functions below to create a separate data for each debtor to parse for sorting*/\r\n            /*1) reset to a new object with nothing in it because step 2 will have some previous debtor data in it\r\n            which will be combined with new data when refetched*/\r\n            changeResultInput(resultInput=>{})\r\n\r\n            /*2)for each debtor, assign a property name using the debtor num which will be used to parse the \r\n            relevant data for the relevant debtor (and hence can be sorted separately)*/\r\n            data.forEach(item=>{\r\n                let newObject={}\r\n               if(debtorAlreadyParsed.indexOf(item[debtorNum])===-1) {\r\n                    debtorAlreadyParsed.push(item[debtorNum])\r\n                    newObject[item[debtorNum]]=data.filter(item2=>item2[debtorNum]===item[debtorNum])\r\n                    changeResultInput(resultInput=>(Object.assign({},resultInput,newObject)))\r\n               }\r\n            })\r\n            /*3) add remaining input data to resultInput for rendering*/\r\n            changeResultInput(resultInput=>({...resultInput,\r\n                data:dataSelectDebtorAging.data,\r\n                dataPreview:[...dataSelectDebtorAging.data],\r\n                field:dataSelectDebtorAging.field,\r\n                currDate,\r\n                agingMonths\r\n            }))\r\n\r\n            changeSortCriteriaList(\r\n                (<>\r\n                    <option value={debtorNum}>Debtor No.</option>\r\n                    <option value={name}>Name</option>\r\n                </>)\r\n            )\r\n            changeDetailSortCriteriaList(\r\n                (<>\r\n                    <option value={docNum}>Doc No.</option>\r\n                    <option value={docDate}>Doc Date</option>\r\n                    <option value={type}>Type</option>\r\n                </>)\r\n            )\r\n            changeCollapsibleElementID(debtorAlreadyParsed.map(item=>item.replace(/[ ._\\-()]/g,'')))\r\n        }\r\n    },[dataSelectDebtorAging,errorSelectDebtorAging])\r\n    \r\n    //attach bootstrap/jquery eventlisteners and callbacks\r\n    useEffect(()=>{\r\n        if (collapsibleElementID) {\r\n            collapsibleElementID.forEach(ID=>{\r\n                $('#'+ID).on('show.bs.collapse',e=>{\r\n                    if(e.target===e.currentTarget)\r\n                    $('#plusminus'+ID).removeClass('fa-plus-square').addClass('fa-minus-square');\r\n                })\r\n                $('#'+ID).on('hide.bs.collapse',e=>{\r\n                    if(e.target===e.currentTarget)\r\n                    $('#plusminus'+ID).removeClass('fa-minus-square').addClass('fa-plus-square');\r\n                })\r\n                \r\n        })\r\n    }\r\n    },[resultInput])\r\n\r\n    useEffect(()=>{\r\n        function setScale() {\r\n            document.querySelector(\"meta[name=viewport]\").setAttribute(\r\n                'content','width=device-width, initial-scale=1.0');\r\n        }\r\n        window.addEventListener('popstate',setScale)\r\n        \r\n        return function unattach() {\r\n                window.removeEventListener('popstate',setScale)\r\n            }\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        function setPage() {\r\n            setPageSize(\"a4 portrait\");\r\n        }\r\n        window.addEventListener('popstate',setPage);\r\n\r\n        return function unattach() {\r\n                window.removeEventListener('popstate',setPage)\r\n            }\r\n    },[])\r\n\r\n\r\n\r\n    function getFormattedDate(date) {\r\n        let currDate=new Date(date)\r\n        \r\n        return (currDate.getFullYear()) + (currDate.getMonth() + 1 <10? '-0'+ (currDate.getMonth()+1):'-'+ (currDate.getMonth()+1)) + (currDate.getDate()<10?\r\n        '-0'+currDate.getDate() : '-'+currDate.getDate());\r\n    }\r\n\r\n    function populateMonthsHeader(months) {\r\n        let result=[];\r\n        for(let i=1;i<+(months)+1;i++) {\r\n            result.push(\r\n                (<h6 key={i} style={{flex:'1 0 90px',paddingLeft:10,paddingRight:10}}>{i+' Month'}</h6>)\r\n            )\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function populateMonthsAmount(currDate,debtorID,months,type) {\r\n        let result=[];\r\n        const data=resultInput['data'];\r\n        const field=resultInput['field'];\r\n        const debtorNum=field[0].name;\r\n        const docDate=field[3].name;\r\n        const amount=field[5].name;\r\n        const creditTerm=field[6].name;\r\n\r\n        for(let i=1;i<+(months)+1;i++) {\r\n            let monthAmount=data.reduce((a,b)=>{\r\n                if(b[debtorNum]===debtorID) {\r\n                    \r\n                    let value=calculateAgingMonthsAmount(\r\n                        currDate,\r\n                        b[creditTerm] && b[creditTerm]!=='COD'? \r\n                            getFormattedDate(new Date(new Date(b[docDate])\r\n                            .setDate(new Date(b[docDate]).getDate()+Number(b[creditTerm])))\r\n                            ):b[docDate],\r\n                        b[amount],\r\n                        i\r\n                        )\r\n                        \r\n                    if (value) {\r\n                        return a+b[amount];\r\n                    } else return a\r\n                }\r\n                else return a;\r\n            },0)\r\n\r\n            if (type!=='table') \r\n                result.push(\r\n                   (<p className='mb-0' key={i} style={{flex:'1 0 90px',paddingLeft:10,paddingRight:10}}>\r\n                       {monthAmount?numberFormatParser(monthAmount):''}\r\n                   </p>)\r\n                )\r\n            else result.push(\r\n                (<th className='align-top' key={i}>\r\n                    {monthAmount?numberFormatParser(monthAmount):''}\r\n                </th>)\r\n            )\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function populateTableMonthsHeader(months) {\r\n        let result=[];\r\n        for(let i=1;i<+(months)+1;i++) {\r\n            result.push(\r\n                (<th key={i} className='text-nowrap align-top'>{i+' Month'}</th>)\r\n            )\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function populateTableMonthsAmount(currDate,dueDate,amount,months) {\r\n        let result=[];\r\n        for(let i=1;i<+(months)+1;i++) {\r\n            result.push(\r\n                (<td className='text-nowrap align-top' key={i}>\r\n                    {numberFormatParser(calculateAgingMonthsAmount(currDate,dueDate,amount,i))}\r\n                    </td>)\r\n            )\r\n        }\r\n        return result;\r\n    }\r\n    /*aging is calculated based on last day of the month of the due date*/\r\n    function calculateAgingCurrentAmount(currDate,dueDate,amount) {\r\n        /*currDate string from input type date is slightly diff from string date and produce diff result when both string are \r\n        called with Date() object. Hence perform the following to ensure date objects produced from both string are the same.\r\n        Same with all the calculate methods below*/\r\n       currDate=new Date(new Date(currDate).getFullYear(),new Date(currDate).getMonth(),new Date(currDate).getDate(),0)\r\n        \r\n        if (currDate<=new Date(new Date(dueDate).getFullYear(),(new Date(dueDate).getMonth())+1,0)) {\r\n            return amount;\r\n        }\r\n        else return ''\r\n    }\r\n\r\n    function calculateAgingMonthsAmount(currDate,dueDate,amount,agingMonths) {\r\n       currDate=new Date(new Date(currDate).getFullYear(),new Date(currDate).getMonth(),new Date(currDate).getDate(),0)\r\n        \r\n        if (currDate<=new Date(new Date(dueDate).getFullYear(),(new Date(dueDate).getMonth())+1+agingMonths,0)\r\n        && currDate>new Date(new Date(dueDate).getFullYear(),(new Date(dueDate).getMonth())+agingMonths,0))\r\n            return amount;\r\n\r\n        else return ''\r\n    }\r\n\r\n    function calculateAgingRemainderAmount(currDate,dueDate,amount,months) {\r\n       currDate=new Date(new Date(currDate).getFullYear(),new Date(currDate).getMonth(),new Date(currDate).getDate(),0)\r\n \r\n        if (currDate>new Date(new Date(dueDate).getFullYear(),(new Date(dueDate).getMonth())+months+1,0))\r\n            return amount;\r\n        \r\n        else return ''\r\n    }\r\n\r\n    function createLink(string,id) {\r\n        var WIPstring=string.split(' ');\r\n\r\n        WIPstring=WIPstring.map(string=>{\r\n            return string.toLowerCase()\r\n        })\r\n        WIPstring=WIPstring.map(string=>{\r\n            return string[0].toUpperCase().concat(string.substr(1))\r\n        })\r\n\r\n        return WIPstring.join('')+'Item?item='+string.replace(/ /g,'_')+'&id='+encodeURIComponent(id)\r\n    }\r\n\r\n    function populateDebtor(currDate,agingMonths) {\r\n        const data=resultInput['data'];\r\n        const field=resultInput['field'];\r\n        const debtorNum=field[0].name;\r\n        const name=field[1].name;\r\n        const docNum=field[2].name;\r\n        const docDate=field[3].name;\r\n        const type=field[4].name;\r\n        const amount=field[5].name;\r\n        const creditTerm=field[6].name;\r\n\r\n        const debtorAlreadyParsed=[];\r\n        const result=[];\r\n\r\n        data.forEach(item=>{\r\n            if(debtorAlreadyParsed.indexOf(item[debtorNum])===-1)  {\r\n                debtorAlreadyParsed.push(item[debtorNum]);\r\n                result.push(\r\n                (<div key={item[debtorNum]}>\r\n                    <div className='d-flex' style={{cursor:'pointer'}} data-toggle='collapse' data-target={'#'+item[debtorNum].replace(/[ ._\\-()]/g,'')}>\r\n                        <i className='fa fa-plus-square mt-1' style={{flex:'1 0 14px',paddingLeft:10,paddingRight:10}}\r\n                        id={'plusminus'+item[debtorNum].replace(/[ ._\\-()]/g,'')}></i>\r\n                        <p className='mb-0' style={{flex:'1 0 120px',paddingLeft:10,paddingRight:10}}>{item[debtorNum]}</p>\r\n                        <p className='mb-0' style={{flex:'1 0 200px',paddingLeft:10,paddingRight:10}}>{item[name]}</p>\r\n                        <p className='mb-0' style={{flex:'1 0 90px',paddingLeft:10,paddingRight:10}}>\r\n                            {numberFormatParser(data.reduce((a,b)=>{\r\n                            if(b[debtorNum]===item[debtorNum]) {\r\n                                let value=calculateAgingCurrentAmount(\r\n                                    currDate,\r\n                                    b[creditTerm] && b[creditTerm]!=='COD'? \r\n                                        getFormattedDate(new Date(new Date(b[docDate])\r\n                                        .setDate(new Date(b[docDate]).getDate()+Number(b[creditTerm])))\r\n                                        ):b[docDate],\r\n                                    b[amount]\r\n                                    )\r\n\r\n                                if (value) {\r\n                                    return a+b[amount];\r\n                                } else return a\r\n                                    \r\n                            }\r\n                            else return a;\r\n                        },0))\r\n                        }</p>\r\n                        {populateMonthsAmount(\r\n                            currDate,\r\n                            item[debtorNum],\r\n                            Number(agingMonths),\r\n                        )}\r\n                        <p className='mb-0' style={{flex:'1 0 90px',paddingLeft:10,paddingRight:10}}>\r\n                            {numberFormatParser(data.reduce((a,b)=>{\r\n                            if(b[debtorNum]===item[debtorNum]  ) {\r\n                                let value=calculateAgingRemainderAmount(\r\n                                    currDate,\r\n                                    b[creditTerm] && b[creditTerm]!=='COD'? \r\n                                        getFormattedDate(new Date(new Date(b[docDate])\r\n                                        .setDate(new Date(b[docDate]).getDate()+Number(b[creditTerm])))\r\n                                        ):b[docDate],\r\n                                    b[amount],\r\n                                    Number(agingMonths)\r\n                                    )\r\n\r\n                                if (value) {\r\n                                    return a+b[amount];\r\n                                } else return a\r\n                                    \r\n                            }\r\n                            \r\n                            else return a;\r\n                        },0))}</p>\r\n                        <p className='mb-0' style={{flex:'1 0 90px',paddingLeft:10,paddingRight:10}}>\r\n                            {numberFormatParser(\r\n                                data.reduce((a,b)=>{\r\n                                if(b[debtorNum]===item[debtorNum])\r\n                                    return a+b[amount]\r\n                                else return a\r\n                                },0)-\r\n                                data.reduce((a,b)=>{\r\n                                if(b[debtorNum]===item[debtorNum]) {\r\n                                    let value=calculateAgingCurrentAmount(\r\n                                        currDate,\r\n                                        b[creditTerm] && b[creditTerm]!=='COD'? \r\n                                            getFormattedDate(new Date(new Date(b[docDate])\r\n                                            .setDate(new Date(b[docDate]).getDate()+Number(b[creditTerm])))\r\n                                            ):b[docDate],\r\n                                        b[amount]\r\n                                        )\r\n    \r\n                                    if (value) {\r\n                                        return a+b[amount];\r\n                                    } else return a\r\n                                        \r\n                                }\r\n                                else return a;\r\n                            },0)\r\n                            )}\r\n                            </p>\r\n                        <p className='mb-0' style={{flex:'1 0 90px',paddingLeft:10,paddingRight:10}}>\r\n                            {numberFormatParser(\r\n                                data.reduce((a,b)=>{\r\n                                if(b[debtorNum]===item[debtorNum])\r\n                                    return a+b[amount]\r\n                                else return a\r\n                                },0)\r\n                            )}</p>\r\n                    </div>\r\n                    <div className='collapse navbar-collapse my-2 pl-3 pl-md-5 pr-2' \r\n                    id={item[debtorNum].replace(/[ ._\\-()]/g,'')}>\r\n                        <table id='table' className='table-dark table table-hover'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th className='text-nowrap' style={{cursor:'pointer'}} data-order='asc'\r\n                                    onClick={(e)=>{\r\n                                        e.target.setAttribute('data-order',\r\n                                        e.target.getAttribute('data-order')==='asc'?'desc':'asc')\r\n                                        let sortedData={}\r\n                                        sortedData[item[debtorNum]]=sortData(resultInput[item[debtorNum]],docNum,e.target.getAttribute('data-order'))\r\n                                        changeResultInput(Object.assign({},resultInput,sortedData))\r\n                    \r\n                                        if (e.target.getAttribute('data-order')==='asc') {\r\n                                            document.getElementById('docNo'+item[debtorNum].replace(/[ ._\\-()]/g,'')).classList.remove('fa-caret-up');\r\n                                            document.getElementById('docNo'+item[debtorNum].replace(/[ ._\\-()]/g,'')).classList.add('fa-caret-down')\r\n                                        }\r\n                                        else {\r\n                                            document.getElementById('docNo'+item[debtorNum].replace(/[ ._\\-()]/g,'')).classList.remove('fa-caret-down');\r\n                                            document.getElementById('docNo'+item[debtorNum].replace(/[ ._\\-()]/g,'')).classList.add('fa-caret-up')\r\n                                        }\r\n                                        }}>\r\n                                        Doc No.\r\n                                        <i id={'docNo'+item[debtorNum].replace(/[ ._\\-()]/g,'')} className='fa fa-caret-down ml-2'></i>\r\n                                    </th>\r\n                                    <th className='text-nowrap' style={{cursor:'pointer'}} data-order='asc'\r\n                                    onClick={(e)=>{\r\n                                        e.target.setAttribute('data-order',\r\n                                        e.target.getAttribute('data-order')==='asc'?'desc':'asc')\r\n                                        let sortedData={}\r\n                                        sortedData[item[debtorNum]]=sortData(resultInput[item[debtorNum]],docDate,e.target.getAttribute('data-order'))\r\n                                        changeResultInput(Object.assign({},resultInput,sortedData))\r\n                    \r\n                                        if (e.target.getAttribute('data-order')==='asc') {\r\n                                            document.getElementById('docDate'+item[debtorNum].replace(/[ ._\\-()]/g,'')).classList.remove('fa-caret-up');\r\n                                            document.getElementById('docDate'+item[debtorNum].replace(/[ ._\\-()]/g,'')).classList.add('fa-caret-down')\r\n                                        }\r\n                                        else {\r\n                                            document.getElementById('docDate'+item[debtorNum].replace(/[ ._\\-()]/g,'')).classList.remove('fa-caret-down');\r\n                                            document.getElementById('docDate'+item[debtorNum].replace(/[ ._\\-()]/g,'')).classList.add('fa-caret-up')\r\n                                        }\r\n                                        }}>\r\n                                        Doc Date\r\n                                        <i id={'docDate'+item[debtorNum].replace(/[ ._\\-()]/g,'')} className='fa fa-caret-down ml-2'></i>\r\n                                    </th>\r\n                                    <th className='text-nowrap' style={{cursor:'pointer'}} data-order='asc'\r\n                                    onClick={(e)=>{\r\n                                        e.target.setAttribute('data-order',\r\n                                        e.target.getAttribute('data-order')==='asc'?'desc':'asc')\r\n                                        let sortedData={}\r\n                                        sortedData[item[debtorNum]]=sortData(resultInput[item[debtorNum]],type,e.target.getAttribute('data-order'))\r\n                                        changeResultInput(Object.assign({},resultInput,sortedData))\r\n                    \r\n                                        if (e.target.getAttribute('data-order')==='asc') {\r\n                                            document.getElementById('type'+item[debtorNum].replace(/[ ._\\-()]/g,'')).classList.remove('fa-caret-up');\r\n                                            document.getElementById('type'+item[debtorNum].replace(/[ ._\\-()]/g,'')).classList.add('fa-caret-down')\r\n                                        }\r\n                                        else {\r\n                                            document.getElementById('type'+item[debtorNum].replace(/[ ._\\-()]/g,'')).classList.remove('fa-caret-down');\r\n                                            document.getElementById('type'+item[debtorNum].replace(/[ ._\\-()]/g,'')).classList.add('fa-caret-up')\r\n                                        }\r\n                                        }}\r\n                                    >\r\n                                        Type\r\n                                        <i id={'type'+item[debtorNum].replace(/[ ._\\-()]/g,'')} className='fa fa-caret-down ml-2'></i>\r\n                                    </th>\r\n                                    <th className='text-nowrap'>Due Date</th>\r\n                                    <th className='text-nowrap'>Current</th>\r\n                                    {populateTableMonthsHeader(agingMonths)}\r\n                                    <th className='text-nowrap'>{'> '+agingMonths + ' Month'}</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {resultInput[item[debtorNum]].map(item2=>{\r\n                                        return (\r\n                                            <tr key={item2[docNum]} style={{cursor:'pointer'}} onClick={(e)=>\r\n                                                history.push('./'+createLink(item2[type].toLowerCase(),item2[docNum]))\r\n                                                }>\r\n                                                <td className='text-nowrap'>{item2[docNum]}</td>\r\n                                                <td className='text-nowrap'>{dateFormatParser(item2[docDate])}</td>\r\n                                                <td className='text-nowrap'>{item2[type]}</td>\r\n                                                <td className='text-nowrap'>{\r\n                                                item2[creditTerm] && item2[creditTerm]!=='COD'? \r\n                                                dateFormatParser(getFormattedDate(\r\n                                                        new Date(new Date(item2[docDate])\r\n                                                        .setDate(new Date(item2[docDate]).getDate()+Number(item2[creditTerm]))))\r\n                                                    ):dateFormatParser(item2[docDate])\r\n                                                    }</td>\r\n                                                <td className='text-nowrap'>{\r\n                                                    numberFormatParser(calculateAgingCurrentAmount(\r\n                                                        currDate,\r\n                                                        item2[creditTerm] && item2[creditTerm]!=='COD'? \r\n                                                            getFormattedDate(new Date(new Date(item2[docDate])\r\n                                                            .setDate(new Date(item2[docDate]).getDate()+Number(item2[creditTerm])))\r\n                                                            ):item2[docDate],\r\n                                                        item2[amount]\r\n                                                        ))\r\n\r\n                                        \r\n                                                }</td>\r\n                                                {populateTableMonthsAmount(\r\n                                                    currDate,\r\n                                                    item2[creditTerm] && item2[creditTerm]!=='COD'? \r\n                                                        getFormattedDate(new Date(new Date(item2[docDate])\r\n                                                        .setDate(new Date(item2[docDate]).getDate()+Number(item2[creditTerm])))\r\n                                                        ):item2[docDate],\r\n                                                    item2[amount],\r\n                                                    Number(agingMonths)\r\n                                                )}\r\n                                                <td className='text-nowrap'>{\r\n                                                numberFormatParser(calculateAgingRemainderAmount(\r\n                                                    currDate,\r\n                                                    item2[creditTerm] && item2[creditTerm]!=='COD'? \r\n                                                        getFormattedDate(new Date(new Date(item2[docDate])\r\n                                                        .setDate(new Date(item2[docDate]).getDate()+Number(item2[creditTerm])))\r\n                                                        ):item2[docDate],\r\n                                                    item2[amount],\r\n                                                    Number(agingMonths)\r\n                                                ))\r\n                                                }</td>\r\n\r\n                                            </tr>\r\n                                        )\r\n                                    \r\n                                    })\r\n                                }\r\n                                </tbody>\r\n                        </table>\r\n                    </div>\r\n                    \r\n\r\n                </div>)\r\n                )\r\n            } \r\n\r\n        })\r\n        \r\n        return result;\r\n\r\n    }\r\n\r\n    \r\n\r\n    let errorDisplay=null;\r\n\r\n    if ((dataSelectDebtor && dataSelectDebtor.error) || errorSelectDebtor || (dataSelectDebtorAging && dataSelectDebtorAging.error) \r\n    || errorSelectDebtorAging )\r\n    errorDisplay=(\r\n        <div className=\"alert alert-warning\">\r\n            {dataSelectDebtor && dataSelectDebtor.error? 'Debtor List RETRIEVAL for item failed errno: '+dataSelectDebtor.error.errno\r\n            +' code: '+dataSelectDebtor.error.code+' message: '+dataSelectDebtor.error.sqlMessage:null}\r\n            {errorSelectDebtor? 'Debtor List RETRIEVAL for item failed '+errorSelectDebtor : null}\r\n            <br/>\r\n            <br/>\r\n            {dataSelectDebtorAging && dataSelectDebtorAging.error? 'Debtor Aging RETRIEVAL for item failed errno: '+dataSelectDebtorAging.error.errno\r\n            +' code: '+dataSelectDebtorAging.error.code+' message: '+dataSelectDebtorAging.error.sqlMessage:null}\r\n            {errorSelectDebtorAging? 'Debtor Aging RETRIEVAL for item failed '+errorSelectDebtorAging : null}\r\n\r\n        </div>\r\n    )\r\n\r\n    return (\r\n    <Switch>\r\n        <Route exact path={`${path}/Preview`}>\r\n            {resultInput?\r\n            (<DebtorCreditorAgingOne\r\n                backPath={DebtorAgingReport.path}\r\n                description={DebtorAgingReport.description}\r\n                resultInput={resultInput}\r\n                withDetails={withDetails}\r\n                data={sortData(resultInput['dataPreview'],sortCriteria,'asc')}\r\n                field={resultInput['field']}\r\n                dataDetail={sortData(resultInput['dataPreview'],detailSortCriteria,'asc')}\r\n                populateTableMonthsHeader={populateTableMonthsHeader}\r\n                populateTableMonthsAmount={populateTableMonthsAmount}\r\n                calculateAgingCurrentAmount={calculateAgingCurrentAmount}\r\n                populateMonthsAmount={populateMonthsAmount}\r\n                calculateAgingRemainderAmount={calculateAgingRemainderAmount}\r\n                getFormattedDate={getFormattedDate}\r\n            />):<Redirect to={DebtorAgingReport.path}/>}\r\n        </Route>\r\n        <Route exact path={path}>\r\n            <AppLayout>\r\n                <div className='container pt-3' style={{paddingLeft:20,paddingRight:20}}>\r\n                    <h3>{DebtorAgingReport.description}</h3>\r\n                    <form className='mt-3' onSubmit={e=>{\r\n                        e.preventDefault();\r\n                        changeGenerateReportWarning(false);\r\n                        changeParamDebtorAging({\r\n                            url:'./ReportItem',\r\n                            init:{\r\n                                method:'POST',\r\n                                headers:{'Content-Type':'application/json'},\r\n                                body:JSON.stringify({\r\n                                    item:'debtor_aging',\r\n                                    param:[debtorID,currDate]\r\n                                }),\r\n                                credentials:'include'\r\n                            }\r\n                        })\r\n                        \r\n                        }\r\n                        }>\r\n                            <div className='form-group form-row mx-0'>\r\n                                <label className='col-md-2 col-form-label' style={{paddingLeft:0}} htmlFor='date'>Date</label>\r\n                                <input type='date' id='date' required onChange={(e)=>changeCurrDate(e.target.value)} value={currDate} required \r\n                                className='form-control col-md-2 mb-3 mb-md-0'/>\r\n                                <label className='offset-md-1 col-md-2 col-form-label' style={{paddingLeft:0}} htmlFor='agingMonths'>\r\n                                    Aging Month(s)\r\n                                </label>\r\n                                <select id='agingMonths' className='form-control col-md-2' required value={agingMonths} onChange={e=>\r\n                                    changeAgingMonths(e.target.value)\r\n                                }>\r\n                                    <option value='1'>1</option>\r\n                                    <option value='2'>2</option>\r\n                                    <option value='3'>3</option>\r\n                                    <option value='4'>4</option>\r\n                                    <option value='5'>5</option>\r\n                                    <option value='6'>6</option>\r\n                                </select>\r\n                            </div>\r\n\r\n                            <div className='form-group form-row mx-0'>\r\n                                <label className='col-md-2 col-form-label' style={{paddingLeft:0}} htmlFor='debtorID'>Debtor ID</label>\r\n                                <select className='form-control col-md-4' required size='3' value={debtorID} multiple={true} onChange={e=>{\r\n                                    let result=[];\r\n                                    Array.from(e.target.options).map(option=>{\r\n                                        if (option.selected===true) \r\n                                            result.push(option.value) \r\n                                    })\r\n                                    changeDebtorID(result);\r\n                                }}>\r\n                                    {debtorList}\r\n                                </select>\r\n                            </div>\r\n\r\n                            <div className='form-group form-row mx-0'>\r\n                                <div className='form-check offset-md-2'>\r\n                                    <input type='checkbox' className=' form-check-input' id='allDebtorID' onChange={e=>{\r\n                                        if (e.target.checked) \r\n                                            changeDebtorID(dataSelectDebtor.data.map(data=>\r\n                                                data[dataSelectDebtor.field[0].name]\r\n                                                ))\r\n                                        else changeDebtorID([])\r\n                                    }}/>\r\n                                    <label htmlFor='allDebtorID' style={{paddingLeft:0}} className='form-check-label'>\r\n                                        All Debtor ID\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                        \r\n                            <fieldset className='form-group pl-4 pb-3 border border-secondary rounded col-md-7'>\r\n                                <legend className='col-form-label col-md-6 offset-md-3 col-8 offset-2 text-center'>\r\n                                    <h6>Preview Options</h6>\r\n                                </legend>\r\n                                <div className='form-row'>\r\n                                    <div className='form-group form-row col-md-12'>\r\n                                        <label className='col-md-2 col-form-label' style={{paddingLeft:0}} htmlFor='sort'>\r\n                                            Sort\r\n                                        </label>\r\n                                        <select id='sort' className='form-control col-md-5' value={sortCriteria} onChange={e=>\r\n                                            changeSortCriteria(e.target.value)\r\n                                        }>\r\n                                            <option value=''> -select an option- </option>\r\n                                            {sortCriteriaList}\r\n                                        </select>\r\n                                    </div>\r\n\r\n                                    <div className='form-check col-md-4 form-group col-form-label' style={{paddingLeft:20}}>\r\n                                        <input type='checkbox' className='form-check-input' id='withDetails' onChange={e=>{\r\n                                            if (e.target.checked) \r\n                                                changeWithDetails(true)\r\n                                            else changeWithDetails(false)\r\n                                        }} checked={withDetails}/>\r\n                                        <label htmlFor='withDetails' className='form-check-label'>With Details</label>\r\n                                    </div>\r\n\r\n                                    <div className='col-md-7 form-row form-group'>\r\n                                        <label className='col-md-4 col-form-label' style={{paddingLeft:0}} htmlFor='sort'>\r\n                                            Detail Sort\r\n                                        </label>\r\n                                        <select id='sort' className='form-control col-md-8' value={detailSortCriteria} onChange={e=>\r\n                                            changeDetailSortCriteria(e.target.value)\r\n                                        }>\r\n                                            <option value=''> -select an option- </option> \r\n                                            {detailSortCriteriaList}\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                            </fieldset>\r\n\r\n                        <button type='submit' className='btn btn-primary mx-2'>Generate</button>\r\n                        <button type='button' className='btn btn-warning' onClick={e=>\r\n                        changeResultInput(null)}>Clear</button>\r\n                        <button type='button' onClick={(e)=>{\r\n                            if (!resultInput) {\r\n                                changeGenerateReportWarning(true)\r\n                            }\r\n                            else {\r\n                                document.querySelector(\"meta[name=viewport]\").setAttribute(\r\n                                'content','width=device-width, initial-scale=0.4');\r\n                                setPageSize('a4 landscape')\r\n                                history.push('./DebtorAgingReport/Preview')\r\n                            }}\r\n                        } \r\n                        className='btn btn-info mx-1 my-1'>Preview</button>\r\n                        {generateReportWarning? \r\n                        (<div className=\"alert alert-warning\">\r\n                            Please generate report first!\r\n                        </div>):null}\r\n                    </form>\r\n\r\n                    <hr/>\r\n                    {errorDisplay}\r\n                    \r\n                    {resultInput? \r\n                    (<div className=\"overflow-auto mb-5 pt-3\" style={{transform:'rotateX(180deg)'}}>\r\n                        <div style={{width:calculatedWidth,transform:'rotateX(180deg)'}}>\r\n                            <h5 className='py-2'>\r\n                                Result\r\n                                <button className='btn btn-dark mx-2' \r\n                                    onClick={(e)=>collapsibleElementID.forEach(ID=>\r\n                                        $('#'+ID).collapse('show')\r\n                                )}><i className='fa fa-plus-square'></i> Expand</button>\r\n                                <button className='btn btn-light'  \r\n                                    onClick={(e)=>collapsibleElementID.forEach(ID=>\r\n                                        $('#'+ID).collapse('hide')\r\n                                )}> <i className='fa fa-minus-square'></i> Collapse</button>\r\n                            </h5>\r\n                            <div className='row flex-nowrap text-white bg-secondary pt-2 pb-1' \r\n                            style={{\r\n                                marginLeft:0,\r\n                                marginRight:0,\r\n                                /*width to total all child widths since parent container width doesn't cover overflow due to nowrap*/\r\n                                \r\n                                }}>\r\n                                <h6 style={{flex:'1 0 34px',paddingLeft:10,paddingRight:10}}></h6>\r\n                                <h6 style={{flex:'1 0 120px',paddingLeft:10,paddingRight:10,cursor:'pointer'}}\r\n                                data-order='asc' onClick={(e)=>{\r\n                                    e.target.setAttribute('data-order',\r\n                                    e.target.getAttribute('data-order')==='asc'?'desc':'asc')\r\n                                    changeResultInput({...resultInput,\r\n                                        data:sortData(resultInput['data'],'DEBTOR_NUM',e.target.getAttribute('data-order'))})\r\n\r\n                                    if (e.target.getAttribute('data-order')==='asc') {\r\n                                        document.getElementById('debtorNo').classList.remove('fa-caret-up');\r\n                                        document.getElementById('debtorNo').classList.add('fa-caret-down')\r\n                                    }\r\n                                    else {\r\n                                        document.getElementById('debtorNo').classList.remove('fa-caret-down');\r\n                                        document.getElementById('debtorNo').classList.add('fa-caret-up')\r\n                                    }\r\n                                }\r\n                                    \r\n                                }>\r\n                                    Debtor No.\r\n                                    <i id='debtorNo' className='fa fa-caret-down ml-2'></i>\r\n                                </h6>\r\n                                <h6 style={{flex:'1 0 200px',paddingLeft:10,paddingRight:10,cursor:'pointer'}}\r\n                                data-order='asc' onClick={(e)=>{\r\n                                    e.target.setAttribute('data-order',\r\n                                    e.target.getAttribute('data-order')==='asc'?'desc':'asc')\r\n                                    changeResultInput({...resultInput,\r\n                                        data:sortData(resultInput['data'],'NAME',e.target.getAttribute('data-order'))})\r\n\r\n                                    if (e.target.getAttribute('data-order')==='asc') {\r\n                                        document.getElementById('name').classList.remove('fa-caret-up');\r\n                                        document.getElementById('name').classList.add('fa-caret-down')\r\n                                    }\r\n                                    else {\r\n                                        document.getElementById('name').classList.remove('fa-caret-down');\r\n                                        document.getElementById('name').classList.add('fa-caret-up')\r\n                                    }\r\n                                }\r\n                                }>\r\n                                    Name\r\n                                    <i id='name' className='fa fa-caret-down ml-2'></i>\r\n                                </h6>\r\n                                <h6 style={{flex:'1 0 90px',paddingLeft:10,paddingRight:10}}>Current</h6>\r\n                                {populateMonthsHeader(resultInput['agingMonths'])}\r\n                                <h6 style={{flex:'1 0 90px',paddingLeft:10,paddingRight:10}}>\r\n                                    {'> '+resultInput['agingMonths']+' Month'}\r\n                                    </h6>\r\n                                <h6 style={{flex:'1 0 90px',paddingLeft:10,paddingRight:10}}>Total Overdue</h6>\r\n                                <h6 style={{flex:'1 0 90px',paddingLeft:10,paddingRight:10}}>Balance</h6>\r\n                            \r\n                            </div>\r\n                            <div style={{overflowY:'auto',overflowX:'hidden',maxHeight:'60vh'}}>\r\n                                {populateDebtor(resultInput['currDate'],resultInput['agingMonths'])}\r\n                            </div>\r\n                        </div>\r\n                    </div>):null}\r\n                    <hr className='pb-3'/>\r\n                </div>\r\n            </AppLayout>\r\n        </Route>\r\n        <Redirect to={DebtorAgingReport.path}/>\r\n    </Switch>\r\n    )\r\n}\r\nDebtorAgingReport.description='Debtor Aging Report';\r\nDebtorAgingReport.path='/DebtorAgingReport';\r\n\r\nexport default DebtorAgingReport;\r\n","import React from 'react';\r\nimport numberFormatParser from '../numberFormatParser';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\n/*Layout for Debtor Statement Report and Creditor Statement Report*/\r\n\r\nfunction DebtorCreditorStatementOne(props) {\r\n\r\n    const history=useHistory();\r\n\r\n    const topLeftInput=props.topLeftInput? props.topLeftInput.map((input,i)=>\r\n        <p className='my-2' key={i}>{input}</p>\r\n        ):null;\r\n\r\n    const topRightArea=props.topRightField && props.topRightInput? props.topRightField.map((field,i)=>\r\n        (<div className='row' key={i}>\r\n            <div className='col-5 h6'>\r\n                {field}\r\n            </div>\r\n            <div className='col-1'>\r\n                :\r\n            </div>\r\n            <div className='col-5 h6'>\r\n                {props.topRightInput[i]}\r\n            </div>\r\n        </div>)):null;\r\n\r\n    \r\n    function monthDiff(dateFrom, dateTo) {\r\n        return dateTo.getMonth() - dateFrom.getMonth() + \r\n          (12 * (dateTo.getFullYear() - dateFrom.getFullYear()))\r\n    }\r\n\r\n    /*functions below ensure one row of aging table only fits 5 months of aging maximum, remaining months will be \r\n    fitted next table up to maximum of 12 months*/\r\n    function populateTableMonthsHeader(months,monthsAlreadyPopulated) {\r\n        let result=[];\r\n        \r\n        for(let i=monthsAlreadyPopulated+1;i<+(months)+1;i++) {\r\n            result.push(\r\n                (<th key={i} className='text-nowrap text-center'>{i+' Month'}</th>)\r\n            )\r\n        }\r\n        \r\n        return result;\r\n    }\r\n\r\n    function populateTableMonthsAmount(months,monthsAlreadyPopulated) {\r\n        let result=[];\r\n        for(let i=monthsAlreadyPopulated+1;i<+(months)+1;i++) {\r\n            result.push(\r\n                (<td key={i} className='text-nowrap text-center'>{numberFormatParser(calculateAgingMonthAmount(i))}</td>)\r\n            )\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function populateAgingTable(months) {\r\n        \r\n        return (\r\n            <table className='table table-bordered'>\r\n                <thead>\r\n                    <tr>\r\n                        <th className='text-nowrap text-center'>Current</th>\r\n                        {months<=6?populateTableMonthsHeader(months,0):populateTableMonthsHeader(6,0)}\r\n                        {months<=6? (<th className='text-nowrap text-center'>{'> '+months+' Month'}</th>):null}\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td className='text-nowrap text-center'>{numberFormatParser(calculateAgingMonthAmount(0))}</td>\r\n                        {months<=6?populateTableMonthsAmount(months,0):populateTableMonthsAmount(6,0)}\r\n                        {months<=6?\r\n                        (<td className='text-nowrap text-center'>\r\n                            {numberFormatParser(calculateAgingMonthRemainderAmount(months))}\r\n                        </td>)\r\n                        :null}\r\n                    </tr>\r\n                </tbody>\r\n                <thead>\r\n                    <tr>\r\n                        {months<=6?null:populateTableMonthsHeader(months,6)}\r\n                        {months<=6?null:(<th className='text-nowrap text-center'>{'> '+months+' Month'}</th>)}\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        {months<=6?null:populateTableMonthsAmount(months,6)}\r\n                        {months<=6?null:\r\n                            (<td className='text-nowrap text-center'>\r\n                                {numberFormatParser(calculateAgingMonthRemainderAmount(months))}\r\n                            </td>)}\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        )\r\n    }\r\n\r\n    function calculateAgingMonthAmount(month){\r\n        const data=props.data;\r\n        const field=props.field;\r\n        const date=field[0].name;\r\n        const dr=field[4].name;\r\n        const cr=field[5].name;\r\n    \r\n        return data.reduce((a,b)=>{\r\n            /*dateEnd string from input type date is slightly diff from doc string date  and produce diff result \r\n            when both string are called with Date() object. Hence perform the following to ensure date objects \r\n            produced from both string are the same.\r\n            */\r\n\r\n            const dateEnd=new Date(new Date(props.dateEnd).getFullYear(),new Date(props.dateEnd).getMonth(),\r\n            new Date(props.dateEnd).getDate(),0)\r\n            const docDate=new Date(new Date(b[date]).getFullYear(),new Date(b[date]).getMonth(),\r\n            new Date(b[date]).getDate(),0)    \r\n            \r\n            if(docDate<=new Date(dateEnd.getFullYear(),Number(dateEnd.getMonth())+1-month,0) \r\n            && docDate>new Date(dateEnd.getFullYear(),Number(dateEnd.getMonth())-month,0)) {\r\n                \r\n                if (b[dr]) return a+b[dr]\r\n                else return a-b[cr]\r\n            }\r\n            else return a\r\n        },0)\r\n    }\r\n\r\n    function calculateAgingMonthRemainderAmount(months) {\r\n        let result=0;\r\n        \r\n        for(let i=+(months)+1;i<monthDiff(new Date(props.dateStartForAging),new Date(props.dateEnd))+1;i++) {\r\n            \r\n            result+=calculateAgingMonthAmount(i)\r\n        }\r\n        return result+props.dbBroughtForwardAmount\r\n    }\r\n\r\n    \r\n    \r\n    return (\r\n        <div className='container py-5' style={{maxWidth:800}}>\r\n            <button type='click' className='btn btn-secondary d-print-none mb-2' \r\n                onClick={()=>{\r\n                    document.querySelector(\"meta[name=viewport]\").setAttribute(\r\n                    'content','width=device-width, initial-scale=1.0');\r\n                    history.push(props.backPath)\r\n            }}>Back</button>\r\n            <div className='jumbotron' style={{padding:0}}>\r\n                <h3 className='text-center'>{props.description}</h3>\r\n            </div>\r\n            <div className='row' style={{margin:0}}>\r\n                <div className='col-6 jumbotron h6 py-4' style={{marginBottom:0}}>\r\n                    {topLeftInput}\r\n                </div>\r\n                <div className='col-6 py-4'>\r\n                    {topRightArea}\r\n                </div>\r\n            </div>\r\n            <hr/>\r\n            {props.populateDebtorCreditor(true)}\r\n            \r\n            <h6 className='text-center'>Aged Analysis</h6>\r\n            {populateAgingTable(props.agingMonths)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DebtorCreditorStatementOne;","import React,{useState,useContext,useEffect} from 'react';\r\nimport AppLayout from '../Shared/AppLayout'\r\nimport {\r\n    Switch,\r\n    Route,\r\n    useRouteMatch,\r\n    Redirect\r\n} from 'react-router-dom';\r\nimport useFetch from '../Shared/useFetch';\r\nimport authContext from '../Shared/authContext';\r\nimport {useHistory} from 'react-router-dom';\r\nimport numberFormatParser from '../Shared/numberFormatParser';\r\nimport dateFormatParser from '../Shared/dateFormatParser';\r\nimport sortData from '../Shared/sort';\r\nimport DebtorCreditorStatementOne from '../Shared/preview/DebtorCreditorStatementOne';\r\n\r\nfunction DebtorStatementReport(props) {\r\n    const [{data:dataSelectDebtor,error:errorSelectDebtor}]=useFetch({\r\n        url:'./SelectItem',\r\n        init:{\r\n            method:'POST',\r\n            headers:{'Content-Type':'application/json'},\r\n            body:JSON.stringify({item:'debtor'}),\r\n            credentials:'include'\r\n        }\r\n    });\r\n    const [{data:dataSelectDebtorStatement,error:errorSelectDebtorStatement},changeParamDebtorStatement]=useFetch(null);\r\n    \r\n    const [debtorList,changeDebtorList] = useState(null);\r\n    const [debtorID,changeDebtorID] = useState('');\r\n    const [dateStart,changeDateStart] = useState(new Date().getFullYear()+'-01-01');\r\n    const [dateEnd,changeDateEnd] = useState(getFormattedDate(new Date()));\r\n    const [resultInput,changeResultInput]=useState(null);\r\n    \r\n\r\n    /*Preview states*/\r\n    const agingMonthsMax=12 /*variable used for db fetching purpose. Change this if aging month option is changed*/\r\n    const [agingMonths,changeAgingMonths]=useState(6);\r\n    const [debtorOtherInfo,changeDebtorOtherInfo] =useState(null)\r\n    const [sortCriteriaList,changeSortCriteriaList]=useState(null);\r\n    const [sortCriteria,changeSortCriteria]=useState('');\r\n    const [generateReportWarning,changeGenerateReportWarning]=useState(false);\r\n\r\n    const {path} = useRouteMatch();\r\n    const {changeAuth} = useContext(authContext);\r\n    const history=useHistory();\r\n\r\n    useEffect(()=>{\r\n        \r\n        if (dataSelectDebtor && dataSelectDebtor.auth===false) {\r\n                alert('Cookies Expired or Authorisation invalid. Please Login again!');\r\n                changeAuth(false);\r\n            }\r\n        else if (dataSelectDebtor && dataSelectDebtor.data && dataSelectDebtor.field) \r\n            changeDebtorList(dataSelectDebtor.data.map(data=>(\r\n            <option key={data[dataSelectDebtor.field[0].name]} value={data[dataSelectDebtor.field[0].name]}>\r\n                {data[dataSelectDebtor.field[0].name]+' '+(data[dataSelectDebtor.field[1].name]?data[dataSelectDebtor.field[1].name]:'')}\r\n            </option>)\r\n            )\r\n        )\r\n    },[dataSelectDebtor,errorSelectDebtor])\r\n\r\n    useEffect(()=>{\r\n        if (dataSelectDebtorStatement && dataSelectDebtorStatement.auth===false) {\r\n                alert('Cookies Expired or Authorisation invalid. Please Login again!');\r\n                changeAuth(false);\r\n            }\r\n        else if (dataSelectDebtorStatement && dataSelectDebtorStatement.data && dataSelectDebtorStatement.field) {\r\n            const field=dataSelectDebtorStatement.field[1];\r\n            const date=field[0].name;\r\n            const docNum=field[1].name;\r\n            const ref=field[2].name;\r\n            const type=field[3].name;\r\n            const dr=field[4].name;\r\n            const cr=field[5].name;\r\n            \r\n            changeResultInput({data:dataSelectDebtorStatement.data,\r\n                dataPreview:[...dataSelectDebtorStatement.data],field:dataSelectDebtorStatement.field,\r\n            dateStart,dateEnd,debtorID})\r\n\r\n            changeSortCriteriaList(\r\n                (<>\r\n                    <option value={date}>Date</option>\r\n                    <option value={docNum}>Doc No.</option>\r\n                    <option value={ref}>Ref.</option>\r\n                    <option value={type}>Type</option>\r\n                    <option value={dr}>Dr</option>\r\n                    <option value={cr}>Cr</option>\r\n                </>)\r\n            )\r\n        \r\n        }\r\n\r\n    },[dataSelectDebtorStatement,errorSelectDebtorStatement])\r\n\r\n    useEffect(()=>{\r\n        function setScale() {\r\n            document.querySelector(\"meta[name=viewport]\").setAttribute(\r\n                'content','width=device-width, initial-scale=1.0');\r\n        }\r\n        window.addEventListener('popstate',setScale)\r\n        \r\n        return function unattach() {\r\n                window.removeEventListener('popstate',setScale)\r\n            }\r\n    },[])\r\n    \r\n    function getFormattedDate(date) {\r\n        let currDate=new Date(date)\r\n        \r\n        return (currDate.getFullYear()) + (currDate.getMonth() + 1 <10? '-0'+ (currDate.getMonth()+1):'-'+ (currDate.getMonth()+1)) + (currDate.getDate()<10?\r\n        '-0'+currDate.getDate() : '-'+currDate.getDate());\r\n    }\r\n\r\n    function createLink(string,id) {\r\n        var WIPstring=string.split(' ');\r\n\r\n        WIPstring=WIPstring.map(string=>{\r\n            return string.toLowerCase()\r\n        })\r\n        WIPstring=WIPstring.map(string=>{\r\n            return string[0].toUpperCase().concat(string.substr(1))\r\n        })\r\n\r\n        return WIPstring.join('')+'Item?item='+string.replace(/ /g,'_')+'&id='+encodeURIComponent(id)\r\n    }\r\n\r\n    function getDateStartForAging(dateStart,dateEnd) {\r\n        /*this is to ensure sufficient earlier data is obtained for purpose of aging in preview. Date result is \r\n        earlier of either:\r\n        1) existing dateStart in input or \r\n        2) 12 months (max aging option for preview) before date of dateEnd.*/\r\n        if (new Date(dateStart)<new Date(new Date(dateEnd).getFullYear(),Number(new Date(dateEnd).getMonth())-agingMonthsMax,1))\r\n            return dateStart\r\n\r\n        else \r\n            return getFormattedDate(new Date(new Date(dateEnd).getFullYear(),Number(new Date(dateEnd).getMonth())-agingMonthsMax,1));\r\n    }\r\n    \r\n    function populateDebtor(preview) {\r\n        const dbBroughtForwardAmount=resultInput['data'][0][0][resultInput['field'][0][0].name];\r\n\r\n        const data=preview?sortData(resultInput['dataPreview'][1],sortCriteria,'asc'):resultInput['data'][1];\r\n        const field=resultInput['field'][1];\r\n        const date=field[0].name;\r\n        const docNum=field[1].name;\r\n        const ref=field[2].name;\r\n        const type=field[3].name;\r\n        const dr=field[4].name;\r\n        const cr=field[5].name;\r\n        \r\n        \r\n        let balance=data.reduce((a,b)=>{\r\n            if (new Date(b[date])<new Date(resultInput['dateStart'])) {\r\n                if (b[dr]) return a+b[dr]\r\n                else return a-b[cr]\r\n            } else return a\r\n        },0) + dbBroughtForwardAmount;\r\n\r\n        return (\r\n        <div>\r\n            <table className='table table-responsive-md'>\r\n                <thead>\r\n                    <tr>\r\n                        <th className='text-nowrap' style={preview? null:{cursor:'pointer'}}  data-order='asc'\r\n                        onClick={(e)=>{\r\n                            if(!preview) {\r\n                                e.target.setAttribute('data-order',\r\n                                e.target.getAttribute('data-order')==='asc'?'desc':'asc')\r\n                                resultInput['data'][1]=sortData(resultInput['data'][1],date,e.target.getAttribute('data-order'))\r\n                                changeResultInput({...resultInput})\r\n\r\n                                if (e.target.getAttribute('data-order')==='asc') {\r\n                                    document.getElementById('date').classList.remove('fa-caret-up');\r\n                                    document.getElementById('date').classList.add('fa-caret-down')\r\n                                }\r\n                                else {\r\n                                    document.getElementById('date').classList.remove('fa-caret-down');\r\n                                    document.getElementById('date').classList.add('fa-caret-up')\r\n                                }\r\n                            }\r\n                        }\r\n                        }\r\n                        >\r\n                            Date\r\n                            {preview?null:<i id='date' className='fa fa-caret-down ml-2'></i>}\r\n                        </th>\r\n                        <th className='text-nowrap' style={preview?null:{cursor:'pointer'}} data-order='asc'\r\n                        onClick={(e)=>{\r\n                            if(!preview) {\r\n                                e.target.setAttribute('data-order',\r\n                                e.target.getAttribute('data-order')==='asc'?'desc':'asc')\r\n                                resultInput['data'][1]=sortData(resultInput['data'][1],docNum,e.target.getAttribute('data-order'))\r\n                                changeResultInput({...resultInput})\r\n\r\n                                if (e.target.getAttribute('data-order')==='asc') {\r\n                                    document.getElementById('docNo').classList.remove('fa-caret-up');\r\n                                    document.getElementById('docNo').classList.add('fa-caret-down')\r\n                                }\r\n                                else {\r\n                                    document.getElementById('docNo').classList.remove('fa-caret-down');\r\n                                    document.getElementById('docNo').classList.add('fa-caret-up')\r\n                                }\r\n                            }\r\n                        }\r\n                        }>\r\n                            Doc No.\r\n                            {preview?null:<i id='docNo' className='fa fa-caret-down ml-2'></i>}\r\n                        </th>\r\n                        <th className='text-nowrap' style={preview?null:{cursor:'pointer'}}  data-order='asc'\r\n                        onClick={(e)=>{\r\n                            if (!preview) {\r\n                                e.target.setAttribute('data-order',\r\n                                e.target.getAttribute('data-order')==='asc'?'desc':'asc')\r\n                                resultInput['data'][1]=sortData(resultInput['data'][1],ref,e.target.getAttribute('data-order'))\r\n                                changeResultInput({...resultInput})\r\n\r\n                                if (e.target.getAttribute('data-order')==='asc') {\r\n                                    document.getElementById('ref').classList.remove('fa-caret-up');\r\n                                    document.getElementById('ref').classList.add('fa-caret-down')\r\n                                }\r\n                                else {\r\n                                    document.getElementById('ref').classList.remove('fa-caret-down');\r\n                                    document.getElementById('ref').classList.add('fa-caret-up')\r\n                                }\r\n                            }\r\n                        }\r\n                        }>\r\n                            Ref.\r\n                            {preview?null:<i id='ref' className='fa fa-caret-down ml-2'></i>}\r\n                        </th>\r\n                        <th className='text-nowrap' style={preview?null:{cursor:'pointer'}}  data-order='asc'\r\n                        onClick={(e)=>{\r\n                            if (!preview) {\r\n                                e.target.setAttribute('data-order',\r\n                                e.target.getAttribute('data-order')==='asc'?'desc':'asc')\r\n                                resultInput['data'][1]=sortData(resultInput['data'][1],type,e.target.getAttribute('data-order'))\r\n                                changeResultInput({...resultInput})\r\n\r\n                                if (e.target.getAttribute('data-order')==='asc') {\r\n                                    document.getElementById('type').classList.remove('fa-caret-up');\r\n                                    document.getElementById('type').classList.add('fa-caret-down')\r\n                                }\r\n                                else {\r\n                                    document.getElementById('type').classList.remove('fa-caret-down');\r\n                                    document.getElementById('type').classList.add('fa-caret-up')\r\n                                }\r\n                            }\r\n                        }\r\n                        }\r\n                        >\r\n                            Type\r\n                            {preview?null:<i id='type' className='fa fa-caret-down ml-2'></i>}\r\n                        </th>\r\n                        <th className='text-nowrap' style={preview?null:{cursor:'pointer'}}  data-order='asc'\r\n                        onClick={(e)=>{\r\n                            if (!preview) {\r\n                                e.target.setAttribute('data-order',\r\n                                e.target.getAttribute('data-order')==='asc'?'desc':'asc')\r\n                                resultInput['data'][1]=sortData(resultInput['data'][1],dr,e.target.getAttribute('data-order'))\r\n                                changeResultInput({...resultInput})\r\n\r\n                                if (e.target.getAttribute('data-order')==='asc') {\r\n                                    document.getElementById('dr').classList.remove('fa-caret-up');\r\n                                    document.getElementById('dr').classList.add('fa-caret-down')\r\n                                }\r\n                                else {\r\n                                    document.getElementById('dr').classList.remove('fa-caret-down');\r\n                                    document.getElementById('dr').classList.add('fa-caret-up')\r\n                                }\r\n                            }\r\n                        }\r\n                        }\r\n                        >\r\n                            Dr\r\n                            {preview?null:<i id='dr' className='fa fa-caret-down ml-2'></i>}\r\n                        </th>\r\n                        <th className='text-nowrap' style={preview?null:{cursor:'pointer'}}  data-order='asc'\r\n                        onClick={(e)=>{\r\n                            if (!preview) {\r\n                                e.target.setAttribute('data-order',\r\n                                e.target.getAttribute('data-order')==='asc'?'desc':'asc')\r\n                                resultInput['data'][1]=sortData(resultInput['data'][1],cr,e.target.getAttribute('data-order'))\r\n                                changeResultInput({...resultInput})\r\n\r\n                                if (e.target.getAttribute('data-order')==='asc') {\r\n                                    document.getElementById('cr').classList.remove('fa-caret-up');\r\n                                    document.getElementById('cr').classList.add('fa-caret-down')\r\n                                }\r\n                                else {\r\n                                    document.getElementById('cr').classList.remove('fa-caret-down');\r\n                                    document.getElementById('cr').classList.add('fa-caret-up')\r\n                                }\r\n                            }\r\n                        }\r\n                        }\r\n                        >\r\n                            Cr\r\n                            {preview?null:<i id='cr' className='fa fa-caret-down ml-2'></i>}\r\n                        </th>\r\n                        <th className='text-nowrap'>Balance</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td colSpan='6'>B/F</td>\r\n                        <td>{numberFormatParser(balance)}</td>\r\n                    </tr>\r\n                    {data.map((item,i)=>{\r\n                        \r\n                        if (new Date(item[date])>=new Date(resultInput['dateStart']) \r\n                        && new Date(item[date])<=new Date(resultInput['dateEnd'])) \r\n                            {\r\n                                if (item[dr])\r\n                                balance+=item[dr]\r\n                                if (item[cr])\r\n                                balance-=item[cr]\r\n                            return (\r\n                            <tr key={i} style={preview? null:{cursor:'pointer'}} onClick={(e)=> {\r\n                                if(!preview)\r\n                                    history.push('/'+createLink(item[type].toLowerCase(),item[docNum]))\r\n                                else e.preventDefault();\r\n                            }\r\n                            }>\r\n                                <td className='text-nowrap'>{dateFormatParser(item[date])}</td>\r\n                                <td className='text-nowrap'>{item[docNum]}</td>\r\n                                <td className='text-nowrap'>{item[ref]}</td>\r\n                                <td className='text-nowrap'>{item[type]}</td>\r\n                                <td className='text-nowrap'>{numberFormatParser(item[dr])}</td>\r\n                                <td className='text-nowrap'>{numberFormatParser(item[cr])}</td>\r\n                                <td className='text-nowrap'>{numberFormatParser(balance)}</td>\r\n                            </tr>\r\n                            )\r\n                        }}\r\n                    )}\r\n                    \r\n                </tbody>\r\n                \r\n            </table>\r\n            \r\n            {preview? (\r\n                <p className='h5 text-right jumbotron py-2'>\r\n                    <span>Account Balance: </span>\r\n                    <span>{numberFormatParser(balance)}</span>\r\n                </p>):null}\r\n        </div>\r\n        )\r\n        \r\n    }\r\n\r\n    let errorDisplay=null;\r\n\r\n    if ((dataSelectDebtor && dataSelectDebtor.error) || errorSelectDebtor || (dataSelectDebtorStatement && dataSelectDebtorStatement.error) \r\n    || errorSelectDebtorStatement )\r\n    errorDisplay=(\r\n        <div className=\"alert alert-warning\">\r\n            {dataSelectDebtor && dataSelectDebtor.error? 'Debtor List RETRIEVAL for item failed errno: '+dataSelectDebtor.error.errno\r\n            +' code: '+dataSelectDebtor.error.code+' message: '+dataSelectDebtor.error.sqlMessage:null}\r\n            {errorSelectDebtor? 'Debtor List RETRIEVAL for item failed '+errorSelectDebtor : null}\r\n            <br/>\r\n            <br/>\r\n            {dataSelectDebtorStatement && dataSelectDebtorStatement.error? 'Debtor Statement RETRIEVAL for item failed errno: '+dataSelectDebtorStatement.error.errno\r\n            +' code: '+dataSelectDebtorStatement.error.code+' message: '+dataSelectDebtorStatement.error.sqlMessage:null}\r\n            {errorSelectDebtorStatement? 'Debtor Statement RETRIEVAL for item failed '+errorSelectDebtorStatement : null}\r\n\r\n        </div>\r\n    )\r\n    \r\n    return (\r\n        <Switch>\r\n            <Route exact path={`${path}/Preview`}>\r\n                {resultInput? \r\n                (<DebtorCreditorStatementOne\r\n                    backPath={DebtorStatementReport.path}\r\n                    description='Debtor Statement'\r\n                    topLeftInput={[...debtorOtherInfo.slice(0,2)]}\r\n                    topRightField={['Statement Date','Credit Term']}\r\n                    topRightInput={\r\n                        [dateFormatParser(resultInput['dateStart'])+' to '+ dateFormatParser(resultInput['dateEnd']),\r\n                        debtorOtherInfo[2]==='COD'?'C.O.D.':debtorOtherInfo[2]+' days']}\r\n                    populateDebtorCreditor={populateDebtor}\r\n                    data={resultInput['dataPreview'][1]}\r\n                    field={resultInput['field'][1]}\r\n                    dateEnd={resultInput['dateEnd']}\r\n                    agingMonths={agingMonths}\r\n                    dateStartForAging={getDateStartForAging(resultInput['dateStart'],resultInput['dateEnd'])}\r\n                    dbBroughtForwardAmount={resultInput['dataPreview'][0][0][resultInput['field'][0][0].name]}\r\n                    \r\n                   \r\n                \r\n                />):<Redirect to={DebtorStatementReport.path}/>}\r\n            </Route>\r\n            <Route exact path={path}>\r\n                <AppLayout>\r\n                    <div className='container pt-3' style={{paddingLeft:20,paddingRight:20}}>\r\n                        <h3>{DebtorStatementReport.description}</h3>\r\n                        <form className='mt-3' onSubmit={e=>{\r\n                        e.preventDefault();\r\n                        changeGenerateReportWarning(false);\r\n                        changeParamDebtorStatement({\r\n                            url:'./ReportItem',\r\n                            init:{\r\n                                method:'POST',\r\n                                headers:{'Content-Type':'application/json'},\r\n                                body:JSON.stringify({\r\n                                    item:'debtor_statement',\r\n                                    param:[getDateStartForAging(dateStart,dateEnd),dateEnd,debtorID]\r\n                                }),\r\n                                credentials:'include'\r\n                            }\r\n                        })\r\n                        }}>\r\n                            <div className='form-group form-row mx-0'>\r\n                                <label className='col-md-2 col-form-label' style={{paddingLeft:0}} htmlFor='dateStart'>Date Start</label>\r\n                                <input type='date' id='dateStart' required onChange={(e)=>{\r\n                                    if (new Date(e.target.value)>new Date(dateEnd)) {\r\n                                        alert('Invalid Date Start Entry')\r\n                                        changeDateStart(new Date().getFullYear()+'-01-01')\r\n                                    }\r\n                                    else changeDateStart(e.target.value)\r\n                                }} \r\n                                    value={dateStart} required className='form-control col-md-3 mb-3 mb-md-0'/>\r\n                                <label className='offset-md-1 col-md-2 col-form-label' style={{paddingLeft:0}} htmlFor='dateEnd'>Date End</label>\r\n                                <input type='date' id='dateEnd' required onChange={(e)=>{\r\n                                    if (new Date(e.target.value)<new Date(dateStart)) {\r\n                                        alert('Invalid Date End Entry')\r\n                                        changeDateEnd(getFormattedDate(new Date()))\r\n                                    }\r\n                                    else changeDateEnd(e.target.value)\r\n                                }} value={dateEnd} required className='form-control col-md-3 mb-3 mb-md-0'/>\r\n                            </div>\r\n\r\n                            <div className='form-group form-row mx-0'>\r\n                                <label className='col-md-2 col-form-label' style={{paddingLeft:0}} htmlFor='debtorID'>Debtor ID</label>\r\n                                <select className='form-control col-md-4' required value={debtorID} onChange={e=>{\r\n                                    let debtorName='';\r\n                                    let debtorAddress='';\r\n                                    let debtorDefaultCreditTerm='';\r\n\r\n                                    dataSelectDebtor.data.forEach(data=>{\r\n                                        if(data[dataSelectDebtor.field[0].name]===e.target.value) {\r\n                                            debtorName=data[dataSelectDebtor.field[1].name]?data[dataSelectDebtor.field[1].name]:'';\r\n                                            debtorAddress=data[dataSelectDebtor.field[2].name]?data[dataSelectDebtor.field[2].name]:'';\r\n                                            debtorDefaultCreditTerm=data[dataSelectDebtor.field[7].name]?data[dataSelectDebtor.field[7].name]:'';\r\n                                        }\r\n                                    })\r\n                                    changeDebtorID(e.target.value);\r\n                                    changeDebtorOtherInfo([debtorName,debtorAddress,debtorDefaultCreditTerm])\r\n                                \r\n                                }}>\r\n                                    <option value=''> -select an option- </option>\r\n                                    {debtorList}\r\n                                </select>\r\n                            </div>\r\n\r\n                            <fieldset className='form-group pl-4 pb-3 border border-secondary rounded col-md-7 mx-0'>\r\n                                <legend className='col-form-label col-md-6 offset-md-3 col-8 offset-2 text-center'>\r\n                                    <h6>Preview Options</h6>\r\n                                </legend>\r\n                                <div className='form-row'>\r\n                                    <div className='form-group col-md-6 form-row'>\r\n                                        <label className='col-6 col-md-6 col-form-label' htmlFor='agingMonths'>\r\n                                            Aging Months\r\n                                        </label>\r\n                                        <select id='agingMonths' className='form-control col-3 col-md-3' required value={agingMonths}\r\n                                            onChange={e=>\r\n                                                changeAgingMonths(e.target.value)\r\n                                            }>\r\n                                            <option value='6'>6</option>\r\n                                            <option value='9'>9</option>\r\n                                            <option value='12'>12</option>\r\n                                        </select>\r\n                                    </div>\r\n                                \r\n                                    <div className='form-group col-md-6 form-row '>\r\n                                        <label className='col-3 col-md-3 col-form-label' htmlFor='sort'>\r\n                                            Sort\r\n                                        </label>\r\n                                        <select id='sort' className='form-control col-8 col-md-8' value={sortCriteria} onChange={e=>\r\n                                            changeSortCriteria(e.target.value)\r\n                                        }>\r\n                                            <option value=''> -select an option- </option>\r\n                                            {sortCriteriaList}\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </fieldset>\r\n\r\n                            <button type='submit' className='btn btn-primary mx-2'>Generate</button>\r\n                            <button type='button' className='btn btn-warning' onClick={e=>\r\n                                changeResultInput(null)}>Clear</button>\r\n                            <button type='button' onClick={(e)=>{\r\n                                if (!resultInput) {\r\n                                    changeGenerateReportWarning(true)\r\n                                }\r\n                                else {\r\n                                    document.querySelector(\"meta[name=viewport]\").setAttribute(\r\n                                    'content','width=device-width, initial-scale=0.4');\r\n                                    history.push('./DebtorStatementReport/Preview')\r\n                                }}\r\n                            } \r\n                            className='btn btn-info mx-1 my-1'>Preview</button>\r\n                            {generateReportWarning? \r\n                            (<div className=\"alert alert-warning\">\r\n                                Please generate report first!\r\n                            </div>):null}\r\n                        </form>\r\n                        \r\n                        <hr/>\r\n                        {errorDisplay}\r\n\r\n                        {resultInput? \r\n                        (<div className='mb-5'>\r\n                            <h5 className='py-2'>Result</h5>\r\n                            {populateDebtor()}\r\n                            \r\n                        </div>):null\r\n                        }\r\n                        <hr className='pb-3'/>\r\n                    </div>\r\n                </AppLayout>\r\n            </Route>\r\n            <Redirect to={DebtorStatementReport.path}/>\r\n        </Switch>\r\n    )\r\n}\r\nDebtorStatementReport.description='Debtor Statement Report';\r\nDebtorStatementReport.path='/DebtorStatementReport';\r\n\r\nexport default DebtorStatementReport;\r\n","import React from 'react';\r\nimport numberFormatParser from '../numberFormatParser';\r\nimport dateFormatParser from '../dateFormatParser';\r\nimport {useHistory} from 'react-router-dom';\r\nimport setPageSize from '../setPageSize';\r\n\r\n/*Layout for Debtor Collection Report*/\r\n\r\nfunction DebtorCollectionOne(props) {\r\n    const history=useHistory();\r\n\r\n    function populateResult() {\r\n        const data=props.data;\r\n        const field=props.field;\r\n        const debtorNum=field[0].name;\r\n        const name=field[1].name;\r\n        const docNum=field[2].name;\r\n        const docDate=field[3].name;\r\n        const type=field[4].name;\r\n        const method=field[5].name;\r\n        const transactionID=field[6].name;\r\n        const amount=field[7].name;\r\n\r\n        const receiptData=props.receiptData;\r\n        const receiptField=props.receiptField;\r\n        const receiptDocNum=receiptField[0].name;\r\n        const receiptDataDocNum=receiptField[1].name;\r\n        const receiptDataType=receiptField[2].name;\r\n        const receiptDataDate=receiptField[3].name;\r\n        const receiptDataCreditTerm=receiptField[4].name;\r\n        const receiptDataAmount=receiptField[5].name;\r\n        const receiptAmount=receiptField[6].name;\r\n\r\n        const debtorAlreadyParsed=[];\r\n        const result=[];\r\n\r\n        data.forEach(item=>{\r\n            if(debtorAlreadyParsed.indexOf(item[debtorNum])===-1)  {\r\n                debtorAlreadyParsed.push(item[debtorNum]);\r\n                result.push(\r\n                (<tbody key={item[debtorNum]} className='border-bottom border-secondary'>\r\n                    <tr className='border-top border-secondary'>\r\n                        <th className='align-top'>{item[debtorNum]}</th>\r\n                        <th className='align-top' colSpan={props.withReceiptDetails?5:4}>{item[name]}</th>\r\n                        <th className='align-top'>\r\n                            {numberFormatParser(data.reduce((a,b)=>{\r\n                                    if (b[debtorNum]===item[debtorNum]) \r\n                                        return a+b[amount]\r\n                                    else return a \r\n                                },0)\r\n                            )}\r\n                        </th>\r\n                    </tr>\r\n                    {props.dataDetail.map(item2=>{\r\n                        if (item2[debtorNum]===item[debtorNum]) \r\n                            return (\r\n                            <React.Fragment>\r\n                                <tr key={item2[docNum]}>\r\n                                    <td className='align-top'>{item2[docNum]}</td>\r\n                                    <td className='align-top'>{dateFormatParser(item2[docDate])}</td>\r\n                                    <td className='align-top'>{item2[type]}</td>\r\n                                    <td className='align-top'>{item2[method]}</td>\r\n                                    <td className='align-top' colSpan={props.withReceiptDetails?2:null}>{item2[transactionID]}</td>\r\n                                    <td className='align-top'>\r\n                                        {numberFormatParser(item2[amount])}\r\n                                    </td>\r\n                                </tr>\r\n                                {props.withReceiptDetails? receiptData.map(item3=>{\r\n                                    if(item3[receiptDocNum]===item2[docNum]) \r\n                                        return (\r\n                                            <tr key={item3[receiptDataDocNum]} className='text-secondary'>\r\n                                                <td className='align-top pl-5 pr-0'><i>{item3[receiptDataDocNum]}</i></td>\r\n                                                <td className='align-top pl-5 pr-0'><i>{item3[receiptDataType]}</i></td>\r\n                                                <td className='align-top pl-5 pr-0'><i>{dateFormatParser(item3[receiptDataDate])}</i></td>\r\n                                                <td className='align-top pl-5 pr-0'><i>{\r\n                                                    item3[receiptDataCreditTerm] && item3[receiptDataCreditTerm]!=='COD'? \r\n                                                    dateFormatParser(props.getFormattedDate(\r\n                                                            new Date(new Date(item3[receiptDataDate])\r\n                                                            .setDate(new Date(item3[receiptDataDate]).getDate()\r\n                                                            +Number(item3[receiptDataCreditTerm]))))\r\n                                                        ):dateFormatParser(item3[receiptDataDate])\r\n                                                    }\r\n                                                    </i>\r\n                                                </td>\r\n                                                <td className='align-top pl-5 pr-0'><i>{\r\n                                                item3[receiptDataCreditTerm]==='COD'?'C.O.D.':item3[receiptDataCreditTerm]+' days'}</i>\r\n                                                </td>\r\n                                                <td className='align-top pl-5 pr-0'><i>{numberFormatParser(item3[receiptDataAmount])}</i></td>\r\n                                                <td className='align-top pl-5 pr-0'><i>{numberFormatParser(item3[receiptAmount])}</i></td>\r\n                                            </tr>\r\n                                        )\r\n                                }):null}\r\n                            </React.Fragment>\r\n                            )\r\n                                \r\n                    \r\n\r\n                    })}\r\n                    \r\n                </tbody>)\r\n                )\r\n            }\r\n        })\r\n\r\n        return result;\r\n    }\r\n\r\n    return (\r\n        <div className='container-fluid py-1'>\r\n            <button type='click' className='btn btn-secondary d-print-none mb-2' \r\n                onClick={()=>{\r\n                    document.querySelector(\"meta[name=viewport]\").setAttribute(\r\n                    'content','width=device-width, initial-scale=1.0');\r\n                    setPageSize('a4 portrait');\r\n                    history.push(props.backPath)\r\n            }}>Back</button>\r\n            <h2 className='text-center mb-3'>\r\n                {props.description+' from '+ dateFormatParser(props.resultInput['dateStart'])\r\n                +' to '+ dateFormatParser(props.resultInput['dateEnd'])}\r\n            </h2>\r\n            <hr className='border border-dark'/>\r\n            <table className='table table-borderless'>\r\n                <thead>\r\n                    <tr className='border-top border-secondary'>\r\n                        <th className='align-top'>Debtor No.</th>\r\n                        <th className='align-top' colSpan={props.withReceiptDetails?5:4}>Name</th>\r\n                        <th className='align-top'>Receipt Amount</th>\r\n                    </tr>\r\n                    <tr>\r\n                        <th className='align-top'>Receipt No.</th>\r\n                        <th className='align-top'>Date</th>\r\n                        <th className='align-top'>Type</th>\r\n                        <th className='align-top'>Method</th>\r\n                        <th className='align-top' colSpan={props.withReceiptDetails?2:null}>Transaction ID</th>\r\n                        <th className='align-top'>Amount</th>\r\n                    </tr>\r\n                    {props.withReceiptDetails?\r\n                    (<tr className='border-bottom border-secondary text-secondary'>\r\n                        <th className='align-top pl-5 pr-0'><i>Doc No.</i></th>\r\n                        <th className='align-top pl-5 pr-0'><i>Type</i></th>\r\n                        <th className='align-top pl-5 pr-0'><i>Doc Date</i></th>\r\n                        <th className='align-top pl-5 pr-0'><i>Due Date</i></th>\r\n                        <th className='align-top pl-5 pr-0'><i>Credit Term</i></th>\r\n                        <th className='align-top pl-5 pr-0'><i>Doc Amount</i></th>\r\n                        <th className='align-top pl-5 pr-0'><i>Receipt Amount</i></th>\r\n                    </tr>):null}\r\n                    {props.withReceiptDetails?\r\n                    (<tr>\r\n                        <th className='border-bottom border-secondary' colSpan={7}></th>\r\n                    </tr>):\r\n                    (<tr>\r\n                        <th className='border-bottom border-top border-secondary' colSpan={6}></th>\r\n                    </tr>)}\r\n                </thead>\r\n                {populateResult()}\r\n            </table>\r\n            <hr className='border border-dark'/>\r\n            <small className='d-block text-center'>End of Report</small>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DebtorCollectionOne;","import React,{useState,useContext,useEffect} from 'react';\r\nimport AppLayout from '../Shared/AppLayout'\r\nimport {\r\n    Switch,\r\n    Route,\r\n    useRouteMatch,\r\n    Redirect\r\n} from 'react-router-dom';\r\nimport useFetch from '../Shared/useFetch';\r\nimport authContext from '../Shared/authContext';\r\nimport {useHistory} from 'react-router-dom';\r\nimport $ from 'jquery'\r\nimport numberFormatParser from '../Shared/numberFormatParser';\r\nimport dateFormatParser from '../Shared/dateFormatParser';\r\nimport sortData from '../Shared/sort';\r\nimport setPageSize from '../Shared/setPageSize';\r\nimport DebtorCollectionOne from '../Shared/preview/DebtorCollectionOne';\r\n\r\nfunction DebtorCollectionReport(props) {\r\n    const [{data:dataSelectDebtor,error:errorSelectDebtor}]=useFetch({\r\n        url:'./SelectItem',\r\n        init:{\r\n            method:'POST',\r\n            headers:{'Content-Type':'application/json'},\r\n            body:JSON.stringify({item:'debtor'}),\r\n            credentials:'include'\r\n        }\r\n    });\r\n    const [{data:dataSelectDebtorCollection,error:errorSelectDebtorCollection},changeParamDebtorCollection]=useFetch(null);\r\n    const [debtorList,changeDebtorList] = useState(null);\r\n    const [debtorID,changeDebtorID] = useState([]);\r\n    const [dateStart,changeDateStart] = useState(new Date().getFullYear()+'-01-01');\r\n    const [dateEnd,changeDateEnd] = useState(getFormattedDate(new Date()));\r\n    const [resultInput,changeResultInput]=useState(null);\r\n    const [collapsibleElementID,changeCollapsibleElementID]=useState([])\r\n\r\n    /*Preview states*/\r\n    const [withReceiptDetails,changeWithReceiptDetails]=useState(false);\r\n    const [sortCriteriaList,changeSortCriteriaList]=useState(null);\r\n    const [detailSortCriteriaList,changeDetailSortCriteriaList]=useState(null);\r\n    const [sortCriteria,changeSortCriteria]=useState('');\r\n    const [detailSortCriteria,changeDetailSortCriteria]=useState('');\r\n    const [generateReportWarning,changeGenerateReportWarning]=useState(false);\r\n\r\n    const {path} = useRouteMatch();\r\n    const {changeAuth} = useContext(authContext);\r\n    const history=useHistory();\r\n\r\n    const calculatedWidth=950;\r\n\r\n    useEffect(()=>{\r\n        \r\n        if (dataSelectDebtor && dataSelectDebtor.auth===false) {\r\n                alert('Cookies Expired or Authorisation invalid. Please Login again!');\r\n                changeAuth(false);\r\n            }\r\n        else if (dataSelectDebtor && dataSelectDebtor.data && dataSelectDebtor.field) \r\n            changeDebtorList(dataSelectDebtor.data.map(data=>(\r\n            <option key={data[dataSelectDebtor.field[0].name]} value={data[dataSelectDebtor.field[0].name]}>\r\n                {data[dataSelectDebtor.field[0].name]+' '+(data[dataSelectDebtor.field[1].name]?data[dataSelectDebtor.field[1].name]:'')}\r\n            </option>)\r\n            )\r\n        )\r\n    },[dataSelectDebtor,errorSelectDebtor])\r\n    \r\n    useEffect(()=>{\r\n        if (dataSelectDebtorCollection && dataSelectDebtorCollection.auth===false) {\r\n                alert('Cookies Expired or Authorisation invalid. Please Login again!');\r\n                changeAuth(false);\r\n            }\r\n        else if (dataSelectDebtorCollection && dataSelectDebtorCollection.data && dataSelectDebtorCollection.field) {\r\n            const debtorAlreadyParsed=[];\r\n            const receiptAlreadyParsed=[];\r\n            const data=dataSelectDebtorCollection.data[0];\r\n            const field=dataSelectDebtorCollection.field[0];\r\n            const debtorNum=field[0].name;\r\n            const name=field[1].name;\r\n            const docNum=field[2].name;\r\n            const docDate=field[3].name;\r\n            const type=field[4].name;\r\n            const method=field[5].name;\r\n            const transactionID=field[6].name;\r\n            const amount=field[7].name;\r\n            \r\n            changeResultInput(resultInput=>{})\r\n\r\n            data.forEach(item=>{\r\n                let newObject={}\r\n               if(debtorAlreadyParsed.indexOf(item[debtorNum])===-1) {\r\n                    debtorAlreadyParsed.push(item[debtorNum])\r\n                    newObject[item[debtorNum]]=data.filter(item2=>item2[debtorNum]===item[debtorNum])\r\n                    changeResultInput(resultInput=>(Object.assign({},resultInput,newObject)))\r\n               }\r\n            })\r\n\r\n            changeResultInput(resultInput=>({...resultInput,\r\n                data:dataSelectDebtorCollection.data,\r\n                dataPreview:[...dataSelectDebtorCollection.data],\r\n                field:dataSelectDebtorCollection.field,\r\n                dateStart,\r\n                dateEnd,\r\n                debtorID\r\n            }))\r\n\r\n            changeSortCriteriaList(\r\n                (<>\r\n                    <option value={debtorNum}>Debtor No.</option>\r\n                    <option value={name}>Name</option>\r\n                </>)\r\n            )\r\n            changeDetailSortCriteriaList(\r\n                (<>\r\n                    <option value={docNum}>Doc No.</option>\r\n                    <option value={docDate}>Doc Date</option>\r\n                    <option value={type}>Type</option>\r\n                    <option value={method}>Method</option>\r\n                    <option value={transactionID}>Transaction ID</option>\r\n                    <option value={amount}>Amount</option>\r\n                </>)\r\n            )\r\n            data.forEach(item=>{\r\n                if(receiptAlreadyParsed.indexOf(item[docNum])===-1) \r\n                 receiptAlreadyParsed.push(item[docNum])\r\n             })\r\n\r\n             changeCollapsibleElementID(debtorAlreadyParsed.map(item=>item.replace(/[ ._\\-()]/g,''))\r\n             .concat(receiptAlreadyParsed.map(item=>item.replace(/[ ._\\-()]/g,''))))\r\n\r\n        }\r\n    },[dataSelectDebtorCollection,errorSelectDebtorCollection])\r\n\r\n    //attach bootstrap/jquery eventlisteners and callbacks\r\n    useEffect(()=>{\r\n        if (collapsibleElementID) {\r\n            collapsibleElementID.forEach(ID=>{\r\n                $('#'+ID).on('show.bs.collapse',e=>{\r\n                    if(e.target===e.currentTarget)\r\n                    $('#plusminus'+ID).removeClass('fa-plus-square').addClass('fa-minus-square');\r\n                })\r\n                $('#'+ID).on('hide.bs.collapse',e=>{\r\n                    if(e.target===e.currentTarget)\r\n                    $('#plusminus'+ID).removeClass('fa-minus-square').addClass('fa-plus-square');\r\n                })\r\n        })\r\n    }\r\n    },[resultInput])\r\n\r\n    useEffect(()=>{\r\n        function setScale() {\r\n            document.querySelector(\"meta[name=viewport]\").setAttribute(\r\n                'content','width=device-width, initial-scale=1.0');\r\n        }\r\n        window.addEventListener('popstate',setScale)\r\n        \r\n        return function unattach() {\r\n                window.removeEventListener('popstate',setScale)\r\n            }\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        function setPage() {\r\n            setPageSize(\"a4 portrait\");\r\n        }\r\n        window.addEventListener('popstate',setPage);\r\n\r\n        return function unattach() {\r\n                window.removeEventListener('popstate',setPage)\r\n            }\r\n    },[])\r\n\r\n    function getFormattedDate(date) {\r\n        let currDate=new Date(date)\r\n        \r\n        return (currDate.getFullYear()) + (currDate.getMonth() + 1 <10? '-0'+ (currDate.getMonth()+1):'-'+ (currDate.getMonth()+1)) + (currDate.getDate()<10?\r\n        '-0'+currDate.getDate() : '-'+currDate.getDate());\r\n    }\r\n\r\n    function createLink(string,id) {\r\n        var WIPstring=string.split(' ');\r\n\r\n        WIPstring=WIPstring.map(string=>{\r\n            return string.toLowerCase()\r\n        })\r\n        WIPstring=WIPstring.map(string=>{\r\n            return string[0].toUpperCase().concat(string.substr(1))\r\n        })\r\n\r\n        return WIPstring.join('')+'Item?item='+string.replace(/ /g,'_')+'&id='+encodeURIComponent(id)\r\n    }\r\n\r\n    function populateResult() {\r\n        const data=resultInput['data'][0];\r\n        const field=resultInput['field'][0];\r\n        const debtorNum=field[0].name;\r\n        const name=field[1].name;\r\n        const docNum=field[2].name;\r\n        const docDate=field[3].name;\r\n        const type=field[4].name;\r\n        const method=field[5].name;\r\n        const transactionID=field[6].name;\r\n        const amount=field[7].name;\r\n\r\n        const receiptData=resultInput['data'][1];\r\n        const receiptField=resultInput['field'][1];\r\n        const receiptDocNum=receiptField[0].name;\r\n        const receiptDataDocNum=receiptField[1].name;\r\n        const receiptDataType=receiptField[2].name;\r\n        const receiptDataDate=receiptField[3].name;\r\n        const receiptDataCreditTerm=receiptField[4].name;\r\n        const receiptDataAmount=receiptField[5].name;\r\n        const receiptAmount=receiptField[6].name;\r\n\r\n        function populateDebtor() {\r\n            const debtorAlreadyParsed=[];\r\n            const result=[];\r\n\r\n            data.forEach(item=>{\r\n                if(debtorAlreadyParsed.indexOf(item[debtorNum])===-1)  {\r\n                    debtorAlreadyParsed.push(item[debtorNum]);\r\n                    result.push(\r\n                        <div key={item[debtorNum]}>\r\n                            <div className='d-flex' style={{cursor:'pointer'}} data-toggle='collapse' data-target={'#'+item[debtorNum].replace(/[ ._\\-()]/g,'')}>\r\n                                <i className='fa fa-plus-square mt-1' style={{flex:'0 0 14px',paddingLeft:10,paddingRight:10}}\r\n                                id={'plusminus'+item[debtorNum].replace(/[ ._\\-()]/g,'')}></i>\r\n                                <p className='mb-0' style={{flex:'0 0 120px',paddingLeft:10,paddingRight:10}}>{item[debtorNum]}</p>\r\n                                <p className='mb-0 col' style={{paddingLeft:10,paddingRight:10}}>{item[name]}</p>\r\n                                <p className='mb-0' style={{flex:'0 0 150px',paddingLeft:10,paddingRight:10}}>\r\n                                    {numberFormatParser(data.reduce((a,b)=>{\r\n                                        if (b[debtorNum]===item[debtorNum]) \r\n                                            return a+b[amount]\r\n                                        else return a \r\n                                    },0)\r\n                                    )}\r\n                                    </p>\r\n                            </div>\r\n                            <div className='collapse navbar-collapse my-2 pl-3 pl-md-5' \r\n                            id={item[debtorNum].replace(/[ ._\\-()]/g,'')}>\r\n                                <div className='row flex-nowrap text-white bg-secondary pt-2 pb-1' \r\n                                    style={{marginLeft:0,marginRight:0,}}>\r\n                                    <h6 style={{flex:'0 0 34px',paddingLeft:10,paddingRight:10}}></h6>\r\n                                    <h6 style={{flex:'1 0 70px',paddingLeft:10,paddingRight:10}}></h6>\r\n                                    <h6 style={{flex:'1 0 130px',paddingLeft:10,paddingRight:10,cursor:'pointer'}}\r\n                                        data-order='asc' onClick={(e)=>{\r\n                                        const id='receiptNo'+item[debtorNum].replace(/[ ._\\-()]/g,'');\r\n\r\n                                        e.target.setAttribute('data-order',\r\n                                        e.target.getAttribute('data-order')==='asc'?'desc':'asc')\r\n\r\n                                        let sortedData={}\r\n                                        sortedData[item[debtorNum]]=sortData(resultInput[item[debtorNum]],docNum,e.target.getAttribute('data-order'))\r\n                                        \r\n                                        changeResultInput(Object.assign({},resultInput,sortedData))\r\n                                        if (e.target.getAttribute('data-order')==='asc') {\r\n                                            document.getElementById(id).classList.remove('fa-caret-up');\r\n                                            document.getElementById(id).classList.add('fa-caret-down')\r\n                                        }\r\n                                        else {\r\n                                            document.getElementById(id).classList.remove('fa-caret-down');\r\n                                            document.getElementById(id).classList.add('fa-caret-up')\r\n                                        }\r\n                                    }\r\n                                    }>\r\n                                        Receipt No.\r\n                                        <i id={'receiptNo'+item[debtorNum].replace(/[ ._\\-()]/g,'')} \r\n                                        className='fa fa-caret-down ml-2'></i>\r\n                                    </h6>\r\n\r\n                                    <h6 style={{flex:'1 0 120px',paddingLeft:10,paddingRight:10,cursor:'pointer'}}\r\n                                        data-order='asc' onClick={(e)=>{\r\n                                        const id='date'+item[debtorNum].replace(/[ ._\\-()]/g,'');\r\n                                        e.target.setAttribute('data-order',\r\n                                        e.target.getAttribute('data-order')==='asc'?'desc':'asc')\r\n\r\n                                        let sortedData={}\r\n                                        sortedData[item[debtorNum]]=sortData(resultInput[item[debtorNum]],docDate,e.target.getAttribute('data-order'))\r\n                                        \r\n                                        changeResultInput(Object.assign({},resultInput,sortedData))\r\n                                        if (e.target.getAttribute('data-order')==='asc') {\r\n                                            document.getElementById(id).classList.remove('fa-caret-up');\r\n                                            document.getElementById(id).classList.add('fa-caret-down')\r\n                                        }\r\n                                        else {\r\n                                            document.getElementById(id).classList.remove('fa-caret-down');\r\n                                            document.getElementById(id).classList.add('fa-caret-up')\r\n                                        }\r\n                                    }\r\n                                    }>\r\n                                        Date\r\n                                        <i id={'date'+item[debtorNum].replace(/[ ._\\-()]/g,'')} className='fa fa-caret-down ml-2'></i>\r\n                                    </h6>\r\n\r\n                                    <h6 style={{flex:'1 0 120px',paddingLeft:10,paddingRight:10,cursor:'pointer'}}\r\n                                        data-order='asc' onClick={(e)=>{\r\n                                        const id='type'+item[debtorNum].replace(/[ ._\\-()]/g,'');\r\n                                        e.target.setAttribute('data-order',\r\n                                        e.target.getAttribute('data-order')==='asc'?'desc':'asc')\r\n\r\n                                        let sortedData={}\r\n                                        sortedData[item[debtorNum]]=sortData(resultInput[item[debtorNum]],type,e.target.getAttribute('data-order'))\r\n                                        \r\n                                        changeResultInput(Object.assign({},resultInput,sortedData))\r\n                                        if (e.target.getAttribute('data-order')==='asc') {\r\n                                            document.getElementById(id).classList.remove('fa-caret-up');\r\n                                            document.getElementById(id).classList.add('fa-caret-down')\r\n                                        }\r\n                                        else {\r\n                                            document.getElementById(id).classList.remove('fa-caret-down');\r\n                                            document.getElementById(id).classList.add('fa-caret-up')\r\n                                        }\r\n                                    }\r\n                                    }>\r\n                                        Type\r\n                                        <i id={'type'+item[debtorNum].replace(/[ ._\\-()]/g,'')} className='fa fa-caret-down ml-2'></i>\r\n                                    </h6>\r\n\r\n                                    <h6 style={{flex:'1 0 120px',paddingLeft:10,paddingRight:10,cursor:'pointer'}}\r\n                                        data-order='asc' onClick={(e)=>{\r\n                                        const id='method'+item[debtorNum].replace(/[ ._\\-()]/g,'');\r\n                                        e.target.setAttribute('data-order',\r\n                                        e.target.getAttribute('data-order')==='asc'?'desc':'asc')\r\n\r\n                                        let sortedData={}\r\n                                        sortedData[item[debtorNum]]=sortData(resultInput[item[debtorNum]],method,e.target.getAttribute('data-order'))\r\n                                        \r\n                                        changeResultInput(Object.assign({},resultInput,sortedData))\r\n                                        if (e.target.getAttribute('data-order')==='asc') {\r\n                                            document.getElementById(id).classList.remove('fa-caret-up');\r\n                                            document.getElementById(id).classList.add('fa-caret-down')\r\n                                        }\r\n                                        else {\r\n                                            document.getElementById(id).classList.remove('fa-caret-down');\r\n                                            document.getElementById(id).classList.add('fa-caret-up')\r\n                                        }\r\n                                    }\r\n                                    }>\r\n                                        Method\r\n                                        <i id={'method'+item[debtorNum].replace(/[ ._\\-()]/g,'')} className='fa fa-caret-down ml-2'></i>\r\n                                    </h6>\r\n\r\n                                    <h6 style={{flex:'1 0 150px',paddingLeft:10,paddingRight:10,cursor:'pointer'}}\r\n                                        data-order='asc' onClick={(e)=>{\r\n                                        const id='transactionID'+item[debtorNum].replace(/[ ._\\-()]/g,'');\r\n                                        e.target.setAttribute('data-order',\r\n                                        e.target.getAttribute('data-order')==='asc'?'desc':'asc')\r\n\r\n                                        let sortedData={}\r\n                                        sortedData[item[debtorNum]]=sortData(resultInput[item[debtorNum]],transactionID,e.target.getAttribute('data-order'))\r\n                                        \r\n                                        changeResultInput(Object.assign({},resultInput,sortedData))\r\n                                        if (e.target.getAttribute('data-order')==='asc') {\r\n                                            document.getElementById(id).classList.remove('fa-caret-up');\r\n                                            document.getElementById(id).classList.add('fa-caret-down')\r\n                                        }\r\n                                        else {\r\n                                            document.getElementById(id).classList.remove('fa-caret-down');\r\n                                            document.getElementById(id).classList.add('fa-caret-up')\r\n                                        }\r\n                                    }\r\n                                    }>\r\n                                        Transaction ID\r\n                                        <i id={'transactionID'+item[debtorNum].replace(/[ ._\\-()]/g,'')} className='fa fa-caret-down ml-2'></i>\r\n                                    </h6>\r\n\r\n                                    <h6 style={{flex:'1 0 120px',paddingLeft:10,paddingRight:10,cursor:'pointer'}}\r\n                                        data-order='asc' onClick={(e)=>{\r\n                                        const id='amount'+item[debtorNum].replace(/[ ._\\-()]/g,'');    \r\n                                        e.target.setAttribute('data-order',\r\n                                        e.target.getAttribute('data-order')==='asc'?'desc':'asc')\r\n\r\n                                        let sortedData={}\r\n                                        sortedData[item[debtorNum]]=sortData(resultInput[item[debtorNum]],amount,e.target.getAttribute('data-order'))\r\n                                        \r\n                                        changeResultInput(Object.assign({},resultInput,sortedData))\r\n                                        if (e.target.getAttribute('data-order')==='asc') {\r\n                                            document.getElementById(id).classList.remove('fa-caret-up');\r\n                                            document.getElementById(id).classList.add('fa-caret-down')\r\n                                        }\r\n                                        else {\r\n                                            document.getElementById(id).classList.remove('fa-caret-down');\r\n                                            document.getElementById(id).classList.add('fa-caret-up')\r\n                                        }\r\n                                    }\r\n                                    }>\r\n                                        Amount\r\n                                        <i id={'amount'+item[debtorNum].replace(/[ ._\\-()]/g,'')} className='fa fa-caret-down ml-2'></i>\r\n                                    </h6>\r\n                                </div>\r\n                                {resultInput[item[debtorNum]].map(item2=>{\r\n                                    return (\r\n                                        <div key={item2[docNum]}>\r\n                                            <div className='d-flex' style={{cursor:'pointer'}}\r\n                                            data-toggle='collapse' data-target={'#'+item2[docNum].replace(/[ ._\\-()]/g,'')}>\r\n                                                <i className='fa fa-plus-square pt-2' \r\n                                                style={{flex:'0 0 14px',paddingLeft:10,paddingRight:10,cursor:'pointer'}}\r\n                                                id={'plusminus'+item2[docNum].replace(/[ ._\\-()]/g,'')}></i>\r\n                                                <button className='btn btn-dark btn-sm my-1' style={{flex:'1 0 50px',marginLeft:10,marginRight:10}} \r\n                                                onClick={(e)=>history.push('./'+createLink(item2[type].toLowerCase(),item2[docNum]))\r\n                                                }>VIEW</button>\r\n                                                <p className='py-2 mb-0' style={{flex:'1 0 130px',paddingLeft:10,paddingRight:10}}>\r\n                                                    {item2[docNum]}\r\n                                                </p>\r\n                                                <p className='py-2 mb-0' style={{flex:'1 0 120px',paddingLeft:10,paddingRight:10}}>\r\n                                                    {dateFormatParser(item2[docDate])}\r\n                                                    </p>\r\n                                                <p className='py-2 mb-0' style={{flex:'1 0 120px',paddingLeft:10,paddingRight:10}}>\r\n                                                    {item2[type]}\r\n                                                </p>\r\n                                                <p className='py-2 mb-0' style={{flex:'1 0 120px',paddingLeft:10,paddingRight:10}}>\r\n                                                    {item2[method]}\r\n                                                </p>\r\n                                                <p className='py-2 mb-0' style={{flex:'1 0 150px',paddingLeft:10,paddingRight:10}}>\r\n                                                    {item2[transactionID]}\r\n                                                </p>\r\n                                                <p className='py-2 mb-0' style={{flex:'1 0 120px',paddingLeft:10,paddingRight:10}}>\r\n                                                    {item2[amount]}\r\n                                                </p>\r\n                                                \r\n                                            </div>\r\n                                            <div className='collapse navbar-collapse my-2 pl-3 pl-md-5' \r\n                                            id={item2[docNum].replace(/[ ._\\-()]/g,'')}>\r\n                                                <table className='table table-hover'>\r\n                                                    <thead>\r\n                                                        <tr>\r\n                                                            <th className='text-nowrap'>Doc No.</th>\r\n                                                            <th className='text-nowrap'>Type</th>\r\n                                                            <th className='text-nowrap'>Doc Date</th>\r\n                                                            <th className='text-nowrap'>Due Date</th>\r\n                                                            <th className='text-nowrap'>Credit Term</th>\r\n                                                            <th className='text-nowrap'>Doc Amount</th>\r\n                                                            <th className='text-nowrap'>Receipt Amount</th>\r\n                                                        </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                        {receiptData.map(item3=>{\r\n                                                            if(item3[receiptDocNum]===item2[docNum]) \r\n                                                            return (\r\n                                                                <tr key={item3[receiptDataDocNum]} style={{cursor:'pointer'}} onClick={(e)=>\r\n                                                                    history.push('./'+createLink(item3[receiptDataType].toLowerCase(),item3[receiptDataDocNum]))\r\n                                                                }>\r\n                                                                    <td className='text-nowrap'>{item3[receiptDataDocNum]}</td>\r\n                                                                    <td className='text-nowrap'>{item3[receiptDataType]}</td>\r\n                                                                    <td className='text-nowrap'>{dateFormatParser(item3[receiptDataDate])}</td>\r\n                                                                    <td className='text-nowrap'>{\r\n                                                                     item3[receiptDataCreditTerm] && item3[receiptDataCreditTerm]!=='COD'? \r\n                                                                     dateFormatParser(getFormattedDate(\r\n                                                                             new Date(new Date(item3[receiptDataDate])\r\n                                                                             .setDate(new Date(item3[receiptDataDate]).getDate()\r\n                                                                             +Number(item3[receiptDataCreditTerm]))))\r\n                                                                         ):dateFormatParser(item3[receiptDataDate])\r\n                                                                    }</td>\r\n                                                                    <td className='text-nowrap'>{\r\n                                                                    item3[receiptDataCreditTerm]==='COD'?'C.O.D.':item3[receiptDataCreditTerm]+' days'}\r\n                                                                    </td>\r\n                                                                    <td className='text-nowrap'>{numberFormatParser(item3[receiptDataAmount])}</td>\r\n                                                                    <td className='text-nowrap'>{numberFormatParser(item3[receiptAmount])}</td>\r\n                                                                </tr>\r\n                                                            )\r\n                                                        })}\r\n                                                    </tbody>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                        \r\n                                    )\r\n                                })}\r\n                            </div>\r\n                        </div>\r\n\r\n                            \r\n                        \r\n                    )}\r\n            })\r\n            return result;\r\n        }\r\n        \r\n\r\n        return (\r\n            <div className=\"overflow-auto mb-5 pt-3\" style={{transform:'rotateX(180deg)'}}>\r\n                <div style={{width:calculatedWidth,transform:'rotateX(180deg)'}}>\r\n                    <div className='row flex-nowrap text-white bg-secondary pt-2 pb-1' \r\n                    style={{marginLeft:0,marginRight:0,}}>\r\n                        <h6 style={{flex:'0 0 34px',paddingLeft:10,paddingRight:10}}></h6>\r\n                        <h6 style={{flex:'0 0 120px',paddingLeft:10,paddingRight:10,cursor:'pointer'}}\r\n                            data-order='asc' onClick={(e)=>{\r\n                            e.target.setAttribute('data-order',\r\n                            e.target.getAttribute('data-order')==='asc'?'desc':'asc')\r\n                            resultInput['data'][0]=sortData(resultInput['data'][0],debtorNum,e.target.getAttribute('data-order'))\r\n                            changeResultInput({...resultInput})\r\n                                if (e.target.getAttribute('data-order')==='asc') {\r\n                                    document.getElementById('debtorNo').classList.remove('fa-caret-up');\r\n                                    document.getElementById('debtorNo').classList.add('fa-caret-down')\r\n                                }\r\n                                else {\r\n                                    document.getElementById('debtorNo').classList.remove('fa-caret-down');\r\n                                    document.getElementById('debtorNo').classList.add('fa-caret-up')\r\n                                }\r\n                            }\r\n                                    \r\n                            }>\r\n                            Debtor No.\r\n                            <i id='debtorNo' className='fa fa-caret-down ml-2'></i>\r\n                        </h6>\r\n                        <h6 className='col' style={{paddingLeft:10,paddingRight:10,cursor:'pointer'}}\r\n                        data-order='asc' onClick={(e)=>{\r\n                            e.target.setAttribute('data-order',\r\n                            e.target.getAttribute('data-order')==='asc'?'desc':'asc')\r\n                            resultInput['data'][0]=sortData(resultInput['data'][0],name,e.target.getAttribute('data-order'))\r\n                            changeResultInput({...resultInput})\r\n                                if (e.target.getAttribute('data-order')==='asc') {\r\n                                    document.getElementById('name').classList.remove('fa-caret-up');\r\n                                    document.getElementById('name').classList.add('fa-caret-down')\r\n                                }\r\n                                else {\r\n                                    document.getElementById('name').classList.remove('fa-caret-down');\r\n                                    document.getElementById('name').classList.add('fa-caret-up')\r\n                                }\r\n                            }\r\n                            }>\r\n                            Name\r\n                            <i id='name' className='fa fa-caret-down ml-2'></i>\r\n                        </h6>\r\n                        <h6 style={{flex:'0 0 150px',paddingLeft:10,paddingRight:10}}>Receipt Amount</h6>\r\n                    </div>\r\n                    <div style={{overflowY:'auto',overflowX:'hidden',maxHeight:'60vh'}}>\r\n                        {populateDebtor()}\r\n                    </div>\r\n                </div>\r\n            </div>)\r\n    }\r\n\r\n    let errorDisplay=null;\r\n\r\n    if ((dataSelectDebtor && dataSelectDebtor.error) || errorSelectDebtor || \r\n    (dataSelectDebtorCollection && dataSelectDebtorCollection.error) || errorSelectDebtorCollection )\r\n    errorDisplay=(\r\n        <div className=\"alert alert-warning\">\r\n            {dataSelectDebtor && dataSelectDebtor.error? 'Debtor List RETRIEVAL for item failed errno: '+dataSelectDebtor.error.errno\r\n            +' code: '+dataSelectDebtor.error.code+' message: '+dataSelectDebtor.error.sqlMessage:null}\r\n            {errorSelectDebtor? 'Debtor List RETRIEVAL for item failed '+errorSelectDebtor : null}\r\n            <br/>\r\n            <br/>\r\n            {dataSelectDebtorCollection && dataSelectDebtorCollection.error? 'Debtor Collection RETRIEVAL for item failed errno: '+dataSelectDebtorCollection.error.errno\r\n            +' code: '+dataSelectDebtorCollection.error.code+' message: '+dataSelectDebtorCollection.error.sqlMessage:null}\r\n            {errorSelectDebtorCollection? 'Debtor Collection RETRIEVAL for item failed '+errorSelectDebtorCollection : null}\r\n\r\n        </div>\r\n    )\r\n\r\n    return (\r\n        <Switch>\r\n            <Route exact path={`${path}/Preview`}>\r\n                {resultInput? \r\n                (<DebtorCollectionOne\r\n                    backPath={DebtorCollectionReport.path}\r\n                    description={DebtorCollectionReport.description}\r\n                    resultInput={resultInput}\r\n                    withReceiptDetails={withReceiptDetails}\r\n                    data={sortData(resultInput['dataPreview'][0],sortCriteria,'asc')}\r\n                    dataDetail={sortData(resultInput['dataPreview'][0],detailSortCriteria,'asc')}\r\n                    field={resultInput['field'][0]}\r\n                    receiptData={resultInput['dataPreview'][1]}\r\n                    receiptField={resultInput['field'][1]}\r\n                    getFormattedDate={getFormattedDate}\r\n                   \r\n                    \r\n                />):<Redirect to={DebtorCollectionReport.path}/>}\r\n            </Route>\r\n\r\n            <Route exact path={path}>\r\n                <AppLayout>\r\n                    <div className='container pt-3' style={{paddingLeft:20,paddingRight:20}}>\r\n                        <h3>{DebtorCollectionReport.description}</h3>\r\n                        <form className='mt-3' onSubmit={e=>{\r\n                        e.preventDefault();\r\n                        changeGenerateReportWarning(false);\r\n                        changeParamDebtorCollection({\r\n                            url:'./ReportItem',\r\n                            init:{\r\n                                method:'POST',\r\n                                headers:{'Content-Type':'application/json'},\r\n                                body:JSON.stringify({\r\n                                    item:'debtor_collection',\r\n                                    param:[dateStart,dateEnd,debtorID]\r\n                                }),\r\n                                credentials:'include'\r\n                            }\r\n                        })\r\n                        \r\n                        }}>\r\n                            <div className='form-group form-row mx-0'>\r\n                                <label className='col-md-2 col-form-label' style={{paddingLeft:0}} htmlFor='dateStart'>Date Start</label>\r\n                                <input type='date' id='dateStart' required onChange={(e)=>{\r\n                                    if (new Date(e.target.value)>new Date(dateEnd)) {\r\n                                        alert('Invalid Date Start Entry')\r\n                                        changeDateStart(new Date().getFullYear()+'-01-01')\r\n                                    }\r\n                                    else changeDateStart(e.target.value)\r\n                                }} \r\n                                    value={dateStart} required className='form-control col-md-3 mb-3 mb-md-0'/>\r\n                                <label className='offset-md-1 col-md-2 col-form-label' style={{paddingLeft:0}} htmlFor='dateEnd'>Date End</label>\r\n                                <input type='date' id='dateEnd' required onChange={(e)=>{\r\n                                    if (new Date(e.target.value)<new Date(dateStart)) {\r\n                                        alert('Invalid Date End Entry')\r\n                                        changeDateEnd(getFormattedDate(new Date()))\r\n                                    }\r\n                                    else changeDateEnd(e.target.value)\r\n                                }} value={dateEnd} required className='form-control col-md-3 mb-3 mb-md-0'/>\r\n                            </div>\r\n\r\n                            <div className='form-group form-row mx-0'>\r\n                                <label className='col-md-2 col-form-label' style={{paddingLeft:0}} htmlFor='debtorID'>Debtor ID</label>\r\n                                <select className='form-control col-md-4' required size='3' value={debtorID} multiple={true} onChange={e=>{\r\n                                    let result=[];\r\n                                    Array.from(e.target.options).map(option=>{\r\n                                        if (option.selected===true) \r\n                                            result.push(option.value) \r\n                                    })\r\n                                    changeDebtorID(result);\r\n                                }}>\r\n                                    {debtorList}\r\n                                </select>\r\n                            </div>\r\n\r\n                            <div className='form-group form-row mx-0'>\r\n                                <div className='form-check offset-md-2'>\r\n                                    <input type='checkbox' className=' form-check-input' id='allDebtorID' onChange={e=>{\r\n                                        if (e.target.checked) \r\n                                            changeDebtorID(dataSelectDebtor.data.map(data=>\r\n                                                data[dataSelectDebtor.field[0].name]\r\n                                                ))\r\n                                        else changeDebtorID([])\r\n                                    }}/>\r\n                                    <label htmlFor='allDebtorID' style={{paddingLeft:0}} className='form-check-label'>\r\n                                        All Debtor ID\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <fieldset className='form-group pl-4 pb-3 border border-secondary rounded col-md-8'>\r\n                                <legend className='col-form-label col-md-6 offset-md-3 col-8 offset-2 text-center'>\r\n                                    <h6>Preview Options</h6>\r\n                                </legend>\r\n                                <div className='form-row'>\r\n                                <div className='form-check col-md-12 form-group col-form-label' style={{paddingLeft:20}}>\r\n                                    <input type='checkbox' className='form-check-input' id='withReceiptDetails' onChange={e=>{\r\n                                        if (e.target.checked) \r\n                                            changeWithReceiptDetails(true)\r\n                                        else changeWithReceiptDetails(false)\r\n                                        }} checked={withReceiptDetails}/>\r\n                                    <label htmlFor='withReceiptDetails' className='form-check-label'>With Receipt Details</label>\r\n                                </div>\r\n\r\n                                <div className='form-group form-row col-md-6'>\r\n                                    <label className='col-md-4 col-form-label' style={{paddingLeft:0}} htmlFor='sort'>\r\n                                        Sort\r\n                                    </label>\r\n                                    <select id='sort' className='form-control col-md-6' value={sortCriteria} onChange={e=>\r\n                                        changeSortCriteria(e.target.value)\r\n                                    }>\r\n                                        <option value=''> -select an option- </option>\r\n                                        {sortCriteriaList}\r\n                                    </select>\r\n                                </div>\r\n\r\n                                <div className='form-group col-md-6 form-row'>\r\n                                    <label className='col-md-4 col-form-label' style={{paddingLeft:0}} htmlFor='sort'>\r\n                                        Detail Sort\r\n                                    </label>\r\n                                    <select id='sort' className='form-control col-md-6' value={detailSortCriteria} onChange={e=>\r\n                                        changeDetailSortCriteria(e.target.value)\r\n                                    }>\r\n                                        <option value=''> -select an option- </option> \r\n                                        {detailSortCriteriaList}\r\n                                    </select>\r\n                                </div>\r\n                                </div>\r\n\r\n                            </fieldset>\r\n\r\n                            <button type='submit' className='btn btn-primary mx-2'>Generate</button>\r\n                            <button type='button' className='btn btn-warning' onClick={e=>\r\n                                changeResultInput(null)}>Clear</button>\r\n                            <button type='button' onClick={(e)=>{\r\n                                if (!resultInput) {\r\n                                    changeGenerateReportWarning(true)\r\n                                }\r\n                                else {\r\n                                    document.querySelector(\"meta[name=viewport]\").setAttribute(\r\n                                    'content','width=device-width, initial-scale=0.4');\r\n                                    setPageSize('a4 landscape')\r\n                                    history.push('./DebtorCollectionReport/Preview')\r\n                                }}\r\n                            } \r\n                            className='btn btn-info mx-1 my-1'>Preview</button>\r\n                            {generateReportWarning? \r\n                            (<div className=\"alert alert-warning\">\r\n                                Please generate report first!\r\n                            </div>):null}\r\n                        </form>\r\n                        \r\n                        <hr/>\r\n                        {errorDisplay}\r\n\r\n                        {resultInput? \r\n                        (<div className='mb-5'>\r\n                            <h5 className='py-2'>\r\n                                Result\r\n                                <button className='btn btn-dark mx-2' \r\n                                    onClick={(e)=>collapsibleElementID.forEach(ID=>\r\n                                        $('#'+ID).collapse('show')\r\n                                )}><i className='fa fa-plus-square'></i> Expand</button>\r\n                                <button className='btn btn-light'  \r\n                                    onClick={(e)=>collapsibleElementID.forEach(ID=>\r\n                                        $('#'+ID).collapse('hide')\r\n                                )}> <i className='fa fa-minus-square'></i> Collapse</button>\r\n                            </h5>\r\n                            {populateResult()}\r\n                            \r\n                        </div>):null\r\n                        }\r\n                        <hr className='pb-3'/>\r\n                    </div>\r\n                </AppLayout>\r\n            </Route>\r\n            <Redirect to={DebtorCollectionReport.path}/>\r\n        </Switch>\r\n    )\r\n}\r\nDebtorCollectionReport.description='Debtor Collection Report';\r\nDebtorCollectionReport.path='/DebtorCollectionReport';\r\n\r\nexport default DebtorCollectionReport;\r\n","import React,{useState} from 'react';\r\nimport Item from '../Shared/Item';\r\nimport ItemButton from '../Shared/ItemButton';\r\nimport AppLayout from '../Shared/AppLayout';\r\n\r\nfunction DebtorItem (props) {\r\n\r\n    const url={\r\n        item:new URLSearchParams(props.location.search).get('item'),\r\n        id:new URLSearchParams(props.location.search).get('id'),\r\n    }\r\n    \r\n    const [inputState,changeInputState]=useState(['','','','','','','','COD','',''])\r\n\r\n    function onChange(value,order) {\r\n        changeInputState([...inputState.slice(0,order),value,...inputState.slice(order+1,inputState.length)])\r\n    }\r\n\r\n    return (\r\n        <Item inputState={inputState} changeInputState={changeInputState} url={url} item='debtor' successPath='/DebtorMaintenance'>\r\n            {\r\n            ({usage,disabled,changeDisabled,onInsert,onUpdate,onDelete,errorDisplay,inputNumberRender})=> \r\n            (<AppLayout >\r\n                <div className='container pb-5 px-md-5'>\r\n\r\n                    {/*Heading renders depending on INSERT or UPDATE/DELETE state*/}\r\n\r\n                    <h3 className='my-3'>{(usage==='INSERT'? 'Create':'Update') + ' '+ DebtorItem.description}</h3>\r\n                    <small className='text-warning'>* required</small>\r\n                    {errorDisplay}\r\n\r\n                    {/*onInsert and onUpdate needs to be attached to HTML form onSubmit eventhandler since native HTML form \r\n                    validation only works if submit event is handled here*/}\r\n\r\n                    <form onSubmit={(e)=>{e.preventDefault(); if(usage==='INSERT') onInsert(); else onUpdate()}}>\r\n                        <div className='form-group form-row'>\r\n                            <label className='col-md-2 col-form-label' htmlFor='debtorNumber' >Debtor Number <span className='text-warning'>*</span></label>\r\n                            {inputNumberRender({\r\n                                onChange:onChange,\r\n                                layout:'col-md-4',\r\n                                position:0,\r\n                                labelID:'debtorNumber'\r\n                            })\r\n                            }\r\n                        </div>\r\n                        <div className='form-group form-row'>\r\n                            <label className='col-md-2 col-form-label' htmlFor='name'>Name <span className='text-warning'>*</span></label>\r\n                            <div className='col-md-10'>\r\n                                <input type='text' id='name' onChange={(e)=>\r\n                                onChange(e.target.value,1)} value={inputState[1]} disabled={disabled} required className='form-control'/>\r\n                            </div>\r\n                        </div>\r\n                        <div className='form-group form-row'>\r\n                            <label className='col-md-2 col-form-label' htmlFor='address'>Address <span className='text-warning'>*</span></label>\r\n                            <div className='col-md-10'>\r\n                                <textarea id='address' onChange={(e)=>\r\n                                onChange(e.target.value,2)} \r\n                                value={inputState[2]} disabled={disabled} required className='form-control'/>\r\n                            </div>\r\n                        </div>\r\n                        <div className='form-group form-row'>\r\n                            <label className='col-md-2 col-form-label' htmlFor='postcode'>Postcode <span className='text-warning'>*</span></label>\r\n                            <div className='col-md-4'>\r\n                                <input type='text' maxLength='5' id='postcode' onChange={(e)=>\r\n                                onChange(e.target.value,3)} value={inputState[3]} disabled={disabled} required className='form-control'/>\r\n                            </div>\r\n                            <label className='col-md-2 col-form-label text-md-center' htmlFor='phone'>Phone <span className='text-warning'>*</span></label>\r\n                            <div className='col-md-4'>\r\n                                <input type='text' id='phone' maxLength='15' onChange={(e)=>onChange(e.target.value,4)} \r\n                                value={inputState[4]} disabled={disabled} required className='form-control'/>\r\n                            </div>\r\n                        </div>\r\n                        <div className='form-group form-row'>\r\n                            <label className='col-md-2 col-form-label' htmlFor='fax'>Fax</label>\r\n                            <div className='col-md-4'>\r\n                                <input type='text' id='fax' maxLength='15' onChange={(e)=>\r\n                                onChange(e.target.value,5)} value={inputState[5]} disabled={disabled} className='form-control'/>\r\n                            </div>\r\n                            <label className='col-md-2 col-form-label text-md-center' htmlFor='creditTerm'>Credit Term</label>\r\n                            <div className='col-md-4'>\r\n                                <select id='creditTerm' onChange={(e)=> onChange(e.target.value,7)} value={inputState[7]} disabled={disabled} \r\n                                className='form-control'>\r\n                                    <option value='COD'>C.O.D.</option>\r\n                                    <option value='30'>30 Days</option>\r\n                                    <option value='45'>45 Days</option>\r\n                                    <option value='60'>60 Days</option>\r\n                                    <option value='90'>90 Days</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <div className='form-group form-row'>\r\n                            <label className='col-md-2 col-form-label' htmlFor='otherDesc'>Other Description</label>\r\n                            <div className='col-md-10'>\r\n                                <textarea id='otherDesc' onChange={(e)=>\r\n                                onChange(e.target.value,6)} \r\n                                value={inputState[6]} disabled={disabled} className='form-control'/>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <ItemButton usage={usage} onInsert={onInsert} onUpdate={onUpdate} onDelete={onDelete} changeDisabled={changeDisabled}/>\r\n                        \r\n                        \r\n                        \r\n                    </form>\r\n                </div>\r\n            </AppLayout>)\r\n            }\r\n        \r\n        </Item>\r\n    )\r\n}\r\nDebtorItem.description='Debtor Item';\r\nDebtorItem.path='/DebtorItem';\r\n\r\nexport default DebtorItem;","import React from 'react';\r\nimport AppLayout from '../Shared/AppLayout';\r\nimport Process from '../Shared/Process';\r\nimport ProcessLayout from '../Shared/ProcessLayout';\r\n\r\nfunction CreditorMaintenance(props) {\r\n    return (\r\n            <AppLayout>\r\n                <Process createItemPath='./CreditorItem' item='creditor'\r\n                render={(list)=>{\r\n                    return (\r\n                    <ProcessLayout description={CreditorMaintenance.description} listname={'Creditor'} {...list}/>\r\n                    )}\r\n                }/>\r\n            </AppLayout>\r\n    )\r\n}\r\n                \r\n            \r\n\r\nCreditorMaintenance.description='Creditor Maintenance';\r\nCreditorMaintenance.path='/CreditorMaintenance';\r\n\r\nexport default CreditorMaintenance;","import React,{useState,useContext,useEffect} from 'react';\r\nimport AppLayout from '../Shared/AppLayout'\r\nimport {\r\n    Switch,\r\n    Route,\r\n    useRouteMatch,\r\n    Redirect\r\n} from 'react-router-dom';\r\nimport useFetch from '../Shared/useFetch';\r\nimport authContext from '../Shared/authContext';\r\nimport {useHistory} from 'react-router-dom';\r\nimport $ from 'jquery'\r\nimport numberFormatParser from '../Shared/numberFormatParser';\r\nimport dateFormatParser from '../Shared/dateFormatParser';\r\nimport sortData from '../Shared/sort';\r\nimport setPageSize from '../Shared/setPageSize';\r\nimport DebtorCreditorAgingOne from '../Shared/preview/DebtorCreditorAgingOne';\r\n\r\nfunction CreditorAgingReport(props) {\r\n    const [{data:dataSelectCreditor,error:errorSelectCreditor}]=useFetch({\r\n        url:'./SelectItem',\r\n        init:{\r\n            method:'POST',\r\n            headers:{'Content-Type':'application/json'},\r\n            body:JSON.stringify({item:'creditor'}),\r\n            credentials:'include'\r\n        }\r\n    });\r\n\r\n    const [{data:dataSelectCreditorAging,error:errorSelectCreditorAging},changeParamCreditorAging]=useFetch(null);\r\n    \r\n    const [creditorList,changeCreditorList] = useState(null);\r\n\r\n    const [currDate,changeCurrDate] = useState (getFormattedDate(new Date()))\r\n    const [creditorID,changeCreditorID] = useState([]);\r\n    const [agingMonths,changeAgingMonths]=useState(3);\r\n    const [resultInput,changeResultInput]=useState(null);\r\n    const [collapsibleElementID,changeCollapsibleElementID]=useState([])\r\n\r\n    /*Preview states*/\r\n    const [withDetails,changeWithDetails]=useState(false);\r\n    const [sortCriteriaList,changeSortCriteriaList]=useState(null);\r\n    const [detailSortCriteriaList,changeDetailSortCriteriaList]=useState(null);\r\n    const [sortCriteria,changeSortCriteria]=useState('');\r\n    const [detailSortCriteria,changeDetailSortCriteria]=useState('');\r\n    const [generateReportWarning,changeGenerateReportWarning]=useState(false);\r\n\r\n    const {path} = useRouteMatch();\r\n    const {changeAuth} = useContext(authContext);\r\n    const history=useHistory();\r\n\r\n    const calculatedWidth=resultInput && resultInput['agingMonths']? 714+resultInput['agingMonths']*90:'auto';\r\n    \r\n    \r\n    useEffect(()=>{\r\n        \r\n        if (dataSelectCreditor && dataSelectCreditor.auth===false) {\r\n                alert('Cookies Expired or Authorisation invalid. Please Login again!');\r\n                changeAuth(false);\r\n            }\r\n        else if (dataSelectCreditor && dataSelectCreditor.data && dataSelectCreditor.field) \r\n            changeCreditorList(dataSelectCreditor.data.map(data=>(\r\n            <option key={data[dataSelectCreditor.field[0].name]} value={data[dataSelectCreditor.field[0].name]}>\r\n                {data[dataSelectCreditor.field[0].name]+' '+(data[dataSelectCreditor.field[1].name]?data[dataSelectCreditor.field[1].name]:'')}\r\n            </option>)\r\n            )\r\n        )\r\n    },[dataSelectCreditor,errorSelectCreditor])\r\n\r\n    useEffect(()=>{\r\n        if (dataSelectCreditorAging && dataSelectCreditorAging.auth===false) {\r\n                alert('Cookies Expired or Authorisation invalid. Please Login again!');\r\n                changeAuth(false);\r\n            }\r\n        else if (dataSelectCreditorAging && dataSelectCreditorAging.data && dataSelectCreditorAging.field) {\r\n            const creditorAlreadyParsed=[];\r\n            const data=dataSelectCreditorAging.data;\r\n            const field=dataSelectCreditorAging.field;\r\n            const creditorNum=field[0].name;\r\n            const name=field[1].name;\r\n            const docNum=field[2].name;\r\n            const docDate=field[3].name;\r\n            const type=field[4].name;\r\n            /*The 3 useState functions below to create a separate data for each creditor to parse for sorting*/\r\n            /*1) reset to a new object with nothing in it because step 2 will have some previous creditor data in it\r\n            which will be combined with new data when refetched*/\r\n            changeResultInput(resultInput=>{})\r\n\r\n            /*2)for each creditor, assign a property name using the creditor num which will be used to parse the \r\n            relevant data for the relevant creditor (and hence can be sorted separately)*/\r\n            data.forEach(item=>{\r\n                let newObject={}\r\n               if(creditorAlreadyParsed.indexOf(item[creditorNum])===-1) {\r\n                    creditorAlreadyParsed.push(item[creditorNum])\r\n                    newObject[item[creditorNum]]=data.filter(item2=>item2[creditorNum]===item[creditorNum])\r\n                    changeResultInput(resultInput=>(Object.assign({},resultInput,newObject)))\r\n               }\r\n            })\r\n            /*3) add remaining input data to resultInput for rendering*/\r\n            changeResultInput(resultInput=>({...resultInput,\r\n                data:dataSelectCreditorAging.data,\r\n                dataPreview:[...dataSelectCreditorAging.data],\r\n                field:dataSelectCreditorAging.field,\r\n                currDate,\r\n                agingMonths\r\n            }))\r\n\r\n            changeSortCriteriaList(\r\n                (<>\r\n                    <option value={creditorNum}>Creditor No.</option>\r\n                    <option value={name}>Name</option>\r\n                </>)\r\n            )\r\n            changeDetailSortCriteriaList(\r\n                (<>\r\n                    <option value={docNum}>Doc No.</option>\r\n                    <option value={docDate}>Doc Date</option>\r\n                    <option value={type}>Type</option>\r\n                </>)\r\n            )\r\n            changeCollapsibleElementID(creditorAlreadyParsed.map(item=>item.replace(/[ ._\\-()]/g,'')))\r\n        }\r\n    },[dataSelectCreditorAging,errorSelectCreditorAging])\r\n    \r\n    //attach bootstrap/jquery eventlisteners and callbacks\r\n    useEffect(()=>{\r\n        if (collapsibleElementID) {\r\n            collapsibleElementID.forEach(ID=>{\r\n                $('#'+ID).on('show.bs.collapse',e=>{\r\n                    if(e.target===e.currentTarget)\r\n                    $('#plusminus'+ID).removeClass('fa-plus-square').addClass('fa-minus-square');\r\n                })\r\n                $('#'+ID).on('hide.bs.collapse',e=>{\r\n                    if(e.target===e.currentTarget)\r\n                    $('#plusminus'+ID).removeClass('fa-minus-square').addClass('fa-plus-square');\r\n                })\r\n                \r\n        })\r\n    }\r\n    },[resultInput])\r\n\r\n    useEffect(()=>{\r\n        function setScale() {\r\n            document.querySelector(\"meta[name=viewport]\").setAttribute(\r\n                'content','width=device-width, initial-scale=1.0');\r\n        }\r\n        window.addEventListener('popstate',setScale)\r\n        \r\n        return function unattach() {\r\n                window.removeEventListener('popstate',setScale)\r\n            }\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        function setPage() {\r\n            setPageSize(\"a4 portrait\");\r\n        }\r\n        window.addEventListener('popstate',setPage);\r\n\r\n        return function unattach() {\r\n                window.removeEventListener('popstate',setPage)\r\n            }\r\n    },[])\r\n\r\n\r\n\r\n    function getFormattedDate(date) {\r\n        let currDate=new Date(date)\r\n        \r\n        return (currDate.getFullYear()) + (currDate.getMonth() + 1 <10? '-0'+ (currDate.getMonth()+1):'-'+ (currDate.getMonth()+1)) + (currDate.getDate()<10?\r\n        '-0'+currDate.getDate() : '-'+currDate.getDate());\r\n    }\r\n\r\n    function populateMonthsHeader(months) {\r\n        let result=[];\r\n        for(let i=1;i<+(months)+1;i++) {\r\n            result.push(\r\n                (<h6 key={i} style={{flex:'1 0 90px',paddingLeft:10,paddingRight:10}}>{i+' Month'}</h6>)\r\n            )\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function populateMonthsAmount(currDate,creditorID,months,type) {\r\n        let result=[];\r\n        const data=resultInput['data'];\r\n        const field=resultInput['field'];\r\n        const creditorNum=field[0].name;\r\n        const docDate=field[3].name;\r\n        const amount=field[5].name;\r\n        const creditTerm=field[6].name;\r\n\r\n        for(let i=1;i<+(months)+1;i++) {\r\n            let monthAmount=data.reduce((a,b)=>{\r\n                if(b[creditorNum]===creditorID) {\r\n                    \r\n                    let value=calculateAgingMonthsAmount(\r\n                        currDate,\r\n                        b[creditTerm] && b[creditTerm]!=='COD'? \r\n                            getFormattedDate(new Date(new Date(b[docDate])\r\n                            .setDate(new Date(b[docDate]).getDate()+Number(b[creditTerm])))\r\n                            ):b[docDate],\r\n                        b[amount],\r\n                        i\r\n                        )\r\n                        \r\n                    if (value) {\r\n                        return a+b[amount];\r\n                    } else return a\r\n                }\r\n                else return a;\r\n            },0)\r\n\r\n            if (type!=='table') \r\n                result.push(\r\n                   (<p className='mb-0' key={i} style={{flex:'1 0 90px',paddingLeft:10,paddingRight:10}}>\r\n                       {monthAmount?numberFormatParser(monthAmount):''}\r\n                   </p>)\r\n                )\r\n            else result.push(\r\n                (<th className='align-top' key={i}>\r\n                    {monthAmount?numberFormatParser(monthAmount):''}\r\n                </th>)\r\n            )\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function populateTableMonthsHeader(months) {\r\n        let result=[];\r\n        for(let i=1;i<+(months)+1;i++) {\r\n            result.push(\r\n                (<th key={i} className='text-nowrap align-top'>{i+' Month'}</th>)\r\n            )\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function populateTableMonthsAmount(currDate,dueDate,amount,months) {\r\n        let result=[];\r\n        for(let i=1;i<+(months)+1;i++) {\r\n            result.push(\r\n                (<td className='text-nowrap align-top' key={i}>\r\n                    {numberFormatParser(calculateAgingMonthsAmount(currDate,dueDate,amount,i))}\r\n                    </td>)\r\n            )\r\n        }\r\n        return result;\r\n    }\r\n    /*aging is calculated based on last day of the month of the due date*/\r\n    function calculateAgingCurrentAmount(currDate,dueDate,amount) {\r\n        /*currDate string from input type date is slightly diff from string date and produce diff result when both string are \r\n        called with Date() object. Hence perform the following to ensure date objects produced from both string are the same.\r\n        Same with all the calculate methods below*/\r\n       currDate=new Date(new Date(currDate).getFullYear(),new Date(currDate).getMonth(),new Date(currDate).getDate(),0)\r\n        \r\n        if (currDate<=new Date(new Date(dueDate).getFullYear(),(new Date(dueDate).getMonth())+1,0)) {\r\n            return amount;\r\n        }\r\n        else return ''\r\n    }\r\n\r\n    function calculateAgingMonthsAmount(currDate,dueDate,amount,agingMonths) {\r\n       currDate=new Date(new Date(currDate).getFullYear(),new Date(currDate).getMonth(),new Date(currDate).getDate(),0)\r\n        \r\n        if (currDate<=new Date(new Date(dueDate).getFullYear(),(new Date(dueDate).getMonth())+1+agingMonths,0)\r\n        && currDate>new Date(new Date(dueDate).getFullYear(),(new Date(dueDate).getMonth())+agingMonths,0))\r\n            return amount;\r\n\r\n        else return ''\r\n    }\r\n\r\n    function calculateAgingRemainderAmount(currDate,dueDate,amount,months) {\r\n       currDate=new Date(new Date(currDate).getFullYear(),new Date(currDate).getMonth(),new Date(currDate).getDate(),0)\r\n \r\n        if (currDate>new Date(new Date(dueDate).getFullYear(),(new Date(dueDate).getMonth())+months+1,0))\r\n            return amount;\r\n        \r\n        else return ''\r\n    }\r\n\r\n    function createLink(string,id) {\r\n        var WIPstring=string.split(' ');\r\n\r\n        WIPstring=WIPstring.map(string=>{\r\n            return string.toLowerCase()\r\n        })\r\n        WIPstring=WIPstring.map(string=>{\r\n            return string[0].toUpperCase().concat(string.substr(1))\r\n        })\r\n\r\n        return WIPstring.join('')+'Item?item='+string.replace(/ /g,'_')+'&id='+encodeURIComponent(id)\r\n    }\r\n\r\n    function populateCreditor(currDate,agingMonths) {\r\n        const data=resultInput['data'];\r\n        const field=resultInput['field'];\r\n        const creditorNum=field[0].name;\r\n        const name=field[1].name;\r\n        const docNum=field[2].name;\r\n        const docDate=field[3].name;\r\n        const type=field[4].name;\r\n        const amount=field[5].name;\r\n        const creditTerm=field[6].name;\r\n\r\n        const creditorAlreadyParsed=[];\r\n        const result=[];\r\n\r\n        data.forEach(item=>{\r\n            if(creditorAlreadyParsed.indexOf(item[creditorNum])===-1)  {\r\n                creditorAlreadyParsed.push(item[creditorNum]);\r\n                result.push(\r\n                (<div key={item[creditorNum]}>\r\n                    <div className='d-flex' style={{cursor:'pointer'}} data-toggle='collapse' data-target={'#'+item[creditorNum].replace(/[ ._\\-()]/g,'')}>\r\n                        <i className='fa fa-plus-square mt-1' style={{flex:'1 0 14px',paddingLeft:10,paddingRight:10}}\r\n                        id={'plusminus'+item[creditorNum].replace(/[ ._\\-()]/g,'')}></i>\r\n                        <p className='mb-0' style={{flex:'1 0 120px',paddingLeft:10,paddingRight:10}}>{item[creditorNum]}</p>\r\n                        <p className='mb-0' style={{flex:'1 0 200px',paddingLeft:10,paddingRight:10}}>{item[name]}</p>\r\n                        <p className='mb-0' style={{flex:'1 0 90px',paddingLeft:10,paddingRight:10}}>\r\n                            {numberFormatParser(data.reduce((a,b)=>{\r\n                            if(b[creditorNum]===item[creditorNum]) {\r\n                                let value=calculateAgingCurrentAmount(\r\n                                    currDate,\r\n                                    b[creditTerm] && b[creditTerm]!=='COD'? \r\n                                        getFormattedDate(new Date(new Date(b[docDate])\r\n                                        .setDate(new Date(b[docDate]).getDate()+Number(b[creditTerm])))\r\n                                        ):b[docDate],\r\n                                    b[amount]\r\n                                    )\r\n\r\n                                if (value) {\r\n                                    return a+b[amount];\r\n                                } else return a\r\n                                    \r\n                            }\r\n                            else return a;\r\n                        },0))\r\n                        }</p>\r\n                        {populateMonthsAmount(\r\n                            currDate,\r\n                            item[creditorNum],\r\n                            Number(agingMonths),\r\n                        )}\r\n                        <p className='mb-0' style={{flex:'1 0 90px',paddingLeft:10,paddingRight:10}}>\r\n                            {numberFormatParser(data.reduce((a,b)=>{\r\n                            if(b[creditorNum]===item[creditorNum]  ) {\r\n                                let value=calculateAgingRemainderAmount(\r\n                                    currDate,\r\n                                    b[creditTerm] && b[creditTerm]!=='COD'? \r\n                                        getFormattedDate(new Date(new Date(b[docDate])\r\n                                        .setDate(new Date(b[docDate]).getDate()+Number(b[creditTerm])))\r\n                                        ):b[docDate],\r\n                                    b[amount],\r\n                                    Number(agingMonths)\r\n                                    )\r\n\r\n                                if (value) {\r\n                                    return a+b[amount];\r\n                                } else return a\r\n                                    \r\n                            }\r\n                            \r\n                            else return a;\r\n                        },0))}</p>\r\n                        <p className='mb-0' style={{flex:'1 0 90px',paddingLeft:10,paddingRight:10}}>\r\n                            {numberFormatParser(\r\n                                data.reduce((a,b)=>{\r\n                                if(b[creditorNum]===item[creditorNum])\r\n                                    return a+b[amount]\r\n                                else return a\r\n                                },0)-\r\n                                data.reduce((a,b)=>{\r\n                                if(b[creditorNum]===item[creditorNum]) {\r\n                                    let value=calculateAgingCurrentAmount(\r\n                                        currDate,\r\n                                        b[creditTerm] && b[creditTerm]!=='COD'? \r\n                                            getFormattedDate(new Date(new Date(b[docDate])\r\n                                            .setDate(new Date(b[docDate]).getDate()+Number(b[creditTerm])))\r\n                                            ):b[docDate],\r\n                                        b[amount]\r\n                                        )\r\n    \r\n                                    if (value) {\r\n                                        return a+b[amount];\r\n                                    } else return a\r\n                                        \r\n                                }\r\n                                else return a;\r\n                            },0)\r\n                            )}\r\n                            </p>\r\n                        <p className='mb-0' style={{flex:'1 0 90px',paddingLeft:10,paddingRight:10}}>\r\n                            {numberFormatParser(\r\n                                data.reduce((a,b)=>{\r\n                                if(b[creditorNum]===item[creditorNum])\r\n                                    return a+b[amount]\r\n                                else return a\r\n                                },0)\r\n                            )}</p>\r\n                    </div>\r\n                    <div className='collapse navbar-collapse my-2 pl-3 pl-md-5 pr-2' \r\n                    id={item[creditorNum].replace(/[ ._\\-()]/g,'')}>\r\n                        <table id='table' className='table-dark table table-hover table-responsive'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th className='text-nowrap' style={{cursor:'pointer'}} data-order='asc'\r\n                                    onClick={(e)=>{\r\n                                        e.target.setAttribute('data-order',\r\n                                        e.target.getAttribute('data-order')==='asc'?'desc':'asc')\r\n                                        let sortedData={}\r\n                                        sortedData[item[creditorNum]]=sortData(resultInput[item[creditorNum]],docNum,e.target.getAttribute('data-order'))\r\n                                        changeResultInput(Object.assign({},resultInput,sortedData))\r\n                    \r\n                                        if (e.target.getAttribute('data-order')==='asc') {\r\n                                            document.getElementById('docNo'+item[creditorNum].replace(/[ ._\\-()]/g,'')).classList.remove('fa-caret-up');\r\n                                            document.getElementById('docNo'+item[creditorNum].replace(/[ ._\\-()]/g,'')).classList.add('fa-caret-down')\r\n                                        }\r\n                                        else {\r\n                                            document.getElementById('docNo'+item[creditorNum].replace(/[ ._\\-()]/g,'')).classList.remove('fa-caret-down');\r\n                                            document.getElementById('docNo'+item[creditorNum].replace(/[ ._\\-()]/g,'')).classList.add('fa-caret-up')\r\n                                        }\r\n                                        }}>\r\n                                        Doc No.\r\n                                        <i id={'docNo'+item[creditorNum].replace(/[ ._\\-()]/g,'')} className='fa fa-caret-down ml-2'></i>\r\n                                    </th>\r\n                                    <th className='text-nowrap' style={{cursor:'pointer'}} data-order='asc'\r\n                                    onClick={(e)=>{\r\n                                        e.target.setAttribute('data-order',\r\n                                        e.target.getAttribute('data-order')==='asc'?'desc':'asc')\r\n                                        let sortedData={}\r\n                                        sortedData[item[creditorNum]]=sortData(resultInput[item[creditorNum]],docDate,e.target.getAttribute('data-order'))\r\n                                        changeResultInput(Object.assign({},resultInput,sortedData))\r\n                    \r\n                                        if (e.target.getAttribute('data-order')==='asc') {\r\n                                            document.getElementById('docDate'+item[creditorNum].replace(/[ ._\\-()]/g,'')).classList.remove('fa-caret-up');\r\n                                            document.getElementById('docDate'+item[creditorNum].replace(/[ ._\\-()]/g,'')).classList.add('fa-caret-down')\r\n                                        }\r\n                                        else {\r\n                                            document.getElementById('docDate'+item[creditorNum].replace(/[ ._\\-()]/g,'')).classList.remove('fa-caret-down');\r\n                                            document.getElementById('docDate'+item[creditorNum].replace(/[ ._\\-()]/g,'')).classList.add('fa-caret-up')\r\n                                        }\r\n                                        }}>\r\n                                        Doc Date\r\n                                        <i id={'docDate'+item[creditorNum].replace(/[ ._\\-()]/g,'')} className='fa fa-caret-down ml-2'></i>\r\n                                    </th>\r\n                                    <th className='text-nowrap' style={{cursor:'pointer'}} data-order='asc'\r\n                                    onClick={(e)=>{\r\n                                        e.target.setAttribute('data-order',\r\n                                        e.target.getAttribute('data-order')==='asc'?'desc':'asc')\r\n                                        let sortedData={}\r\n                                        sortedData[item[creditorNum]]=sortData(resultInput[item[creditorNum]],type,e.target.getAttribute('data-order'))\r\n                                        changeResultInput(Object.assign({},resultInput,sortedData))\r\n                    \r\n                                        if (e.target.getAttribute('data-order')==='asc') {\r\n                                            document.getElementById('type'+item[creditorNum].replace(/[ ._\\-()]/g,'')).classList.remove('fa-caret-up');\r\n                                            document.getElementById('type'+item[creditorNum].replace(/[ ._\\-()]/g,'')).classList.add('fa-caret-down')\r\n                                        }\r\n                                        else {\r\n                                            document.getElementById('type'+item[creditorNum].replace(/[ ._\\-()]/g,'')).classList.remove('fa-caret-down');\r\n                                            document.getElementById('type'+item[creditorNum].replace(/[ ._\\-()]/g,'')).classList.add('fa-caret-up')\r\n                                        }\r\n                                        }}\r\n                                    >\r\n                                        Type\r\n                                        <i id={'type'+item[creditorNum].replace(/[ ._\\-()]/g,'')} className='fa fa-caret-down ml-2'></i>\r\n                                    </th>\r\n                                    <th className='text-nowrap'>Due Date</th>\r\n                                    <th className='text-nowrap'>Current</th>\r\n                                    {populateTableMonthsHeader(agingMonths)}\r\n                                    <th className='text-nowrap'>{'> '+agingMonths + ' Month'}</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {resultInput[item[creditorNum]].map(item2=>{\r\n                                        return (\r\n                                            <tr key={item2[docNum]} style={{cursor:'pointer'}} onClick={(e)=>\r\n                                                history.push('./'+createLink(item2[type].toLowerCase(),item2[docNum]))\r\n                                                }>\r\n                                                <td className='text-nowrap'>{item2[docNum]}</td>\r\n                                                <td className='text-nowrap'>{dateFormatParser(item2[docDate])}</td>\r\n                                                <td className='text-nowrap'>{item2[type]}</td>\r\n                                                <td className='text-nowrap'>{\r\n                                                item2[creditTerm] && item2[creditTerm]!=='COD'? \r\n                                                dateFormatParser(getFormattedDate(\r\n                                                        new Date(new Date(item2[docDate])\r\n                                                        .setDate(new Date(item2[docDate]).getDate()+Number(item2[creditTerm]))))\r\n                                                    ):dateFormatParser(item2[docDate])\r\n                                                    }</td>\r\n                                                <td className='text-nowrap'>{\r\n                                                    numberFormatParser(calculateAgingCurrentAmount(\r\n                                                        currDate,\r\n                                                        item2[creditTerm] && item2[creditTerm]!=='COD'? \r\n                                                            getFormattedDate(new Date(new Date(item2[docDate])\r\n                                                            .setDate(new Date(item2[docDate]).getDate()+Number(item2[creditTerm])))\r\n                                                            ):item2[docDate],\r\n                                                        item2[amount]\r\n                                                        ))\r\n\r\n                                        \r\n                                                }</td>\r\n                                                {populateTableMonthsAmount(\r\n                                                    currDate,\r\n                                                    item2[creditTerm] && item2[creditTerm]!=='COD'? \r\n                                                        getFormattedDate(new Date(new Date(item2[docDate])\r\n                                                        .setDate(new Date(item2[docDate]).getDate()+Number(item2[creditTerm])))\r\n                                                        ):item2[docDate],\r\n                                                    item2[amount],\r\n                                                    Number(agingMonths)\r\n                                                )}\r\n                                                <td className='text-nowrap'>{\r\n                                                numberFormatParser(calculateAgingRemainderAmount(\r\n                                                    currDate,\r\n                                                    item2[creditTerm] && item2[creditTerm]!=='COD'? \r\n                                                        getFormattedDate(new Date(new Date(item2[docDate])\r\n                                                        .setDate(new Date(item2[docDate]).getDate()+Number(item2[creditTerm])))\r\n                                                        ):item2[docDate],\r\n                                                    item2[amount],\r\n                                                    Number(agingMonths)\r\n                                                ))\r\n                                                }</td>\r\n\r\n                                            </tr>\r\n                                        )\r\n                                    \r\n                                    })\r\n                                }\r\n                                </tbody>\r\n                        </table>\r\n                    </div>\r\n                    \r\n\r\n                </div>)\r\n                )\r\n            } \r\n\r\n        })\r\n        \r\n        return result;\r\n\r\n    }\r\n\r\n    \r\n\r\n    let errorDisplay=null;\r\n\r\n    if ((dataSelectCreditor && dataSelectCreditor.error) || errorSelectCreditor || (dataSelectCreditorAging && dataSelectCreditorAging.error) \r\n    || errorSelectCreditorAging )\r\n    errorDisplay=(\r\n        <div className=\"alert alert-warning\">\r\n            {dataSelectCreditor && dataSelectCreditor.error? 'Creditor List RETRIEVAL for item failed errno: '+dataSelectCreditor.error.errno\r\n            +' code: '+dataSelectCreditor.error.code+' message: '+dataSelectCreditor.error.sqlMessage:null}\r\n            {errorSelectCreditor? 'Creditor List RETRIEVAL for item failed '+errorSelectCreditor : null}\r\n            <br/>\r\n            <br/>\r\n            {dataSelectCreditorAging && dataSelectCreditorAging.error? 'Creditor Aging RETRIEVAL for item failed errno: '+dataSelectCreditorAging.error.errno\r\n            +' code: '+dataSelectCreditorAging.error.code+' message: '+dataSelectCreditorAging.error.sqlMessage:null}\r\n            {errorSelectCreditorAging? 'Creditor Aging RETRIEVAL for item failed '+errorSelectCreditorAging : null}\r\n\r\n        </div>\r\n    )\r\n\r\n    return (\r\n    <Switch>\r\n        <Route exact path={`${path}/Preview`}>\r\n            {resultInput?\r\n            (<DebtorCreditorAgingOne\r\n                backPath={CreditorAgingReport.path}\r\n                description={CreditorAgingReport.description}\r\n                resultInput={resultInput}\r\n                withDetails={withDetails}\r\n                data={sortData(resultInput['dataPreview'],sortCriteria,'asc')}\r\n                field={resultInput['field']}\r\n                dataDetail={sortData(resultInput['dataPreview'],detailSortCriteria,'asc')}\r\n                populateTableMonthsHeader={populateTableMonthsHeader}\r\n                populateTableMonthsAmount={populateTableMonthsAmount}\r\n                calculateAgingCurrentAmount={calculateAgingCurrentAmount}\r\n                populateMonthsAmount={populateMonthsAmount}\r\n                calculateAgingRemainderAmount={calculateAgingRemainderAmount}\r\n                getFormattedDate={getFormattedDate}\r\n            />):<Redirect to={CreditorAgingReport.path}/>}\r\n        </Route>\r\n        <Route exact path={path}>\r\n            <AppLayout>\r\n                <div className='container pt-3' style={{paddingLeft:20,paddingRight:20}}>\r\n                    <h3>{CreditorAgingReport.description}</h3>\r\n                    <form className='mt-3' onSubmit={e=>{\r\n                        e.preventDefault();\r\n                        changeGenerateReportWarning(false);\r\n                        changeParamCreditorAging({\r\n                            url:'./ReportItem',\r\n                            init:{\r\n                                method:'POST',\r\n                                headers:{'Content-Type':'application/json'},\r\n                                body:JSON.stringify({\r\n                                    item:'creditor_aging',\r\n                                    param:[creditorID,currDate]\r\n                                }),\r\n                                credentials:'include'\r\n                            }\r\n                        })\r\n                        \r\n                        }\r\n                        }>\r\n                            <div className='form-group form-row mx-0'>\r\n                                <label className='col-md-2 col-form-label' style={{paddingLeft:0}} htmlFor='date'>Date</label>\r\n                                <input type='date' id='date' required onChange={(e)=>changeCurrDate(e.target.value)} value={currDate} required \r\n                                className='form-control col-md-2 mb-3 mb-md-0'/>\r\n                                <label className='offset-md-1 col-md-2 col-form-label' style={{paddingLeft:0}} htmlFor='agingMonths'>\r\n                                    Aging Month(s)\r\n                                </label>\r\n                                <select id='agingMonths' className='form-control col-md-2' required value={agingMonths} onChange={e=>\r\n                                    changeAgingMonths(e.target.value)\r\n                                }>\r\n                                    <option value='1'>1</option>\r\n                                    <option value='2'>2</option>\r\n                                    <option value='3'>3</option>\r\n                                    <option value='4'>4</option>\r\n                                    <option value='5'>5</option>\r\n                                    <option value='6'>6</option>\r\n                                </select>\r\n                            </div>\r\n\r\n                            <div className='form-group form-row mx-0'>\r\n                                <label className='col-md-2 col-form-label' style={{paddingLeft:0}} htmlFor='creditorID'>Creditor ID</label>\r\n                                <select className='form-control col-md-4' required size='3' value={creditorID} multiple={true} onChange={e=>{\r\n                                    let result=[];\r\n                                    Array.from(e.target.options).map(option=>{\r\n                                        if (option.selected===true) \r\n                                            result.push(option.value) \r\n                                    })\r\n                                    changeCreditorID(result);\r\n                                }}>\r\n                                    {creditorList}\r\n                                </select>\r\n                            </div>\r\n\r\n                            <div className='form-group form-row mx-0'>\r\n                                <div className='form-check offset-md-2'>\r\n                                    <input type='checkbox' className=' form-check-input' id='allcreditorID' onChange={e=>{\r\n                                        if (e.target.checked) \r\n                                            changeCreditorID(dataSelectCreditor.data.map(data=>\r\n                                                data[dataSelectCreditor.field[0].name]\r\n                                                ))\r\n                                        else changeCreditorID([])\r\n                                    }}/>\r\n                                    <label htmlFor='allcreditorID' style={{paddingLeft:0}} className='form-check-label'>\r\n                                        All Creditor ID\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                        \r\n                            <fieldset className='form-group pl-4 pb-3 border border-secondary rounded col-md-7'>\r\n                                <legend className='col-form-label col-md-6 offset-md-3 col-8 offset-2 text-center'>\r\n                                    <h6>Preview Options</h6>\r\n                                </legend>\r\n                                <div className='form-row'>\r\n                                    <div className='form-group form-row col-md-12'>\r\n                                        <label className='col-md-2 col-form-label' style={{paddingLeft:0}} htmlFor='sort'>\r\n                                            Sort\r\n                                        </label>\r\n                                        <select id='sort' className='form-control col-md-5' value={sortCriteria} onChange={e=>\r\n                                            changeSortCriteria(e.target.value)\r\n                                        }>\r\n                                            <option value=''> -select an option- </option>\r\n                                            {sortCriteriaList}\r\n                                        </select>\r\n                                    </div>\r\n\r\n                                    <div className='form-check col-md-4 form-group col-form-label' style={{paddingLeft:20}}>\r\n                                        <input type='checkbox' className='form-check-input' id='withDetails' onChange={e=>{\r\n                                            if (e.target.checked) \r\n                                                changeWithDetails(true)\r\n                                            else changeWithDetails(false)\r\n                                        }} checked={withDetails}/>\r\n                                        <label htmlFor='withDetails' className='form-check-label'>With Details</label>\r\n                                    </div>\r\n\r\n                                    <div className='col-md-7 form-row form-group'>\r\n                                        <label className='col-md-4 col-form-label' style={{paddingLeft:0}} htmlFor='sort'>\r\n                                            Detail Sort\r\n                                        </label>\r\n                                        <select id='sort' className='form-control col-md-8' value={detailSortCriteria} onChange={e=>\r\n                                            changeDetailSortCriteria(e.target.value)\r\n                                        }>\r\n                                            <option value=''> -select an option- </option> \r\n                                            {detailSortCriteriaList}\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                            </fieldset>\r\n\r\n                        <button type='submit' className='btn btn-primary mx-2'>Generate</button>\r\n                        <button type='button' className='btn btn-warning' onClick={e=>\r\n                        changeResultInput(null)}>Clear</button>\r\n                        <button type='button' onClick={(e)=>{\r\n                            if (!resultInput) {\r\n                                changeGenerateReportWarning(true)\r\n                            }\r\n                            else {\r\n                                document.querySelector(\"meta[name=viewport]\").setAttribute(\r\n                                'content','width=device-width, initial-scale=0.4');\r\n                                setPageSize('a4 landscape')\r\n                                history.push('./CreditorAgingReport/Preview')\r\n                            }}\r\n                        } \r\n                        className='btn btn-info mx-1 my-1'>Preview</button>\r\n                        {generateReportWarning? \r\n                        (<div className=\"alert alert-warning\">\r\n                            Please generate report first!\r\n                        </div>):null}\r\n                    </form>\r\n\r\n                    <hr/>\r\n                    {errorDisplay}\r\n                    \r\n                    {resultInput? \r\n                    (<div className=\"overflow-auto mb-5 pt-3\" style={{transform:'rotateX(180deg)'}}>\r\n                        <div style={{width:calculatedWidth,transform:'rotateX(180deg)'}}>\r\n                            <h5 className='py-2'>\r\n                                Result\r\n                                <button className='btn btn-dark mx-2' \r\n                                    onClick={(e)=>collapsibleElementID.forEach(ID=>\r\n                                        $('#'+ID).collapse('show')\r\n                                )}><i className='fa fa-plus-square'></i> Expand</button>\r\n                                <button className='btn btn-light'  \r\n                                    onClick={(e)=>collapsibleElementID.forEach(ID=>\r\n                                        $('#'+ID).collapse('hide')\r\n                                )}> <i className='fa fa-minus-square'></i> Collapse</button>\r\n                            </h5>\r\n                            <div className='row flex-nowrap text-white bg-secondary pt-2 pb-1' \r\n                            style={{\r\n                                marginLeft:0,\r\n                                marginRight:0,\r\n                                /*width to total all child widths since parent container width doesn't cover overflow due to nowrap*/\r\n                                \r\n                                }}>\r\n                                <h6 style={{flex:'1 0 34px',paddingLeft:10,paddingRight:10}}></h6>\r\n                                <h6 style={{flex:'1 0 120px',paddingLeft:10,paddingRight:10,cursor:'pointer'}}\r\n                                data-order='asc' onClick={(e)=>{\r\n                                    e.target.setAttribute('data-order',\r\n                                    e.target.getAttribute('data-order')==='asc'?'desc':'asc')\r\n                                    changeResultInput({...resultInput,\r\n                                        data:sortData(resultInput['data'],'CREDITOR_NUM',e.target.getAttribute('data-order'))})\r\n\r\n                                    if (e.target.getAttribute('data-order')==='asc') {\r\n                                        document.getElementById('creditorNo').classList.remove('fa-caret-up');\r\n                                        document.getElementById('creditorNo').classList.add('fa-caret-down')\r\n                                    }\r\n                                    else {\r\n                                        document.getElementById('creditorNo').classList.remove('fa-caret-down');\r\n                                        document.getElementById('creditorNo').classList.add('fa-caret-up')\r\n                                    }\r\n                                }\r\n                                    \r\n                                }>\r\n                                    Creditor No.\r\n                                    <i id='creditorNo' className='fa fa-caret-down ml-2'></i>\r\n                                </h6>\r\n                                <h6 style={{flex:'1 0 200px',paddingLeft:10,paddingRight:10,cursor:'pointer'}}\r\n                                data-order='asc' onClick={(e)=>{\r\n                                    e.target.setAttribute('data-order',\r\n                                    e.target.getAttribute('data-order')==='asc'?'desc':'asc')\r\n                                    changeResultInput({...resultInput,\r\n                                        data:sortData(resultInput['data'],'NAME',e.target.getAttribute('data-order'))})\r\n\r\n                                    if (e.target.getAttribute('data-order')==='asc') {\r\n                                        document.getElementById('name').classList.remove('fa-caret-up');\r\n                                        document.getElementById('name').classList.add('fa-caret-down')\r\n                                    }\r\n                                    else {\r\n                                        document.getElementById('name').classList.remove('fa-caret-down');\r\n                                        document.getElementById('name').classList.add('fa-caret-up')\r\n                                    }\r\n                                }\r\n                                }>\r\n                                    Name\r\n                                    <i id='name' className='fa fa-caret-down ml-2'></i>\r\n                                </h6>\r\n                                <h6 style={{flex:'1 0 90px',paddingLeft:10,paddingRight:10}}>Current</h6>\r\n                                {populateMonthsHeader(resultInput['agingMonths'])}\r\n                                <h6 style={{flex:'1 0 90px',paddingLeft:10,paddingRight:10}}>\r\n                                    {'> '+resultInput['agingMonths']+' Month'}\r\n                                    </h6>\r\n                                <h6 style={{flex:'1 0 90px',paddingLeft:10,paddingRight:10}}>Total Overdue</h6>\r\n                                <h6 style={{flex:'1 0 90px',paddingLeft:10,paddingRight:10}}>Balance</h6>\r\n                            \r\n                            </div>\r\n                            <div style={{overflowY:'auto',overflowX:'hidden',maxHeight:'60vh'}}>\r\n                                {populateCreditor(resultInput['currDate'],resultInput['agingMonths'])}\r\n                            </div>\r\n                        </div>\r\n                    </div>):null}\r\n                    <hr className='pb-3'/>\r\n                </div>\r\n            </AppLayout>\r\n        </Route>\r\n        <Redirect to={CreditorAgingReport.path}/>\r\n    </Switch>\r\n    )\r\n}\r\nCreditorAgingReport.description='Creditor Aging Report';\r\nCreditorAgingReport.path='/CreditorAgingReport';\r\n\r\nexport default CreditorAgingReport;\r\n","import React,{useState,useContext,useEffect} from 'react';\r\nimport AppLayout from '../Shared/AppLayout'\r\nimport {\r\n    Switch,\r\n    Route,\r\n    useRouteMatch,\r\n    Redirect\r\n} from 'react-router-dom';\r\nimport useFetch from '../Shared/useFetch';\r\nimport authContext from '../Shared/authContext';\r\nimport {useHistory} from 'react-router-dom';\r\nimport numberFormatParser from '../Shared/numberFormatParser';\r\nimport dateFormatParser from '../Shared/dateFormatParser';\r\nimport sortData from '../Shared/sort';\r\nimport DebtorCreditorStatementOne from '../Shared/preview/DebtorCreditorStatementOne';\r\n\r\nfunction CreditorStatementReport(props) {\r\n    const [{data:dataSelectCreditor,error:errorSelectCreditor}]=useFetch({\r\n        url:'./SelectItem',\r\n        init:{\r\n            method:'POST',\r\n            headers:{'Content-Type':'application/json'},\r\n            body:JSON.stringify({item:'creditor'}),\r\n            credentials:'include'\r\n        }\r\n    });\r\n    const [{data:dataSelectCreditorStatement,error:errorSelectCreditorStatement},changeParamCreditorStatement]=useFetch(null);\r\n    \r\n    const [creditorList,changeCreditorList] = useState(null);\r\n    const [creditorID,changeCreditorID] = useState('');\r\n    const [dateStart,changeDateStart] = useState(new Date().getFullYear()+'-01-01');\r\n    const [dateEnd,changeDateEnd] = useState(getFormattedDate(new Date()));\r\n    const [resultInput,changeResultInput]=useState(null);\r\n    \r\n\r\n    /*Preview states*/\r\n    const agingMonthsMax=12 /*variable used for db fetching purpose. Change this if aging month option is changed*/\r\n    const [agingMonths,changeAgingMonths]=useState(6);\r\n    const [creditorOtherInfo,changeCreditorOtherInfo] =useState(null)\r\n    const [sortCriteriaList,changeSortCriteriaList]=useState(null);\r\n    const [sortCriteria,changeSortCriteria]=useState('');\r\n    const [generateReportWarning,changeGenerateReportWarning]=useState(false);\r\n\r\n    const {path} = useRouteMatch();\r\n    const {changeAuth} = useContext(authContext);\r\n    const history=useHistory();\r\n\r\n    useEffect(()=>{\r\n        \r\n        if (dataSelectCreditor && dataSelectCreditor.auth===false) {\r\n                alert('Cookies Expired or Authorisation invalid. Please Login again!');\r\n                changeAuth(false);\r\n            }\r\n        else if (dataSelectCreditor && dataSelectCreditor.data && dataSelectCreditor.field) \r\n            changeCreditorList(dataSelectCreditor.data.map(data=>(\r\n            <option key={data[dataSelectCreditor.field[0].name]} value={data[dataSelectCreditor.field[0].name]}>\r\n                {data[dataSelectCreditor.field[0].name]+' '+(data[dataSelectCreditor.field[1].name]?data[dataSelectCreditor.field[1].name]:'')}\r\n            </option>)\r\n            )\r\n        )\r\n    },[dataSelectCreditor,errorSelectCreditor])\r\n\r\n    useEffect(()=>{\r\n        if (dataSelectCreditorStatement && dataSelectCreditorStatement.auth===false) {\r\n                alert('Cookies Expired or Authorisation invalid. Please Login again!');\r\n                changeAuth(false);\r\n            }\r\n        else if (dataSelectCreditorStatement && dataSelectCreditorStatement.data && dataSelectCreditorStatement.field) {\r\n            const field=dataSelectCreditorStatement.field[1];\r\n            const date=field[0].name;\r\n            const docNum=field[1].name;\r\n            const ref=field[2].name;\r\n            const type=field[3].name;\r\n            const dr=field[4].name;\r\n            const cr=field[5].name;\r\n            \r\n            changeResultInput({data:dataSelectCreditorStatement.data,\r\n                dataPreview:[...dataSelectCreditorStatement.data],field:dataSelectCreditorStatement.field,\r\n            dateStart,dateEnd,creditorID})\r\n\r\n            changeSortCriteriaList(\r\n                (<>\r\n                    <option value={date}>Date</option>\r\n                    <option value={docNum}>Doc No.</option>\r\n                    <option value={ref}>Ref.</option>\r\n                    <option value={type}>Type</option>\r\n                    <option value={dr}>Dr</option>\r\n                    <option value={cr}>Cr</option>\r\n                </>)\r\n            )\r\n        \r\n        }\r\n\r\n    },[dataSelectCreditorStatement,errorSelectCreditorStatement])\r\n\r\n    useEffect(()=>{\r\n        function setScale() {\r\n            document.querySelector(\"meta[name=viewport]\").setAttribute(\r\n                'content','width=device-width, initial-scale=1.0');\r\n        }\r\n        window.addEventListener('popstate',setScale)\r\n        \r\n        return function unattach() {\r\n                window.removeEventListener('popstate',setScale)\r\n            }\r\n    },[])\r\n    \r\n    function getFormattedDate(date) {\r\n        let currDate=new Date(date)\r\n        \r\n        return (currDate.getFullYear()) + (currDate.getMonth() + 1 <10? '-0'+ (currDate.getMonth()+1):'-'+ (currDate.getMonth()+1)) + (currDate.getDate()<10?\r\n        '-0'+currDate.getDate() : '-'+currDate.getDate());\r\n    }\r\n\r\n    function createLink(string,id) {\r\n        var WIPstring=string.split(' ');\r\n\r\n        WIPstring=WIPstring.map(string=>{\r\n            return string.toLowerCase()\r\n        })\r\n        WIPstring=WIPstring.map(string=>{\r\n            return string[0].toUpperCase().concat(string.substr(1))\r\n        })\r\n\r\n        return WIPstring.join('')+'Item?item='+string.replace(/ /g,'_')+'&id='+encodeURIComponent(id)\r\n    }\r\n\r\n    function getDateStartForAging(dateStart,dateEnd) {\r\n        /*this is to ensure sufficient earlier data is obtained for purpose of aging in preview. Date result is \r\n        earlier of either:\r\n        1) existing dateStart in input or \r\n        2) 12 months (max aging option for preview) before date of dateEnd.*/\r\n        if (new Date(dateStart)<new Date(new Date(dateEnd).getFullYear(),Number(new Date(dateEnd).getMonth())-agingMonthsMax,1))\r\n            return dateStart\r\n\r\n        else \r\n            return getFormattedDate(new Date(new Date(dateEnd).getFullYear(),Number(new Date(dateEnd).getMonth())-agingMonthsMax,1));\r\n    }\r\n    \r\n    function populateCreditor(preview) {\r\n        const dbBroughtForwardAmount=resultInput['data'][0][0][resultInput['field'][0][0].name];\r\n\r\n        const data=preview?sortData(resultInput['dataPreview'][1],sortCriteria,'asc'):resultInput['data'][1];\r\n        const field=resultInput['field'][1];\r\n        const date=field[0].name;\r\n        const docNum=field[1].name;\r\n        const ref=field[2].name;\r\n        const type=field[3].name;\r\n        const dr=field[4].name;\r\n        const cr=field[5].name;\r\n        \r\n        \r\n        let balance=data.reduce((a,b)=>{\r\n            if (new Date(b[date])<new Date(resultInput['dateStart'])) {\r\n                if (b[dr]) return a+b[dr]\r\n                else return a-b[cr]\r\n            } else return a\r\n        },0) + dbBroughtForwardAmount;\r\n\r\n        return (\r\n        <div>\r\n            <table className='table table-responsive-md'>\r\n                <thead>\r\n                    <tr>\r\n                        <th className='text-nowrap' style={preview? null:{cursor:'pointer'}}  data-order='asc'\r\n                        onClick={(e)=>{\r\n                            if(!preview) {\r\n                                e.target.setAttribute('data-order',\r\n                                e.target.getAttribute('data-order')==='asc'?'desc':'asc')\r\n                                resultInput['data'][1]=sortData(resultInput['data'][1],date,e.target.getAttribute('data-order'))\r\n                                changeResultInput({...resultInput})\r\n\r\n                                if (e.target.getAttribute('data-order')==='asc') {\r\n                                    document.getElementById('date').classList.remove('fa-caret-up');\r\n                                    document.getElementById('date').classList.add('fa-caret-down')\r\n                                }\r\n                                else {\r\n                                    document.getElementById('date').classList.remove('fa-caret-down');\r\n                                    document.getElementById('date').classList.add('fa-caret-up')\r\n                                }\r\n                            }\r\n                        }\r\n                        }\r\n                        >\r\n                            Date\r\n                            {preview?null:<i id='date' className='fa fa-caret-down ml-2'></i>}\r\n                        </th>\r\n                        <th className='text-nowrap' style={preview?null:{cursor:'pointer'}} data-order='asc'\r\n                        onClick={(e)=>{\r\n                            if(!preview) {\r\n                                e.target.setAttribute('data-order',\r\n                                e.target.getAttribute('data-order')==='asc'?'desc':'asc')\r\n                                resultInput['data'][1]=sortData(resultInput['data'][1],docNum,e.target.getAttribute('data-order'))\r\n                                changeResultInput({...resultInput})\r\n\r\n                                if (e.target.getAttribute('data-order')==='asc') {\r\n                                    document.getElementById('docNo').classList.remove('fa-caret-up');\r\n                                    document.getElementById('docNo').classList.add('fa-caret-down')\r\n                                }\r\n                                else {\r\n                                    document.getElementById('docNo').classList.remove('fa-caret-down');\r\n                                    document.getElementById('docNo').classList.add('fa-caret-up')\r\n                                }\r\n                            }\r\n                        }\r\n                        }>\r\n                            Doc No.\r\n                            {preview?null:<i id='docNo' className='fa fa-caret-down ml-2'></i>}\r\n                        </th>\r\n                        <th className='text-nowrap' style={preview?null:{cursor:'pointer'}}  data-order='asc'\r\n                        onClick={(e)=>{\r\n                            if (!preview) {\r\n                                e.target.setAttribute('data-order',\r\n                                e.target.getAttribute('data-order')==='asc'?'desc':'asc')\r\n                                resultInput['data'][1]=sortData(resultInput['data'][1],ref,e.target.getAttribute('data-order'))\r\n                                changeResultInput({...resultInput})\r\n\r\n                                if (e.target.getAttribute('data-order')==='asc') {\r\n                                    document.getElementById('ref').classList.remove('fa-caret-up');\r\n                                    document.getElementById('ref').classList.add('fa-caret-down')\r\n                                }\r\n                                else {\r\n                                    document.getElementById('ref').classList.remove('fa-caret-down');\r\n                                    document.getElementById('ref').classList.add('fa-caret-up')\r\n                                }\r\n                            }\r\n                        }\r\n                        }>\r\n                            Ref.\r\n                            {preview?null:<i id='ref' className='fa fa-caret-down ml-2'></i>}\r\n                        </th>\r\n                        <th className='text-nowrap' style={preview?null:{cursor:'pointer'}}  data-order='asc'\r\n                        onClick={(e)=>{\r\n                            if (!preview) {\r\n                                e.target.setAttribute('data-order',\r\n                                e.target.getAttribute('data-order')==='asc'?'desc':'asc')\r\n                                resultInput['data'][1]=sortData(resultInput['data'][1],type,e.target.getAttribute('data-order'))\r\n                                changeResultInput({...resultInput})\r\n\r\n                                if (e.target.getAttribute('data-order')==='asc') {\r\n                                    document.getElementById('type').classList.remove('fa-caret-up');\r\n                                    document.getElementById('type').classList.add('fa-caret-down')\r\n                                }\r\n                                else {\r\n                                    document.getElementById('type').classList.remove('fa-caret-down');\r\n                                    document.getElementById('type').classList.add('fa-caret-up')\r\n                                }\r\n                            }\r\n                        }\r\n                        }\r\n                        >\r\n                            Type\r\n                            {preview?null:<i id='type' className='fa fa-caret-down ml-2'></i>}\r\n                        </th>\r\n                        <th className='text-nowrap' style={preview?null:{cursor:'pointer'}}  data-order='asc'\r\n                        onClick={(e)=>{\r\n                            if (!preview) {\r\n                                e.target.setAttribute('data-order',\r\n                                e.target.getAttribute('data-order')==='asc'?'desc':'asc')\r\n                                resultInput['data'][1]=sortData(resultInput['data'][1],dr,e.target.getAttribute('data-order'))\r\n                                changeResultInput({...resultInput})\r\n\r\n                                if (e.target.getAttribute('data-order')==='asc') {\r\n                                    document.getElementById('dr').classList.remove('fa-caret-up');\r\n                                    document.getElementById('dr').classList.add('fa-caret-down')\r\n                                }\r\n                                else {\r\n                                    document.getElementById('dr').classList.remove('fa-caret-down');\r\n                                    document.getElementById('dr').classList.add('fa-caret-up')\r\n                                }\r\n                            }\r\n                        }\r\n                        }\r\n                        >\r\n                            Dr\r\n                            {preview?null:<i id='dr' className='fa fa-caret-down ml-2'></i>}\r\n                        </th>\r\n                        <th className='text-nowrap' style={preview?null:{cursor:'pointer'}}  data-order='asc'\r\n                        onClick={(e)=>{\r\n                            if (!preview) {\r\n                                e.target.setAttribute('data-order',\r\n                                e.target.getAttribute('data-order')==='asc'?'desc':'asc')\r\n                                resultInput['data'][1]=sortData(resultInput['data'][1],cr,e.target.getAttribute('data-order'))\r\n                                changeResultInput({...resultInput})\r\n\r\n                                if (e.target.getAttribute('data-order')==='asc') {\r\n                                    document.getElementById('cr').classList.remove('fa-caret-up');\r\n                                    document.getElementById('cr').classList.add('fa-caret-down')\r\n                                }\r\n                                else {\r\n                                    document.getElementById('cr').classList.remove('fa-caret-down');\r\n                                    document.getElementById('cr').classList.add('fa-caret-up')\r\n                                }\r\n                            }\r\n                        }\r\n                        }\r\n                        >\r\n                            Cr\r\n                            {preview?null:<i id='cr' className='fa fa-caret-down ml-2'></i>}\r\n                        </th>\r\n                        <th className='text-nowrap'>Balance</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td colSpan='6'>B/F</td>\r\n                        <td>{numberFormatParser(balance)}</td>\r\n                    </tr>\r\n                    {data.map((item,i)=>{\r\n                        \r\n                        if (new Date(item[date])>=new Date(resultInput['dateStart']) \r\n                        && new Date(item[date])<=new Date(resultInput['dateEnd'])) \r\n                            {\r\n                                if (item[dr])\r\n                                balance+=item[dr]\r\n                                if (item[cr])\r\n                                balance-=item[cr]\r\n                            return (\r\n                            <tr key={i} style={preview? null:{cursor:'pointer'}} onClick={(e)=> {\r\n                                if(!preview)\r\n                                    history.push('/'+createLink(item[type].toLowerCase(),item[docNum]))\r\n                                else e.preventDefault();\r\n                            }\r\n                            }>\r\n                                <td className='text-nowrap'>{dateFormatParser(item[date])}</td>\r\n                                <td className='text-nowrap'>{item[docNum]}</td>\r\n                                <td className='text-nowrap'>{item[ref]}</td>\r\n                                <td className='text-nowrap'>{item[type]}</td>\r\n                                <td className='text-nowrap'>{numberFormatParser(item[dr])}</td>\r\n                                <td className='text-nowrap'>{numberFormatParser(item[cr])}</td>\r\n                                <td className='text-nowrap'>{numberFormatParser(balance)}</td>\r\n                            </tr>\r\n                            )\r\n                        }}\r\n                    )}\r\n                    \r\n                </tbody>\r\n                \r\n            </table>\r\n            \r\n            {preview? (\r\n                <p className='h5 text-right jumbotron py-2'>\r\n                    <span>Account Balance: </span>\r\n                    <span>{numberFormatParser(balance)}</span>\r\n                </p>):null}\r\n        </div>\r\n        )\r\n        \r\n    }\r\n\r\n    let errorDisplay=null;\r\n\r\n    if ((dataSelectCreditor && dataSelectCreditor.error) || errorSelectCreditor || (dataSelectCreditorStatement && dataSelectCreditorStatement.error) \r\n    || errorSelectCreditorStatement )\r\n    errorDisplay=(\r\n        <div className=\"alert alert-warning\">\r\n            {dataSelectCreditor && dataSelectCreditor.error? 'Creditor List RETRIEVAL for item failed errno: '+dataSelectCreditor.error.errno\r\n            +' code: '+dataSelectCreditor.error.code+' message: '+dataSelectCreditor.error.sqlMessage:null}\r\n            {errorSelectCreditor? 'Creditor List RETRIEVAL for item failed '+errorSelectCreditor : null}\r\n            <br/>\r\n            <br/>\r\n            {dataSelectCreditorStatement && dataSelectCreditorStatement.error? 'Creditor Statement RETRIEVAL for item failed errno: '+dataSelectCreditorStatement.error.errno\r\n            +' code: '+dataSelectCreditorStatement.error.code+' message: '+dataSelectCreditorStatement.error.sqlMessage:null}\r\n            {errorSelectCreditorStatement? 'Creditor Statement RETRIEVAL for item failed '+errorSelectCreditorStatement : null}\r\n\r\n        </div>\r\n    )\r\n    \r\n    return (\r\n        <Switch>\r\n            <Route exact path={`${path}/Preview`}>\r\n                {resultInput? \r\n                (<DebtorCreditorStatementOne\r\n                    backPath={CreditorStatementReport.path}\r\n                    description='Creditor Statement'\r\n                    topLeftInput={[...creditorOtherInfo.slice(0,2)]}\r\n                    topRightField={['Statement Date','Credit Term']}\r\n                    topRightInput={\r\n                        [dateFormatParser(resultInput['dateStart'])+' to '+ dateFormatParser(resultInput['dateEnd']),\r\n                        creditorOtherInfo[2]==='COD'?'C.O.D.':creditorOtherInfo[2]+' days']}\r\n                    populateDebtorCreditor={populateCreditor}\r\n                    data={resultInput['dataPreview'][1]}\r\n                    field={resultInput['field'][1]}\r\n                    dateEnd={resultInput['dateEnd']}\r\n                    agingMonths={agingMonths}\r\n                    dateStartForAging={getDateStartForAging(resultInput['dateStart'],resultInput['dateEnd'])}\r\n                    dbBroughtForwardAmount={resultInput['dataPreview'][0][0][resultInput['field'][0][0].name]}\r\n                    \r\n                   \r\n                \r\n                />):<Redirect to={CreditorStatementReport.path}/>}\r\n            </Route>\r\n            <Route exact path={path}>\r\n                <AppLayout>\r\n                    <div className='container pt-3' style={{paddingLeft:20,paddingRight:20}}>\r\n                        <h3>{CreditorStatementReport.description}</h3>\r\n                        <form className='mt-3' onSubmit={e=>{\r\n                        e.preventDefault();\r\n                        changeGenerateReportWarning(false);\r\n                        changeParamCreditorStatement({\r\n                            url:'./ReportItem',\r\n                            init:{\r\n                                method:'POST',\r\n                                headers:{'Content-Type':'application/json'},\r\n                                body:JSON.stringify({\r\n                                    item:'creditor_statement',\r\n                                    param:[getDateStartForAging(dateStart,dateEnd),dateEnd,creditorID]\r\n                                }),\r\n                                credentials:'include'\r\n                            }\r\n                        })\r\n                        }}>\r\n                            <div className='form-group form-row mx-0'>\r\n                                <label className='col-md-2 col-form-label' style={{paddingLeft:0}} htmlFor='dateStart'>Date Start</label>\r\n                                <input type='date' id='dateStart' required onChange={(e)=>{\r\n                                    if (new Date(e.target.value)>new Date(dateEnd)) {\r\n                                        alert('Invalid Date Start Entry')\r\n                                        changeDateStart(new Date().getFullYear()+'-01-01')\r\n                                    }\r\n                                    else changeDateStart(e.target.value)\r\n                                }} \r\n                                    value={dateStart} required className='form-control col-md-3 mb-3 mb-md-0'/>\r\n                                <label className='offset-md-1 col-md-2 col-form-label' style={{paddingLeft:0}} htmlFor='dateEnd'>Date End</label>\r\n                                <input type='date' id='dateEnd' required onChange={(e)=>{\r\n                                    if (new Date(e.target.value)<new Date(dateStart)) {\r\n                                        alert('Invalid Date End Entry')\r\n                                        changeDateEnd(getFormattedDate(new Date()))\r\n                                    }\r\n                                    else changeDateEnd(e.target.value)\r\n                                }} value={dateEnd} required className='form-control col-md-3 mb-3 mb-md-0'/>\r\n                            </div>\r\n\r\n                            <div className='form-group form-row mx-0'>\r\n                                <label className='col-md-2 col-form-label' style={{paddingLeft:0}} htmlFor='creditorID'>Creditor ID</label>\r\n                                <select className='form-control col-md-4' required value={creditorID} onChange={e=>{\r\n                                    let creditorName='';\r\n                                    let creditorAddress='';\r\n                                    let creditorDefaultCreditTerm='';\r\n\r\n                                    dataSelectCreditor.data.forEach(data=>{\r\n                                        if(data[dataSelectCreditor.field[0].name]===e.target.value) {\r\n                                            creditorName=data[dataSelectCreditor.field[1].name]?data[dataSelectCreditor.field[1].name]:'';\r\n                                            creditorAddress=data[dataSelectCreditor.field[2].name]?data[dataSelectCreditor.field[2].name]:'';\r\n                                            creditorDefaultCreditTerm=data[dataSelectCreditor.field[7].name]?data[dataSelectCreditor.field[7].name]:'';\r\n                                        }\r\n                                    })\r\n                                    changeCreditorID(e.target.value);\r\n                                    changeCreditorOtherInfo([creditorName,creditorAddress,creditorDefaultCreditTerm])\r\n                                \r\n                                }}>\r\n                                    <option value=''> -select an option- </option>\r\n                                    {creditorList}\r\n                                </select>\r\n                            </div>\r\n\r\n                            <fieldset className='form-group pl-4 pb-3 border border-secondary rounded col-md-7 mx-0'>\r\n                                <legend className='col-form-label col-md-6 offset-md-3 col-8 offset-2 text-center'>\r\n                                    <h6>Preview Options</h6>\r\n                                </legend>\r\n                                <div className='form-row'>\r\n                                    <div className='form-group col-md-6 form-row'>\r\n                                        <label className='col-6 col-md-6 col-form-label' htmlFor='agingMonths'>\r\n                                            Aging Months\r\n                                        </label>\r\n                                        <select id='agingMonths' className='form-control col-3 col-md-3' required value={agingMonths}\r\n                                            onChange={e=>\r\n                                                changeAgingMonths(e.target.value)\r\n                                            }>\r\n                                            <option value='6'>6</option>\r\n                                            <option value='9'>9</option>\r\n                                            <option value='12'>12</option>\r\n                                        </select>\r\n                                    </div>\r\n                                \r\n                                    <div className='form-group col-md-6 form-row '>\r\n                                        <label className='col-3 col-md-3 col-form-label' htmlFor='sort'>\r\n                                            Sort\r\n                                        </label>\r\n                                        <select id='sort' className='form-control col-8 col-md-8' value={sortCriteria} onChange={e=>\r\n                                            changeSortCriteria(e.target.value)\r\n                                        }>\r\n                                            <option value=''> -select an option- </option>\r\n                                            {sortCriteriaList}\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </fieldset>\r\n\r\n                            <button type='submit' className='btn btn-primary mx-2'>Generate</button>\r\n                            <button type='button' className='btn btn-warning' onClick={e=>\r\n                                changeResultInput(null)}>Clear</button>\r\n                            <button type='button' onClick={(e)=>{\r\n                                if (!resultInput) {\r\n                                    changeGenerateReportWarning(true)\r\n                                }\r\n                                else {\r\n                                    document.querySelector(\"meta[name=viewport]\").setAttribute(\r\n                                    'content','width=device-width, initial-scale=0.4');\r\n                                    history.push('./CreditorStatementReport/Preview')\r\n                                }}\r\n                            } \r\n                            className='btn btn-info mx-1 my-1'>Preview</button>\r\n                            {generateReportWarning? \r\n                            (<div className=\"alert alert-warning\">\r\n                                Please generate report first!\r\n                            </div>):null}\r\n                        </form>\r\n                        \r\n                        <hr/>\r\n                        {errorDisplay}\r\n\r\n                        {resultInput? \r\n                        (<div className='mb-5'>\r\n                            <h5 className='py-2'>Result</h5>\r\n                            {populateCreditor()}\r\n                            \r\n                        </div>):null\r\n                        }\r\n                        <hr className='pb-3'/>\r\n                    </div>\r\n                </AppLayout>\r\n            </Route>\r\n            <Redirect to={CreditorStatementReport.path}/>\r\n        </Switch>\r\n    )\r\n}\r\nCreditorStatementReport.description='Creditor Statement Report';\r\nCreditorStatementReport.path='/CreditorStatementReport';\r\n\r\nexport default CreditorStatementReport;\r\n","import React,{useState} from 'react';\r\nimport Item from '../Shared/Item';\r\nimport ItemButton from '../Shared/ItemButton';\r\nimport AppLayout from '../Shared/AppLayout';\r\n\r\nfunction CreditorItem (props) {\r\n\r\n    const url={\r\n        item:new URLSearchParams(props.location.search).get('item'),\r\n        id:new URLSearchParams(props.location.search).get('id'),\r\n    }\r\n    \r\n    const [inputState,changeInputState]=useState(['','','','','','','','COD','',''])\r\n\r\n    function onChange(value,order) {\r\n        changeInputState([...inputState.slice(0,order),value,...inputState.slice(order+1,inputState.length)])\r\n    }\r\n\r\n    return (\r\n        <Item inputState={inputState} changeInputState={changeInputState} url={url} item='creditor' successPath='/CreditorMaintenance'>\r\n            {\r\n            ({usage,disabled,changeDisabled,onInsert,onUpdate,onDelete,errorDisplay,inputNumberRender})=> \r\n            (<AppLayout >\r\n                <div className='container pb-5 px-md-5'>\r\n\r\n                    {/*Heading renders depending on INSERT or UPDATE/DELETE state*/}\r\n\r\n                    <h3 className='my-3'>{(usage==='INSERT'? 'Create':'Update') + ' '+ CreditorItem.description}</h3>\r\n                    <small className='text-warning'>* required</small>\r\n                    {errorDisplay}\r\n\r\n                    {/*onInsert and onUpdate needs to be attached to HTML form onSubmit eventhandler since native HTML form \r\n                    validation only works if submit event is handled here*/}\r\n\r\n                    <form onSubmit={(e)=>{e.preventDefault(); if(usage==='INSERT') onInsert(); else onUpdate()}}>\r\n                        <div className='form-group form-row'>\r\n                            <label className='col-md-2 col-form-label' htmlFor='creditorNumber' >Creditor Number <span className='text-warning'>*</span></label>\r\n                            {inputNumberRender({\r\n                                onChange:onChange,\r\n                                layout:'col-md-4',\r\n                                position:0,\r\n                                labelID:'creditorNumber'\r\n                            })\r\n                            }\r\n                        </div>\r\n                        <div className='form-group form-row'>\r\n                            <label className='col-md-2 col-form-label' htmlFor='name'>Name <span className='text-warning'>*</span></label>\r\n                            <div className='col-md-10'>\r\n                                <input type='text' id='name' onChange={(e)=>\r\n                                onChange(e.target.value,1)} value={inputState[1]} disabled={disabled} required className='form-control'/>\r\n                            </div>\r\n                        </div>\r\n                        <div className='form-group form-row'>\r\n                            <label className='col-md-2 col-form-label' htmlFor='address'>Address <span className='text-warning'>*</span></label>\r\n                            <div className='col-md-10'>\r\n                                <textarea id='address' onChange={(e)=>\r\n                                onChange(e.target.value,2)} \r\n                                value={inputState[2]} disabled={disabled} required className='form-control'/>\r\n                            </div>\r\n                        </div>\r\n                        <div className='form-group form-row'>\r\n                            <label className='col-md-2 col-form-label' htmlFor='postcode'>Postcode <span className='text-warning'>*</span></label>\r\n                            <div className='col-md-4'>\r\n                                <input type='text' maxLength='5' id='postcode' onChange={(e)=>\r\n                                onChange(e.target.value,3)} value={inputState[3]} disabled={disabled} required className='form-control'/>\r\n                            </div>\r\n                            <label className='col-md-2 col-form-label text-md-center' htmlFor='phone'>Phone <span className='text-warning'>*</span></label>\r\n                            <div className='col-md-4'>\r\n                                <input type='text' id='phone' maxLength='15' onChange={(e)=>onChange(e.target.value,4)} \r\n                                value={inputState[4]} disabled={disabled} required className='form-control'/>\r\n                            </div>\r\n                        </div>\r\n                        <div className='form-group form-row'>\r\n                            <label className='col-md-2 col-form-label' htmlFor='fax'>Fax</label>\r\n                            <div className='col-md-4'>\r\n                                <input type='text' id='fax' maxLength='15' onChange={(e)=>\r\n                                onChange(e.target.value,5)} value={inputState[5]} disabled={disabled} className='form-control'/>\r\n                            </div>\r\n                            <label className='col-md-2 col-form-label text-md-center' htmlFor='creditTerm'>Credit Term</label>\r\n                            <div className='col-md-4'>\r\n                                <select id='creditTerm' onChange={(e)=> onChange(e.target.value,7)} value={inputState[7]} disabled={disabled} \r\n                                className='form-control'>\r\n                                    <option value='COD'>C.O.D.</option>\r\n                                    <option value='30'>30 Days</option>\r\n                                    <option value='45'>45 Days</option>\r\n                                    <option value='60'>60 Days</option>\r\n                                    <option value='90'>90 Days</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <div className='form-group form-row'>\r\n                            <label className='col-md-2 col-form-label' htmlFor='otherDesc'>Other Description</label>\r\n                            <div className='col-md-10'>\r\n                                <textarea id='otherDesc' onChange={(e)=>\r\n                                onChange(e.target.value,6)} \r\n                                value={inputState[6]} disabled={disabled} className='form-control'/>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <ItemButton usage={usage} onInsert={onInsert} onUpdate={onUpdate} onDelete={onDelete} changeDisabled={changeDisabled}/>\r\n                        \r\n                        \r\n                        \r\n                    </form>\r\n                </div>\r\n            </AppLayout>)\r\n            }\r\n        \r\n        </Item>\r\n    )\r\n}\r\nCreditorItem.description='Creditor Item';\r\nCreditorItem.path='/CreditorItem';\r\n\r\nexport default CreditorItem;","import React,{useState,useEffect,useContext} from 'react';\r\nimport AppLayout from '../Shared/AppLayout';\r\nimport useFetch from '../Shared/useFetch';\r\nimport authContext from '../Shared/authContext';\r\nimport $ from 'jquery'\r\n\r\nfunction AccountMaintenance(props) {\r\n    const [{data:dataSelectAccount,error:errorSelectAccount},changeParamSelectAccount]=useFetch({\r\n        url:'./SelectItem',\r\n        init:{\r\n            method:'POST',\r\n            headers:{'Content-Type':'application/json'},\r\n            body:JSON.stringify({item:'account'}),\r\n            credentials:'include'\r\n        }\r\n    });\r\n    const [GLCategoryList,changeGLCategoryList] = useState(null);\r\n    const [GLAccountList,changeGLAccountList] = useState(null);\r\n    const [GLAccountArray,changeGLAccountArray] = useState(null);\r\n    const [inputStateCreate,changeInputStateCreate]=useState(['','','']) \r\n    const [inputStateUpdate,changeInputStateUpdate]=useState(['','','','']) \r\n    const [accounts,changeAccounts] = useState(null);\r\n    const [collapsibleElementID,changeCollapsibleElementID]=useState([])\r\n\r\n    const [{data:dataInsert,error:errorInsert},changeParamInsert]=useFetch(null);\r\n    const [{data:dataDelete,error:errorDelete},changeParamDelete]=useFetch(null);\r\n    const [{data:dataUpdate,error:errorUpdate},changeParamUpdate]=useFetch(null);\r\n\r\n    const {changeAuth} = useContext(authContext)\r\n    \r\n    \r\n    /*Use a different useEffect for each CRUD operation to enable page refresh once INSERT/UPDATE/DELETE is performed*/\r\n    useEffect(()=>{\r\n       \r\n\r\n        if (dataSelectAccount && dataSelectAccount.auth===false) {\r\n               alert('Cookies Expired or Authorisation invalid. Please Login again!')\r\n               changeAuth(false)\r\n           }\r\n        else if (dataSelectAccount && dataSelectAccount.data && dataSelectAccount.field) {\r\n            changeAccounts(populateAccount(dataSelectAccount.data[0],dataSelectAccount.field[0]))\r\n        }\r\n    \r\n    },[dataSelectAccount,errorSelectAccount])\r\n\r\n    useEffect(()=>{\r\n        if (dataInsert && dataInsert.auth===false) {\r\n            alert('Cookies Expired or Authorisation invalid. Please Login again!');\r\n            changeAuth(false);\r\n        }\r\n        else if (dataInsert && !dataInsert.error) {\r\n            alert('Insert Successful!')\r\n            changeInputStateCreate(['','',''])\r\n            changeParamSelectAccount({\r\n                url:'./SelectItem',\r\n                init:{\r\n                    method:'POST',\r\n                    headers:{'Content-Type':'application/json'},\r\n                    body:JSON.stringify({item:'account'}),\r\n                    credentials:'include'\r\n                }\r\n            })\r\n        }\r\n\r\n    },[dataInsert,errorInsert])\r\n\r\n    useEffect(()=>{\r\n        if (dataUpdate && dataUpdate.auth===false) {\r\n            alert('Cookies Expired or Authorisation invalid. Please Login again!');\r\n            changeAuth(false);\r\n        }\r\n        else if (dataUpdate && !dataUpdate.error) {\r\n            alert('Update Successful!')\r\n            changeInputStateUpdate(['','','',''])\r\n            changeParamSelectAccount({\r\n                url:'./SelectItem',\r\n                init:{\r\n                    method:'POST',\r\n                    headers:{'Content-Type':'application/json'},\r\n                    body:JSON.stringify({item:'account'}),\r\n                    credentials:'include'\r\n                }\r\n            })\r\n        }\r\n    },[dataUpdate,errorUpdate])\r\n\r\n    useEffect(()=>{\r\n        if (dataDelete && dataDelete.auth===false) {\r\n            alert('Cookies Expired or Authorisation invalid. Please Login again!');\r\n            changeAuth(false);\r\n        }\r\n        else if (dataDelete && !dataDelete.error) {\r\n            alert('Delete Successful!')\r\n            changeParamSelectAccount({\r\n                url:'./SelectItem',\r\n                init:{\r\n                    method:'POST',\r\n                    headers:{'Content-Type':'application/json'},\r\n                    body:JSON.stringify({item:'account'}),\r\n                    credentials:'include'\r\n                }\r\n            })\r\n        }\r\n    },[dataDelete,errorDelete])\r\n\r\n    //attach bootstrap/jquery eventlisteners and callbacks\r\n    useEffect(()=>{\r\n\r\n        if (collapsibleElementID && accounts) {\r\n            collapsibleElementID.forEach(ID=>{\r\n                $('#'+ID).on('show.bs.collapse',e=>{\r\n                    if(e.target===e.currentTarget)\r\n                    $('#plusminus'+ID).removeClass('fa-plus-square').addClass('fa-minus-square');\r\n                    \r\n                })\r\n                $('#'+ID).on('hide.bs.collapse',e=>{\r\n                    if(e.target===e.currentTarget)\r\n                    $('#plusminus'+ID).removeClass('fa-minus-square').addClass('fa-plus-square');\r\n                })\r\n                \r\n        })\r\n    }\r\n\r\n    },[accounts])\r\n    \r\n    function populateAccount(data,field) {\r\n        const glCategory=field[0].name;\r\n        const glAccount=field[1].name;\r\n        const glDesc=field[2].name;\r\n        const glStatus=field[3].name;\r\n\r\n        const glCategoryAlreadyParsed=[];\r\n        const result=[];\r\n\r\n        data.forEach(item=>{\r\n            if (glCategoryAlreadyParsed.indexOf(item[glCategory])===-1) {\r\n                glCategoryAlreadyParsed.push(item[glCategory]);\r\n                result.push(\r\n                    (<div key={item[glCategory]}>\r\n                        <div className='row py-1 bg-dark text-white' style={{cursor:'pointer'}} data-toggle='collapse' data-target={'#'+item[glCategory].replace(/[ ._()]/g,'')}>\r\n                            <p className='col-1'><i id={'plusminus'+item[glCategory].replace(/[ ._()]/g,'')} className='fa fa-plus-square mt-1 text-white'></i></p>\r\n                            <p className='col'>{item[glCategory]}</p>\r\n                        </div>\r\n                        <div className='collapse navbar-collapse bg-secondary' style={{marginLeft:'-15px',marginRight:'-15px'}} id={item[glCategory].replace(/[ ._()]/g,'')}>\r\n                            {data.map((item2,i)=>{\r\n                                if (item2[glCategory]===item[glCategory]) \r\n                                    return (\r\n                                    <div className='row py-1 border-bottom border-white text-white' style={{margin:0}} key={item2[glAccount]}>\r\n                                        <div className='offset-1 col-5 col-lg-7'>{item2[glDesc]}</div>\r\n                                        <p className='col-3 col-lg-2'>{item2[glAccount]}</p>\r\n                                        {item2[glStatus]==='NORMAL'? \r\n                                            (<div className='col-3 col-lg-2'>\r\n                                                <button className='btn btn-info' onClick={(e)=>{\r\n                                                    changeParamDelete({\r\n                                                        url:'./DeleteItem',\r\n                                                        init:{\r\n                                                            method:'POST',\r\n                                                            headers:{'Content-Type':'application/json'},\r\n                                                            body:JSON.stringify({\r\n                                                                item:'account',\r\n                                                                id:item2[glAccount]\r\n                                                            }),\r\n                                                            credentials:'include'\r\n                                                        }\r\n                                                    })\r\n                                                }}>Del</button>\r\n                                            </div>):null\r\n                                            }\r\n                                        \r\n                                    </div>)\r\n                                    }\r\n                                    )}\r\n                                    \r\n                        </div>\r\n                    </div>\r\n                    )\r\n\r\n                )\r\n            }\r\n        })\r\n        changeGLCategoryList(glCategoryAlreadyParsed.map(category=>\r\n            (<option key={category} value={category}>\r\n                {category}\r\n            </option>)))\r\n        changeGLAccountList(data.map(item=>{\r\n            if(item[glStatus]==='NORMAL')\r\n                 return (<option key={item[glAccount]?item[glAccount]:Math.random()} value={item[glAccount]}>\r\n                    {item[glAccount]+' | '+item[glDesc]}\r\n                </option>)\r\n        })\r\n        \r\n    )\r\n        changeCollapsibleElementID(glCategoryAlreadyParsed.map(category=>category.replace(/[ ._()]/g,'')))\r\n        changeGLAccountArray(data.map(item=>item[glAccount]+''));\r\n        return result;\r\n    }\r\n    \r\n    function onChangeCreate(value,order) {\r\n        changeInputStateCreate([...inputStateCreate.slice(0,order),value,...inputStateCreate.slice(order+1)])\r\n    }\r\n    function onChangeUpdate(value,order) {\r\n        changeInputStateUpdate([...inputStateUpdate.slice(0,order),value,...inputStateUpdate.slice(order+1)])\r\n    }\r\n    \r\n    let errorDisplay=null;\r\n\r\n    if ((dataSelectAccount && dataSelectAccount.error) || errorSelectAccount ||(dataInsert && dataInsert.error) || errorInsert ||\r\n    (dataUpdate && dataUpdate.error) || errorUpdate || (dataDelete && dataDelete.error) || errorDelete) \r\n    errorDisplay=(\r\n        <div className=\"alert alert-warning\">\r\n            {dataSelectAccount && dataSelectAccount.error? 'Account List RETRIEVAL for item failed errno: '+dataSelectAccount.error.errno\r\n            +' code: '+dataSelectAccount.error.code+' message: '+dataSelectAccount.error.sqlMessage:null}\r\n            {errorSelectAccount? 'Account List RETRIEVAL for item failed '+errorSelectAccount : null}\r\n\r\n            {dataInsert && dataInsert.error? 'Data INSERT for item failed errno: '+dataInsert.error.errno+' code: '+dataInsert.error.code+' message: '+dataInsert.error.sqlMessage:null}\r\n            {errorInsert? 'Data INSERT for item failed '+errorInsert : null}\r\n\r\n            {dataUpdate && dataUpdate.error? 'Data UPDATE for item failed errno: '+dataUpdate.error.errno+' code: '+dataUpdate.error.code+' message: '+dataUpdate.error.sqlMessage:null}\r\n            {errorUpdate? 'Data UPDATE for item failed '+errorUpdate : null}\r\n            \r\n            {dataDelete && dataDelete.error? 'Data DELETE for item failed errno: '+dataDelete.error.errno+' code: '+dataDelete.error.code+' message: '+dataDelete.error.sqlMessage:null}\r\n            {errorDelete? 'Data DELETE for item failed '+errorDelete : null}\r\n        </div>)\r\n\r\n    return (\r\n            <AppLayout>\r\n                <div className='container pt-3'>\r\n                    <h3>Account Maintenance</h3>\r\n                    {errorDisplay}\r\n                    <section className='container px-0'>\r\n                        <div className='row'>\r\n                            <form className='col-md-6' onSubmit={(e)=>{\r\n                                e.preventDefault();\r\n                                if (GLAccountArray.indexOf(inputStateCreate[1])!==-1)\r\n                                    alert('Account Code Already Exist! Please amend')\r\n\r\n                                changeParamInsert({\r\n                                    url:'./InsertItem',\r\n                                    init:{\r\n                                        method:'POST',\r\n                                        headers:{'Content-Type':'application/json'},\r\n                                        body:JSON.stringify({\r\n                                                item:'account',\r\n                                                param:inputStateCreate\r\n                                        }),\r\n                                        credentials:'include'\r\n                                    }\r\n                                })\r\n                                \r\n                                }}>\r\n                                <fieldset className='px-3 form-group border border-secondary pb-4 rounded'>\r\n                                    <legend className='col-form-label col-4 offset-4 text-center' ><h6>Create Account</h6></legend>\r\n                                    <label className='mt-3' htmlFor='createGLCategory' >GL Category</label>\r\n                                    <select id='createGLCategory' required className='form-control' onChange={(e)=>{\r\n                                    onChangeCreate(e.target.value,0)\r\n                                    \r\n                                    }}>\r\n                                        <option value=''> -select an option- </option>\r\n                                        {GLCategoryList}\r\n                                    </select>\r\n                                    <label htmlFor='accountCode' className='mt-3'>Account Code</label>\r\n                                    <input id='accountCode' type='number' required min='100' max='999' className='form-control'\r\n                                    value={inputStateCreate[1]} onChange={(e)=>onChangeCreate(e.target.value,1)}/>\r\n                                    <label htmlFor='createDescription' className='mt-3'>Description</label>\r\n                                    <input id='createDescription' type='text' required maxLength='45' required className='form-control'\r\n                                    value={inputStateCreate[2]} onChange={(e)=>onChangeCreate(e.target.value,2)}/>\r\n                                    <button type='submit' className='btn btn-success text-white mt-3'>Create</button>\r\n                                </fieldset>\r\n\r\n\r\n                            </form>\r\n                            <form className='col-md-6' onSubmit={(e)=>{\r\n                                e.preventDefault();\r\n                                if (GLAccountArray.indexOf(inputStateUpdate[2])!==-1 && inputStateUpdate[2]!==inputStateUpdate[0])\r\n                                    alert('Account Code Already Exist! Please amend')\r\n\r\n                                changeParamUpdate({\r\n                                    url:'./UpdateItem',\r\n                                    init:{\r\n                                        method:'POST',\r\n                                        headers:{'Content-Type':'application/json'},\r\n                                        body:JSON.stringify({\r\n                                                item:'account',\r\n                                                param:inputStateUpdate\r\n                                        }),\r\n                                        credentials:'include'\r\n                                    }\r\n                                })\r\n                                \r\n                                }}>\r\n                                <fieldset className='px-3 form-group border border-secondary pb-4 rounded'>\r\n                                    <legend className='col-form-label col-4 offset-4 text-center' ><h6>Update Account</h6></legend>\r\n                                    <label className='mt-3' htmlFor='existingGLCode' >Existing GL Code</label>\r\n                                    <select id='existingGLCode' required className='form-control' value={inputStateUpdate[0]} onChange={(e)=>{\r\n                                        let GLCategory='';\r\n                                        let GLDesc='';\r\n                                        dataSelectAccount.data[0].forEach(data=>{\r\n                                            if(data[dataSelectAccount.field[0][1].name]+''===e.target.value) {\r\n                                                GLCategory=data[dataSelectAccount.field[0][0].name]?data[dataSelectAccount.field[0][0].name]:'';\r\n                                                GLDesc=data[dataSelectAccount.field[0][2].name]?data[dataSelectAccount.field[0][2].name]:'';\r\n                                            }\r\n                                        })\r\n                                        changeInputStateUpdate([e.target.value,GLCategory,e.target.value,GLDesc])\r\n\r\n                                    }}>\r\n                                        <option value=''> -select an option- </option>\r\n                                        {GLAccountList}\r\n                                    </select>\r\n                                    <label className='mt-3' htmlFor='updateGLCategory' >GL Category</label>\r\n                                    <select id='updateGLCategory' required className='form-control' value={inputStateUpdate[1]} onChange={(e)=>{\r\n                                        onChangeUpdate(e.target.value,1)\r\n                                    }}>\r\n                                        <option value=''> -select an option- </option>\r\n                                        {GLCategoryList}\r\n                                    </select>\r\n                                    <label htmlFor='newAccountCode' className='mt-3'>New Account Code</label>\r\n                                    <input id='newAccountCode' type='number' required min='100' max='999' className='form-control'\r\n                                    value={inputStateUpdate[2]} onChange={(e)=>{\r\n                                        onChangeUpdate(e.target.value,2)\r\n                                    }}/>\r\n                                    <label htmlFor='updateDescription' className='mt-3'>Description</label>\r\n                                    <input id='updateDescription' type='text' required maxLength='45' className='form-control'\r\n                                    value={inputStateUpdate[3]} onChange={(e)=>{\r\n                                        onChangeUpdate(e.target.value,3)\r\n                                    }}\r\n                                    />\r\n                                    <button type='submit' className='btn btn-warning text-white mt-3'>Update</button>\r\n                                </fieldset>\r\n\r\n                            </form>\r\n                        </div>\r\n                    </section>\r\n                   \r\n                    <section className='container my-5'>\r\n                        <div className='row text-white bg-info rounded-top py-2'>\r\n                            <button className='col-1 btn btn-info' onClick={(e)=>collapsibleElementID.forEach(ID=>\r\n                                $('#'+ID).collapse('hide')\r\n                            )}><i className='fa fa-minus-square text-white'></i></button>\r\n                            <h6 className='col-5 col-lg-7 pt-2'>Description</h6>\r\n                            <h6 className='col-3 col-lg-2 pt-2'>Account Code</h6>\r\n                            <h6 className='col-3 col-lg-2 pt-2'>Delete?</h6>\r\n                        </div>\r\n                        {accounts}\r\n                    </section>\r\n                    \r\n                    \r\n\r\n                    \r\n                </div>\r\n            </AppLayout>\r\n    )\r\n}\r\n                \r\n            \r\n\r\nAccountMaintenance.description='Account Maintenance';\r\nAccountMaintenance.path='/AccountMaintenance';\r\n\r\nexport default AccountMaintenance;","import React from 'react';\r\nimport AppLayout from '../Shared/AppLayout';\r\nimport Process from '../Shared/Process';\r\nimport ProcessLayout from '../Shared/ProcessLayout';\r\n\r\nfunction JournalEntry(props) {\r\n    return (\r\n            <AppLayout>\r\n                <Process createItemPath='./JournalItem' item='journal'\r\n                render={(list)=>{\r\n                    return (\r\n                    <ProcessLayout description={JournalEntry.description} listname={'Journal'} {...list}/>\r\n                    )}\r\n                }/>\r\n            </AppLayout>\r\n    )\r\n}\r\n                \r\n            \r\n\r\nJournalEntry.description='Journal Entry';\r\nJournalEntry.path='/JournalEntry';\r\n\r\nexport default JournalEntry;","import React,{useState} from 'react';\r\nimport AppLayout from '../Shared/AppLayout';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nfunction ProfitAndLoss(props) {\r\n    const [date,changeDate] = useState (getCurrentDate())\r\n    const [companyTitle,changeCompanyTitle] = useState('')\r\n    const history=useHistory();\r\n\r\n    function getCurrentDate() {\r\n        let currDate=new Date();\r\n\r\n        return (currDate.getFullYear()) + (currDate.getMonth() + 1 <10? '-0'+ (currDate.getMonth()+1):'-'+ (currDate.getMonth()+1)) + (currDate.getDate()<10?\r\n        '-0'+currDate.getDate() : '-'+currDate.getDate());\r\n    }\r\n    \r\n    function onClick () {\r\n        history.push('./ProfitAndLossItem?date='+date+'&companyTitle='+companyTitle)\r\n    }\r\n\r\n    return (\r\n            <AppLayout>\r\n                <div className='container pt-3'>\r\n                    <h3>Profit And Loss Statement</h3>\r\n                    <small className='text-warning'>* required</small>\r\n                    <form onSubmit={(e)=>{e.preventDefault();onClick()}}>\r\n                        <div className='form-group form-row mt-5'>\r\n                            <label className='col-md-2 col-form-label' htmlFor='date'>Date <span className='text-warning'>*</span></label>\r\n                            <div className='col-md-4'>\r\n                                <input type='date' id='date' onChange={(e)=>changeDate(e.target.value)} value={date} required \r\n                                className='form-control'/>\r\n                            </div>\r\n                            </div>\r\n                        <div className='form-group form-row'>\r\n                            <label className='col-md-2 col-form-label' htmlFor='companyTitle'>Company Title</label>\r\n                            <div className='col-md-6'>\r\n                                <input type='text' id='companyTitle' onChange={(e)=>changeCompanyTitle(e.target.value)} \r\n                                value={companyTitle} className='form-control'/>\r\n                            </div>\r\n                        </div>\r\n                        <button type='submit' className='btn btn-primary'>Preview</button>\r\n                    </form>\r\n                    \r\n\r\n                    \r\n                </div>\r\n            </AppLayout>\r\n    )\r\n}\r\n                \r\n            \r\n\r\nProfitAndLoss.description='Profit And Loss';\r\nProfitAndLoss.path='/ProfitAndLoss';\r\n\r\nexport default ProfitAndLoss;","import React,{useState} from 'react';\r\nimport AppLayout from '../Shared/AppLayout';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nfunction BalanceSheet(props) {\r\n    const [date,changeDate] = useState (getCurrentDate())\r\n    const [companyTitle,changeCompanyTitle] = useState('')\r\n    const history=useHistory();\r\n\r\n    function getCurrentDate() {\r\n        let currDate=new Date();\r\n\r\n        return (currDate.getFullYear()) + (currDate.getMonth() + 1 <10? '-0'+ (currDate.getMonth()+1):'-'+ (currDate.getMonth()+1)) + (currDate.getDate()<10?\r\n        '-0'+currDate.getDate() : '-'+currDate.getDate());\r\n    }\r\n    \r\n    function onClick () {\r\n        history.push('./BalanceSheetItem?date='+date+'&companyTitle='+companyTitle)\r\n    }\r\n\r\n    return (\r\n            <AppLayout>\r\n                <div className='container pt-3'>\r\n                    <h3>Balance Sheet Statement</h3>\r\n                    <small className='text-warning'>* required</small>\r\n                    <form onSubmit={(e)=>{e.preventDefault();onClick()}}>\r\n                        <div className='form-group form-row mt-5'>\r\n                            <label className='col-md-2 col-form-label' htmlFor='date'>Date <span className='text-warning'>*</span></label>\r\n                            <div className='col-md-4'>\r\n                                <input type='date' id='date' onChange={(e)=>changeDate(e.target.value)} value={date} required \r\n                                className='form-control'/>\r\n                            </div>\r\n                            \r\n                            </div>\r\n                        <div className='form-group form-row'>\r\n                            <label className='col-md-2 col-form-label' htmlFor='companyTitle'>Company Title</label>\r\n                            <div className='col-md-6'>\r\n                                <input type='text' id='companyTitle' onChange={(e)=>changeCompanyTitle(e.target.value)} \r\n                                value={companyTitle} className='form-control'/>\r\n                            </div>\r\n                        </div>\r\n                        <button type='submit' className='btn btn-primary'>Preview</button>\r\n                    </form>\r\n                    \r\n\r\n                    \r\n                </div>\r\n            </AppLayout>\r\n    )\r\n}\r\n                \r\n            \r\n\r\nBalanceSheet.description='Balance Sheet';\r\nBalanceSheet.path='/BalanceSheet';\r\n\r\nexport default BalanceSheet;","import React,{useState,useEffect,useContext} from 'react';\r\nimport Item from '../Shared/Item';\r\nimport AppLayout from '../Shared/AppLayout';\r\nimport useFetch from '../Shared/useFetch';\r\nimport numberFormatParser from '../Shared/numberFormatParser';\r\nimport authContext from '../Shared/authContext';\r\n\r\n\r\n\r\nfunction JournalItem (props) {\r\n    const url={\r\n        item:new URLSearchParams(props.location.search).get('item'),\r\n        id:new URLSearchParams(props.location.search).get('id'),\r\n    }\r\n\r\n    const [{data:dataSelectGLCode,error:errorSelectGLCode}]=useFetch({\r\n        url:'./getEligibleGLAccount',\r\n        init:{\r\n            method:'POST',\r\n            headers:{'Content-Type':'application/json'},\r\n            body:JSON.stringify({item:'journal'}),\r\n            credentials:'include'\r\n        }\r\n    });//extension of Item component\r\n\r\n    \r\n    const linePosition=4;\r\n\r\n    const [GLCodeList,changeGLCodeList] = useState(null);\r\n    const [inputState,changeInputState]=useState(['','','','',[]])\r\n    \r\n    const [notBalanced,changeNotBalanced]=useState(false);\r\n    const {changeAuth} = useContext(authContext);\r\n\r\n    useEffect(()=>{\r\n\r\n        if (dataSelectGLCode && dataSelectGLCode.auth===false) {\r\n                alert('Cookies Expired or Authorisation invalid. Please Login again!');\r\n                changeAuth(false);\r\n            }\r\n        else if (dataSelectGLCode && dataSelectGLCode.data && dataSelectGLCode.field) \r\n            changeGLCodeList(dataSelectGLCode.data.map(data=>(\r\n            <option key={data[dataSelectGLCode.field[0].name]} value={data[dataSelectGLCode.field[0].name]}>\r\n                {(data[dataSelectGLCode.field[0].name]?data[dataSelectGLCode.field[0].name]:'')\r\n                +' | '+(data[dataSelectGLCode.field[1].name]?data[dataSelectGLCode.field[1].name]:'')}\r\n            </option>)\r\n                )\r\n            )\r\n        \r\n    },[dataSelectGLCode,errorSelectGLCode])\r\n\r\n    function onChange(value,order) {\r\n        changeInputState([...inputState.slice(0,order),value,...inputState.slice(order+1)])\r\n    }\r\n    function onChangeJournallineInput(e,order,lineNumber,innerOrder) {\r\n        changeInputState(inputState.slice(0,order)\r\n        .concat([inputState[order].slice(0,lineNumber)\r\n        .concat([inputState[order][lineNumber].slice(0,innerOrder)\r\n        .concat(e)\r\n        .concat(inputState[order][lineNumber].slice(innerOrder+1))])\r\n        .concat(inputState[order].slice(lineNumber+1))])\r\n        .concat(inputState.slice(order+1)))\r\n    }\r\n\r\n    function calculateDebitTotal() {\r\n        let total=0\r\n        inputState[linePosition].forEach((journallineSet,i)=>{\r\n            if(inputState[linePosition][i][4])\r\n             total+=parseFloat(inputState[linePosition][i][4])\r\n        })\r\n        return total;\r\n    }\r\n\r\n    function calculateCreditTotal() {\r\n        let total=0\r\n        inputState[linePosition].forEach((journallineSet,i)=>{\r\n            if(inputState[linePosition][i][5]) {\r\n             total+=parseFloat(inputState[linePosition][i][5])\r\n            }\r\n        })\r\n        return total;\r\n    }\r\n    \r\n    function journallineListRender(disabled) {\r\n    return(\r\n        inputState[linePosition].map((journallineSet,i)=>\r\n        <div className='row flex-nowrap' style={{marginLeft:0,marginRight:0}} key={i}>\r\n            {/*set fixed flex basis so layout is consistent with h6 header as well*/}\r\n            <label htmlFor='lineNumber' className='sr-only'/>\r\n            <input type='number' id='lineNumber' className='col form-control rounded-0 text-center' value={inputState[linePosition][i][0]?\r\n            inputState[linePosition][i][0]:''} \r\n            onChange={(e)=>e} style={{flex:'1 0 90px',paddingLeft:10,paddingRight:0}} disabled={disabled}/>\r\n\r\n            <div className='col input-group' style={{flex:'1 0 120px',paddingLeft:0,paddingRight:0}}>\r\n                <label htmlFor='glCode' className='sr-only'/>\r\n                <input type='text' id ='glCode' required className='form-control rounded-0' disabled={disabled}\r\n                style={{paddingLeft:10}}\r\n                value={inputState[linePosition][i][1]?inputState[linePosition][i][1]:''} onChange={(e)=>e}/>\r\n                <select className='form-control rounded-0' style={{flex:'0 1 0'}} disabled={disabled} onChange={(e)=>{\r\n                        let glDescription='';\r\n                        dataSelectGLCode.data.forEach(data=>{\r\n                            /*don't use strict comparison because options initial integer value obtained from DB \r\n                            is converted by React to string when applied to e.target.value*/\r\n                            if(data[dataSelectGLCode.field[0].name]==e.target.value) \r\n                                glDescription=data[dataSelectGLCode.field[1].name]?data[dataSelectGLCode.field[1].name]:'';\r\n                        })\r\n\r\n                        changeInputState(inputState.slice(0,linePosition)\r\n                        .concat([inputState[linePosition].slice(0,i)\r\n                        .concat([inputState[linePosition][i].slice(0,1)\r\n                        .concat(e.target.value).concat(glDescription)\r\n                        .concat(inputState[linePosition][i].slice(3))])\r\n                        .concat(inputState[linePosition].slice(i+1))])\r\n                        .concat(inputState.slice(linePosition+1)))\r\n        \r\n                        }}>\r\n                    <option value=''>-select an option- </option>\r\n                    {GLCodeList}\r\n                </select>\r\n            </div>\r\n            <label htmlFor='glDescription' className='sr-only'/>\r\n            <input type='text' id='glDescription' required className='col form-control rounded-0' value={inputState[linePosition][i][2]?\r\n            inputState[linePosition][i][2]:''} \r\n            onChange={(e)=>e} disabled={disabled}\r\n            style={{flex:'1 0 120px',paddingLeft:10,paddingRight:0}}/>\r\n\r\n            <label htmlFor='otherDescription' className='sr-only'/>\r\n            <input type='text' id='otherDescription' className='col form-control rounded-0' value={inputState[linePosition][i][3]?\r\n            inputState[linePosition][i][3]:''} \r\n            onChange={(e)=>onChangeJournallineInput(e.target.value,linePosition,i,3)} disabled={disabled}\r\n            style={{flex:'1 0 225px',paddingLeft:10,paddingRight:0}}/>\r\n\r\n            <label htmlFor='debit' className='sr-only'/>\r\n            <input type='number' min='0' step='.01' id='debit' className='col form-control rounded-0 text-center' value={inputState[linePosition][i][4]?\r\n            inputState[linePosition][i][4]:''} \r\n            onChange={(e)=>onChangeJournallineInput(e.target.value,linePosition,i,4)} disabled={disabled}\r\n            style={{flex:'1 0 90px',paddingLeft:10,paddingRight:0}}/>\r\n\r\n            <label htmlFor='credit' className='sr-only'/>\r\n            <input type='number' min='0' step='.01' id='credit' className='col form-control rounded-0 text-center' value={inputState[linePosition][i][5]?\r\n            inputState[linePosition][i][5]:''} \r\n            onChange={(e)=>onChangeJournallineInput(e.target.value,linePosition,i,5)} disabled={disabled}\r\n            style={{flex:'1 0 90px',paddingLeft:10,paddingRight:0}}/>\r\n\r\n        </div>)\r\n        )\r\n    }\r\n    \r\n    \r\n    /*error display extension from error display already provided by Item Component*/\r\n    let errorDisplayExtension=null;\r\n    \r\n    \r\n    if ((dataSelectGLCode && dataSelectGLCode.error) || errorSelectGLCode) \r\n    errorDisplayExtension=(\r\n        <div className=\"alert alert-warning\">\r\n            {dataSelectGLCode && dataSelectGLCode.error? 'GL Code List RETRIEVAL for item failed errno: '+dataSelectGLCode.error.errno\r\n            +' code: '+dataSelectGLCode.error.code+' message: '+dataSelectGLCode.error.sqlMessage:null}\r\n            {errorSelectGLCode? 'GL Code List RETRIEVAL for item failed '+errorSelectGLCode : null}\r\n        </div>)\r\n\r\n    \r\n    return (\r\n        <Item inputState={inputState} changeInputState={changeInputState} url={url} item='journal' successPath='/JournalEntry'>\r\n            {\r\n            ({usage,disabled,changeDisabled,onInsert,onUpdate,onDelete,errorDisplay,inputNumberRender})=> \r\n            (<AppLayout >\r\n                <div className='container pb-5 px-md-5'>\r\n\r\n                    {/*Heading renders depending on INSERT or UPDATE/DELETE state*/}\r\n\r\n                    <h3 className='my-3'>{(usage==='INSERT'? 'Create':'Update') + ' '+ JournalItem.description}</h3>\r\n                    <small className='text-warning'>* required</small>\r\n                    {errorDisplay}\r\n                    {errorDisplayExtension}\r\n\r\n                    {/*onInsert and onUpdate needs to be attached to HTML form onSubmit eventhandler since native HTML form \r\n                    validation only works if submit event is handled here*/}\r\n                    <form onSubmit={(e)=>{e.preventDefault(); if(usage==='INSERT') onInsert(); else onUpdate()}}>\r\n                        <div className='form-group form-row'>\r\n                            <label className='col-md-2 col-form-label' htmlFor='journalNumber' >Journal Number <span className='text-warning'>*</span></label>\r\n                            {inputNumberRender({\r\n                                onChange:onChange,\r\n                                layout:'col-md-4',\r\n                                position:0,\r\n                                labelID:'journalNumber'\r\n                            })\r\n                            }\r\n                        </div>\r\n                        <div className='form-group form-row'>\r\n                            <label className='col-md-2 col-form-label' htmlFor='data'>Date <span className='text-warning'>*</span></label>\r\n                            <div className='col-md-4'>\r\n                                <input type='date' id='date' onChange={(e)=>\r\n                                onChange(e.target.value,1)} value={inputState[1]} disabled={disabled} required className='form-control'/>\r\n                            </div>\r\n                        </div>\r\n                        <div className='form-group form-row'>\r\n                            <label className='col-md-2 col-form-label' htmlFor='description'>Description</label>\r\n                            <div className='col-md-10'>\r\n                                <textarea id='description' onChange={(e)=>\r\n                                onChange(e.target.value,2)} \r\n                                value={inputState[2]} disabled={disabled} className='form-control'/>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <fieldset className='form-group border border-secondary pb-4 rounded px-3'>\r\n                            <legend className='col-form-label col-8 offset-2 col-md-4 offset-md-4 text-center' >\r\n                                <button type='button' className='btn btn-primary' disabled={disabled}\r\n                                onClick={()=>\r\n                                    changeInputState(\r\n                                        inputState.slice(0,linePosition)\r\n                                        .concat([inputState[linePosition].slice(0)\r\n                                            .concat(\r\n                                                [[inputState[linePosition].length+1,'','','','0','0']])])\r\n                                        .concat(inputState.slice(linePosition+1))\r\n                                    )\r\n                                }>\r\n                                    +</button>\r\n                                <h6 className='d-inline-block mx-2 mx-md-4'>Journal Line</h6>\r\n                                <button type='button' className='btn btn-secondary' disabled={disabled} \r\n                                onClick={()=>\r\n                                    changeInputState(\r\n                                        inputState.slice(0,linePosition)\r\n                                        .concat([inputState[linePosition].slice(0,inputState[linePosition].length-1)])\r\n                                        .concat(inputState.slice(linePosition+1))\r\n                                    )\r\n                                }>-</button>\r\n                            </legend>\r\n                            <div className=\"overflow-auto\">\r\n                                {/*flex nowrap and overflow auto for mobile view*/}\r\n                                <div className='row flex-nowrap' style={{marginLeft:0,marginRight:0}}>\r\n                                    <h6 className='col' style={{flex:'1 0 90px',paddingLeft:10,paddingRight:10}}>Line Number</h6>\r\n                                    <h6 className='col' style={{flex:'1 0 120px',paddingLeft:10,paddingRight:10}}>GL Code</h6>\r\n                                    <h6 className='col' style={{flex:'1 0 120px',paddingLeft:10,paddingRight:10}}>GL Desc</h6>\r\n                                    <h6 className='col' style={{flex:'1 0 225px',paddingLeft:10,paddingRight:10}}>Other Description</h6>\r\n                                    <h6 className='col' style={{flex:'1 0 90px',paddingLeft:10,paddingRight:10}}>Debit</h6>\r\n                                    <h6 className='col' style={{flex:'1 0 90px',paddingLeft:10,paddingRight:10}}>Credit</h6>\r\n                                </div>\r\n                                {journallineListRender(disabled)}\r\n                                    \r\n                            </div>\r\n                            {notBalanced? (\r\n                                <div className=\"alert alert-danger mt-3\">\r\n                                    Journal Debit and Credit Entries not balanced!\r\n                                </div>\r\n                            ):null}\r\n                            <h5 className='text-right my-3'> \r\n                                {'Total Debit: '+numberFormatParser(calculateDebitTotal())}\r\n                            </h5>\r\n                            <h5 className='text-right my-3'>\r\n                                {'Total Crebit: '+numberFormatParser(calculateCreditTotal())}\r\n                            </h5>\r\n                                \r\n                        </fieldset>\r\n                        <div>\r\n                            <button type='submit' onClick={e=>{\r\n                                if(calculateDebitTotal()!==calculateCreditTotal()){\r\n                                    e.preventDefault();\r\n                                    changeNotBalanced(true);\r\n                                }\r\n                            }} className='btn btn-primary mx-1 my-1'>Submit</button>\r\n                            {/*If state is 'INSERT', no Edit button & Delete button*/}\r\n                            {usage==='UPDATE/DELETE'?(\r\n                                <button type='button' onClick={(e)=>{changeDisabled(false)}} className='btn btn-outline-primary mx-1 my-1'>Edit</button>\r\n                                ):null}\r\n                            {usage==='UPDATE/DELETE'?(\r\n                                <button type='button' onClick={(e)=>{onDelete()}} className='btn btn-danger mx-1 my-1'>Delete</button>\r\n                                ):null}\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </AppLayout>)\r\n            }\r\n        \r\n        </Item>\r\n    )\r\n}\r\nJournalItem.description='Journal';\r\nJournalItem.path='/JournalItem';\r\n\r\nexport default JournalItem;\r\n\r\n","import React,{useState,useEffect,useContext} from 'react';\r\nimport AppLayout from '../Shared/AppLayout';\r\nimport useFetch from '../Shared/useFetch';\r\nimport authContext from '../Shared/authContext';\r\nimport numberFormatParser from '../Shared/numberFormatParser';\r\nimport dateFormatParser from '../Shared/dateFormatParser';\r\nimport sortData from '../Shared/sort';\r\nimport $ from 'jquery';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nfunction ProfitAndLossItem (props) {\r\n\r\n    const url={\r\n        date:new URLSearchParams(props.location.search).get('date'),\r\n        companyTitle:new URLSearchParams(props.location.search).get('companyTitle'),\r\n    }\r\n    const [{data:dataSelectProfitAndLoss,error:errorSelectProfitAndLoss}]=useFetch({\r\n        url:'./SelectItem',\r\n        init:{\r\n            method:'POST',\r\n            headers:{'Content-Type':'application/json'},\r\n            body:JSON.stringify({item:'profit_and_loss'}),\r\n            credentials:'include'\r\n        }\r\n    });\r\n    const [sortedData,changeSortedData]=useState(null);\r\n    const [grossProfit,changeGrossProfit]=useState(null);\r\n    const [grossProfitTotal,changeGrossProfitTotal]=useState(0);\r\n    const [expenses,changeExpenses]=useState(null);\r\n    const [expensesTotal,changeExpensesTotal]=useState(0);\r\n    const [netProfit,changeNetProfit]=useState(0);\r\n    const [collapsibleElementID,changeCollapsibleElementID]=useState([])\r\n    const [printFormat,changePrintFormat]=useState(false);\r\n\r\n    const {changeAuth} = useContext(authContext)\r\n    const history=useHistory();\r\n\r\n    useEffect(()=>{\r\n         if (dataSelectProfitAndLoss && dataSelectProfitAndLoss.auth===false) {\r\n                alert('Cookies Expired or Authorisation invalid. Please Login again!')\r\n                changeAuth(false)\r\n            }\r\n                \r\n        else if (dataSelectProfitAndLoss && dataSelectProfitAndLoss.data && dataSelectProfitAndLoss.field) {\r\n            let glDescAlreadyParsed=[];\r\n            const data=dataSelectProfitAndLoss.data[1];\r\n            const field=dataSelectProfitAndLoss.field[1];\r\n            const glDesc=field[2].name;\r\n            let ID=[]\r\n\r\n            \r\n            data.forEach(item=>{\r\n                let newObject={}\r\n                if(glDescAlreadyParsed.indexOf(item[glDesc])===-1) {\r\n                    glDescAlreadyParsed.push(item[glDesc])\r\n                    newObject[item[glDesc]]=data.filter(item2=>item2[glDesc]===item[glDesc])\r\n                    changeSortedData(sortedData=>(Object.assign({},{...sortedData},newObject)))\r\n                }\r\n            })\r\n            \r\n            data.forEach(item=>{\r\n                if(ID.indexOf(item[glDesc].replace(/[ ._()]/g,''))===-1) \r\n                    ID.push(item[glDesc].replace(/[ ._()]/g,''))\r\n            })\r\n            changeCollapsibleElementID(ID)\r\n        }\r\n\r\n    },[dataSelectProfitAndLoss,errorSelectProfitAndLoss])\r\n    \r\n    useEffect(()=>{\r\n        if(sortedData) {\r\n            const category=dataSelectProfitAndLoss.data[0].map(category=>category[dataSelectProfitAndLoss.field[0][0].name])\r\n\r\n            changeGrossProfit(populateCategory(category.slice(0,4),dataSelectProfitAndLoss.data[1],sortedData,dataSelectProfitAndLoss.field[1]))\r\n            changeGrossProfitTotal(numberFormatParser(calculateCategoryTotal(category.slice(0,4),dataSelectProfitAndLoss.data[1],dataSelectProfitAndLoss.field[1])));\r\n\r\n            changeExpenses(populateCategory(category.slice(4),dataSelectProfitAndLoss.data[1],sortedData,dataSelectProfitAndLoss.field[1]))\r\n            changeExpensesTotal(numberFormatParser(calculateCategoryTotal(category.slice(4),dataSelectProfitAndLoss.data[1],dataSelectProfitAndLoss.field[1])));\r\n            changeNetProfit(numberFormatParser(calculateCategoryTotal(category,dataSelectProfitAndLoss.data[1],dataSelectProfitAndLoss.field[1])));\r\n        \r\n            \r\n        }\r\n    },[sortedData,printFormat])\r\n\r\n    //attach bootstrap/jquery eventlisteners and callbacks\r\n    useEffect(()=>{\r\n\r\n        if (collapsibleElementID && grossProfit && expenses) {\r\n            collapsibleElementID.forEach(ID=>{\r\n                $('#'+ID).on('show.bs.collapse',e=>{\r\n                    if(e.target===e.currentTarget)\r\n                    $('#plusminus'+ID).removeClass('fa-plus-square').addClass('fa-minus-square');\r\n                })\r\n                $('#'+ID).on('hide.bs.collapse',e=>{\r\n                    if(e.target===e.currentTarget)\r\n                    $('#plusminus'+ID).removeClass('fa-minus-square').addClass('fa-plus-square');\r\n                })\r\n                \r\n        })\r\n    }\r\n        \r\n    },[grossProfit,expenses])\r\n\r\n    /*single category or array of categories*/\r\n    function calculateCategoryTotal(category=[],data,field) {\r\n        \r\n        const glCategory=field[0].name;\r\n        const itemDate=field[3].name; \r\n        const itemDebit=field[6].name;\r\n        const itemCredit=field[7].name;\r\n        \r\n        return data.reduce((a,b)=>{        \r\n            if (new Date(b[itemDate])<=new Date(url.date) \r\n            && (new Date(b[itemDate])>=new Date(new Date(url.date).getFullYear()+'-01-01')) \r\n            && category.indexOf(b[glCategory])!==-1) \r\n                return a+b[itemCredit]-b[itemDebit];\r\n            else return a;\r\n        },0)\r\n    }\r\n\r\n    function createLink(string,id) {\r\n        var WIPstring=string.split(' ');\r\n\r\n        WIPstring=WIPstring.map(string=>{\r\n            return string.toLowerCase()\r\n        })\r\n        WIPstring=WIPstring.map(string=>{\r\n            return string[0].toUpperCase().concat(string.substr(1))\r\n        })\r\n\r\n        return WIPstring.join('')+'Item?item='+string.replace(/ /g,'_')+'&id='+encodeURIComponent(id)\r\n    }\r\n\r\n    function populateCategory(category=[],data,sortedData1,field) {\r\n        return (\r\n            category.map(category=>{\r\n                let accounts=populateAccount(category,data,sortedData1,field);\r\n                if (accounts.length>0)\r\n                    return (\r\n                    <section key={category}>\r\n                        <h6><u>{category}</u></h6>\r\n                            {accounts}\r\n                        <p className='h6 text-right '><u>{'TOTAL : '+numberFormatParser(calculateCategoryTotal([category],data,field))}</u></p>\r\n                    </section>)\r\n                }\r\n            )\r\n        )\r\n    }\r\n    \r\n    function populateAccount(category,data,sortedData1,field) {\r\n        const glCategory=field[0].name;\r\n        const glAccount=field[1].name;\r\n        const glDesc=field[2].name;\r\n        const itemDate=field[3].name;\r\n        const itemType=field[4].name;\r\n        const itemNumber=field[5].name;\r\n        const itemDebit=field[6].name;\r\n        const itemCredit=field[7].name;\r\n        \r\n        const glAccountAlreadyParsed=[];\r\n        const result=[];\r\n        \r\n        data.forEach(item=>{\r\n            if (item[glCategory]===category \r\n                && glAccountAlreadyParsed.indexOf(item[glAccount])===-1\r\n                && (new Date(item[itemDate])>=new Date(new Date(url.date).getFullYear()+'-01-01'))\r\n                && (new Date(item[itemDate])<=new Date(url.date))\r\n                ) {\r\n                glAccountAlreadyParsed.push(item[glAccount]);\r\n                result.push(\r\n                    (<div key={item[glAccount]}>\r\n                        <div className='row' style={{cursor:'pointer'}} data-toggle='collapse' data-target={'#'+item[glDesc].replace(/[ ._()]/g,'')}>\r\n                            <i className='fa fa-plus-square mt-1 col-1 d-print-none' id={'plusminus'+item[glDesc].replace(/[ ._()]/g,'')}></i>\r\n                            <p className='col-2 mb-0'>{item[glAccount]}</p>\r\n                            <p className='col-6 mb-0'>{item[glDesc]}</p>\r\n                            <i className='col-1 d-none d-print-block'></i>\r\n                            <p className='col-3 text-right mb-0'>{numberFormatParser(data.reduce(\r\n                                (a,b)=>{\r\n                                    if (b[glAccount]===item[glAccount] \r\n                                        && (new Date(b[itemDate])<= new Date(url.date))\r\n                                        && (new Date(b[itemDate])>=new Date(new Date(url.date).getFullYear()+'-01-01'))\r\n                                    )\r\n                                        return a+b[itemCredit]-b[itemDebit]\r\n                                    else return a\r\n                                },0)\r\n                            )}\r\n                            </p>\r\n                        </div>\r\n                        <div className='collapse navbar-collapse my-2 pl-3 pl-md-5 pr-2' id={item[glDesc].replace(/[ ._()]/g,'')}>\r\n                            <div style={printFormat?null:{overflowY:'auto',overflowX:'hidden',maxHeight:'60vh'}}>\r\n                                <table id='table' className={printFormat?'table table-hover':'table table-hover table-responsive-md'}>\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th className='text-nowrap' style={{cursor:'pointer'}} data-order='asc'\r\n                                            onClick={(e)=>{\r\n                                                const id='date'+item[glDesc].replace(/[ ._\\-()]/g,'')\r\n                                                e.target.setAttribute('data-order',\r\n                                                e.target.getAttribute('data-order')==='asc'?'desc':'asc')\r\n                                                \r\n                                                sortedData[item[glDesc]]=sortData(sortedData[item[glDesc]],itemDate,e.target.getAttribute('data-order'))\r\n                                                changeSortedData({...sortedData})\r\n                            \r\n                                                if (e.target.getAttribute('data-order')==='asc') {\r\n                                                    document.getElementById(id).classList.remove('fa-caret-up');\r\n                                                    document.getElementById(id).classList.add('fa-caret-down')\r\n                                                }\r\n                                                else {\r\n                                                    document.getElementById(id).classList.remove('fa-caret-down');\r\n                                                    document.getElementById(id).classList.add('fa-caret-up')\r\n                                                }\r\n                                                }}>\r\n                                                DATE\r\n                                                <i id={'date'+item[glDesc].replace(/[ ._\\-()]/g,'')} className='d-print-none fa fa-caret-down ml-2'></i>\r\n                                            </th>\r\n                                            <th className='text-nowrap' style={{cursor:'pointer'}} data-order='asc'\r\n                                            onClick={(e)=>{\r\n                                                const id='type'+item[glDesc].replace(/[ ._\\-()]/g,'')\r\n                                                e.target.setAttribute('data-order',\r\n                                                e.target.getAttribute('data-order')==='asc'?'desc':'asc')\r\n                                                \r\n                                                sortedData[item[glDesc]]=sortData(sortedData[item[glDesc]],itemType,e.target.getAttribute('data-order'))\r\n                                                changeSortedData({...sortedData})\r\n                            \r\n                                                if (e.target.getAttribute('data-order')==='asc') {\r\n                                                    document.getElementById(id).classList.remove('fa-caret-up');\r\n                                                    document.getElementById(id).classList.add('fa-caret-down')\r\n                                                }\r\n                                                else {\r\n                                                    document.getElementById(id).classList.remove('fa-caret-down');\r\n                                                    document.getElementById(id).classList.add('fa-caret-up')\r\n                                                }\r\n                                                }}>\r\n                                                ITEM TYPE\r\n                                                <i id={'type'+item[glDesc].replace(/[ ._\\-()]/g,'')} className='d-print-none fa fa-caret-down ml-2'></i>\r\n                                            </th>\r\n                                            <th className='text-nowrap' style={{cursor:'pointer'}} data-order='asc'\r\n                                            onClick={(e)=>{\r\n                                                const id='number'+item[glDesc].replace(/[ ._\\-()]/g,'')\r\n                                                e.target.setAttribute('data-order',\r\n                                                e.target.getAttribute('data-order')==='asc'?'desc':'asc')\r\n                                                \r\n                                                sortedData[item[glDesc]]=sortData(sortedData[item[glDesc]],itemNumber,e.target.getAttribute('data-order'))\r\n                                                changeSortedData({...sortedData})\r\n                            \r\n                                                if (e.target.getAttribute('data-order')==='asc') {\r\n                                                    document.getElementById(id).classList.remove('fa-caret-up');\r\n                                                    document.getElementById(id).classList.add('fa-caret-down')\r\n                                                }\r\n                                                else {\r\n                                                    document.getElementById(id).classList.remove('fa-caret-down');\r\n                                                    document.getElementById(id).classList.add('fa-caret-up')\r\n                                                }\r\n                                                }}>\r\n                                                ITEM NUMBER\r\n                                                <i id={'number'+item[glDesc].replace(/[ ._\\-()]/g,'')} className='d-print-none fa fa-caret-down ml-2'></i>\r\n                                            </th>\r\n                                            <th className='text-nowrap' style={{cursor:'pointer'}} data-order='asc'\r\n                                            onClick={(e)=>{\r\n                                                const id='debit'+item[glDesc].replace(/[ ._\\-()]/g,'')\r\n                                                e.target.setAttribute('data-order',\r\n                                                e.target.getAttribute('data-order')==='asc'?'desc':'asc')\r\n                                                \r\n                                                sortedData[item[glDesc]]=sortData(sortedData[item[glDesc]],itemDebit,e.target.getAttribute('data-order'))\r\n                                                changeSortedData({...sortedData})\r\n                            \r\n                                                if (e.target.getAttribute('data-order')==='asc') {\r\n                                                    document.getElementById(id).classList.remove('fa-caret-up');\r\n                                                    document.getElementById(id).classList.add('fa-caret-down')\r\n                                                }\r\n                                                else {\r\n                                                    document.getElementById(id).classList.remove('fa-caret-down');\r\n                                                    document.getElementById(id).classList.add('fa-caret-up')\r\n                                                }\r\n                                                }}>\r\n                                                DR\r\n                                                <i id={'debit'+item[glDesc].replace(/[ ._\\-()]/g,'')} className='d-print-none fa fa-caret-down ml-2'></i>\r\n                                            </th>\r\n                                            <th className='text-nowrap' style={{cursor:'pointer'}} data-order='asc'\r\n                                            onClick={(e)=>{\r\n                                                const id='credit'+item[glDesc].replace(/[ ._\\-()]/g,'')\r\n                                                e.target.setAttribute('data-order',\r\n                                                e.target.getAttribute('data-order')==='asc'?'desc':'asc')\r\n                                                \r\n                                                sortedData[item[glDesc]]=sortData(sortedData[item[glDesc]],itemCredit,e.target.getAttribute('data-order'))\r\n                                                changeSortedData({...sortedData})\r\n                            \r\n                                                if (e.target.getAttribute('data-order')==='asc') {\r\n                                                    document.getElementById(id).classList.remove('fa-caret-up');\r\n                                                    document.getElementById(id).classList.add('fa-caret-down')\r\n                                                }\r\n                                                else {\r\n                                                    document.getElementById(id).classList.remove('fa-caret-down');\r\n                                                    document.getElementById(id).classList.add('fa-caret-up')\r\n                                                }\r\n                                                }}>\r\n                                                CR\r\n                                                <i id={'credit'+item[glDesc].replace(/[ ._\\-()]/g,'')} className='d-print-none fa fa-caret-down ml-2'></i>\r\n                                            </th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {sortedData1[item[glDesc]].map((item2,i)=>{\r\n                                            if (item2[glAccount]===item[glAccount]\r\n                                                && (new Date(item2[itemDate])>=new Date(new Date(url.date).getFullYear()+'-01-01'))\r\n                                                && (new Date(item2[itemDate])<=new Date(url.date))\r\n                                                ) \r\n                                                return (\r\n                                                    <tr key={i} style={{cursor:'pointer'}} onClick={(e)=>\r\n                                                        history.push('./'+createLink(item2[itemType].toLowerCase(),item2[itemNumber]))\r\n                                                        }>\r\n                                                        <td className='text-nowrap'>{dateFormatParser(item2[itemDate])}</td>\r\n                                                        <td className='text-nowrap'>{item2[itemType]}</td>\r\n                                                        <td className='text-nowrap'>{item2[itemNumber]}</td>\r\n                                                        <td className='text-nowrap'>{numberFormatParser(item2[itemDebit])}</td>\r\n                                                        <td className='text-nowrap'>{numberFormatParser(item2[itemCredit])}</td>\r\n                                                    </tr>\r\n                                                )\r\n                                            else return null; \r\n                                            })\r\n                                        }\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    )\r\n                )\r\n            }\r\n        })\r\n            \r\n        return result;\r\n    }\r\n\r\n\r\n    let errorDisplay=null;\r\n    if ((dataSelectProfitAndLoss && dataSelectProfitAndLoss.error) || errorSelectProfitAndLoss) \r\n    errorDisplay=(\r\n        <div className=\"alert alert-warning\">\r\n            {dataSelectProfitAndLoss && dataSelectProfitAndLoss.error? 'Profit and Loss Data RETRIEVAL failed errno: '+dataSelectProfitAndLoss.error.errno\r\n            +' code: '+dataSelectProfitAndLoss.error.code+' message: '+dataSelectProfitAndLoss.error.sqlMessage:null}\r\n            {errorSelectProfitAndLoss? 'Profit and Loss Data RETRIEVAL failed '+errorSelectProfitAndLoss : null}\r\n        </div>)\r\n\r\n    return (\r\n        <AppLayout>\r\n            <div className='container py-3 py-md-5 px-md-5 position-relative'>\r\n                <h4 className='text-center'>{url.companyTitle}</h4>\r\n                <h4 className='text-center mb-4'>\r\n                    {'Profit And Loss as at ' + dateFormatParser(url.date)} \r\n                </h4>\r\n                {errorDisplay}\r\n                <div className='text-right d-print-none mb-4'>\r\n                    <div className=\"form-check form-check-inline\">\r\n                        <input className=\"form-check-input\" type=\"checkbox\" id=\"printFormat\" checked={printFormat}\r\n                        onChange={(e)=>{\r\n                            if (e.target.checked) \r\n                                changePrintFormat(true)\r\n                            else changePrintFormat(false)\r\n                        }}/>\r\n                        <label className=\"form-check-label\" htmlFor=\"printFormat\"> Print Format</label>\r\n                    </div>\r\n                    <button className='btn btn-dark mr-1 mr-md-2'  \r\n                        onClick={(e)=>collapsibleElementID.forEach(ID=>\r\n                            $('#'+ID).collapse('show')\r\n                        )}> <i className='fa fa-plus-square'></i> Expand</button>\r\n                    <button className='btn btn-light'  \r\n                    onClick={(e)=>collapsibleElementID.forEach(ID=>\r\n                        $('#'+ID).collapse('hide')\r\n                    )}> <i className='fa fa-minus-square'></i> Collapse</button>\r\n                </div>\r\n                {grossProfit}\r\n                <div className='row my-3 rounded' style={{backgroundColor:'rgba(248,222,126,0.3)'}}>\r\n                    <p className='col text-left my-2 h6'>GROSS PROFIT TOTAL</p>\r\n                    <p className='col text-right my-2 h6'>{grossProfitTotal}</p>\r\n                </div>\r\n                \r\n                {expenses}\r\n                <div className='row my-3 rounded' style={{backgroundColor:'rgba(248,222,126,0.3)'}}>\r\n                    <p className='col text-left my-2 h6'>EXPENSES TOTAL</p>\r\n                    <p className='col text-right my-2 h6'>{expensesTotal}</p>\r\n                </div>\r\n                <div className='row my-3 rounded' style={{backgroundColor:'rgba(248,222,126,0.6)'}}>\r\n                    <p className='col text-left my-2 h6'>NET PROFIT</p>\r\n                    <p className='col text-right my-2 h6'>{netProfit}</p>\r\n                </div>\r\n                \r\n\r\n            </div>\r\n        </AppLayout>\r\n    )\r\n}\r\n\r\nProfitAndLossItem.description='Profit And Loss';\r\nProfitAndLossItem.path='/ProfitAndLossItem';\r\n\r\nexport default ProfitAndLossItem;","import React,{useState,useEffect,useContext} from 'react';\r\nimport AppLayout from '../Shared/AppLayout';\r\nimport useFetch from '../Shared/useFetch';\r\nimport authContext from '../Shared/authContext';\r\nimport numberFormatParser from '../Shared/numberFormatParser'\r\nimport dateFormatParser from '../Shared/dateFormatParser';\r\nimport sortData from '../Shared/sort';\r\nimport $ from 'jquery'\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nfunction BalanceSheetItem (props) {\r\n\r\n    const url={\r\n        date:new URLSearchParams(props.location.search).get('date'),\r\n        companyTitle:new URLSearchParams(props.location.search).get('companyTitle'),\r\n    }\r\n    const [{data:dataSelectBalanceSheet,error:errorSelectBalanceSheet}]=useFetch({\r\n        url:'./SelectItem',\r\n        init:{\r\n            method:'POST',\r\n            headers:{'Content-Type':'application/json'},\r\n            body:JSON.stringify({item:'balance_sheet'}),\r\n            credentials:'include'\r\n        }\r\n    });\r\n    const [sortedData,changeSortedData]=useState(null);\r\n    const [netAssets,changeNetAssets]=useState(null);\r\n    const [netAssetsTotal,changeNetAssetsTotal]=useState(0);\r\n    const [netEquity,changeNetEquity]=useState(null);\r\n    const [netEquityTotal,changeNetEquityTotal]=useState(0);\r\n    const [currentProfitAndLoss,changeCurrentProfitAndLoss]=useState(0);\r\n    const [retainedEarnings,changeRetainedEarnings]=useState(0);\r\n    const [collapsibleElementID,changeCollapsibleElementID]=useState([])\r\n    const [printFormat,changePrintFormat]=useState(false);\r\n\r\n    const {changeAuth} = useContext(authContext)\r\n    const history=useHistory();\r\n\r\n    useEffect(()=>{\r\n         if (dataSelectBalanceSheet && dataSelectBalanceSheet.auth===false) {\r\n                alert('Cookies Expired or Authorisation invalid. Please Login again!')\r\n                changeAuth(false)\r\n            }\r\n                \r\n        else if (dataSelectBalanceSheet && dataSelectBalanceSheet.data && dataSelectBalanceSheet.field) {\r\n            let glDescAlreadyParsed=[];\r\n            let itemNameAlreadyParsed=[];\r\n            const data=dataSelectBalanceSheet.data[1];\r\n            const field=dataSelectBalanceSheet.field[1];\r\n            const glDesc=field[2].name;\r\n            const itemName=field[3].name;\r\n\r\n            let ID=[]\r\n\r\n            data.forEach(item=>{\r\n                let newObject={}\r\n                if(glDescAlreadyParsed.indexOf(item[glDesc])===-1) {\r\n                    glDescAlreadyParsed.push(item[glDesc])\r\n                    newObject[item[glDesc]]=data.filter(item2=>item2[glDesc]===item[glDesc])\r\n                    changeSortedData(sortedData=>(Object.assign({},{...sortedData},newObject)))\r\n                }\r\n            })\r\n\r\n            data.forEach(item=>{\r\n                let newObject={}\r\n                if(itemNameAlreadyParsed.indexOf(item[itemName])===-1 && item[itemName]!==null) {\r\n                    itemNameAlreadyParsed.push(item[itemName])\r\n                    newObject[item[itemName]]=data.filter(item2=>item2[itemName]===item[itemName])\r\n                    changeSortedData(sortedData=>(Object.assign({},{...sortedData},newObject)))\r\n                }\r\n            })\r\n\r\n            dataSelectBalanceSheet.data[1].forEach(item=>{\r\n                if(ID.indexOf(item[glDesc].replace(/[ ._()]/g,''))===-1) \r\n                    ID.push(item[glDesc].replace(/[ ._()]/g,''))\r\n                else if (item[itemName] && ID.indexOf(item[itemName].replace(/[ ._()]/g,''))===-1)\r\n                    ID.push(item[itemName].replace(/[ ._()]/g,''))\r\n                \r\n            })\r\n            changeCollapsibleElementID(ID)\r\n        }\r\n    },[dataSelectBalanceSheet,errorSelectBalanceSheet])\r\n\r\n    useEffect(()=>{\r\n        if(sortedData) {\r\n            const category=dataSelectBalanceSheet.data[0].map(category=>category[dataSelectBalanceSheet.field[0][0].name])\r\n            const currentProfitAndLoss=calculateCurrentProfitAndLoss(dataSelectBalanceSheet.data[2],dataSelectBalanceSheet.field[2]);\r\n            const retainedEarnings=calculateRetainedEarnings(dataSelectBalanceSheet.data[2],dataSelectBalanceSheet.field[2]);\r\n\r\n            changeNetAssets(populateCategory(category.slice(0,6),dataSelectBalanceSheet.data[1],sortedData,dataSelectBalanceSheet.field[1],false))\r\n            changeNetAssetsTotal(numberFormatParser(calculateCategoryTotal(category.slice(0,6),dataSelectBalanceSheet.data[1],dataSelectBalanceSheet.field[1],false)));\r\n\r\n            changeNetEquity(populateCategory(category.slice(6),dataSelectBalanceSheet.data[1],sortedData,dataSelectBalanceSheet.field[1],true))\r\n\r\n            changeCurrentProfitAndLoss(numberFormatParser(currentProfitAndLoss))\r\n            changeRetainedEarnings(numberFormatParser(retainedEarnings))\r\n\r\n            changeNetEquityTotal(numberFormatParser(calculateCategoryTotal(category.slice(6),dataSelectBalanceSheet.data[1],dataSelectBalanceSheet.field[1],true)\r\n            +currentProfitAndLoss+retainedEarnings));\r\n        \r\n            \r\n        }\r\n    },[sortedData,printFormat])\r\n    \r\n    //attach bootstrap/jquery eventlisteners and callbacks\r\n    useEffect(()=>{\r\n\r\n        if (collapsibleElementID && netAssets && netEquity) {\r\n            collapsibleElementID.forEach(ID=>{\r\n                $('#'+ID).on('show.bs.collapse',e=>{\r\n                    if(e.target===e.currentTarget)\r\n                    $('#plusminus'+ID).removeClass('fa-plus-square').addClass('fa-minus-square');\r\n                })\r\n                $('#'+ID).on('hide.bs.collapse',e=>{\r\n                    if(e.target===e.currentTarget)\r\n                    $('#plusminus'+ID).removeClass('fa-minus-square').addClass('fa-plus-square');\r\n                })\r\n                \r\n        })\r\n    }\r\n        \r\n    },[netAssets,netEquity])\r\n    \r\n    /*single category or array of categories*/\r\n    function calculateCategoryTotal(category=[],data,field,debitCreditOpposite) {\r\n        \r\n        const glCategory=field[0].name;\r\n        const itemDate=field[4].name; \r\n        const itemDebit=field[7].name;\r\n        const itemCredit=field[8].name;\r\n        \r\n        return data.reduce((a,b)=>{        \r\n            if (new Date(b[itemDate])<=new Date(url.date) && category.indexOf(b[glCategory])!==-1) {\r\n                if (debitCreditOpposite) \r\n                    return a+b[itemCredit]-b[itemDebit];\r\n                else return a+b[itemDebit]-b[itemCredit];\r\n            }\r\n            else return a;\r\n        },0)\r\n    }\r\n\r\n    function calculateCurrentProfitAndLoss(data,field) {\r\n        const itemDate=field[3].name; \r\n        const itemDebit=field[6].name;\r\n        const itemCredit=field[7].name;\r\n        \r\n        return data.reduce((a,b)=>{        \r\n            if (new Date(b[itemDate])<=new Date(url.date) \r\n            && (new Date(b[itemDate])>=new Date(new Date(url.date).getFullYear()+'-01-01')) \r\n            ) \r\n                    \r\n                return a+b[itemCredit]-b[itemDebit];\r\n            else return a;\r\n        },0)\r\n    }\r\n\r\n    function calculateRetainedEarnings(data,field) {\r\n        const itemDate=field[3].name; \r\n        const itemDebit=field[6].name;\r\n        const itemCredit=field[7].name;\r\n        \r\n        return data.reduce((a,b)=>{        \r\n            if (new Date(b[itemDate])<new Date(new Date(url.date).getFullYear()+'-01-01')) \r\n                return a+b[itemCredit]-b[itemDebit];\r\n            else return a;\r\n        },0)\r\n    }\r\n    \r\n    function createLink(string,id) {\r\n        var WIPstring=string.split(' ');\r\n\r\n        WIPstring=WIPstring.map(string=>{\r\n            return string.toLowerCase()\r\n        })\r\n        WIPstring=WIPstring.map(string=>{\r\n            return string[0].toUpperCase().concat(string.substr(1))\r\n        })\r\n\r\n        return WIPstring.join('')+'Item?item='+string.replace(/ /g,'_')+'&id='+encodeURIComponent(id)\r\n    }\r\n\r\n    function populateCategory(category=[],data,sortedData1,field,debitCreditOpposite) {\r\n        return (\r\n            category.map(category=>{\r\n                let accounts=populateAccount(category,data,sortedData1,field,debitCreditOpposite);\r\n                if (accounts.length>0)\r\n                    return (\r\n                    <section key={category}>\r\n                        <h6><u>{category}</u></h6>\r\n                            {accounts}\r\n                        <p className='h6 text-right my-1'><u>{'TOTAL : '+numberFormatParser(calculateCategoryTotal([category],data,field,debitCreditOpposite))}</u></p>\r\n                    </section>)\r\n                }\r\n            )\r\n        )\r\n    }\r\n    \r\n    function populateAccount(category,data,sortedData1,field,debitCreditOpposite) {\r\n        const glCategory=field[0].name;\r\n        const glAccount=field[1].name;\r\n        const glDesc=field[2].name;\r\n        const itemName=field[3].name;\r\n        const itemDate=field[4].name;\r\n        const itemType=field[5].name;\r\n        const itemNumber=field[6].name;\r\n        const itemDebit=field[7].name;\r\n        const itemCredit=field[8].name;\r\n        \r\n        const glAccountAlreadyParsed=[];\r\n        const result=[];\r\n        \r\n        function getBroughtForwardAmount(item) {\r\n            return data.reduce((a,b)=>{\r\n                if (item[itemName] && (b[itemName]===item[itemName]) && (new Date(b[itemDate])<new Date(new Date(url.date).getFullYear()+'-01-01'))) \r\n                    return a+b[itemDebit]-b[itemCredit]\r\n                else if (!item[itemName] && b[glAccount]===item[glAccount] && \r\n                    (new Date(b[itemDate])<new Date(new Date(url.date).getFullYear()+'-01-01')))\r\n                        return a+b[itemDebit]-b[itemCredit]\r\n                else return a\r\n            },0)\r\n        }\r\n\r\n        \r\n        function populateItemName(targetItem) {\r\n            let itemNameAlreadyParsed=[];\r\n            return (\r\n                data.map(item=>{\r\n                    if (item[glAccount]===targetItem[glAccount] && itemNameAlreadyParsed.indexOf(item[itemName])===-1) {\r\n                        itemNameAlreadyParsed.push(item[itemName]);\r\n                        return (\r\n                        <div key={item[itemName]}>\r\n                            <div className='row my-1 py-1 rounded bg-secondary text-white' style={{cursor:'pointer'}} data-toggle='collapse' data-target={'#'+item[itemName].replace(/[ ._()]/g,'')}>\r\n                                <p className='col-1'><i className='fa fa-plus-square mt-1 d-print-none' id={'plusminus'+item[itemName].replace(/[ ._()]/g,'')}></i></p>\r\n                                <p className='h6 col-5 mb-0'>{item[itemName]}</p>\r\n                                <p className='h6 col text-right mb-0'>{numberFormatParser(data.reduce(\r\n                                    (a,b)=>{\r\n                                        if(b[itemName]===item[itemName] && (new Date(b[itemDate])<=new Date(url.date))) {\r\n                                            if (debitCreditOpposite) \r\n                                                return a+b[itemCredit]-b[itemDebit];\r\n                                            else return a+b[itemDebit]-b[itemCredit];\r\n                                        }\r\n\r\n                                            \r\n                                        else return a;\r\n                                    },0)\r\n                                )}\r\n                                </p>\r\n                            </div>\r\n                            <div className='collapse navbar-collapse my-2 row pl-3 pl-md-5 pr-2' id={item[itemName].replace(/[ ._()]/g,'')}>\r\n                                <div style={printFormat?\r\n                                    {width:'100%'}:{width:'100%',overflowY:'auto',overflowX:'hidden',maxHeight:'60vh'}}>\r\n                                <table id='table' className={printFormat?'table table-hover':'table table-hover table-responsive-md'}>\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th className='text-nowrap' style={{cursor:'pointer'}} data-order='asc'\r\n                                            onClick={(e)=>{\r\n                                                const id='date'+item[itemName].replace(/[ ._\\-()]/g,'')\r\n                                                e.target.setAttribute('data-order',\r\n                                                e.target.getAttribute('data-order')==='asc'?'desc':'asc')\r\n                                                \r\n                                                sortedData[item[itemName]]=sortData(sortedData[item[itemName]],itemDate,e.target.getAttribute('data-order'))\r\n                                                changeSortedData({...sortedData})\r\n                            \r\n                                                if (e.target.getAttribute('data-order')==='asc') {\r\n                                                    document.getElementById(id).classList.remove('fa-caret-up');\r\n                                                    document.getElementById(id).classList.add('fa-caret-down')\r\n                                                }\r\n                                                else {\r\n                                                    document.getElementById(id).classList.remove('fa-caret-down');\r\n                                                    document.getElementById(id).classList.add('fa-caret-up')\r\n                                                }\r\n                                                }}\r\n                                                >\r\n                                                DATE\r\n                                                <i id={'date'+item[itemName].replace(/[ ._\\-()]/g,'')} className='d-print-none fa fa-caret-down ml-2'></i>\r\n                                            </th>\r\n                                            <th className='text-nowrap' style={{cursor:'pointer'}} data-order='asc'\r\n                                            onClick={(e)=>{\r\n                                                const id='type'+item[itemName].replace(/[ ._\\-()]/g,'')\r\n                                                e.target.setAttribute('data-order',\r\n                                                e.target.getAttribute('data-order')==='asc'?'desc':'asc')\r\n                                                \r\n                                                sortedData[item[itemName]]=sortData(sortedData[item[itemName]],itemType,e.target.getAttribute('data-order'))\r\n                                                changeSortedData({...sortedData})\r\n                            \r\n                                                if (e.target.getAttribute('data-order')==='asc') {\r\n                                                    document.getElementById(id).classList.remove('fa-caret-up');\r\n                                                    document.getElementById(id).classList.add('fa-caret-down')\r\n                                                }\r\n                                                else {\r\n                                                    document.getElementById(id).classList.remove('fa-caret-down');\r\n                                                    document.getElementById(id).classList.add('fa-caret-up')\r\n                                                }\r\n                                                }}\r\n                                                >\r\n                                                ITEM TYPE\r\n                                                <i id={'type'+item[itemName].replace(/[ ._\\-()]/g,'')} className='d-print-none fa fa-caret-down ml-2'></i>\r\n                                            </th>\r\n                                            <th className='text-nowrap' style={{cursor:'pointer'}} data-order='asc'\r\n                                            onClick={(e)=>{\r\n                                                const id='number'+item[itemName].replace(/[ ._\\-()]/g,'')\r\n                                                e.target.setAttribute('data-order',\r\n                                                e.target.getAttribute('data-order')==='asc'?'desc':'asc')\r\n                                                \r\n                                                sortedData[item[itemName]]=sortData(sortedData[item[itemName]],itemNumber,e.target.getAttribute('data-order'))\r\n                                                changeSortedData({...sortedData})\r\n                            \r\n                                                if (e.target.getAttribute('data-order')==='asc') {\r\n                                                    document.getElementById(id).classList.remove('fa-caret-up');\r\n                                                    document.getElementById(id).classList.add('fa-caret-down')\r\n                                                }\r\n                                                else {\r\n                                                    document.getElementById(id).classList.remove('fa-caret-down');\r\n                                                    document.getElementById(id).classList.add('fa-caret-up')\r\n                                                }\r\n                                                }}\r\n                                                >\r\n                                                ITEM NUMBER\r\n                                                <i id={'number'+item[itemName].replace(/[ ._\\-()]/g,'')} className='d-print-none fa fa-caret-down ml-2'></i>\r\n                                            </th>\r\n                                            <th className='text-nowrap' style={{cursor:'pointer'}} data-order='asc'\r\n                                            onClick={(e)=>{\r\n                                                const id='dr'+item[itemName].replace(/[ ._\\-()]/g,'')\r\n                                                e.target.setAttribute('data-order',\r\n                                                e.target.getAttribute('data-order')==='asc'?'desc':'asc')\r\n                                                \r\n                                                sortedData[item[itemName]]=sortData(sortedData[item[itemName]],itemDebit,e.target.getAttribute('data-order'))\r\n                                                changeSortedData({...sortedData})\r\n                            \r\n                                                if (e.target.getAttribute('data-order')==='asc') {\r\n                                                    document.getElementById(id).classList.remove('fa-caret-up');\r\n                                                    document.getElementById(id).classList.add('fa-caret-down')\r\n                                                }\r\n                                                else {\r\n                                                    document.getElementById(id).classList.remove('fa-caret-down');\r\n                                                    document.getElementById(id).classList.add('fa-caret-up')\r\n                                                }\r\n                                                }}\r\n                                            >\r\n                                                DR\r\n                                                <i id={'dr'+item[itemName].replace(/[ ._\\-()]/g,'')} className='d-print-none fa fa-caret-down ml-2'></i>\r\n                                            </th>\r\n                                            <th className='text-nowrap' style={{cursor:'pointer'}} data-order='asc'\r\n                                            onClick={(e)=>{\r\n                                                const id='cr'+item[itemName].replace(/[ ._\\-()]/g,'')\r\n                                                e.target.setAttribute('data-order',\r\n                                                e.target.getAttribute('data-order')==='asc'?'desc':'asc')\r\n                                                \r\n                                                sortedData[item[itemName]]=sortData(sortedData[item[itemName]],itemCredit,e.target.getAttribute('data-order'))\r\n                                                changeSortedData({...sortedData})\r\n                            \r\n                                                if (e.target.getAttribute('data-order')==='asc') {\r\n                                                    document.getElementById(id).classList.remove('fa-caret-up');\r\n                                                    document.getElementById(id).classList.add('fa-caret-down')\r\n                                                }\r\n                                                else {\r\n                                                    document.getElementById(id).classList.remove('fa-caret-down');\r\n                                                    document.getElementById(id).classList.add('fa-caret-up')\r\n                                                }\r\n                                                }}\r\n                                            >\r\n                                                CR\r\n                                                <i id={'cr'+item[itemName].replace(/[ ._\\-()]/g,'')} className='d-print-none fa fa-caret-down ml-2'></i>\r\n                                            </th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {getBroughtForwardAmount(item)>=0?\r\n                                            (<tr>\r\n                                                <td colSpan='3'>B/F</td>\r\n                                                <td colSpan='2'>{numberFormatParser(getBroughtForwardAmount(item))}</td>\r\n                                            </tr>):\r\n                                            (<tr>\r\n                                                <td colSpan='4'>B/F</td>\r\n                                                <td colSpan='1'>{numberFormatParser(-getBroughtForwardAmount(item))}</td>\r\n                                            </tr>)\r\n                                            }\r\n                                    {sortedData1[item[itemName]].map((item2,i)=>{\r\n                                        if (item2[glAccount]===targetItem[glAccount] && item2[itemName]===item[itemName] \r\n                                            && (new Date(item2[itemDate])>=new Date(new Date(url.date).getFullYear()+'-01-01'))\r\n                                            && (new Date(item2[itemDate])<=new Date(url.date))\r\n                                            ) \r\n                                            return (\r\n                                                <tr key={i} style={{cursor:'pointer'}} onClick={(e)=>\r\n                                                    history.push('./'+createLink(item2[itemType].toLowerCase(),item2[itemNumber]))\r\n                                                    }>\r\n                                                    <td className='text-nowrap'>{dateFormatParser(item2[itemDate])}</td>\r\n                                                    <td className='text-nowrap'>{item2[itemType]}</td>\r\n                                                    <td className='text-nowrap'>{item2[itemNumber]}</td>\r\n                                                    <td className='text-nowrap'>{numberFormatParser(item2[itemDebit])}</td>\r\n                                                    <td className='text-nowrap'>{numberFormatParser(item2[itemCredit])}</td>\r\n                                                </tr>\r\n                                            )\r\n                                        else return null; \r\n                                        })\r\n                                    }\r\n                                    </tbody>\r\n                                </table>\r\n                                </div>\r\n                            </div>\r\n                    </div>\r\n                    )} else return null;\r\n                })\r\n            )\r\n        }\r\n\r\n        \r\n        data.forEach(item=>{\r\n            if (item[glCategory]===category && glAccountAlreadyParsed.indexOf(item[glAccount])===-1) {\r\n                glAccountAlreadyParsed.push(item[glAccount]);\r\n                result.push(\r\n                    (<div key={item[glAccount]}>\r\n                        <div className='row background' style={{cursor:'pointer'}} data-toggle='collapse' data-target={'#'+item[glDesc].replace(/[ ._()]/g,'')}>\r\n                            <i className='fa fa-plus-square mt-1 col-1 d-print-none' id={'plusminus'+item[glDesc].replace(/[ ._()]/g,'')}></i>\r\n                            <p className='col-2 mb-0'>{item[glAccount]}</p>\r\n                            <p className='col-6 mb-0'>{item[glDesc]}</p>\r\n                            <p className='col text-right mb-0'>{numberFormatParser(data.reduce(\r\n                                (a,b)=>{\r\n                                    if (b[glAccount]===item[glAccount] && (new Date(b[itemDate])<= new Date(url.date))) {\r\n                                        if (debitCreditOpposite) \r\n                                            return a+b[itemCredit]-b[itemDebit];\r\n                                        else return a+b[itemDebit]-b[itemCredit];\r\n                                    }\r\n                                    else return a\r\n                                },0)\r\n                            )}\r\n                            </p>\r\n                        </div>\r\n                        <div className='collapse navbar-collapse my-2 pl-3 pl-md-5 pr-2' id={item[glDesc].replace(/[ ._()]/g,'')}>\r\n                            {item[itemName]?populateItemName(item):(\r\n                            <div style={printFormat?null:{overflowY:'auto',overflowX:'hidden',maxHeight:'60vh'}}>\r\n                                <table id='table' className={printFormat?'table table-hover':'table table-hover table-responsive-md'}>\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th className='text-nowrap' style={{cursor:'pointer'}} data-order='asc'\r\n                                            onClick={(e)=>{\r\n                                                const id='date'+item[glDesc].replace(/[ ._\\-()]/g,'')\r\n                                                e.target.setAttribute('data-order',\r\n                                                e.target.getAttribute('data-order')==='asc'?'desc':'asc')\r\n                                                \r\n                                                sortedData[item[glDesc]]=sortData(sortedData[item[glDesc]],itemDate,e.target.getAttribute('data-order'))\r\n                                                changeSortedData({...sortedData})\r\n                            \r\n                                                if (e.target.getAttribute('data-order')==='asc') {\r\n                                                    document.getElementById(id).classList.remove('fa-caret-up');\r\n                                                    document.getElementById(id).classList.add('fa-caret-down')\r\n                                                }\r\n                                                else {\r\n                                                    document.getElementById(id).classList.remove('fa-caret-down');\r\n                                                    document.getElementById(id).classList.add('fa-caret-up')\r\n                                                }\r\n                                                }}\r\n                                            >\r\n                                                DATE\r\n                                                <i id={'date'+item[glDesc].replace(/[ ._\\-()]/g,'')} className='d-print-none fa fa-caret-down ml-2'></i>\r\n                                            </th>\r\n                                            <th className='text-nowrap' style={{cursor:'pointer'}} data-order='asc'\r\n                                            onClick={(e)=>{\r\n                                                const id='type'+item[glDesc].replace(/[ ._\\-()]/g,'')\r\n                                                e.target.setAttribute('data-order',\r\n                                                e.target.getAttribute('data-order')==='asc'?'desc':'asc')\r\n                                                \r\n                                                sortedData[item[glDesc]]=sortData(sortedData[item[glDesc]],itemType,e.target.getAttribute('data-order'))\r\n                                                changeSortedData({...sortedData})\r\n                            \r\n                                                if (e.target.getAttribute('data-order')==='asc') {\r\n                                                    document.getElementById(id).classList.remove('fa-caret-up');\r\n                                                    document.getElementById(id).classList.add('fa-caret-down')\r\n                                                }\r\n                                                else {\r\n                                                    document.getElementById(id).classList.remove('fa-caret-down');\r\n                                                    document.getElementById(id).classList.add('fa-caret-up')\r\n                                                }\r\n                                                }}>\r\n                                                ITEM TYPE\r\n                                                <i id={'type'+item[glDesc].replace(/[ ._\\-()]/g,'')} className='d-print-none fa fa-caret-down ml-2'></i>\r\n                                            </th>\r\n                                            <th className='text-nowrap' style={{cursor:'pointer'}} data-order='asc'\r\n                                            onClick={(e)=>{\r\n                                                const id='number'+item[glDesc].replace(/[ ._\\-()]/g,'')\r\n                                                e.target.setAttribute('data-order',\r\n                                                e.target.getAttribute('data-order')==='asc'?'desc':'asc')\r\n                                                \r\n                                                sortedData[item[glDesc]]=sortData(sortedData[item[glDesc]],itemNumber,e.target.getAttribute('data-order'))\r\n                                                changeSortedData({...sortedData})\r\n                            \r\n                                                if (e.target.getAttribute('data-order')==='asc') {\r\n                                                    document.getElementById(id).classList.remove('fa-caret-up');\r\n                                                    document.getElementById(id).classList.add('fa-caret-down')\r\n                                                }\r\n                                                else {\r\n                                                    document.getElementById(id).classList.remove('fa-caret-down');\r\n                                                    document.getElementById(id).classList.add('fa-caret-up')\r\n                                                }\r\n                                                }}>\r\n                                                ITEM NUMBER\r\n                                                <i id={'number'+item[glDesc].replace(/[ ._\\-()]/g,'')} className='d-print-none fa fa-caret-down ml-2'></i>\r\n                                            </th>\r\n                                            <th className='text-nowrap' style={{cursor:'pointer'}} data-order='asc'\r\n                                            onClick={(e)=>{\r\n                                                const id='dr'+item[glDesc].replace(/[ ._\\-()]/g,'')\r\n                                                e.target.setAttribute('data-order',\r\n                                                e.target.getAttribute('data-order')==='asc'?'desc':'asc')\r\n                                                \r\n                                                sortedData[item[glDesc]]=sortData(sortedData[item[glDesc]],itemDebit,e.target.getAttribute('data-order'))\r\n                                                changeSortedData({...sortedData})\r\n                            \r\n                                                if (e.target.getAttribute('data-order')==='asc') {\r\n                                                    document.getElementById(id).classList.remove('fa-caret-up');\r\n                                                    document.getElementById(id).classList.add('fa-caret-down')\r\n                                                }\r\n                                                else {\r\n                                                    document.getElementById(id).classList.remove('fa-caret-down');\r\n                                                    document.getElementById(id).classList.add('fa-caret-up')\r\n                                                }\r\n                                                }}>\r\n                                                DR\r\n                                                <i id={'dr'+item[glDesc].replace(/[ ._\\-()]/g,'')} className='d-print-none fa fa-caret-down ml-2'></i>\r\n                                            </th>\r\n                                            <th className='text-nowrap' style={{cursor:'pointer'}} data-order='asc'\r\n                                            onClick={(e)=>{\r\n                                                const id='cr'+item[glDesc].replace(/[ ._\\-()]/g,'')\r\n                                                e.target.setAttribute('data-order',\r\n                                                e.target.getAttribute('data-order')==='asc'?'desc':'asc')\r\n                                                \r\n                                                sortedData[item[glDesc]]=sortData(sortedData[item[glDesc]],itemCredit,e.target.getAttribute('data-order'))\r\n                                                changeSortedData({...sortedData})\r\n                            \r\n                                                if (e.target.getAttribute('data-order')==='asc') {\r\n                                                    document.getElementById(id).classList.remove('fa-caret-up');\r\n                                                    document.getElementById(id).classList.add('fa-caret-down')\r\n                                                }\r\n                                                else {\r\n                                                    document.getElementById(id).classList.remove('fa-caret-down');\r\n                                                    document.getElementById(id).classList.add('fa-caret-up')\r\n                                                }\r\n                                                }}>\r\n                                                CR\r\n                                                <i id={'cr'+item[glDesc].replace(/[ ._\\-()]/g,'')} className='d-print-none fa fa-caret-down ml-2'></i>\r\n                                            </th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {getBroughtForwardAmount(item)>=0?\r\n                                            (<tr>\r\n                                                <td colSpan='3'>B/F</td>\r\n                                                <td colSpan='2'>{numberFormatParser(getBroughtForwardAmount(item))}</td>\r\n                                            </tr>):\r\n                                            (<tr>\r\n                                                <td colSpan='4'>B/F</td>\r\n                                                <td colSpan='1'>{numberFormatParser(-getBroughtForwardAmount(item))}</td>\r\n                                            </tr>)\r\n                                        }\r\n                                        {sortedData1[item[glDesc]].map((item2,i)=>{\r\n                                            if (item2[glAccount]===item[glAccount]\r\n                                                && (new Date(item2[itemDate])>=new Date(new Date(url.date).getFullYear()+'-01-01'))\r\n                                                && (new Date(item2[itemDate])<=new Date(url.date))\r\n                                                ) \r\n                                                return (\r\n                                                    <tr key={i} style={{cursor:'pointer'}} onClick={(e)=>\r\n                                                        history.push('./'+createLink(item2[itemType].toLowerCase(),item2[itemNumber]))\r\n                                                        }>\r\n                                                        <td className='text-nowrap'>{dateFormatParser(item2[itemDate])}</td>\r\n                                                        <td className='text-nowrap'>{item2[itemType]}</td>\r\n                                                        <td className='text-nowrap'>{item2[itemNumber]}</td>\r\n                                                        <td className='text-nowrap'>{numberFormatParser(item2[itemDebit])}</td>\r\n                                                        <td className='text-nowrap'>{numberFormatParser(item2[itemCredit])}</td>\r\n                                                    </tr>\r\n                                                )\r\n                                            else return null; \r\n                                            })\r\n                                        }\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                                )}\r\n                        </div>\r\n                    </div>\r\n                    )\r\n                )\r\n            }\r\n        })\r\n            \r\n        return result;\r\n    }\r\n\r\n    let errorDisplay=null;\r\n    if ((dataSelectBalanceSheet && dataSelectBalanceSheet.error) || errorSelectBalanceSheet) \r\n    errorDisplay=(\r\n        <div className=\"alert alert-warning\">\r\n            {dataSelectBalanceSheet && dataSelectBalanceSheet.error? 'Balance Sheet Data RETRIEVAL failed errno: '+dataSelectBalanceSheet.error.errno\r\n            +' code: '+dataSelectBalanceSheet.error.code+' message: '+dataSelectBalanceSheet.error.sqlMessage:null}\r\n            {errorSelectBalanceSheet? 'Balance Sheet Data RETRIEVAL failed '+errorSelectBalanceSheet : null}\r\n        </div>)\r\n\r\n    return (\r\n        <AppLayout>\r\n            <div className='container py-3 py-md-5 px-md-5 position-relative'>\r\n                <h4 className='text-center'>{url.companyTitle}</h4>\r\n                <h4 className='text-center mb-4'>{'Balance Sheet as at ' + dateFormatParser(url.date)}</h4>\r\n                {errorDisplay}\r\n                <div className='text-right d-print-none mb-4'>\r\n                    <div className=\"form-check form-check-inline\">\r\n                        <input className=\"form-check-input\" type=\"checkbox\" id=\"printFormat\" checked={printFormat}\r\n                        onChange={(e)=>{\r\n                            if (e.target.checked) \r\n                                changePrintFormat(true)\r\n                            else changePrintFormat(false)\r\n                        }}/>\r\n                        <label className=\"form-check-label\" htmlFor=\"printFormat\"> Print Format</label>\r\n                    </div>\r\n                    <button className='btn btn-dark mr-1 mr-md-2' \r\n                    onClick={(e)=>collapsibleElementID.forEach(ID=>\r\n                        $('#'+ID).collapse('show')\r\n                    )}><i className='fa fa-plus-square'></i> Expand</button>\r\n                    <button className='btn btn-light'  \r\n                    onClick={(e)=>collapsibleElementID.forEach(ID=>\r\n                        $('#'+ID).collapse('hide')\r\n                    )}> <i className='fa fa-minus-square'></i> Collapse</button>\r\n                </div>\r\n                {netAssets}\r\n                <div className='row my-3 rounded' style={{backgroundColor:'rgba(248,222,126,0.6)'}}>\r\n                    <p className='col text-left my-2 h6'>NET ASSETS TOTAL</p>\r\n                    <p className='col text-right my-2 h6'>{netAssetsTotal}</p>\r\n                </div>\r\n                \r\n                {netEquity}\r\n                <div className='row'>\r\n                    <p className='col mb-0'>PROFIT AND LOSS</p>\r\n                    <p className='col mb-0 text-right'>{currentProfitAndLoss}</p>\r\n                </div>\r\n                <div className='row'>\r\n                    <p className='col mb-0'>RETAINED EARNINGS</p>\r\n                    <p className='col mb-0 text-right'>{retainedEarnings}</p>\r\n                </div>\r\n                <div className='row my-3 rounded' style={{backgroundColor:'rgba(248,222,126,0.6)'}}>\r\n                    <p className='col text-left my-2 h6'>NET EQUITY TOTAL</p>\r\n                    <p className='col text-right my-2 h6'>{netEquityTotal}</p>\r\n                </div>\r\n            </div>\r\n        </AppLayout>\r\n    )\r\n}\r\n\r\nBalanceSheetItem.description='Balance Sheet';\r\nBalanceSheetItem.path='/BalanceSheetItem';\r\n\r\nexport default BalanceSheetItem;","//Dashboard\r\nimport Dashboard from '../Dashboard/Dashboard';\r\nimport DashboardSVG from './svg/030-presentation.svg';\r\n\r\n//Sales\r\nimport DeliveryOrder from '../Sales/DeliveryOrder';\r\nimport DeliveryReturn from '../Sales/DeliveryReturn';\r\nimport SalesInvoice from '../Sales/SalesInvoice';\r\nimport DebitNote from '../Sales/DebitNote';\r\nimport CreditNote from '../Sales/CreditNote';\r\nimport SalesReport from '../Sales/SalesReport';\r\nimport DeliveryOrderItem from '../Sales/DeliveryOrderItem';\r\nimport DeliveryReturnItem from '../Sales/DeliveryReturnItem';\r\nimport SalesInvoiceItem from '../Sales/SalesInvoiceItem';\r\nimport DebitNoteItem from '../Sales/DebitNoteItem';\r\nimport CreditNoteItem from '../Sales/CreditNoteItem';\r\nimport SalesSVG from './svg/006-call.svg';\r\n\r\n\r\n//Purchase\r\nimport GoodsReceivedNote from '../Purchase/GoodsReceivedNote';\r\nimport PurchaseReturn from '../Purchase/PurchaseReturn';\r\nimport PurchaseInvoice from '../Purchase/PurchaseInvoice';\r\nimport PurchaseDebitNote from '../Purchase/PurchaseDebitNote';\r\nimport PurchaseCreditNote from '../Purchase/PurchaseCreditNote';\r\nimport PurchaseReport from '../Purchase/PurchaseReport';\r\nimport GoodsReceivedNoteItem from '../Purchase/GoodsReceivedNoteItem';\r\nimport PurchaseReturnItem from '../Purchase/PurchaseReturnItem';\r\nimport PurchaseInvoiceItem from '../Purchase/PurchaseInvoiceItem';\r\nimport PurchaseDebitNoteItem from '../Purchase/PurchaseDebitNoteItem';\r\nimport PurchaseCreditNoteItem from '../Purchase/PurchaseCreditNoteItem';\r\nimport PurchaseSVG from './svg/009-conversation.svg';\r\n\r\n//Inventory\r\nimport StockItemMaintenance from '../Inventory/StockItemMaintenance';\r\nimport StockAdjustment from '../Inventory/StockAdjustment';\r\nimport StockCardReport from '../Inventory/StockCardReport';\r\nimport StockItem from '../Inventory/StockItem';\r\nimport StockAdjustmentItem from '../Inventory/StockAdjustmentItem';\r\nimport InventorySVG from './svg/020-folders.svg';\r\n\r\n//BankAndCash\r\nimport BankMaintenance from '../BankAndCash/BankMaintenance';\r\nimport BankReceipt from '../BankAndCash/BankReceipt';\r\nimport BankPayment from '../BankAndCash/BankPayment';\r\nimport CashReceipt from '../BankAndCash/CashReceipt';\r\nimport CashPayment from '../BankAndCash/CashPayment';\r\nimport BankItem from '../BankAndCash/BankItem';\r\nimport BankReceiptItem from '../BankAndCash/BankReceiptItem';\r\nimport BankPaymentItem from '../BankAndCash/BankPaymentItem';\r\nimport CashReceiptItem from '../BankAndCash/CashReceiptItem';\r\nimport CashPaymentItem from '../BankAndCash/CashPaymentItem';\r\nimport BankAndCashSVG from './svg/027-money.svg';\r\n\r\n//AccountsReceivable\r\nimport DebtorMaintenance from '../AccountsReceivable/DebtorMaintenance';\r\nimport DebtorAgingReport from '../AccountsReceivable/DebtorAgingReport';\r\nimport DebtorStatementReport from '../AccountsReceivable/DebtorStatementReport';\r\nimport DebtorCollectionReport from '../AccountsReceivable/DebtorCollectionReport';\r\nimport DebtorItem from '../AccountsReceivable/DebtorItem';\r\nimport AccountsReceivableSVG from './svg/011-calendar.svg';\r\n\r\n//AccountsPayable\r\nimport CreditorMaintenance from '../AccountsPayable/CreditorMaintenance';\r\nimport CreditorAgingReport from '../AccountsPayable/CreditorAgingReport';\r\nimport CreditorStatementReport from '../AccountsPayable/CreditorStatementReport';\r\nimport CreditorItem from '../AccountsPayable/CreditorItem';\r\nimport AccountsPayableSVG from './svg/017-send.svg';\r\n\r\n//GeneralLedger\r\nimport AccountMaintenance from '../GeneralLedger/AccountMaintenance';\r\nimport JournalEntry from '../GeneralLedger/JournalEntry';\r\nimport ProfitAndLoss from '../GeneralLedger/ProfitAndLoss';\r\nimport BalanceSheet from '../GeneralLedger/BalanceSheet';\r\nimport JournalItem from '../GeneralLedger/JournalItem';\r\nimport ProfitAndLossItem from '../GeneralLedger/ProfitAndLossItem';\r\nimport BalanceSheetItem from '../GeneralLedger/BalanceSheetItem';\r\nimport GeneralLedgerSVG from './svg/015-contact.svg';\r\n/*\r\nComponentSummary module is a collection of all components used in this App arranged in a useful way and used as dependency in other \r\nareas of App. It is an array of objects (categories) which contained process (ie Delivery Order),\r\nitem (ie Delivery Order Item) and report(ie SalesReport.js) components. It is used as a dependency for App.js for automatic \r\ncreation of <Route>s with their respective components (ie. DeliveryOrder.js, DeliveryOrderItem.js, SalesReport.js). Also used as \r\ndependency for automatic population of navigation items in <SidePanel> and <SubPanel>. \r\n\r\nIf in the future need to add App functionality, update this module. \r\n\r\nEach objects(categories) are arranged in sequence (ie Dashboard, Sales, Purchase) similar to file directory structure in\r\norder they will appear in Side Panel.The process/report components (excluding item components) in each category are also \r\narranged in sequence in the order they appear in the Subpanels. **Note path string (ie DeliveryOrder.path='DeliveryOrder') \r\nproperties of each component used to populate <Route> in App.js are already set in their respective module as property of the component itself.\r\nSame with description string (ie DeliveryOrder.description='Delivery Order') used for Subpanels \r\n*/ \r\n\r\n//NO SPACE BETWEEN NAMES! as they are used for keys and spaces have unpredictable behaviors (i.e. Accounts Receivable should be Accounts-Receivable)\r\nconst ComponentSummary = [ \r\n    {name:'Dashboard',svg:DashboardSVG ,process:[Dashboard], item:[], report:[]},\r\n    {name:'Sales',svg:SalesSVG ,process:[DeliveryOrder,DeliveryReturn,SalesInvoice,DebitNote,CreditNote], item:[DeliveryOrderItem,DeliveryReturnItem,SalesInvoiceItem,DebitNoteItem,CreditNoteItem], report:[SalesReport]},\r\n    {name:'Purchase',svg:PurchaseSVG ,process:[GoodsReceivedNote,PurchaseReturn,PurchaseInvoice,PurchaseDebitNote,PurchaseCreditNote], item:[GoodsReceivedNoteItem,PurchaseReturnItem,PurchaseInvoiceItem,PurchaseDebitNoteItem,PurchaseCreditNoteItem], report:[PurchaseReport]},\r\n    {name:'Inventory',svg:InventorySVG ,process:[StockItemMaintenance,StockAdjustment], item:[StockItem,StockAdjustmentItem], report:[StockCardReport]},\r\n    {name:'Bank and Cash',svg:BankAndCashSVG ,process:[BankMaintenance,BankReceipt,BankPayment,CashReceipt,CashPayment], item:[BankItem,BankReceiptItem,BankPaymentItem,CashReceiptItem,CashPaymentItem], report:[]},\r\n    {name:'Accounts Receivable',svg:AccountsReceivableSVG ,process:[DebtorMaintenance], item:[DebtorItem], report:[DebtorAgingReport,DebtorStatementReport,DebtorCollectionReport]},\r\n    {name:'Accounts Payable',svg:AccountsPayableSVG ,process:[CreditorMaintenance], item:[CreditorItem], report:[CreditorAgingReport,CreditorStatementReport]},\r\n    {name:'General Ledger',svg:GeneralLedgerSVG ,process:[AccountMaintenance,JournalEntry,ProfitAndLoss,BalanceSheet], item:[JournalItem,ProfitAndLossItem,BalanceSheetItem], report:[]},\r\n]\r\n\r\nexport default ComponentSummary;","import React from 'react';\r\nimport SubPanel from './SubPanel';\r\nimport ComponentSummary from './ComponentSummary';\r\n\r\n\r\nfunction SidePanel(props) {\r\n    //parent id wrapper for accordion to work as per Bootstrap\r\n    const parent='accordion';\r\n    const SubPanelList=ComponentSummary.map(category=>{\r\n        let SubPanelListItems=[]\r\n        let SubPanelListReportItems=[]\r\n        \r\n        category.process.forEach(component=>\r\n            SubPanelListItems.push(component.description)\r\n            )\r\n        category.report.forEach(component=>\r\n            SubPanelListReportItems.push(component.description)\r\n            )\r\n        return (\r\n            <SubPanel key={category.name} name={category.name} img={category.svg} parent={parent}\r\n            items={SubPanelListItems} reportItems={SubPanelListReportItems}/>\r\n            )\r\n        }\r\n    )\r\n\r\n    return (\r\n        <aside id={parent} className={'accordion '+ (props.largeScreenStyle? 'd-none': 'd-block') + ' d-md-block bg-dark '+ (props.largeScreenStyle? 'position-sticky vh-100 overflow-auto':'')} style={{top:'0'}}>\r\n            <h2 className=\"text-warning d-none d-md-block \" style={{padding:\"0.75rem 1.25rem\"}}>Accounting <span className='text-info'>Software </span><small className='text-light d-block' style={{fontSize:'40%'}}>@coded by Mseong</small></h2>\r\n            <h4 className=\"text-warning d-md-none\" style={{padding:\"0.75rem 1.25rem\"}}>Accounting <span className='text-info'>Software </span><small className='text-light d-block' style={{fontSize:'40%'}}>@coded by Mseong</small></h4>\r\n            {SubPanelList}\r\n            \r\n        </aside>\r\n    )\r\n}\r\n\r\nexport default SidePanel;","import React from 'react';\r\nimport Navbar from '../Shared/Navbar';\r\nimport SidePanel from '../Shared/SidePanel';\r\n\r\nfunction Main(props) {\r\n    return (\r\n            <div className='container-fluid'>\r\n                <div className='row'>\r\n                    <div className='col-md-9 order-md-last px-0'>\r\n                        <Navbar/>\r\n                    </div>\r\n                    <div className='col-md-3 order-md-first px-0'>\r\n                        <SidePanel/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Main;","import React,{useState,useContext,useEffect} from 'react';\r\nimport useFetch from '../Shared/useFetch';\r\nimport authContext from '../Shared/authContext';\r\nimport isLoadingContext from '../Shared/isLoadingContext'\r\nimport logo from '../Shared/accounting.svg';\r\n\r\nfunction Login(props) {\r\n    const [{data,error},changeParam] = useFetch(null);\r\n    const {changeAuth}=useContext(authContext);\r\n    const {isLoading} = useContext(isLoadingContext);\r\n    const [username,changeUsername]=useState('');\r\n    const [password,changePassword]=useState('');\r\n    \r\n    \r\n\r\n    useEffect(()=>{\r\n        if (data && data.auth===true) {\r\n            changeAuth(true)\r\n        } \r\n    },[data,error])\r\n    \r\n    return (\r\n        <section className='container'>\r\n            <div className='row'>\r\n                {isLoading?\r\n                <div className='position-fixed d-flex justify-content-center align-items-center vh-100 vw-100' \r\n                style={{top:0,left:0, zIndex:'100000',backgroundColor:'rgba(255,255,255,0.6'}}>\r\n                    <div className='spinner-grow' style={{width:'4rem',height:'4rem'}}><span className='sr-only'></span></div>\r\n                </div>:null}\r\n                <div className='col-10 offset-1 col-md-6 offset-md-3 col-lg-4 offset-lg-4'>\r\n                    <div className='jumbotron min-vh-100' style={{marginBottom:0}}>\r\n                        <h1 className='my-5'>\r\n                            Login\r\n                            <img src={logo} alt='logo' style={{width:'35px',height:'35px'}} className='d-inline-block mx-3'/>\r\n                        </h1>\r\n                        {(data && data.auth===false)||error? (<div className=\"alert alert-warning\">\r\n                                            {data && data.error? data.error.code+data.error.type : null}\r\n                                            {data && data.message? data.message : null}\r\n                                            {error? error.name +' '+error.message: null}\r\n                                    </div>):null}\r\n                        \r\n                        <form onSubmit={(e)=>{e.preventDefault();changeParam({\r\n                            url:'./userAuth',\r\n                            init:{\r\n                                method:'POST',\r\n                                headers:{'Content-Type':'application/json'},\r\n                                body:JSON.stringify({username:username,password:password}),\r\n                                credentials:'include'\r\n                            }\r\n                        })\r\n                        }}>\r\n                            <label htmlFor='username'>Username:</label>\r\n                            <input type='text' id='username' value={username} onChange={(e)=>changeUsername(e.target.value)} required className='form-control'></input>\r\n                            <label htmlFor='password'>Password:</label>\r\n                            <input type='password' id='password' value={password} onChange={(e)=>changePassword(e.target.value)} required className='form-control'></input>\r\n                            <button type='submit' className='btn btn-primary my-3'>Submit</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Login;","import React,{useState,useEffect} from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Redirect,\r\n    Switch,\r\n    Route,\r\n} from 'react-router-dom';\r\nimport Media from './Shared/Media';\r\nimport Main from './Main/Main';\r\nimport Login from './Login/Login';\r\nimport ComponentSummary from './Shared/ComponentSummary';\r\nimport authContext from './Shared/authContext';\r\nimport isLoadingContext from './Shared/isLoadingContext';\r\n\r\nfunction App() {\r\n    //auth default value is false and have to go through Login route when new App is served for first time. See route logic below.\r\n    const [auth,changeAuth]=useState(false);\r\n    /*isLoading default value is false, when useFetch is called, will change to true and once fetch promise resolved/rejected, \r\n    will change to false again.*/\r\n    const [isLoading,changeIsLoading]=useState(false);\r\n\r\n    \r\n    let appRoutes=[];\r\n    ComponentSummary.forEach(category=>{\r\n        category.process.forEach(component=>\r\n                appRoutes.push(\r\n                (<Route key={component.path} path={component.path} component={component}/>) \r\n            )\r\n        );\r\n        category.item.forEach(component=>\r\n                appRoutes.push(\r\n                (<Route key={component.path} path={component.path} component={component}/>) \r\n            )\r\n        );\r\n        category.report.forEach(component=>\r\n                appRoutes.push(\r\n                (<Route key={component.path} path={component.path} component={component}/>) \r\n            )\r\n        )}\r\n    )\r\n    \r\n    \r\n    return (\r\n    <Router>\r\n        {/*Use Context to pass auth & changeAuth to child components to be changed as required.*/}\r\n        <authContext.Provider value={{auth,changeAuth}}>\r\n        <isLoadingContext.Provider value={{isLoading,changeIsLoading}}>\r\n            <Media render={screenIsSmall=>{\r\n                return (\r\n                    <Switch>\r\n                        {/*When auth is false, render routes and redirect for Login*/}\r\n                        {auth?null:(\r\n                        <Route path='/Login' >\r\n                            <Login/>\r\n                        </Route>)}\r\n                        {auth?null:<Redirect to='/Login'/>}\r\n                        {/*Once auth takes place and auth is true, normal App routes will be rendered*/}\r\n                        {appRoutes}\r\n                        {screenIsSmall? (<Route path='/' render={Main}/>):(<Redirect to='/DashBoard'/>)}\r\n                    </Switch>\r\n                )}}\r\n            />\r\n        </isLoadingContext.Provider>\r\n        </authContext.Provider>\r\n     </Router>\r\n    )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Protocount/App';\nimport 'bootstrap';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport '@fortawesome/fontawesome-free/css/all.css'\n\nReactDOM.render(<App/>, document.getElementById('root'))"],"sourceRoot":""}